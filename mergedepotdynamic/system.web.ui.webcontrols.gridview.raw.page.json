{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_GridView\">\r\n      <span class=\"lang-csharp\">GridView</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;SelectedIndexChanged&quot;)]\n[System.ComponentModel.Designer(&quot;System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Web.UI.ControlValueProperty(&quot;SelectedValue&quot;)]\n[System.Web.UI.DataKeyProperty(&quot;SelectedPersistedDataKey&quot;)]\n[System.Web.UI.SupportsEventValidation]\npublic class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol\" data-linktype=\"relative-path\">BaseDataBoundControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol\" data-linktype=\"relative-path\">DataBoundControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l5\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol\" data-linktype=\"relative-path\">System.Web.UI.WebControls.CompositeDataBoundControl</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l6\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GridView</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Adapter\" data-linktype=\"relative-path\">Adapter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddedControl_System_Web_UI_Control_System_Int32_\" data-linktype=\"relative-path\">AddedControl(Control,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ApplyStyleSheetSkin_System_Web_UI_Page_\" data-linktype=\"relative-path\">ApplyStyleSheetSkin(Page)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AppRelativeTemplateSourceDirectory\" data-linktype=\"relative-path\">AppRelativeTemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BeginRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">BeginRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BindingContainer\" data-linktype=\"relative-path\">BindingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BuildProfileTree_System_String_System_Boolean_\" data-linktype=\"relative-path\">BuildProfileTree(String,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated\" data-linktype=\"relative-path\">ChildControlsCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearCachedClientID\" data-linktype=\"relative-path\">ClearCachedClientID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildControlState\" data-linktype=\"relative-path\">ClearChildControlState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildState\" data-linktype=\"relative-path\">ClearChildState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState\" data-linktype=\"relative-path\">ClearChildViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearEffectiveClientIDMode\" data-linktype=\"relative-path\">ClearEffectiveClientIDMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID\" data-linktype=\"relative-path\">ClientID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode\" data-linktype=\"relative-path\">ClientIDMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDSeparator\" data-linktype=\"relative-path\">ClientIDSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateControlCollection\" data-linktype=\"relative-path\">CreateControlCollection()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_System_Boolean_\" data-linktype=\"relative-path\">DataBind(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBindChildren\" data-linktype=\"relative-path\">DataBindChildren()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataItemContainer\" data-linktype=\"relative-path\">DataItemContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataKeysContainer\" data-linktype=\"relative-path\">DataKeysContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState\" data-linktype=\"relative-path\">EnableViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EndRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">EndRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureChildControls\" data-linktype=\"relative-path\">EnsureChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureID\" data-linktype=\"relative-path\">EnsureID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_System_String_\" data-linktype=\"relative-path\">FindControl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_System_String_System_Int32_\" data-linktype=\"relative-path\">FindControl(String,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetDesignModeState\" data-linktype=\"relative-path\">GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(String,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(String,RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetUniqueIDRelativeTo_System_Web_UI_Control_\" data-linktype=\"relative-path\">GetUniqueIDRelativeTo(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasChildViewState\" data-linktype=\"relative-path\">HasChildViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls\" data-linktype=\"relative-path\">HasControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasEvents\" data-linktype=\"relative-path\">HasEvents()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID\" data-linktype=\"relative-path\">ID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IdSeparator\" data-linktype=\"relative-path\">IdSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsChildControlStateCleared\" data-linktype=\"relative-path\">IsChildControlStateCleared</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsLiteralContent\" data-linktype=\"relative-path\">IsLiteralContent()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsTrackingViewState\" data-linktype=\"relative-path\">IsTrackingViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsViewStateEnabled\" data-linktype=\"relative-path\">IsViewStateEnabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_LoadViewStateByID\" data-linktype=\"relative-path\">LoadViewStateByID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_MapPathSecure_System_String_\" data-linktype=\"relative-path\">MapPathSecure(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer\" data-linktype=\"relative-path\">NamingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_System_EventArgs_\" data-linktype=\"relative-path\">OnDataBinding(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnUnload_System_EventArgs_\" data-linktype=\"relative-path\">OnUnload(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OpenFile_System_String_\" data-linktype=\"relative-path\">OpenFile(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page\" data-linktype=\"relative-path\">Page</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RaiseBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"relative-path\">RaiseBubbleEvent(Object,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RemovedControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">RemovedControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderChildren_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderChildren(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_System_Web_UI_Adapters_ControlAdapter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter,ControlAdapter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderingCompatibility\" data-linktype=\"relative-path\">RenderingCompatibility</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveAdapter\" data-linktype=\"relative-path\">ResolveAdapter()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveClientUrl_System_String_\" data-linktype=\"relative-path\">ResolveClientUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveUrl_System_String_\" data-linktype=\"relative-path\">ResolveUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetRenderMethodDelegate_System_Web_UI_RenderMethod_\" data-linktype=\"relative-path\">SetRenderMethodDelegate(RenderMethod)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder\" data-linktype=\"relative-path\">IControlBuilderAccessor.ControlBuilder</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState\" data-linktype=\"relative-path\">IControlDesignerAccessor.GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetOwnerControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData\" data-linktype=\"relative-path\">IControlDesignerAccessor.UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.HasDataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions\" data-linktype=\"relative-path\">IExpressionsAccessor.Expressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions\" data-linktype=\"relative-path\">IExpressionsAccessor.HasExpressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">IParserAccessor.AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateControl\" data-linktype=\"relative-path\">TemplateControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateSourceDirectory\" data-linktype=\"relative-path\">TemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID\" data-linktype=\"relative-path\">UniqueID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ValidateRequestMode\" data-linktype=\"relative-path\">ValidateRequestMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewState\" data-linktype=\"relative-path\">ViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateIgnoresCase\" data-linktype=\"relative-path\">ViewStateIgnoresCase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateMode\" data-linktype=\"relative-path\">ViewStateMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_ConfirmInitState\" data-linktype=\"relative-path\">ConfirmInitState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataBound\" data-linktype=\"relative-path\">DataBound</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource\" data-linktype=\"relative-path\">DataSource</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_EnsureDataBound\" data-linktype=\"relative-path\">EnsureDataBound()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_Initialized\" data-linktype=\"relative-path\">Initialized</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_IsBoundUsingDataSourceID\" data-linktype=\"relative-path\">IsBoundUsingDataSourceID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_IsDataBindingAutomatic\" data-linktype=\"relative-path\">IsDataBindingAutomatic</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_OnDataBound_System_EventArgs_\" data-linktype=\"relative-path\">OnDataBound(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_RequiresDataBinding\" data-linktype=\"relative-path\">RequiresDataBinding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_SupportsDisabledAttribute\" data-linktype=\"relative-path\">SupportsDisabledAttribute</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_CreateChildControls\" data-linktype=\"relative-path\">CreateChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_InsertMethod\" data-linktype=\"relative-path\">InsertMethod</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_IsUsingModelBinders\" data-linktype=\"relative-path\">IsUsingModelBinders</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_CallingDataMethods\" data-linktype=\"relative-path\">CallingDataMethods</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_CreatingModelDataSource\" data-linktype=\"relative-path\">CreatingModelDataSource</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataMember\" data-linktype=\"relative-path\">DataMember</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID\" data-linktype=\"relative-path\">DataSourceID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceObject\" data-linktype=\"relative-path\">DataSourceObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_GetData\" data-linktype=\"relative-path\">GetData()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_GetDataSource\" data-linktype=\"relative-path\">GetDataSource()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ItemType\" data-linktype=\"relative-path\">ItemType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_MarkAsDataBound\" data-linktype=\"relative-path\">MarkAsDataBound()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnCreatingModelDataSource_System_Web_UI_WebControls_CreatingModelDataSourceEventArgs_\" data-linktype=\"relative-path\">OnCreatingModelDataSource(CreatingModelDataSourceEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnLoad_System_EventArgs_\" data-linktype=\"relative-path\">OnLoad(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_PerformSelect\" data-linktype=\"relative-path\">PerformSelect()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_SelectArguments\" data-linktype=\"relative-path\">SelectArguments</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_SelectMethod\" data-linktype=\"relative-path\">SelectMethod</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ValidateDataSource_System_Object_\" data-linktype=\"relative-path\">ValidateDataSource(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_AccessKey\" data-linktype=\"relative-path\">AccessKey</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_AddAttributesToRender_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">AddAttributesToRender(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ApplyStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"relative-path\">ApplyStyle(Style)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BackColor\" data-linktype=\"relative-path\">BackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderColor\" data-linktype=\"relative-path\">BorderColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderStyle\" data-linktype=\"relative-path\">BorderStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderWidth\" data-linktype=\"relative-path\">BorderWidth</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ControlStyle\" data-linktype=\"relative-path\">ControlStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ControlStyleCreated\" data-linktype=\"relative-path\">ControlStyleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_CopyBaseAttributes_System_Web_UI_WebControls_WebControl_\" data-linktype=\"relative-path\">CopyBaseAttributes(WebControl)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_CssClass\" data-linktype=\"relative-path\">CssClass</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_DisabledCssClass\" data-linktype=\"relative-path\">DisabledCssClass</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_EnableTheming\" data-linktype=\"relative-path\">EnableTheming</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Font\" data-linktype=\"relative-path\">Font</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ForeColor\" data-linktype=\"relative-path\">ForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_HasAttributes\" data-linktype=\"relative-path\">HasAttributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_IsEnabled\" data-linktype=\"relative-path\">IsEnabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_MergeStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"relative-path\">MergeStyle(Style)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderBeginTag_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderBeginTag(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderContents_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderContents(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderEndTag_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderEndTag(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_SkinID\" data-linktype=\"relative-path\">SkinID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Style\" data-linktype=\"relative-path\">Style</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_System_Web_UI_IAttributeAccessor_GetAttribute_System_String_\" data-linktype=\"relative-path\">IAttributeAccessor.GetAttribute(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_System_Web_UI_IAttributeAccessor_SetAttribute_System_String_System_String_\" data-linktype=\"relative-path\">IAttributeAccessor.SetAttribute(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_TabIndex\" data-linktype=\"relative-path\">TabIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_TagName\" data-linktype=\"relative-path\">TagName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ToolTip\" data-linktype=\"relative-path\">ToolTip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In this topic:  </p>\n<ul>\n<li><p><a href=\"#introduction\" data-linktype=\"self-bookmark\">Introduction</a>  </p>\n</li>\n<li><p><a href=\"#column_fields\" data-linktype=\"self-bookmark\">Column Fields</a>  </p>\n</li>\n<li><p><a href=\"#binding_to_data\" data-linktype=\"self-bookmark\">Binding to Data</a>  </p>\n</li>\n<li><p><a href=\"#data_operations\" data-linktype=\"self-bookmark\">Data Operations</a>  </p>\n</li>\n<li><p><a href=\"#customizing_the_user_interface\" data-linktype=\"self-bookmark\">Customizing the User Interface</a>  </p>\n</li>\n<li><p><a href=\"#events\" data-linktype=\"self-bookmark\">Events</a>  </p>\n</li>\n<li><p><a href=\"#accessibility\" data-linktype=\"self-bookmark\">Accessibility</a>  </p>\n</li>\n<li><p><a href=\"#declarative_syntax\" data-linktype=\"self-bookmark\">Declarative Syntax</a>  </p>\n</li>\n</ul>\n<p><a name=\"introduction\"></a>   </p>\n<h2 id=\"introduction\">Introduction</h2>\n<p> The GridView control is used to display the values of a data source in a table. Each column represents a field, while each row represents a record. The GridView control supports the following features:  </p>\n<ul>\n<li><p>Binding to data source controls, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a>.  </p>\n</li>\n<li><p>Built-in sort capabilities.  </p>\n</li>\n<li><p>Built-in update and delete capabilities.  </p>\n</li>\n<li><p>Built-in paging capabilities.  </p>\n</li>\n<li><p>Built-in row selection capabilities.  </p>\n</li>\n<li><p>Programmatic access to the GridView object model to dynamically set properties, handle events, and so on.  </p>\n</li>\n<li><p>Multiple key fields.  </p>\n</li>\n<li><p>Multiple data fields for the hyperlink columns.  </p>\n</li>\n<li><p>Customizable appearance through themes and styles.  </p>\n</li>\n<li><p>To learn about the other data-bound controls that are available in ASP.NET, see <a href=\"../Topic/Data-Bound%20Web%20Server%20Controls.md\" data-linktype=\"relative-path\">Data-Bound Web Server Controls</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are familiar with the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control from the .NET Framework version 1.0, the GridView control is the successor to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.  </p>\n</div>\n<p><a name=\"column_fields\"></a>   </p>\n<h2 id=\"column-fields\">Column Fields</h2>\n<p> Each column in the GridView control is represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> object. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>true</code>, which creates an <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> object for each field in the data source. Each field is then rendered as a column in the GridView control in the order that each field appears in the data source.  </p>\n<p> You can also manually control which column fields appear in the GridView control by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property to <code>false</code> and then defining your own column field collection. Different column field types determine the behavior of the columns in the control. The following table lists the different column field types that can be used.  </p>\n<table>\n<thead>\n<tr>\n<th>Column field type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a></td>\n<td>Displays the value of a field in a data source. This is the default column type of the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a></td>\n<td>Displays a command button for each item in the GridView control. This enables you to create a column of custom button controls, such as the Add or the Remove button.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.checkboxfield\" data-linktype=\"relative-path\">CheckBoxField</a></td>\n<td>Displays a check box for each item in the GridView control. This column field type is commonly used to display fields with a Boolean value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a></td>\n<td>Displays predefined command buttons to perform select, edit, or delete operations.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlinkfield\" data-linktype=\"relative-path\">HyperLinkField</a></td>\n<td>Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink&#39;s URL.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.imagefield\" data-linktype=\"relative-path\">ImageField</a></td>\n<td>Displays an image for each item in the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a></td>\n<td>Displays user-defined content for each item in the GridView control according to a specified template. This column field type enables you to create a custom column field.</td>\n</tr>\n</tbody>\n</table>\n<p> To define a column field collection declaratively, first add opening and closing <code>&lt;Columns&gt;</code> tags between the opening and closing tags of the GridView control. Next, list the column fields that you want to include between the opening and closing <code>&lt;Columns&gt;</code> tags. The columns specified are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the order listed. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection stores all the column fields in the control and enables you to programmatically manage the column fields in the GridView control.  </p>\n<p> Explicitly declared column fields can be displayed in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Automatically generated column fields are not added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection.  </p>\n</div>\n<p><a name=\"binding_to_data\"></a>   </p>\n<h2 id=\"binding-to-data\">Binding to Data</h2>\n<p> The GridView control can be bound to a data source control (such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a> control or <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control) or to any data source collection that implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">System.Collections.IEnumerable</a> interface, such as <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">System.Data.DataView</a>, <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">System.Collections.ArrayList</a>, <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">System.Collections.Generic.List&lt;T&gt;</a>, or other collection types. Use one of the following methods to bind the GridView control to the appropriate data source type:  </p>\n<ul>\n<li><p>To bind to a data source control, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID_\" data-linktype=\"relative-path\">DataSourceID</a> property of the GridView control to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the data source control. The GridView control automatically binds to the specified data source control and can take advantage of the data source control&#39;s capabilities to perform sorting, updating, deleting, and paging. This is the preferred method to bind to data.  </p>\n</li>\n<li><p>To bind to a data source that implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">System.Collections.IEnumerable</a> interface, programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of the GridView control to the data source and then call the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method. When using this method, the GridView control does not provide built-in sort, update, delete, and paging functionality. You need to provide this functionality by using the appropriate event.  </p>\n<p>For more information about data binding, see <a href=\"http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2\" data-linktype=\"external\">ASP.NET Data Access Content Map</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> class HTML-encodes values by default). ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see <a href=\"http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190\" data-linktype=\"external\">Introduction to the Validation Controls</a>.  </p>\n</div>\n<p><a name=\"data_operations\"></a>   </p>\n<h2 id=\"data-operations\">Data Operations</h2>\n<p> The GridView control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control. When the GridView control is bound to a data source control, the GridView control can take advantage of the data source control&#39;s capabilities and provide automatic sort, update, and delete functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GridView control can provide support for sorting, updating, and deleting with other types of data sources. However, you will need to provide an appropriate event handler with the implementation for these operations.  </p>\n</div>\n<p> Sorting allows the user to sort the items in the GridView control with respect to a specific column by clicking on the column&#39;s header. To enable sorting, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a> property to <code>true</code>.  </p>\n<p> The automatic updating, deleting, and selection functionalities are enabled when a button in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a> column field, with a command name of &quot;Edit&quot;, &quot;Delete&quot;, and &quot;Select&quot;, respectively, is clicked. The GridView control can automatically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> column field with an Edit, Delete, or Select button if the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateEditButton_\" data-linktype=\"relative-path\">AutoGenerateEditButton</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateSelectButton_\" data-linktype=\"relative-path\">AutoGenerateSelectButton</a> property is set to <code>true</code>, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Inserting records into the data source is not directly supported by the GridView control. However, it is possible to insert records by using the GridView control in conjunction with the <code>DetailsView</code> or <code>FormView</code> control. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.formview\" data-linktype=\"relative-path\">FormView</a>, respectively.  </p>\n</div>\n<p> Instead of displaying all the records in the data source at the same time, the GridView control can automatically break the records up into pages. To enable paging, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GridView control is re-created on postback based on the information that is stored in <a class=\"xref\" href=\"system.web.ui.pagestatepersister#System_Web_UI_PageStatePersister_ViewState_\" data-linktype=\"relative-path\">ViewState</a>. If the GridView control includes a <a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a> or a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> with the <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield#System_Web_UI_WebControls_CommandField_CausesValidation_\" data-linktype=\"relative-path\">CausesValidation</a> property set to <code>true</code>, then the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property must also be set to <code>true</code> to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row.  </p>\n</div>\n<p><a name=\"customizing_the_user_interface\"></a>   </p>\n<h2 id=\"customizing-the-user-interface\">Customizing the User Interface</h2>\n<p> You can customize the appearance of the GridView control by setting the style properties for the different parts of the control. The following table lists the different style properties.  </p>\n<table>\n<thead>\n<tr>\n<th>Style property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a></td>\n<td>The style settings for the alternating data rows in the GridView control. When this property is set, the data rows are displayed alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EditRowStyle_\" data-linktype=\"relative-path\">EditRowStyle</a></td>\n<td>The style settings for the row being edited in the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a></td>\n<td>The style settings for the empty data row displayed in the GridView control when the data source does not contain any records.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a></td>\n<td>The style settings for the footer row of the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a></td>\n<td>The style settings for the header row of the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a></td>\n<td>The style settings for the pager row of the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a></td>\n<td>The style settings for the data rows in the GridView control. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> property is also set, the data rows are displayed alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedRowStyle_\" data-linktype=\"relative-path\">SelectedRowStyle</a></td>\n<td>The style settings for the selected row in the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortedAscendingCellStyle_\" data-linktype=\"relative-path\">SortedAscendingCellStyle</a></td>\n<td>The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortedAscendingHeaderStyle_\" data-linktype=\"relative-path\">SortedAscendingHeaderStyle</a></td>\n<td>The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the GridView control when the data is sorted in ascending order.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortedDescendingCellStyle_\" data-linktype=\"relative-path\">SortedDescendingCellStyle</a></td>\n<td>The style setting for the data column the data is sorted by in the GridView control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortedDescendingHeaderStyle_\" data-linktype=\"relative-path\">SortedDescendingHeaderStyle</a></td>\n<td>The style setting for the data column the data is sorted by in the GridView control. When this style is set, an arrow pointing down is placed on the header of the GridView when the data is sorted in descending order.</td>\n</tr>\n</tbody>\n</table>\n<p> You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ShowFooter_\" data-linktype=\"relative-path\">ShowFooter</a></td>\n<td>Shows or hides the footer section of the GridView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ShowHeader_\" data-linktype=\"relative-path\">ShowHeader</a></td>\n<td>Shows or hides the header section of the GridView control.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"events\"></a>   </p>\n<h2 id=\"events\">Events</h2>\n<p> The GridView control provides several events that you can program against. This enables you to run a custom routine whenever an event occurs. The following table lists the events that are supported by the GridView control.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a></td>\n<td>Occurs when one of the pager buttons is clicked, but after the GridView control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a></td>\n<td>Occurs when one of the pager buttons is clicked, but before the GridView control handles the paging operation. This event is often used to cancel the paging operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a></td>\n<td>Occurs when a row&#39;s Cancel button is clicked, but before the GridView control exits edit mode. This event is often used to stop the canceling operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a></td>\n<td>Occurs when a button is clicked in the GridView control. This event is often used to perform a task when a button is clicked in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a></td>\n<td>Occurs when a new row is created in the GridView control. This event is often used to modify the contents of a row when the row is created.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a></td>\n<td>Occurs when a data row is bound to data in the GridView control. This event is often used to modify the contents of a row when the row is bound to data.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a></td>\n<td>Occurs when a row&#39;s Delete button is clicked, but after the GridView control deletes the record from the data source. This event is often used to check the results of the delete operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a></td>\n<td>Occurs when a row&#39;s Delete button is clicked, but before the GridView control deletes the record from the data source. This event is often used to cancel the deleting operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a></td>\n<td>Occurs when a row&#39;s Edit button is clicked, but before the GridView control enters edit mode. This event is often used to cancel the editing operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a></td>\n<td>Occurs when a row&#39;s Update button is clicked, but after the GridView control updates the row. This event is often used to check the results of the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a></td>\n<td>Occurs when a row&#39;s Update button is clicked, but before the GridView control updates the row. This event is often used to cancel the updating operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a></td>\n<td>Occurs when a row&#39;s Select button is clicked, but after the GridView control handles the select operation. This event is often used to perform a task after a row is selected in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a></td>\n<td>Occurs when a row&#39;s Select button is clicked, but before the GridView control handles the select operation. This event is often used to cancel the selection operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a></td>\n<td>Occurs when the hyperlink to sort a column is clicked, but after the GridView control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a></td>\n<td>Occurs when the hyperlink to sort a column is clicked, but before the GridView control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"accessibility\"></a>   </p>\n<h2 id=\"accessibility\">Accessibility</h2>\n<p> For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <a href=\"../Topic/Accessibility%20in%20Visual%20Studio%20and%20ASP.NET.md\" data-linktype=\"relative-path\">Accessibility in Visual Studio and ASP.NET</a> and <a href=\"../Topic/ASP.NET%20Controls%20and%20Accessibility.md\" data-linktype=\"relative-path\">ASP.NET Controls and Accessibility</a>.  </p>\n<p><a name=\"declarative_syntax\"></a>   </p>\n<h2 id=\"declarative-syntax\">Declarative Syntax</h2>\n<pre><code>&lt;asp:GridView  \n    AccessKey=&quot;string&quot;  \n    AllowPaging=&quot;True|False&quot;  \n    AllowSorting=&quot;True|False&quot;  \n    AutoGenerateColumns=&quot;True|False&quot;  \n    AutoGenerateDeleteButton=&quot;True|False&quot;  \n    AutoGenerateEditButton=&quot;True|False&quot;  \n    AutoGenerateSelectButton=&quot;True|False&quot;  \n    BackColor=&quot;color name|#dddddd&quot;  \n    BackImageUrl=&quot;uri&quot;  \n    BorderColor=&quot;color name|#dddddd&quot;  \n    BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  \n        Inset|Outset&quot;  \n    BorderWidth=&quot;size&quot;  \n    Caption=&quot;string&quot;  \n    CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;  \n    CellPadding=&quot;integer&quot;  \n    CellSpacing=&quot;integer&quot;  \n    CssClass=&quot;string&quot;  \n    DataKeyNames=&quot;string&quot;  \n    DataMember=&quot;string&quot;  \n    DataSource=&quot;string&quot;  \n    DataSourceID=&quot;string&quot;  \n    EditIndex=&quot;integer&quot;  \n    EmptyDataText=&quot;string&quot;  \n    Enabled=&quot;True|False&quot;  \n    EnableSortingAndPagingCallbacks=&quot;True|False&quot;  \n    EnableTheming=&quot;True|False&quot;  \n    EnableViewState=&quot;True|False&quot;  \n    Font-Bold=&quot;True|False&quot;  \n    Font-Italic=&quot;True|False&quot;  \n    Font-Names=&quot;string&quot;  \n    Font-Overline=&quot;True|False&quot;  \n    Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \n        Large|X-Large|XX-Large&quot;  \n    Font-Strikeout=&quot;True|False&quot;  \n    Font-Underline=&quot;True|False&quot;  \n    ForeColor=&quot;color name|#dddddd&quot;  \n    GridLines=&quot;None|Horizontal|Vertical|Both&quot;  \n    Height=&quot;size&quot;  \n    HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;  \n    ID=&quot;string&quot;  \n    OnDataBinding=&quot;DataBinding event handler&quot;  \n    OnDataBound=&quot;DataBound event handler&quot;  \n    OnDisposed=&quot;Disposed event handler&quot;  \n    OnInit=&quot;Init event handler&quot;  \n    OnLoad=&quot;Load event handler&quot;  \n    OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;  \n    OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;  \n    OnPreRender=&quot;PreRender event handler&quot;  \n    OnRowCancelingEdit=&quot;RowCancelingEdit event handler&quot;  \n    OnRowCommand=&quot;RowCommand event handler&quot;  \n    OnRowCreated=&quot;RowCreated event handler&quot;  \n    OnRowDataBound=&quot;RowDataBound event handler&quot;  \n    OnRowDeleted=&quot;RowDeleted event handler&quot;  \n    OnRowDeleting=&quot;RowDeleting event handler&quot;  \n    OnRowEditing=&quot;RowEditing event handler&quot;  \n    OnRowUpdated=&quot;RowUpdated event handler&quot;  \n    OnRowUpdating=&quot;RowUpdating event handler&quot;  \n    OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;  \n    OnSelectedIndexChanging=&quot;SelectedIndexChanging event handler&quot;  \n    OnSorted=&quot;Sorted event handler&quot;  \n    OnSorting=&quot;Sorting event handler&quot;  \n    OnUnload=&quot;Unload event handler&quot;  \n    PageIndex=&quot;integer&quot;  \n    PagerSettings-FirstPageImageUrl=&quot;uri&quot;  \n    PagerSettings-FirstPageText=&quot;string&quot;  \n    PagerSettings-LastPageImageUrl=&quot;uri&quot;  \n    PagerSettings-LastPageText=&quot;string&quot;  \n    PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|  \n        NumericFirstLast&quot;  \n    PagerSettings-NextPageImageUrl=&quot;uri&quot;  \n    PagerSettings-NextPageText=&quot;string&quot;  \n    PagerSettings-PageButtonCount=&quot;integer&quot;  \n    PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;  \n    PagerSettings-PreviousPageImageUrl=&quot;uri&quot;  \n    PagerSettings-PreviousPageText=&quot;string&quot;  \n    PagerSettings-Visible=&quot;True|False&quot;  \n    PageSize=&quot;integer&quot;  \n    RowHeaderColumn=&quot;string&quot;  \n    runat=&quot;server&quot;  \n    SelectedIndex=&quot;integer&quot;  \n    ShowFooter=&quot;True|False&quot;  \n    ShowHeader=&quot;True|False&quot;  \n    SkinID=&quot;string&quot;  \n    Style=&quot;string&quot;  \n    TabIndex=&quot;integer&quot;  \n    ToolTip=&quot;string&quot;  \n    UseAccessibleHeader=&quot;True|False&quot;  \n    Visible=&quot;True|False&quot;  \n    Width=&quot;size&quot;  \n&gt;  \n        &lt;AlternatingRowStyle /&gt;  \n        &lt;Columns&gt;  \n                &lt;asp:BoundField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ApplyFormatInEditMode=&quot;True|False&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataField=&quot;string&quot;  \n                    DataFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    HtmlEncode=&quot;True|False&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:BoundField&gt;  \n                &lt;asp:ButtonField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ButtonType=&quot;Button|Image|Link&quot;  \n                    CausesValidation=&quot;True|False&quot;  \n                    CommandName=&quot;string&quot;  \n                    DataTextField=&quot;string&quot;  \n                    DataTextFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    ImageUrl=&quot;uri&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Text=&quot;string&quot;  \n                    ValidationGroup=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:ButtonField&gt;  \n                &lt;asp:CheckBoxField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    DataField=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Text=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:CheckBoxField&gt;  \n                &lt;asp:CommandField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ButtonType=&quot;Button|Image|Link&quot;  \n                    CancelImageUrl=&quot;uri&quot;  \n                    CancelText=&quot;string&quot;  \n                    CausesValidation=&quot;True|False&quot;  \n                    DeleteImageUrl=&quot;uri&quot;  \n                    DeleteText=&quot;string&quot;  \n                    EditImageUrl=&quot;uri&quot;  \n                    EditText=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertImageUrl=&quot;uri&quot;  \n                    InsertText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NewImageUrl=&quot;uri&quot;  \n                    NewText=&quot;string&quot;  \n                    SelectImageUrl=&quot;uri&quot;  \n                    SelectText=&quot;string&quot;  \n                    ShowCancelButton=&quot;True|False&quot;  \n                    ShowDeleteButton=&quot;True|False&quot;  \n                    ShowEditButton=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    ShowInsertButton=&quot;True|False&quot;  \n                    ShowSelectButton=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    UpdateImageUrl=&quot;uri&quot;  \n                    UpdateText=&quot;string&quot;  \n                    ValidationGroup=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:CommandField&gt;  \n                &lt;asp:DynamicField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ApplyFormatInEditMode=&quot;True|False&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataField=&quot;string&quot;  \n                    DataFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    HtmlEncode=&quot;True|False&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    UIHint=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:DynamicField&gt;  \n                &lt;asp:HyperLinkField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    DataNavigateUrlFields=&quot;string&quot;  \n                    DataNavigateUrlFormatString=&quot;string&quot;  \n                    DataTextField=&quot;string&quot;  \n                    DataTextFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NavigateUrl=&quot;uri&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Target=&quot;string|_blank|_parent|_search|_self|_top&quot;  \n                    Text=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:HyperLinkField&gt;  \n                &lt;asp:ImageField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    AlternateText=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataAlternateTextField=&quot;string&quot;  \n                    DataAlternateTextFormatString=&quot;string&quot;  \n                    DataImageUrlField=&quot;string&quot;  \n                    DataImageUrlFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    NullImageUrl=&quot;uri&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:ImageField&gt;  \n                &lt;asp:TemplateField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                            &lt;ControlStyle /&gt;  \n                            &lt;FooterStyle /&gt;  \n                            &lt;HeaderStyle /&gt;  \n                            &lt;ItemStyle /&gt;  \n                        &lt;AlternatingItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/AlternatingItemTemplate&gt;  \n                        &lt;EditItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/EditItemTemplate&gt;  \n                        &lt;FooterTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/FooterTemplate&gt;  \n                        &lt;HeaderTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/HeaderTemplate&gt;  \n                        &lt;InsertItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/InsertItemTemplate&gt;  \n                        &lt;ItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/ItemTemplate&gt;  \n                &lt;/asp:TemplateField&gt;  \n        &lt;/Columns&gt;  \n        &lt;EditRowStyle /&gt;  \n        &lt;EmptyDataRowStyle /&gt;  \n        &lt;EmptyDataTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/EmptyDataTemplate&gt;  \n        &lt;FooterStyle /&gt;  \n        &lt;HeaderStyle /&gt;  \n        &lt;PagerSettings  \n            FirstPageImageUrl=&quot;uri&quot;  \n            FirstPageText=&quot;string&quot;  \n            LastPageImageUrl=&quot;uri&quot;  \n            LastPageText=&quot;string&quot;  \n            Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|  \n                NumericFirstLast&quot;  \n            NextPageImageUrl=&quot;uri&quot;  \n            NextPageText=&quot;string&quot;  \n            OnPropertyChanged=&quot;PropertyChanged event handler&quot;  \n            PageButtonCount=&quot;integer&quot;  \n            Position=&quot;Bottom|Top|TopAndBottom&quot;  \n            PreviousPageImageUrl=&quot;uri&quot;  \n            PreviousPageText=&quot;string&quot;  \n            Visible=&quot;True|False&quot;  \n        /&gt;  \n        &lt;PagerStyle /&gt;  \n        &lt;PagerTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/PagerTemplate&gt;  \n        &lt;RowStyle /&gt;  \n        &lt;SelectedRowStyle /&gt;  \n&lt;/asp:GridView&gt;  \n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView__ctor\" data-linktype=\"self-bookmark\">GridView()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AllowCustomPaging\" data-linktype=\"self-bookmark\">AllowCustomPaging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether custom paging is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AllowPaging\" data-linktype=\"self-bookmark\">AllowPaging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the paging feature is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AllowSorting\" data-linktype=\"self-bookmark\">AllowSorting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the sorting feature is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AlternatingRowStyle\" data-linktype=\"self-bookmark\">AlternatingRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AutoGenerateColumns\" data-linktype=\"self-bookmark\">AutoGenerateColumns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton\" data-linktype=\"self-bookmark\">AutoGenerateDeleteButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Delete button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AutoGenerateEditButton\" data-linktype=\"self-bookmark\">AutoGenerateEditButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with an Edit button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_AutoGenerateSelectButton\" data-linktype=\"self-bookmark\">AutoGenerateSelectButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Select button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_BackImageUrl\" data-linktype=\"self-bookmark\">BackImageUrl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_BottomPagerRow\" data-linktype=\"self-bookmark\">BottomPagerRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the bottom pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Caption\" data-linktype=\"self-bookmark\">Caption</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CaptionAlign\" data-linktype=\"self-bookmark\">CaptionAlign</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CellPadding\" data-linktype=\"self-bookmark\">CellPadding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of space between the contents of a cell and the cell&#39;s border.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CellSpacing\" data-linktype=\"self-bookmark\">CellSpacing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of space between cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ClientIDRowSuffix\" data-linktype=\"self-bookmark\">ClientIDRowSuffix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the names of the data fields whose values are appended to the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property value to uniquely identify each instance of a data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ClientIDRowSuffixDataKeys\" data-linktype=\"self-bookmark\">ClientIDRowSuffixDataKeys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Columns\" data-linktype=\"self-bookmark\">Columns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> objects that represent the column fields in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ColumnsGenerator\" data-linktype=\"self-bookmark\">ColumnsGenerator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the control that will automatically generate the columns for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that uses ASP.NET Dynamic Data features.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_DataKeyNames\" data-linktype=\"self-bookmark\">DataKeyNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array that contains the names of the primary key fields for the items displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_DataKeys\" data-linktype=\"self-bookmark\">DataKeys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> objects that represent the data key value of each row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_DeleteMethod\" data-linktype=\"self-bookmark\">DeleteMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method to call in order to delete data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EditIndex\" data-linktype=\"self-bookmark\">EditIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the row to edit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EditRowStyle\" data-linktype=\"self-bookmark\">EditRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the row selected for editing in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EmptyDataRowStyle\" data-linktype=\"self-bookmark\">EmptyDataRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EmptyDataTemplate\" data-linktype=\"self-bookmark\">EmptyDataTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user-defined content for the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EmptyDataText\" data-linktype=\"self-bookmark\">EmptyDataText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to display in the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EnableModelValidation\" data-linktype=\"self-bookmark\">EnableModelValidation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EnablePersistedSelection\" data-linktype=\"self-bookmark\">EnablePersistedSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_EnableSortingAndPagingCallbacks\" data-linktype=\"self-bookmark\">EnableSortingAndPagingCallbacks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_FooterRow\" data-linktype=\"self-bookmark\">FooterRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_FooterStyle\" data-linktype=\"self-bookmark\">FooterStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_GridLines\" data-linktype=\"self-bookmark\">GridLines</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_HeaderRow\" data-linktype=\"self-bookmark\">HeaderRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_HeaderStyle\" data-linktype=\"self-bookmark\">HeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_HorizontalAlign\" data-linktype=\"self-bookmark\">HorizontalAlign</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control on the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PageCount\" data-linktype=\"self-bookmark\">PageCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of pages required to display the records of the data source in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PageIndex\" data-linktype=\"self-bookmark\">PageIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the currently displayed page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PagerSettings\" data-linktype=\"self-bookmark\">PagerSettings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object that enables you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PagerStyle\" data-linktype=\"self-bookmark\">PagerStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PagerTemplate\" data-linktype=\"self-bookmark\">PagerTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the custom content for the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PageSize\" data-linktype=\"self-bookmark\">PageSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of records to display on a page in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowHeaderColumn\" data-linktype=\"self-bookmark\">RowHeaderColumn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the column to use as the column header for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Rows\" data-linktype=\"self-bookmark\">Rows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> objects that represent the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowStyle\" data-linktype=\"self-bookmark\">RowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedDataKey\" data-linktype=\"self-bookmark\">SelectedDataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that contains the data key value for the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedIndex\" data-linktype=\"self-bookmark\">SelectedIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedPersistedDataKey\" data-linktype=\"self-bookmark\">SelectedPersistedDataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data-key value for the persisted selected item in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedRow\" data-linktype=\"self-bookmark\">SelectedRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the selected row in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedRowStyle\" data-linktype=\"self-bookmark\">SelectedRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedValue\" data-linktype=\"self-bookmark\">SelectedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ShowFooter\" data-linktype=\"self-bookmark\">ShowFooter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the footer row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ShowHeader\" data-linktype=\"self-bookmark\">ShowHeader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the header row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ShowHeaderWhenEmpty\" data-linktype=\"self-bookmark\">ShowHeaderWhenEmpty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the heading of a column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is visible when the column has no data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortDirection\" data-linktype=\"self-bookmark\">SortDirection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the sort direction of the column being sorted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortedAscendingCellStyle\" data-linktype=\"self-bookmark\">SortedAscendingCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the CSS style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column when the column is sorted in ascending order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortedAscendingHeaderStyle\" data-linktype=\"self-bookmark\">SortedAscendingHeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the CSS style to apply to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column heading when the column is sorted in ascending order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortedDescendingCellStyle\" data-linktype=\"self-bookmark\">SortedDescendingCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column when the column is sorted in descending order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortedDescendingHeaderStyle\" data-linktype=\"self-bookmark\">SortedDescendingHeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style to apply to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column heading when the column is sorted in descending order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SortExpression\" data-linktype=\"self-bookmark\">SortExpression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the sort expression associated with the column or columns being sorted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_TagKey\" data-linktype=\"self-bookmark\">TagKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_TopPagerRow\" data-linktype=\"self-bookmark\">TopPagerRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_UpdateMethod\" data-linktype=\"self-bookmark\">UpdateMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method to call in order to update data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_UseAccessibleHeader\" data-linktype=\"self-bookmark\">UseAccessibleHeader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control renders its header in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_VirtualItemCount\" data-linktype=\"self-bookmark\">VirtualItemCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the virtual number of items in the data source that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to when custom paging is used.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateAutoGeneratedColumn_System_Web_UI_WebControls_AutoGeneratedFieldProperties_\" data-linktype=\"self-bookmark\">CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an automatically generated column field.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateChildControls_System_Collections_IEnumerable_System_Boolean_\" data-linktype=\"self-bookmark\">CreateChildControls(IEnumerable,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the control hierarchy used to render the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control using the specified data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateChildTable\" data-linktype=\"self-bookmark\">CreateChildTable()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new child table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateColumns_System_Web_UI_WebControls_PagedDataSource_System_Boolean_\" data-linktype=\"self-bookmark\">CreateColumns(PagedDataSource,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the set of column fields used to build the control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateControlStyle\" data-linktype=\"self-bookmark\">CreateControlStyle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the default style for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateDataSourceSelectArguments\" data-linktype=\"self-bookmark\">CreateDataSourceSelectArguments()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that contains the arguments that get passed to the data source for processing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_CreateRow_System_Int32_System_Int32_System_Web_UI_WebControls_DataControlRowType_System_Web_UI_WebControls_DataControlRowState_\" data-linktype=\"self-bookmark\">CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_DataBind\" data-linktype=\"self-bookmark\">DataBind()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds the data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This method cannot be inherited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_DeleteRow_System_Int32_\" data-linktype=\"self-bookmark\">DeleteRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the record at the specified index from the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_ExtractRowValues_System_Collections_Specialized_IOrderedDictionary_System_Web_UI_WebControls_GridViewRow_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the values of each field declared within the specified row and stores them in the specified <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_GetCallbackResult\" data-linktype=\"self-bookmark\">GetCallbackResult()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\" data-linktype=\"self-bookmark\">GetCallbackScript(IButtonControl,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the callback script for a button that performs a sorting operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_InitializePager_System_Web_UI_WebControls_GridViewRow_System_Int32_System_Web_UI_WebControls_PagedDataSource_\" data-linktype=\"self-bookmark\">InitializePager(GridViewRow,Int32,PagedDataSource)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the pager row displayed when the paging feature is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_InitializeRow_System_Web_UI_WebControls_GridViewRow_System_Web_UI_WebControls_DataControlField___\" data-linktype=\"self-bookmark\">InitializeRow(GridViewRow,DataControlField[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_IsBindableType_System_Type_\" data-linktype=\"self-bookmark\">IsBindableType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified data type can be bound to a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_LoadControlState_System_Object_\" data-linktype=\"self-bookmark\">LoadControlState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBubbleEvent(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the event for the Web server control is passed up the page&#39;s user interface (UI) server control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnDataPropertyChanged\" data-linktype=\"self-bookmark\">OnDataPropertyChanged()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rebinds the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to its data after the <span class=\"xref\">stem.Web.UI.WebControls.DataBoundControl.DataMember*</span>, <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataSource*</span>, or <span class=\"xref\">stem.Web.UI.WebControls.DataBoundControl.DataSourceID*</span> property is changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnDataSourceViewChanged_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDataSourceViewChanged(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_DataSourceViewChanged\" data-linktype=\"relative-path\">DataSourceViewChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnInit_System_EventArgs_\" data-linktype=\"self-bookmark\">OnInit(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnPageIndexChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPageIndexChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnPageIndexChanging_System_Web_UI_WebControls_GridViewPageEventArgs_\" data-linktype=\"self-bookmark\">OnPageIndexChanging(GridViewPageEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnPagePreLoad_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPagePreLoad(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the initialized state of the data-bound control before the control is loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnPreRender_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPreRender(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowCancelingEdit_System_Web_UI_WebControls_GridViewCancelEditEventArgs_\" data-linktype=\"self-bookmark\">OnRowCancelingEdit(GridViewCancelEditEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowCommand_System_Web_UI_WebControls_GridViewCommandEventArgs_\" data-linktype=\"self-bookmark\">OnRowCommand(GridViewCommandEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowCreated_System_Web_UI_WebControls_GridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowCreated(GridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowDataBound_System_Web_UI_WebControls_GridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowDataBound(GridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowDeleted_System_Web_UI_WebControls_GridViewDeletedEventArgs_\" data-linktype=\"self-bookmark\">OnRowDeleted(GridViewDeletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowDeleting_System_Web_UI_WebControls_GridViewDeleteEventArgs_\" data-linktype=\"self-bookmark\">OnRowDeleting(GridViewDeleteEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowEditing_System_Web_UI_WebControls_GridViewEditEventArgs_\" data-linktype=\"self-bookmark\">OnRowEditing(GridViewEditEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowUpdated_System_Web_UI_WebControls_GridViewUpdatedEventArgs_\" data-linktype=\"self-bookmark\">OnRowUpdated(GridViewUpdatedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnRowUpdating_System_Web_UI_WebControls_GridViewUpdateEventArgs_\" data-linktype=\"self-bookmark\">OnRowUpdating(GridViewUpdateEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnSelectedIndexChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelectedIndexChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnSelectedIndexChanging_System_Web_UI_WebControls_GridViewSelectEventArgs_\" data-linktype=\"self-bookmark\">OnSelectedIndexChanging(GridViewSelectEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnSorted_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSorted(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_OnSorting_System_Web_UI_WebControls_GridViewSortEventArgs_\" data-linktype=\"self-bookmark\">OnSorting(GridViewSortEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PerformDataBinding_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">PerformDataBinding(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds the specified data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PrepareControlHierarchy\" data-linktype=\"self-bookmark\">PrepareControlHierarchy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Establishes the control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RaiseCallbackEvent_System_String_\" data-linktype=\"self-bookmark\">RaiseCallbackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RaisePostBackEvent_System_String_\" data-linktype=\"self-bookmark\">RaisePostBackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when it posts back to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Render_System_Web_UI_HtmlTextWriter_\" data-linktype=\"self-bookmark\">Render(HtmlTextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Renders the Web server control content to the client&#39;s browser using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SaveControlState\" data-linktype=\"self-bookmark\">SaveControlState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SaveViewState\" data-linktype=\"self-bookmark\">SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectRow_System_Int32_\" data-linktype=\"self-bookmark\">SelectRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects the row to edit in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SetEditRow_System_Int32_\" data-linktype=\"self-bookmark\">SetEditRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts a row in edit mode in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control by using the specified row index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SetPageIndex_System_Int32_\" data-linktype=\"self-bookmark\">SetPageIndex(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the page index of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control by using the row index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Sort_System_String_System_Web_UI_WebControls_SortDirection_\" data-linktype=\"self-bookmark\">Sort(String,SortDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sorts the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control based on the specified sort expression and direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_TrackViewState\" data-linktype=\"self-bookmark\">TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tracks view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control so they can be stored in the control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object. This object is accessible through the <span class=\"xref\">stem.Web.UI.Control.ViewState*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_UpdateRow_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">UpdateRow(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the record at the specified row index using the field values of the row.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"self-bookmark\">PageIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"self-bookmark\">PageIndexChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"self-bookmark\">RowCancelingEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"self-bookmark\">RowCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a button is clicked in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"self-bookmark\">RowCreated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row is created in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"self-bookmark\">RowDataBound</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a data row is bound to data in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"self-bookmark\">RowDeleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"self-bookmark\">RowDeleting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"self-bookmark\">RowEditing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Edit button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"self-bookmark\">RowUpdated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"self-bookmark\">RowUpdating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"self-bookmark\">SelectedIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Select button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"self-bookmark\">SelectedIndexChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s Select button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"self-bookmark\">Sorted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the hyperlink to sort a column is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"self-bookmark\">Sorting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_GetCallbackResult\" data-linktype=\"self-bookmark\">ICallbackEventHandler.GetCallbackResult()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_System_String_\" data-linktype=\"self-bookmark\">ICallbackEventHandler.RaiseCallbackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_IDataKeysControl_ClientIDRowSuffixDataKeys\" data-linktype=\"self-bookmark\">IDataKeysControl.ClientIDRowSuffixDataKeys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_System_String_\" data-linktype=\"self-bookmark\">IPostBackEventHandler.RaisePostBackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when it posts back to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\" data-linktype=\"self-bookmark\">ICallbackContainer.GetCallbackScript(IButtonControl,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the callback script for a button that performs a sorting operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames\" data-linktype=\"self-bookmark\">IDataBoundControl.DataKeyNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the names of the primary key fields for the items displayed in a data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataMember\" data-linktype=\"self-bookmark\">IDataBoundControl.DataMember</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the table that is exposed by the data source control to bind to the data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSource\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data source object from which the data-bound control retrieves the list of data items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSourceID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the ID of the data source from which the data-bound control retrieves the list of data items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSourceObject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data source object from which the data-bound control retrieves the list of data items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix\" data-linktype=\"self-bookmark\">IDataBoundListControl.ClientIDRowSuffix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the names of the data fields whose values are appended to the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property value to uniquely identify each instance of a data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_DataKeys\" data-linktype=\"self-bookmark\">IDataBoundListControl.DataKeys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of objects that represent the <span class=\"xref\">stem.Web.UI.WebControls.GridView.DataKeys*</span> value in a data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_EnablePersistedSelection\" data-linktype=\"self-bookmark\">IDataBoundListControl.EnablePersistedSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedDataKey\" data-linktype=\"self-bookmark\">IDataBoundListControl.SelectedDataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object that contains the data key value for the selected row in a data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedIndex\" data-linktype=\"self-bookmark\">IDataBoundListControl.SelectedIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the selected row in the data-bound control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator\" data-linktype=\"self-bookmark\">IFieldControl.FieldsGenerator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the control that automatically generates the columns for a data-bound control for use by ASP.NET Dynamic Data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPersistedSelector_DataKey\" data-linktype=\"self-bookmark\">IPersistedSelector.DataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.IPersistedSelector.DataKey*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_System_Web_UI_WebControls_IButtonControl_\" data-linktype=\"self-bookmark\">IPostBackContainer.GetPostBackOptions(IButtonControl)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a> object that represents the postback behavior of the specified button control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridView()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GridView ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> class. To dynamically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to a page, create a new <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> object, set its properties, and then add it to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of a container control, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.placeholder\" data-linktype=\"relative-path\">PlaceHolder</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the constructor to dynamically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to a page.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCtor#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void Page_Load(Object sender, EventArgs e)\n    {\n        \n        // Create a new GridView object.\n        GridView customersGridView = new GridView();\n         \n        // Set the GridView object&#39;s properties.\n        customersGridView.ID = &quot;CustomersGridView&quot;;\n        customersGridView.DataSourceID = &quot;CustomersSource&quot;;\n        customersGridView.AutoGenerateColumns = true;\n        \n        // Add the GridView object to the Controls collection\n        // of the PlaceHolder control.\n        GridViewPlaceHolder.Controls.Add(customersGridView);\n        \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView Constructor Example&lt;/h3&gt;\n\n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;Server&quot;/&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [City] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCtor#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Create a new GridView object.\n    Dim customersGridView As New GridView()\n         \n    &#39; Set the GridView object&#39;s properties.\n    customersGridView.ID = &quot;CustomersGridView&quot;\n    customersGridView.DataSourceID = &quot;CustomersSource&quot;\n    customersGridView.AutoGenerateColumns = True\n        \n    &#39; Add the GridView object to the Controls collection\n    &#39; of the PlaceHolder control.\n    GridViewPlaceHolder.Controls.Add(customersGridView)\n        \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView Constructor Example&lt;/h3&gt;\n\n      &lt;asp:placeholder id=&quot;GridViewPlaceHolder&quot;\n        runat=&quot;Server&quot;/&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [City] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AllowCustomPaging\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AllowCustomPaging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowCustomPaging</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether custom paging is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AllowCustomPaging { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if custom paging is enabled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Paging enables you to display the contents of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in chunks. The number of items on a page is determined by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property. Normally, every row in the data source is read every time the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control moves to a different page. This can consume a lot of resources when the total number of items in the data source is very large. Custom paging allows you to read just the items you need for a single page from the data source.  </p>\n<p> To enable custom paging, set both the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> and AllowCustomPaging properties to <code>true</code>. In a handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property to the new page index value, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_VirtualItemCount_\" data-linktype=\"relative-path\">VirtualItemCount</a> property to the total number of items in the data source, set the data source to return only the rows needed for the current page, and call the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_VirtualItemCount_\" data-linktype=\"relative-path\">VirtualItemCount</a> property enables the control to determine the total number of pages; this value is normally determined automatically by reading all of the items.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AllowPaging\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AllowPaging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowPaging</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the paging feature is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AllowPaging { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the paging feature is enabled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Instead of displaying all the records in the data source at the same time, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can automatically break the records up into pages. If the data source supports the paging capability, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can take advantage of that and provide built-in paging functionality. The paging feature can be used with any data source object that supports the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">System.Collections.ICollection</a> interface or a data source that supports paging capability.  </p>\n<p> To enable the paging feature, set the AllowPaging property to <code>true</code>. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays 10 records on a page at a time. You can change the number of records displayed on a page by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property. To determine the total number of pages required to display the data source contents, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageCount_\" data-linktype=\"relative-path\">PageCount</a> property. You can determine the index of the currently displayed page by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n<p> When paging is enabled, an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The pager row contains controls that allow the user to navigate to the other pages. You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control&#39;s text labels) by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PagerSettings_\" data-linktype=\"relative-path\">PagerSettings</a> property. The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings#System_Web_UI_WebControls_PagerSettings_Position_\" data-linktype=\"relative-path\">Position</a> property. You can also select from one of four built-in pager display modes by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings#System_Web_UI_WebControls_PagerSettings_Mode_\" data-linktype=\"relative-path\">Mode</a> property. The following table describes the built-in display modes.  </p>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>PagerButton.NextPrevious</code></td>\n<td>A set of pagination controls consisting of previous and next buttons.</td>\n</tr>\n<tr>\n<td><code>PagerButton.NextPreviousFirstLast</code></td>\n<td>A set of pagination controls consisting of previous, next, first, and last buttons.</td>\n</tr>\n<tr>\n<td><code>PagerButton.Numeric</code></td>\n<td>A set of pagination controls consisting of numbered link buttons to access pages directly. This is the default mode.</td>\n</tr>\n<tr>\n<td><code>PagerButton.NumericFirstLast</code></td>\n<td>A set of pagination controls consisting of numbered and first and last link buttons.</td>\n</tr>\n</tbody>\n</table>\n<p> To control the appearance of the pager row (including its background color, font color, and position), use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically hides the pager row when the data source contains only one page of records.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control also enables you to define a custom template for the pager row. For more information about creating a custom pager row template, see <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PagerTemplate_\" data-linktype=\"relative-path\">PagerTemplate</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a></td>\n<td>Occurs when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a></td>\n<td>Occurs when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This event is often used to cancel the paging operation.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AllowPaging property to declaratively enable the paging feature in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AllowSorting\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AllowSorting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowSorting</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the sorting feature is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AllowSorting { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the sorting feature is enabled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a data source control that supports sorting is bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic sorting functionality. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property programmatically, you must provide the sorting functionality by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Different data sources have different requirements for enabling their sorting capabilities. To determine the requirements, see the documentation for the specific data source.  </p>\n</div>\n<p> To enable sorting, set the AllowSorting property to <code>true</code>. When sorting is enabled, the heading text for each column field with its <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_SortExpression_\" data-linktype=\"relative-path\">SortExpression</a> property set is displayed as a link button.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_SortExpression_\" data-linktype=\"relative-path\">SortExpression</a> property for an automatically generated columns field is automatically populated. If you define your own columns through the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection, you must set the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_SortExpression_\" data-linktype=\"relative-path\">SortExpression</a> property for each column; otherwise, the column will not display the link button in the header.  </p>\n</div>\n<p> Clicking the link button for a column causes the items in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to be sorted based on the sort expression. Typically, the sort expression is simply the name of the field displayed in the column, which causes the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to sort with respect to that column. To sort by multiple fields, use a sort expression that contains a comma-separated list of field names. You can determine the sort expression that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is applying by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortExpression_\" data-linktype=\"relative-path\">SortExpression</a> property. Clicking a column&#39;s link button repeatedly toggles the sort direction between ascending and descending order. To determine the current sort direction, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SortDirection_\" data-linktype=\"relative-path\">SortDirection</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control provides several events that you can use to perform a custom action when sorting occurs. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a></td>\n<td>Occurs when the hyperlink to sort a column is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a></td>\n<td>Occurs when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AllowSorting property to enable sorting in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when automatically generated columns are used.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewAllowSorting#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewAllowSorting#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the AllowSorting property to enable sorting in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection is defined. An image is also programmatically added to the header of the column being sorted to indicate the sort direction. You must provide your own images for this sample to work.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewAllowSortingColumns#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCreated(Object sender, GridViewRowEventArgs e)\n  {\n    \n    // Use the RowType property to determine whether the \n    // row being created is the header row. \n    if (e.Row.RowType == DataControlRowType.Header)\n    {\n      // Call the GetSortColumnIndex helper method to determine\n      // the index of the column being sorted.\n      int sortColumnIndex = GetSortColumnIndex();\n      \n      if (sortColumnIndex != -1)\n      {\n        // Call the AddSortImage helper method to add\n        // a sort direction image to the appropriate\n        // column header. \n        AddSortImage(sortColumnIndex, e.Row);\n      }\n    }\n  }\n\n  // This is a helper method used to determine the index of the\n  // column being sorted. If no column is being sorted, -1 is returned.\n  int GetSortColumnIndex()\n  {\n\n    // Iterate through the Columns collection to determine the index\n    // of the column being sorted.\n    foreach (DataControlField field in CustomersGridView.Columns)\n    {\n      if (field.SortExpression == CustomersGridView.SortExpression)\n      {\n        return CustomersGridView.Columns.IndexOf(field);\n      }\n    }\n\n    return -1;\n  }\n\n  // This is a helper method used to add a sort direction\n  // image to the header of the column being sorted.\n  void AddSortImage(int columnIndex, GridViewRow headerRow)\n  {\n    \n    // Create the sorting image based on the sort direction.\n    Image sortImage = new Image();\n    if (CustomersGridView.SortDirection == SortDirection.Ascending)\n    {\n      sortImage.ImageUrl = &quot;~/Images/Ascending.jpg&quot;;\n      sortImage.AlternateText = &quot;Ascending Order&quot;;\n    }\n    else\n    {\n      sortImage.ImageUrl = &quot;~/Images/Descending.jpg&quot;;\n      sortImage.AlternateText = &quot;Descending Order&quot;;\n    }\n\n    // Add the image to the appropriate header cell.\n    headerRow.Cells[columnIndex].Controls.Add(sortImage);\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onrowcreated=&quot;CustomersGridView_RowCreated&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n            headertext=&quot;Customer ID&quot;\n            headerstyle-wrap=&quot;false&quot; \n            sortexpression=&quot;CustomerID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n            headertext=&quot;CompanyName&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;CompanyName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot;\n            headertext=&quot;Address&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot;\n            headertext=&quot;City&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n            headertext=&quot;Postal Code&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;PostalCode&quot; /&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot;\n            headertext=&quot;Country&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Country&quot;/&gt;         \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewAllowSortingColumns#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n    \n    &#39; Use the RowType property to determine whether the \n    &#39; row being created is the header row. \n    If e.Row.RowType = DataControlRowType.Header Then\n    \n      &#39; Call the GetSortColumnIndex helper method to determine\n      &#39; the index of the column being sorted.\n      Dim sortColumnIndex As Integer = GetSortColumnIndex()\n      \n      If sortColumnIndex &lt;&gt; -1 Then\n      \n        &#39; Call the AddSortImage helper method to add\n        &#39; a sort direction image to the appropriate\n        &#39; column header. \n        AddSortImage(sortColumnIndex, e.Row)\n    \n      End If\n      \n    End If\n    \n  End Sub\n\n  &#39; This is a helper method used to determine the index of the\n  &#39; column being sorted. If no column is being sorted, -1 is returned.\n  Function GetSortColumnIndex() As Integer\n\n    &#39; Iterate through the Columns collection to determine the index\n    &#39; of the column being sorted.\n    Dim field As DataControlField\n    For Each field In CustomersGridView.Columns\n    \n      If field.SortExpression = CustomersGridView.SortExpression Then\n      \n        Return CustomersGridView.Columns.IndexOf(field)\n\n      End If\n      \n    Next\n\n    Return -1\n      \n  End Function\n\n  &#39; This is a helper method used to add a sort direction\n  &#39; image to the header of the column being sorted.\n  Sub AddSortImage(ByVal columnIndex As Integer, ByVal row As GridViewRow)\n\n    &#39; Create the sorting image based on the sort direction.\n    Dim sortImage As New Image()\n    If CustomersGridView.SortDirection = SortDirection.Ascending Then\n    \n      sortImage.ImageUrl = &quot;~/Images/Ascending.jpg&quot;\n      sortImage.AlternateText = &quot;Ascending Order&quot;\n    \n    Else\n    \n      sortImage.ImageUrl = &quot;~/Images/Descending.jpg&quot;\n      sortImage.AlternateText = &quot;Descending Order&quot;\n    \n    End If\n    &#39; Add the image to the appropriate header cell.\n    row.Cells(columnIndex).Controls.Add(sortImage)\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onrowcreated=&quot;CustomersGridView_RowCreated&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n            headertext=&quot;Customer ID&quot;\n            headerstyle-wrap=&quot;false&quot; \n            sortexpression=&quot;CustomerID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n            headertext=&quot;CompanyName&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;CompanyName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot;\n            headertext=&quot;Address&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot;\n            headertext=&quot;City&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n            headertext=&quot;Postal Code&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;PostalCode&quot; /&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot;\n            headertext=&quot;Country&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Country&quot;/&gt;         \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AlternatingRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AlternatingRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AlternatingRowStyle property to control the appearance of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. When this property is set, the data rows are displayed alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the AlternatingRowStyle settings. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>AlternatingRowStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest an <code>&lt;AlternatingRowStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>AlternatingRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AlternatingRowStyle property to declaratively define the style for alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;rowstyle backcolor=&quot;LightCyan&quot;  \n           forecolor=&quot;DarkBlue&quot;\n           font-italic=&quot;true&quot;/&gt;\n                    \n        &lt;alternatingrowstyle backcolor=&quot;PaleTurquoise&quot;  \n          forecolor=&quot;DarkBlue&quot;\n          font-italic=&quot;true&quot;/&gt;\n                            \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;rowstyle backcolor=&quot;LightCyan&quot;  \n           forecolor=&quot;DarkBlue&quot;\n           font-italic=&quot;true&quot;/&gt;\n                    \n        &lt;alternatingrowstyle backcolor=&quot;PaleTurquoise&quot;  \n          forecolor=&quot;DarkBlue&quot;\n          font-italic=&quot;true&quot;/&gt;\n                            \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AutoGenerateColumns\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AutoGenerateColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateColumns</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateColumns { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to automatically create bound fields for each field in the data source; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the AutoGenerateColumns property is set to <code>true</code>, an <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> object is automatically created for each field in the data source. Each field is then displayed as a column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the order that the fields appear in the data source. This option provides a convenient way to display every field in the data source; however, you have limited control of how an automatically generated column field is displayed or behaves.  </p>\n<p> Instead of letting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically generate the column fields, you can manually define the column fields by setting the AutoGenerateColumns property to <code>false</code> and then creating a custom <code>Columns</code> collection. In addition to bound column fields, you can also display a button column field, a check box column field, a command field, a hyperlink column field, an image field, or a column field based on your own custom-defined template.  </p>\n<p> You can also combine explicitly declared column fields with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated bound column fields are not added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a>.  </p>\n<p> If you set this property to <code>true</code> and set the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ItemType_\" data-linktype=\"relative-path\">ItemType</a> property to a model type, <a class=\"xref\" href=\"system.web.dynamicdata.dynamicfield\" data-linktype=\"relative-path\">DynamicField</a> controls are generated. If you do not set the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ItemType_\" data-linktype=\"relative-path\">ItemType</a> property, <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> controls are generated. If you do not want <a class=\"xref\" href=\"system.web.dynamicdata.dynamicfield\" data-linktype=\"relative-path\">DynamicField</a> controls, you have the following options:  </p>\n<ul>\n<li><p>Set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ColumnsGenerator_\" data-linktype=\"relative-path\">ColumnsGenerator</a> property to <code>null</code> in the <code>Page_Load</code> event handler. In that case, <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> controls are generated.  </p>\n</li>\n<li><p>Write custom code to automatically generate fields by creating and assigning your own <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ColumnsGenerator_\" data-linktype=\"relative-path\">ColumnsGenerator</a> class and assigning an instance of it to the control.  </p>\n</li>\n<li><p>Set AutoGenerateColumns to <code>false</code>. In that case, no fields are generated, and you must manually specify fields using controls such as <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.imagefield\" data-linktype=\"relative-path\">ImageField</a>.  </p>\n</li>\n<li><p>Do not set the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ItemType_\" data-linktype=\"relative-path\">ItemType</a> property. In that case, <a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a> controls are generated.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AutoGenerateColumns property to automatically create bound field columns in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control for each field in the data source.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewSimple#1\">      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, CompanyName, FirstName, LastName FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AWLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;False&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;True&quot; \n        runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n          &lt;Columns&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                  InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; SortExpression=&quot;CustomerID&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; \n                  SortExpression=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;FirstName&quot; HeaderText=&quot;FirstName&quot; \n                  SortExpression=&quot;FirstName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;LastName&quot; HeaderText=&quot;LastName&quot; \n                  SortExpression=&quot;LastName&quot; /&gt;\n          &lt;/Columns&gt;\n      &lt;/asp:gridview&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewSimple#1\">      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, CompanyName, FirstName, LastName FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AWLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;False&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;True&quot; \n        runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n          &lt;Columns&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                  InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; SortExpression=&quot;CustomerID&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; \n                  SortExpression=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;FirstName&quot; HeaderText=&quot;FirstName&quot; \n                  SortExpression=&quot;FirstName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;LastName&quot; HeaderText=&quot;LastName&quot; \n                  SortExpression=&quot;LastName&quot; /&gt;\n          &lt;/Columns&gt;\n      &lt;/asp:gridview&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AutoGenerateDeleteButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateDeleteButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Delete button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateDeleteButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to automatically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Delete button for each data row; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a data source control that supports deleting is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic deleting functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a data source control to delete data, it must be configured to delete data. To configure a data source control to delete records, see the documentation for the specific data source control.  </p>\n</div>\n<p> When the AutoGenerateDeleteButton property is set to <code>true</code>, a column (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> object) with a Delete button for each data row is automatically added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. Clicking the Delete button for a row permanently removes that record from the data source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must also set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property to identify the key field or fields of the data source for the automatic deleting feature to work.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control provides several events that you can use to perform a custom action when a row is deleted. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a></td>\n<td>Occurs when a row&#39;s Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the record from the data source. This event is often used to check the results of the delete operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a></td>\n<td>Occurs when a row&#39;s Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the record from the data source. This event is often used to cancel the deleting operation.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AutoGenerateDeleteButton property to enable the automatic deleting feature of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AutoGenerateEditButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AutoGenerateEditButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateEditButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with an Edit button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateEditButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to automatically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with an Edit button for each data row; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a data source control that supports updating is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic updating functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a data source control to update data, it must be configured to update data. To configure a data source control to update records, see the documentation for the specific data source control.  </p>\n</div>\n<p> When the AutoGenerateEditButton property is set to <code>true</code>, a column (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> object) with an Edit button for each data row is automatically added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. Clicking an Edit button for a row puts that row in edit mode. When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control, for the field&#39;s data type. This allows the user to modify the field&#39;s value.  </p>\n<p> When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the row in the data source with any value changes and returns the row to display mode. Clicking the Cancel button abandons any value changes and returns the row to display mode.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can programmatically put a row in edit mode by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EditIndex_\" data-linktype=\"relative-path\">EditIndex</a> property with the index of the row. To programmatically exit edit mode, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EditIndex_\" data-linktype=\"relative-path\">EditIndex</a> property to -1.  </p>\n</div>\n<p> When using the built-in updating functionality, you must set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record. When using automatically generated field columns (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property to <code>true</code>), the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property are read-only.  </p>\n<p> You can control the appearance of a row that is in edit mode by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EditRowStyle_\" data-linktype=\"relative-path\">EditRowStyle</a> property. Common settings usually include a custom background color, foreground color, and font properties.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control provides several events that you can use to perform a custom action when a row is updated. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a></td>\n<td>Occurs when a row&#39;s Cancel button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control cancels out of edit mode. This event is often used to stop the canceling operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a></td>\n<td>Occurs when a row&#39;s Edit button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode. This event is often used to cancel the editing operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a></td>\n<td>Occurs when a row&#39;s Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This event is often used to check the results of the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a></td>\n<td>Occurs when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This event is often used to cancel the updating operation.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AutoGenerateEditButton property to enable the automatic editing feature of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_AutoGenerateSelectButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_AutoGenerateSelectButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateSelectButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Select button for each data row is automatically added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateSelectButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to automatically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> field column with a Select button for each data row; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the AutoGenerateSelectButton property is set to <code>true</code>, a column (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> object) with a Select button for each data row is automatically added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. Clicking the Select button for a row selects that row in the control, which sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property to the index of the row. To retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the selected row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedRow_\" data-linktype=\"relative-path\">SelectedRow</a> property. You can also get the primary key value for the selected record by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property contains the values of the key fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can programmatically select a row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property. To cancel the selection of a row, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property to -1.  </p>\n</div>\n<p> You can control the appearance of the selected row by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedRowStyle_\" data-linktype=\"relative-path\">SelectedRowStyle</a> property. Common settings usually include a custom background color, foreground color, and font properties.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control provides several events that you can use to perform a custom action when a row is selected. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a></td>\n<td>Occurs when a row&#39;s Select button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This event is often used to perform a task after a row is selected in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a></td>\n<td>Occurs when a row&#39;s Select button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This event is often used to cancel the selecting operation.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the AutoGenerateSelectButton property to enable the automatic selection feature of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_BackImageUrl\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_BackImageUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackImageUrl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string BackImageUrl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL of an image to display in the background of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the BackImageUrl property to specify the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the specified image is smaller than the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewBackImageUrl#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView BackImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView BackImageUrl Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        backimageurl=&quot;~/images/logo.jpg&quot; \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewBackImageUrl#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView BackImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView BackImageUrl Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        backimageurl=&quot;~/images/logo.jpg&quot; \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_BottomPagerRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_BottomPagerRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BottomPagerRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the bottom pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the bottom pager row in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When paging is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The pager row contains controls that allow the user to navigate to the other pages, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the BottomPagerRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The BottomPagerRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control creates the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the BottomPagerRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the BottomPagerRow property to access the bottom pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The BottomPagerRow property is used to retrieve a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control from the pager row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub PageDropDownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the PageDropDownList DropDownList from the bottom pager row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        \n        &#39; Set the PageIndex property to display that page selected by the user.\n        CustomersGridView.PageIndex = pageList.SelectedIndex\n    \n    End Sub\n    \n    Protected Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the DropDownList and Label controls from the row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        Dim pageLabel As Label = CType(pagerRow.Cells(0).FindControl(&quot;CurrentPageLabel&quot;), Label)\n        \n        If Not pageList Is Nothing Then\n        \n            &#39; Create the values for the DropDownList control based on \n            &#39; the  total number of pages required to display the data\n            &#39; source.\n            Dim i As Integer\n            \n            For i = 0 To CustomersGridView.PageCount - 1\n            \n                &#39; Create a ListItem object to represent a page.\n                Dim pageNumber As Integer = i + 1\n                Dim item As ListItem = New ListItem(pageNumber.ToString())\n            \n                &#39; If the ListItem object matches the currently selected\n                &#39; page, flag the ListItem object as being selected. Because\n                &#39; the DropDownList control is recreated each time the pager\n                &#39; row gets created, this will persist the selected item in\n                &#39; the DropDownList control.   \n                If i = CustomersGridView.PageIndex Then\n          \n                    item.Selected = True\n                \n                End If\n            \n                &#39; Add the ListItem object to the Items collection of the \n                &#39; DropDownList.\n                pageList.Items.Add(item)\n                \n            Next i\n        \n        End If\n        \n        If Not pageLabel Is Nothing Then\n        \n            &#39; Calculate the current page number.\n            Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n        \n            &#39; Update the Label control with the current page information.\n            pageLabel.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; _\n                &quot; of &quot; &amp; CustomersGridView.PageCount.ToString()\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void PageDropDownList_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the PageDropDownList DropDownList from the bottom pager row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n\n    // Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex;\n\n  }\n\n  protected void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the DropDownList and Label controls from the row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n    Label pageLabel = (Label)pagerRow.Cells[0].FindControl(&quot;CurrentPageLabel&quot;);\n        \n    if(pageList != null)\n    {\n        \n      // Create the values for the DropDownList control based on \n      // the  total number of pages required to display the data\n      // source.\n      for(int i=0; i&lt;CustomersGridView.PageCount; i++)\n      {\n            \n        // Create a ListItem object to represent a page.\n        int pageNumber = i + 1;\n        ListItem item = new ListItem(pageNumber.ToString());         \n            \n        // If the ListItem object matches the currently selected\n        // page, flag the ListItem object as being selected. Because\n        // the DropDownList control is recreated each time the pager\n        // row gets created, this will persist the selected item in\n        // the DropDownList control.   \n        if(i==CustomersGridView.PageIndex)\n        {\n          item.Selected = true;\n        }\n            \n        // Add the ListItem object to the Items collection of the \n        // DropDownList.\n        pageList.Items.Add(item);\n                \n      }\n        \n    }\n        \n    if(pageLabel != null)\n    {\n        \n      // Calculate the current page number.\n      int currentPage = CustomersGridView.PageIndex + 1;     \n        \n      // Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; + currentPage.ToString() +\n        &quot; of &quot; + CustomersGridView.PageCount.ToString();\n        \n    }    \n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Caption\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_Caption_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Caption</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Caption { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The default value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Caption property to specify the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible. You can also specify the position at which to render the HTML caption element by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_CaptionAlign_\" data-linktype=\"relative-path\">CaptionAlign</a> property.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Caption property to specify the caption for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCaption#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Caption and CaptionAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        caption=&quot;Customer Information Table&quot;\n        captionalign=&quot;Top&quot;   \n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCaption#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Caption and CaptionAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        caption=&quot;Customer Information Table&quot;\n        captionalign=&quot;Top&quot;   \n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CaptionAlign\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CaptionAlign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CaptionAlign</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> values. The default is <code>TableCaptionAlign.NotSet</code>, which uses the browser&#39;s default setting.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.  </p>\n<p> This property is set using one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> enumeration values. The following table lists the possible values.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>TableCaptionAlign.Bottom</code></td>\n<td>The caption element is aligned with the bottom of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Left</code></td>\n<td>The caption element is aligned with the left side of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.NotSet</code></td>\n<td>The caption element&#39;s alignment is not set.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Right</code></td>\n<td>The caption element is aligned with the right side of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Top</code></td>\n<td>The caption element is aligned with the top of the table.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> When this property is set to <code>TableCaptionAlign.NotSet</code>, the default value of the browser is used.  </p>\n</div>\n<p> To specify the text for the HTML caption element, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Caption_\" data-linktype=\"relative-path\">Caption</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CaptionAlign property to specify that the caption element for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is aligned with the top of the control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCaption#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Caption and CaptionAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        caption=&quot;Customer Information Table&quot;\n        captionalign=&quot;Top&quot;   \n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCaption#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Caption and CaptionAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        caption=&quot;Customer Information Table&quot;\n        captionalign=&quot;Top&quot;   \n        runat=&quot;server&quot;&gt;                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CellPadding\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CellPadding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellPadding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of space between the contents of a cell and the cell&#39;s border.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CellPadding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The amount of space, in pixels, between the contents of a cell and the cell&#39;s border. The default value is -1, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CellPadding property to control the spacing between the contents of a cell and the cell&#39;s border. The padding amount specified is added to all four sides of the cell.  </p>\n<p> All cells in the same column of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control have the same width. The padding amount is applied to the widest cell and all other cells in the column have this cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height. Individual cell sizes cannot be specified.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CellPadding property to declaratively set the amount of space between the contents of a cell and the cell&#39;s border.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCellPadding#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView CellPadding and CellSpacing Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        cellpadding=&quot;10&quot;\n        cellspacing=&quot;5&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCellPadding#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView CellPadding and CellSpacing Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        cellpadding=&quot;10&quot;\n        cellspacing=&quot;5&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CellSpacing\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CellSpacing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellSpacing</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of space between cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CellSpacing { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The amount of space, in pixels, between cells. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CellSpacing property to control the spacing between adjacent cells in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you set this property to a value greater than 0 and then set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_GridLines_\" data-linktype=\"relative-path\">GridLines</a> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.table#System_Web_UI_WebControls_Table_CellSpacing_\" data-linktype=\"relative-path\">CellSpacing</a> property controls the size of the gap.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CellSpacing property to declaratively set the amount of space between the cells of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewCellPadding#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView CellPadding and CellSpacing Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        cellpadding=&quot;10&quot;\n        cellspacing=&quot;5&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewCellPadding#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView CellPadding and CellSpacing Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        cellpadding=&quot;10&quot;\n        cellspacing=&quot;5&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ClientIDRowSuffix\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ClientIDRowSuffix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientIDRowSuffix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the names of the data fields whose values are appended to the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property value to uniquely identify each instance of a data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string[] ClientIDRowSuffix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To prevent naming conflicts when multiple instances of a control are rendered in multiple rows of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, ASP.NET generates a unique <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value for each instance. You specify how the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> value is generated by setting the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> property. If you set the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode_\" data-linktype=\"relative-path\">ClientIDMode</a> property to <a class=\"xref\" href=\"system.web.ui.clientidmode\" data-linktype=\"relative-path\">ClientIDMode</a>, ASP.NET will generate the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID_\" data-linktype=\"relative-path\">ClientID</a> by appending a suffix that is derived from the data field or fields that are specified in ClientIDRowSuffix. If ClientIDRowSuffix is not set, the suffix is a sequential number.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ClientIDRowSuffixDataKeys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ClientIDRowSuffixDataKeys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientIDRowSuffixDataKeys</div>        \r\n          </div>\r\n    \r\n            <p>Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakeyarray\" data-linktype=\"relative-path\">DataKeyArray</a></div>\r\n                  </div>\r\n                  <p>The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Columns\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_Columns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Columns</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> objects that represent the column fields in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcollection\" data-linktype=\"relative-path\">DataControlFieldCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcollection\" data-linktype=\"relative-path\">DataControlFieldCollection</a> that contains all the column fields in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A column field represents a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The Columns property (collection) is used to store all the explicitly declared column fields that get rendered in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. You can also use the Columns collection to programmatically manage the collection of column fields.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Explicitly declared column fields can be used in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated column fields are not added to the Columns collection.  </p>\n</div>\n<p> The column fields are displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the order that the column fields appear in the Columns collection. The following table shows the different column field classes that derive from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> class and can be used in the Columns collection.  </p>\n<table>\n<thead>\n<tr>\n<th>Column field type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a></td>\n<td>Displays the value of a field in a data source. This is the default column type of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a></td>\n<td>Displays a command button for each item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This enables you to create a column of custom button controls, such as the Add or the Remove button.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.checkboxfield\" data-linktype=\"relative-path\">CheckBoxField</a></td>\n<td>Displays a check box for each item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This column field type is commonly used to display fields with a Boolean value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a></td>\n<td>Displays predefined command buttons to perform select, edit, or delete operations.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlinkfield\" data-linktype=\"relative-path\">HyperLinkField</a></td>\n<td>Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink&#39;s URL.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.imagefield\" data-linktype=\"relative-path\">ImageField</a></td>\n<td>Displays an image for each item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a></td>\n<td>Displays user-defined content for each item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, according to a specified template. This column field type enables you to create a custom column field.</td>\n</tr>\n</tbody>\n</table>\n<p> Although you can programmatically add column fields to the Columns collection, it is easier to list the column fields declaratively in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of each column field to show or hide each column field.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of a column field is set to <code>false</code>, the column is not displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to make a round trip, add the field name to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to populate the Columns collection declaratively.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewColumnFields#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Columns Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Columns Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot; headertext=&quot;Customer ID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot; headertext=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot; headertext=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot; headertext=&quot;Postal Code&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot; headertext=&quot;Country&quot;/&gt;\n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewColumnFields#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Columns Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Columns Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot; headertext=&quot;Customer ID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot; headertext=&quot;Company Name&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot; headertext=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot; headertext=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot; headertext=&quot;Postal Code&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot; headertext=&quot;Country&quot;/&gt;\n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ColumnsGenerator\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ColumnsGenerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnsGenerator</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the control that will automatically generate the columns for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that uses ASP.NET Dynamic Data features.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a></div>\r\n                  </div>\r\n                  <p>The control that will automatically generate the columns for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that uses ASP.NET Dynamic Data features.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to use ASP.NET Dynamic Data features in a page, you must add a <a class=\"xref\" href=\"system.web.dynamicdata.dynamicdatamanager\" data-linktype=\"relative-path\">DynamicDataManager</a> control to the page. This enables ASP.NET Dynamic Data features for data-bound controls in a page, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. To enable an individual <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to use Dynamic Data features, you must associate it with the <a class=\"xref\" href=\"system.web.dynamicdata.dynamicdatamanager\" data-linktype=\"relative-path\">DynamicDataManager</a> control by calling the <a class=\"xref\" href=\"system.web.dynamicdata.dynamicdatamanager#System_Web_DynamicData_DynamicDataManager_RegisterControl_\" data-linktype=\"relative-path\">RegisterControl</a> method during the <code>Page_Init</code> event. This method automatically sets the ColumnsGenerator property to the <a class=\"xref\" href=\"system.web.dynamicdata.dynamicdatamanager\" data-linktype=\"relative-path\">DynamicDataManager</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_DataKeyNames\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_DataKeyNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataKeyNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array that contains the names of the primary key fields for the items displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string[] DataKeyNames { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array that contains the names of the primary key fields for the items displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataKeyNames property to specify the field or fields that represent the primary key of the data source. You should only set this property to the field or fields that are required to uniquely identify each row; for example, the ID column if an integer value uniquely identifies each row. You must set the DataKeyNames property in order for the automatic update and delete features of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to work. The values of these key fields are passed to the data source control in order to specify the row to update or delete.  </p>\n<p> If you need to retrieve the data key value when updating or deleting a row, use the <code>Keys</code> property of either the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a> class. For example, <code>e.Keys[0]</code> holds the value of the first data key in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event handler.  </p>\n<p> If you need to retrieve the data key value when a row is selected, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedDataKey_\" data-linktype=\"relative-path\">SelectedDataKey</a> property.  </p>\n<p> When the DataKeyNames property is set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically populates its <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control stores these key field values in the control state. If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_ViewStateEncryptionMode_\" data-linktype=\"relative-path\">ViewStateEncryptionMode</a> property to <code>ViewStateEncryptionMode.Always</code>.  </p>\n</div>\n<p> When you use automatically generated field columns (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property to <code>true</code>), the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control makes sure that the columns that correspond to the field or fields specified in the DataKeyNames property are read-only.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of a column field is set to <code>false</code>, the column is not displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to be available to the client, add the field name to the DataKeyNames property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the DataKeyNames property to specify the key field of the data source. In the example, the <code>DataKeyNames</code> attribute of the <code>GridView</code> element in markup specifies two key fields by using a comma to separate the names. To run this example, create a Web site that has the following:  </p>\n<ul>\n<li><p>A connection to the AdventureWorksLT sample database and a connection string that is named <code>AdventureWorksLTConnectionString</code>. For information about how to set up the AdventureWorksLT sample database, see <a href=\"../Topic/How%20to:%20Set%20Up%20an%20AdventureWorksLT%20Sample%20Database%20for%20ASP.NET%20Development.md\" data-linktype=\"relative-path\">How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development</a>.  </p>\n</li>\n<li><p>A LINQ-to-SQL data context class that is named <code>AdventureWorksLTDataClassesDataContext</code>. The data context must have a class for the SalesOrderDetails table. For information about how to create LINQ-to-SQL classes, see <a href=\"../Topic/LINQ%20to%20SQL.md\" data-linktype=\"relative-path\">LINQ to SQL</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewEdit#1\">    &lt;asp:LinqDataSource ID=&quot;LinqDataSource1&quot; runat=&quot;server&quot; \n        ContextTypeName=&quot;AdventureWorksLTDataClassesDataContext&quot;\n        EnableDelete=&quot;True&quot; EnableInsert=&quot;True&quot; EnableUpdate=&quot;True&quot; \n        TableName=&quot;SalesOrderDetails&quot;&gt;\n    &lt;/asp:LinqDataSource&gt;\n\n    &lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; \n        AutoGenerateColumns=&quot;False&quot; \n        DataKeyNames=&quot;SalesOrderID,SalesOrderDetailID&quot;\n        DataSourceID=&quot;LinqDataSource1&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:CommandField ShowDeleteButton=&quot;True&quot; \n                ShowEditButton=&quot;True&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderID&quot; \n                HeaderText=&quot;SalesOrderID&quot; ReadOnly=&quot;True&quot;\n                SortExpression=&quot;SalesOrderID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;SalesOrderDetailID&quot; \n                HeaderText=&quot;SalesOrderDetailID&quot; InsertVisible=&quot;False&quot;\n                ReadOnly=&quot;True&quot; SortExpression=&quot;SalesOrderDetailID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;OrderQty&quot; \n                HeaderText=&quot;OrderQty&quot; SortExpression=&quot;OrderQty&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ProductID&quot; \n                HeaderText=&quot;ProductID&quot; SortExpression=&quot;ProductID&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;UnitPrice&quot; \n                HeaderText=&quot;UnitPrice&quot; SortExpression=&quot;UnitPrice&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;ModifiedDate&quot; \n                HeaderText=&quot;ModifiedDate&quot; SortExpression=&quot;ModifiedDate&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_DataKeys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_DataKeys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataKeys</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> objects that represent the data key value of each row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakeyarray\" data-linktype=\"relative-path\">DataKeyArray</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datakeyarray\" data-linktype=\"relative-path\">DataKeyArray</a> that contains the data key of each row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property is set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for each row in the control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object contains the values of the field or fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property. The <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> objects are then added to the control&#39;s DataKeys collection. Use the DataKeys property to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for a specific data row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedDataKey_\" data-linktype=\"relative-path\">SelectedDataKey</a> property to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for the currently selected row. You can also use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property to retrieve the data key value for the currently selected row directly.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the DataKeys property to determine the data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewDataKeys#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    \n    // Determine the index of the selected row.\n    int index = CustomersGridView.SelectedIndex;\n        \n    // Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; +\n        CustomersGridView.DataKeys[index].Value.ToString() + &quot;.&quot;;\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DataKeys Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DataKeys Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n               \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewDataKeys#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Determine the index of the selected row.\n    Dim index As Integer = CustomersGridView.SelectedIndex\n        \n    &#39; Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; &amp; _\n        CustomersGridView.DataKeys(index).Value.ToString() &amp; &quot;.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DataKeys Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DataKeys Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n               \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_DeleteMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_DeleteMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method to call in order to delete data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DeleteMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property causes model binding to be used as the data-binding method.  </p>\n<p> For a tutorial series on using model binding with Web Forms, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EditIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EditIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the row to edit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int EditIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the row to edit. The default is -1, which indicates that no row is being edited.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified index is less than -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The row index is zero-based (the first row is row zero).  </p>\n<p> This property is typically used only in the following scenarios, which involve handlers for specific events:  </p>\n<ul>\n<li><p>You want the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to open in edit mode for a specific row the first time that the page is displayed. To do this, you can set the EditIndex property in the handler for the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event of the <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> class or of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n</li>\n<li><p>You want to know which row was edited after the row was updated. To do this, you can retrieve the row index from the EditIndex property in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event handler.  </p>\n</li>\n<li><p>You are binding the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to a data source by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property programmatically. In this case you must set the EditIndex property in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event handlers.  </p>\n<p>If you set the EditIndex property after a postback or in handlers for events that are raised later than the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a> event, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control might not enter edit mode for the specified row. If you read the value of this property in other event handlers, the index is not guaranteed to reflect the row that is being edited.  </p>\n<p>To determine which row the user has clicked an <strong>Edit</strong> button or hyperlink in before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode, you can retrieve the row index from the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs#System_Web_UI_WebControls_GridViewEditEventArgs_NewEditIndex_\" data-linktype=\"relative-path\">NewEditIndex</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a> object in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event handler.  </p>\n<p>To prevent the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control from entering edit mode after a user has clicked an <strong>Edit</strong> button or hyperlink, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a> object to <code>true</code> in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event handler.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the EditIndex property to determine which row was updated after it was edited in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. A message is displayed to indicate that the update was successful.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRows#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    \n    // Clear the message label when the user enters edit mode.\n    if (e.CommandName == &quot;Edit&quot;)\n    {\n      Message.Text = &quot;&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n    {\n   \n        // The update operation was successful. Retrieve the row being edited.\n        int index = CustomersGridView.EditIndex;\n        GridViewRow row = CustomersGridView.Rows[index];\n        \n        // Notify the user that the update was successful.\n        Message.Text = &quot;Updated record &quot; + row.Cells[1].Text + &quot;.&quot;;\n    \n    }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n    {\n   \n        // The update operation was canceled. Display the appropriate message.\n        Message.Text = &quot;Update operation canceled.&quot;;\n    \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Rows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Rows Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;    \n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRows#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n    \n    &#39; Clear the message label when the user enters edit mode.\n    If e.CommandName = &quot;Edit&quot; Then\n      Message.Text = &quot;&quot;\n    End If\n    \n  End Sub\n  \n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n   \n    &#39; The update operation was successful. Retrieve the row being edited.\n    Dim index As Integer = CustomersGridView.EditIndex\n    Dim row As GridViewRow = CustomersGridView.Rows(index)\n        \n    &#39; Notify the user that the update was successful.\n    Message.Text = &quot;Updated record &quot; &amp; row.Cells(1).Text + &quot;.&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n   \n    &#39; The update operation was canceled. Display the appropriate message.\n    Message.Text = &quot;Update operation canceled.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Rows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Rows Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;    \n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EditRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EditRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the row selected for editing in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the row being edited in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EditRowStyle property to control the appearance of the row being edited in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>EditRowStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest an <code>&lt;EditRowStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>EditRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the EditRowStyle property to define a custom style for the row being edited in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewEditRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EditRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EditRowStyle Example&lt;/h3&gt;\n\n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogeneratedeletebutton=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;  \n        runat=&quot;server&quot;&gt;\n        \n        &lt;editrowstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt;\n                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewEditRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EditRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EditRowStyle Example&lt;/h3&gt;\n\n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogeneratedeletebutton=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;  \n        runat=&quot;server&quot;&gt;\n        \n        &lt;editrowstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt;\n                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EmptyDataRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EmptyDataRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that enables you to set the appearance of the null row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EmptyDataRowStyle property to control the appearance of the null row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The null row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>EmptyDataRowStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest an <code>&lt;EmptyDataRowStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>EmptyDataRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to set the EmptyDataRowStyle property declaratively to specify a light blue background and a red font for the null row.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewNullRowTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                    \n        &lt;emptydatatemplate&gt;\n                \n          &lt;asp:image id=&quot;NoDataImage&quot;\n            imageurl=&quot;~/images/Image.jpg&quot;\n            alternatetext=&quot;No Image&quot; \n            runat=&quot;server&quot;/&gt;\n                        \n            No Data Found.  \n                \n        &lt;/emptydatatemplate&gt; \n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewNullRowTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                    \n        &lt;emptydatatemplate&gt;\n                \n          &lt;asp:image id=&quot;NoDataImage&quot;\n            imageurl=&quot;~/images/Image.jpg&quot;\n            alternatetext=&quot;No Image&quot; \n            runat=&quot;server&quot;/&gt;\n                        \n            No Data Found.  \n                \n        &lt;/emptydatatemplate&gt; \n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EmptyDataTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EmptyDataTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user-defined content for the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the empty data row. The default value is <code>null</code>, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The empty data row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the EmptyDataTemplate property.  </p>\n<p> To specify a custom template for the empty data row, first place <code>&lt;EmptyDataTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;EmptyDataTemplate&gt;</code> tags. To control the style of the empty data row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a> property. Alternatively, you can use the built-in UI for the empty data row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataText_\" data-linktype=\"relative-path\">EmptyDataText</a> property instead of this property.  </p>\n<p> For information about how to programmatically access controls that you declare in an empty data template, see <a href=\"../Topic/How%20to:%20Access%20Server%20Controls%20by%20ID.md\" data-linktype=\"relative-path\">How to: Access Server Controls by ID</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataText_\" data-linktype=\"relative-path\">EmptyDataText</a> and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to define a custom template for the empty data row displayed when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewNullRowTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                    \n        &lt;emptydatatemplate&gt;\n                \n          &lt;asp:image id=&quot;NoDataImage&quot;\n            imageurl=&quot;~/images/Image.jpg&quot;\n            alternatetext=&quot;No Image&quot; \n            runat=&quot;server&quot;/&gt;\n                        \n            No Data Found.  \n                \n        &lt;/emptydatatemplate&gt; \n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewNullRowTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                    \n        &lt;emptydatatemplate&gt;\n                \n          &lt;asp:image id=&quot;NoDataImage&quot;\n            imageurl=&quot;~/images/Image.jpg&quot;\n            alternatetext=&quot;No Image&quot; \n            runat=&quot;server&quot;/&gt;\n                        \n            No Data Found.  \n                \n        &lt;/emptydatatemplate&gt; \n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EmptyDataText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EmptyDataText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to display in the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source that does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string EmptyDataText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display in the empty data row. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The empty data row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when the data source that is bound to the control does not contain any records. Use the EmptyDataText property to specify the text to display in the empty data row. To control the style of the empty data row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the EmptyDataText and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> properties are set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> property takes precedence.  </p>\n</div>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataText Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data in the data source.&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EmptyDataText Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data in the data source.&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;emptydatarowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;Red&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file. The following query        --&gt;\n      &lt;!-- returns an empty data source to demonstrate the      --&gt;\n      &lt;!-- empty row.                                           --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers] Where CustomerID=&#39;NoID&#39;&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EnableModelValidation\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EnableModelValidation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableModelValidation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableModelValidation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a validator control will handle exceptions that occur during insert or update operations; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EnablePersistedSelection\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EnablePersistedSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnablePersistedSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnablePersistedSelection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row selection is based on data-key values; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this property is <code>false</code> and a row is selected, the same row is selected when a new page is displayed even though the new page has different data in it. If you set this property to <code>true</code>, when you display a page that has different data in it, no row is selected. If you then return to the page on which a row was selected, that row is still selected.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_EnableSortingAndPagingCallbacks\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_EnableSortingAndPagingCallbacks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableSortingAndPagingCallbacks</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableSortingAndPagingCallbacks { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to use client-side callbacks for sorting and paging operations; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Web.UI.WebControls.GridView.Columns*</span> collection contains a column that does not support callbacks, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, when a sorting or paging operation is performed, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control posts back to the server to perform the operation. When the EnableSortingAndPagingCallbacks property is set to <code>true</code>, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Not all browsers support this feature. To determine whether a browser supports this feature, use the <a class=\"xref\" href=\"system.web.configuration.httpcapabilitiesbase#System_Web_Configuration_HttpCapabilitiesBase_SupportsCallback_\" data-linktype=\"relative-path\">SupportsCallback</a> property.  </p>\n</div>\n<p> All columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection must support callbacks for this feature to work. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection contains a column that does not support callbacks, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a>, a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> exception is raised.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the EnableSortingAndPagingCallbacks property to enable client-side callbacks for sorting and paging operations.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewEnableSortingAndPagingCallbacks#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EnableSortingAndPagingCallbacks Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EnableSortingAndPagingCallbacks Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        allowsorting=&quot;true&quot;\n        enablesortingandpagingcallbacks=&quot;true&quot;        \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewEnableSortingAndPagingCallbacks#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView EnableSortingAndPagingCallbacks Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView EnableSortingAndPagingCallbacks Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        allowsorting=&quot;true&quot;\n        enablesortingandpagingcallbacks=&quot;true&quot;        \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_FooterRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_FooterRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FooterRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The FooterRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control creates the footer row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the FooterRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the FooterRow property to display the sort direction in the footer row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Get the header row.\n    Dim headerRow As GridViewRow = CustomersGridView.HeaderRow\n    \n    &#39; Get the footer row.\n    Dim footerRow As GridViewRow = CustomersGridView.FooterRow\n\n    &#39; Set the font color of the header and footer rows\n    &#39; based on the sort direction. \n    Select Case CustomersGridView.SortDirection\n\n      Case SortDirection.Ascending\n        headerRow.ForeColor = System.Drawing.Color.Green\n        footerRow.ForeColor = System.Drawing.Color.Green\n      Case SortDirection.Descending\n        headerRow.ForeColor = System.Drawing.Color.Red\n        footerRow.ForeColor = System.Drawing.Color.Red\n      Case Else\n        headerRow.ForeColor = System.Drawing.Color.Black\n        footerRow.ForeColor = System.Drawing.Color.Black\n        \n    End Select\n\n    &#39; Display the sort order in the footer row.\n    footerRow.Cells(0).Text = &quot;Sort Order = &quot; &amp; CustomersGridView.SortDirection.ToString()\n      \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n    GridViewRow headerRow = CustomersGridView.HeaderRow;   \n    \n    // Get the footer row.\n    GridViewRow footerRow = CustomersGridView.FooterRow; \n\n    // Set the font color of the header and footer rows\n    // based on the sort direction. \n    switch (CustomersGridView.SortDirection)\n    {\n      case SortDirection.Ascending:\n        headerRow.ForeColor = System.Drawing.Color.Green;\n        footerRow.ForeColor = System.Drawing.Color.Green;\n        break;\n      case SortDirection.Descending:\n        headerRow.ForeColor = System.Drawing.Color.Red;\n        footerRow.ForeColor = System.Drawing.Color.Red;\n        break;\n      default:\n        headerRow.ForeColor = System.Drawing.Color.Black;\n        footerRow.ForeColor = System.Drawing.Color.Black;\n        break;\n    }\n\n    // Display the sort order in the footer row.\n    footerRow.Cells[0].Text = &quot;Sort Order = &quot; + CustomersGridView.SortDirection.ToString();\n      \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_FooterStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_FooterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FooterStyle property to control the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>FooterStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;FooterStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>FooterStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the FooterStyle property to define a custom style for the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_GridLines\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_GridLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLines</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridlines\" data-linktype=\"relative-path\">GridLines</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridlines\" data-linktype=\"relative-path\">GridLines</a> values. The default is <code>GridLines.Both</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the GridLines property to specify the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The following table lists the available styles.  </p>\n<table>\n<thead>\n<tr>\n<th>Style</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>GridLines.None</code></td>\n<td>No gridlines are displayed.</td>\n</tr>\n<tr>\n<td><code>GridLines.Horizontal</code></td>\n<td>Displays the horizontal gridlines only.</td>\n</tr>\n<tr>\n<td><code>GridLines.Vertical</code></td>\n<td>Displays the vertical gridlines only.</td>\n</tr>\n<tr>\n<td><code>GridLines.Both</code></td>\n<td>Displays both the horizontal and vertical gridlines.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the GridLines property to hide the gridlines in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewGridLines#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView GridLines Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView GridLines Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        gridlines=&quot;None&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewGridLines#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView GridLines Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView GridLines Example&lt;/h3&gt;\n      \n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        gridlines=&quot;None&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_HeaderRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_HeaderRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HeaderRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The HeaderRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control creates the header row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the header row, for example, when adding custom content. Any modification to the HeaderRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the HeaderRow property to programmatically change the font color of the header row based on the sort direction.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Get the header row.\n    Dim headerRow As GridViewRow = CustomersGridView.HeaderRow\n    \n    &#39; Get the footer row.\n    Dim footerRow As GridViewRow = CustomersGridView.FooterRow\n\n    &#39; Set the font color of the header and footer rows\n    &#39; based on the sort direction. \n    Select Case CustomersGridView.SortDirection\n\n      Case SortDirection.Ascending\n        headerRow.ForeColor = System.Drawing.Color.Green\n        footerRow.ForeColor = System.Drawing.Color.Green\n      Case SortDirection.Descending\n        headerRow.ForeColor = System.Drawing.Color.Red\n        footerRow.ForeColor = System.Drawing.Color.Red\n      Case Else\n        headerRow.ForeColor = System.Drawing.Color.Black\n        footerRow.ForeColor = System.Drawing.Color.Black\n        \n    End Select\n\n    &#39; Display the sort order in the footer row.\n    footerRow.Cells(0).Text = &quot;Sort Order = &quot; &amp; CustomersGridView.SortDirection.ToString()\n      \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n    GridViewRow headerRow = CustomersGridView.HeaderRow;   \n    \n    // Get the footer row.\n    GridViewRow footerRow = CustomersGridView.FooterRow; \n\n    // Set the font color of the header and footer rows\n    // based on the sort direction. \n    switch (CustomersGridView.SortDirection)\n    {\n      case SortDirection.Ascending:\n        headerRow.ForeColor = System.Drawing.Color.Green;\n        footerRow.ForeColor = System.Drawing.Color.Green;\n        break;\n      case SortDirection.Descending:\n        headerRow.ForeColor = System.Drawing.Color.Red;\n        footerRow.ForeColor = System.Drawing.Color.Red;\n        break;\n      default:\n        headerRow.ForeColor = System.Drawing.Color.Black;\n        footerRow.ForeColor = System.Drawing.Color.Black;\n        break;\n    }\n\n    // Display the sort order in the footer row.\n    footerRow.Cells[0].Text = &quot;Sort Order = &quot; + CustomersGridView.SortDirection.ToString();\n      \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_HeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_HeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HeaderStyle property to control the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>HeaderStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;HeaderStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>HeaderStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the HeaderStyle property to define a custom style for the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_HorizontalAlign\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_HorizontalAlign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalAlign</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control on the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.horizontalalign\" data-linktype=\"relative-path\">HorizontalAlign</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.horizontalalign\" data-linktype=\"relative-path\">HorizontalAlign</a> values. The default is <code>HorizontalAlign.NotSet</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HorizontalAlign property to specify the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control within the page. The following table lists the different horizontal alignment styles.  </p>\n<table>\n<thead>\n<tr>\n<th>Alignment value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>HorizontalAlign.NotSet</code></td>\n<td>The horizontal alignment of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has not been set.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Left</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is left-aligned on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Center</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is centered on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Right</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is right-aligned on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Justify</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is aligned with both the left and right margins of the page.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the HorizontalAlign property to align a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control on the right side of a page.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewHorizontalAlign#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HorizontalAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HorizontalAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        horizontalalign=&quot;Right&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewHorizontalAlign#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HorizontalAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HorizontalAlign Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        horizontalalign=&quot;Right&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PageCount\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PageCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of pages required to display the records of the data source in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int PageCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of pages in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), use the PageCount property to determine the total number of pages required to display the records in the data source. This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageSize_\" data-linktype=\"relative-path\">PageSize</a> property) and rounding up.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the PageCount property to determine the total number of pages displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub PageDropDownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the PageDropDownList DropDownList from the bottom pager row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        \n        &#39; Set the PageIndex property to display that page selected by the user.\n        CustomersGridView.PageIndex = pageList.SelectedIndex\n    \n    End Sub\n    \n    Protected Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the DropDownList and Label controls from the row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        Dim pageLabel As Label = CType(pagerRow.Cells(0).FindControl(&quot;CurrentPageLabel&quot;), Label)\n        \n        If Not pageList Is Nothing Then\n        \n            &#39; Create the values for the DropDownList control based on \n            &#39; the  total number of pages required to display the data\n            &#39; source.\n            Dim i As Integer\n            \n            For i = 0 To CustomersGridView.PageCount - 1\n            \n                &#39; Create a ListItem object to represent a page.\n                Dim pageNumber As Integer = i + 1\n                Dim item As ListItem = New ListItem(pageNumber.ToString())\n            \n                &#39; If the ListItem object matches the currently selected\n                &#39; page, flag the ListItem object as being selected. Because\n                &#39; the DropDownList control is recreated each time the pager\n                &#39; row gets created, this will persist the selected item in\n                &#39; the DropDownList control.   \n                If i = CustomersGridView.PageIndex Then\n          \n                    item.Selected = True\n                \n                End If\n            \n                &#39; Add the ListItem object to the Items collection of the \n                &#39; DropDownList.\n                pageList.Items.Add(item)\n                \n            Next i\n        \n        End If\n        \n        If Not pageLabel Is Nothing Then\n        \n            &#39; Calculate the current page number.\n            Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n        \n            &#39; Update the Label control with the current page information.\n            pageLabel.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; _\n                &quot; of &quot; &amp; CustomersGridView.PageCount.ToString()\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void PageDropDownList_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the PageDropDownList DropDownList from the bottom pager row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n\n    // Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex;\n\n  }\n\n  protected void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the DropDownList and Label controls from the row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n    Label pageLabel = (Label)pagerRow.Cells[0].FindControl(&quot;CurrentPageLabel&quot;);\n        \n    if(pageList != null)\n    {\n        \n      // Create the values for the DropDownList control based on \n      // the  total number of pages required to display the data\n      // source.\n      for(int i=0; i&lt;CustomersGridView.PageCount; i++)\n      {\n            \n        // Create a ListItem object to represent a page.\n        int pageNumber = i + 1;\n        ListItem item = new ListItem(pageNumber.ToString());         \n            \n        // If the ListItem object matches the currently selected\n        // page, flag the ListItem object as being selected. Because\n        // the DropDownList control is recreated each time the pager\n        // row gets created, this will persist the selected item in\n        // the DropDownList control.   \n        if(i==CustomersGridView.PageIndex)\n        {\n          item.Selected = true;\n        }\n            \n        // Add the ListItem object to the Items collection of the \n        // DropDownList.\n        pageList.Items.Add(item);\n                \n      }\n        \n    }\n        \n    if(pageLabel != null)\n    {\n        \n      // Calculate the current page number.\n      int currentPage = CustomersGridView.PageIndex + 1;     \n        \n      // Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; + currentPage.ToString() +\n        &quot; of &quot; + CustomersGridView.PageCount.ToString();\n        \n    }    \n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PageIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PageIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the currently displayed page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int PageIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the currently displayed page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The PageIndex property is set to a value less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), use the PageIndex property to determine the index of the currently displayed page. You can also use this property to programmatically change the displayed page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the PageIndex property to determine the index of the currently displayed page in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The example also shows how the PageIndex property can be used to specify which page is displayed after the user selects a value from the pager row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub PageDropDownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the PageDropDownList DropDownList from the bottom pager row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        \n        &#39; Set the PageIndex property to display that page selected by the user.\n        CustomersGridView.PageIndex = pageList.SelectedIndex\n    \n    End Sub\n    \n    Protected Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the DropDownList and Label controls from the row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        Dim pageLabel As Label = CType(pagerRow.Cells(0).FindControl(&quot;CurrentPageLabel&quot;), Label)\n        \n        If Not pageList Is Nothing Then\n        \n            &#39; Create the values for the DropDownList control based on \n            &#39; the  total number of pages required to display the data\n            &#39; source.\n            Dim i As Integer\n            \n            For i = 0 To CustomersGridView.PageCount - 1\n            \n                &#39; Create a ListItem object to represent a page.\n                Dim pageNumber As Integer = i + 1\n                Dim item As ListItem = New ListItem(pageNumber.ToString())\n            \n                &#39; If the ListItem object matches the currently selected\n                &#39; page, flag the ListItem object as being selected. Because\n                &#39; the DropDownList control is recreated each time the pager\n                &#39; row gets created, this will persist the selected item in\n                &#39; the DropDownList control.   \n                If i = CustomersGridView.PageIndex Then\n          \n                    item.Selected = True\n                \n                End If\n            \n                &#39; Add the ListItem object to the Items collection of the \n                &#39; DropDownList.\n                pageList.Items.Add(item)\n                \n            Next i\n        \n        End If\n        \n        If Not pageLabel Is Nothing Then\n        \n            &#39; Calculate the current page number.\n            Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n        \n            &#39; Update the Label control with the current page information.\n            pageLabel.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; _\n                &quot; of &quot; &amp; CustomersGridView.PageCount.ToString()\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void PageDropDownList_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the PageDropDownList DropDownList from the bottom pager row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n\n    // Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex;\n\n  }\n\n  protected void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the DropDownList and Label controls from the row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n    Label pageLabel = (Label)pagerRow.Cells[0].FindControl(&quot;CurrentPageLabel&quot;);\n        \n    if(pageList != null)\n    {\n        \n      // Create the values for the DropDownList control based on \n      // the  total number of pages required to display the data\n      // source.\n      for(int i=0; i&lt;CustomersGridView.PageCount; i++)\n      {\n            \n        // Create a ListItem object to represent a page.\n        int pageNumber = i + 1;\n        ListItem item = new ListItem(pageNumber.ToString());         \n            \n        // If the ListItem object matches the currently selected\n        // page, flag the ListItem object as being selected. Because\n        // the DropDownList control is recreated each time the pager\n        // row gets created, this will persist the selected item in\n        // the DropDownList control.   \n        if(i==CustomersGridView.PageIndex)\n        {\n          item.Selected = true;\n        }\n            \n        // Add the ListItem object to the Items collection of the \n        // DropDownList.\n        pageList.Items.Add(item);\n                \n      }\n        \n    }\n        \n    if(pageLabel != null)\n    {\n        \n      // Calculate the current page number.\n      int currentPage = CustomersGridView.PageIndex + 1;     \n        \n      // Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; + currentPage.ToString() +\n        &quot; of &quot; + CustomersGridView.PageCount.ToString();\n        \n    }    \n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PagerSettings\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PagerSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerSettings</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object that enables you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> that enables you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the PagerSettings property to control the settings of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The pager row is displayed when the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object (for example, <code>PagerSettings-Mode</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;PagerSettings&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>PagerStyle.Mode</code>). Common settings usually include the pager row&#39;s display mode and custom text or images for the navigation controls.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to set the PagerSettings property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PagerStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PagerStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the PagerStyle property to control the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The pager row is displayed when the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>PagerStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;PagerStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>PagerStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to set the PagerStyle property declaratively. It sets the font and background for the pager row to blue and light blue, respectively.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewAllowPaging#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowPaging Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;\n          height=&quot;30px&quot;\n          verticalalign=&quot;Bottom&quot;\n          horizontalalign=&quot;Center&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PagerTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PagerTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the custom content for the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the pager row. The default value is null, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A pager row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when the paging feature is enabled (when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property is set to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the PagerTemplate property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the PagerTemplate property is set, it overrides the built-in pager row UI.  </p>\n</div>\n<p> To specify a custom template for the pager row, first place <code>&lt;PagerTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;PagerTemplate&gt;</code> tags. To control the appearance of the pager row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a> property.  </p>\n<p> Typically, button controls are added to the pager template to perform the paging operations. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control performs a paging operation when a button control with its <code>CommandName</code> property set to &quot;Page&quot; is clicked. The button&#39;s <code>CommandArgument</code> property determines the type of paging operation to perform. The following table lists the command argument values supported by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<table>\n<thead>\n<tr>\n<th><code>CommandArgument</code> value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&quot;Next&quot;</td>\n<td>Navigates to the next page.</td>\n</tr>\n<tr>\n<td>&quot;Prev&quot;</td>\n<td>Navigates to the previous page.</td>\n</tr>\n<tr>\n<td>&quot;First&quot;</td>\n<td>Navigates to the first page.</td>\n</tr>\n<tr>\n<td>&quot;Last&quot;</td>\n<td>Navigates to the last page.</td>\n</tr>\n<tr>\n<td>Integer value</td>\n<td>Navigates to the specified page number.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a custom pager template that allows the user to navigate through a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control using a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub PageDropDownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the PageDropDownList DropDownList from the bottom pager row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        \n        &#39; Set the PageIndex property to display that page selected by the user.\n        CustomersGridView.PageIndex = pageList.SelectedIndex\n    \n    End Sub\n    \n    Protected Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n    \n        &#39; Retrieve the pager row.\n        Dim pagerRow As GridViewRow = CustomersGridView.BottomPagerRow\n    \n        &#39; Retrieve the DropDownList and Label controls from the row.\n        Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        Dim pageLabel As Label = CType(pagerRow.Cells(0).FindControl(&quot;CurrentPageLabel&quot;), Label)\n        \n        If Not pageList Is Nothing Then\n        \n            &#39; Create the values for the DropDownList control based on \n            &#39; the  total number of pages required to display the data\n            &#39; source.\n            Dim i As Integer\n            \n            For i = 0 To CustomersGridView.PageCount - 1\n            \n                &#39; Create a ListItem object to represent a page.\n                Dim pageNumber As Integer = i + 1\n                Dim item As ListItem = New ListItem(pageNumber.ToString())\n            \n                &#39; If the ListItem object matches the currently selected\n                &#39; page, flag the ListItem object as being selected. Because\n                &#39; the DropDownList control is recreated each time the pager\n                &#39; row gets created, this will persist the selected item in\n                &#39; the DropDownList control.   \n                If i = CustomersGridView.PageIndex Then\n          \n                    item.Selected = True\n                \n                End If\n            \n                &#39; Add the ListItem object to the Items collection of the \n                &#39; DropDownList.\n                pageList.Items.Add(item)\n                \n            Next i\n        \n        End If\n        \n        If Not pageLabel Is Nothing Then\n        \n            &#39; Calculate the current page number.\n            Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n        \n            &#39; Update the Label control with the current page information.\n            pageLabel.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; _\n                &quot; of &quot; &amp; CustomersGridView.PageCount.ToString()\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPagerTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void PageDropDownList_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the PageDropDownList DropDownList from the bottom pager row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n\n    // Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex;\n\n  }\n\n  protected void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.BottomPagerRow;\n    \n    // Retrieve the DropDownList and Label controls from the row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n    Label pageLabel = (Label)pagerRow.Cells[0].FindControl(&quot;CurrentPageLabel&quot;);\n        \n    if(pageList != null)\n    {\n        \n      // Create the values for the DropDownList control based on \n      // the  total number of pages required to display the data\n      // source.\n      for(int i=0; i&lt;CustomersGridView.PageCount; i++)\n      {\n            \n        // Create a ListItem object to represent a page.\n        int pageNumber = i + 1;\n        ListItem item = new ListItem(pageNumber.ToString());         \n            \n        // If the ListItem object matches the currently selected\n        // page, flag the ListItem object as being selected. Because\n        // the DropDownList control is recreated each time the pager\n        // row gets created, this will persist the selected item in\n        // the DropDownList control.   \n        if(i==CustomersGridView.PageIndex)\n        {\n          item.Selected = true;\n        }\n            \n        // Add the ListItem object to the Items collection of the \n        // DropDownList.\n        pageList.Items.Add(item);\n                \n      }\n        \n    }\n        \n    if(pageLabel != null)\n    {\n        \n      // Calculate the current page number.\n      int currentPage = CustomersGridView.PageIndex + 1;     \n        \n      // Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; + currentPage.ToString() +\n        &quot; of &quot; + CustomersGridView.PageCount.ToString();\n        \n    }    \n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PagerTemplate Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%; text-align:right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PageSize\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PageSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of records to display on a page in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int PageSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of records to display on a single page. The default is 10.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The PageSize property is set to a value less than 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), use the PageSize property to specify the number of records to display on a single page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the PageSize property to display 15 records at a time in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPageSize#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageSize Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageSize Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        pagesize=&quot;15&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPageSize#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageSize Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageSize Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        pagesize=&quot;15&quot;\n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowHeaderColumn\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_RowHeaderColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderColumn</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the column to use as the column header for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string RowHeaderColumn { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the column to use as the column header. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In HTML, the header of a table can be associated with either a row or a column. The direction is specified by setting the <code>scope</code> attribute of the <code>&lt;th&gt;</code> elements. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has a built-in header row that can be displayed by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ShowHeader_\" data-linktype=\"relative-path\">ShowHeader</a> property to <code>true</code>. You can also optionally specify a header column (usually the first or last column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control) by setting this property. When this property is set, all cells in the column that corresponds to the specified field name are rendered as <code>&lt;th scope=&quot;row&quot;&gt;</code> elements.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although the specified column is treated like a header, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_ShowHeader_\" data-linktype=\"relative-path\">ShowHeader</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_UseAccessibleHeader_\" data-linktype=\"relative-path\">UseAccessibleHeader</a> properties do not apply to the header column.  </p>\n</div>\n<p> The default rendering of the <code>&lt;th&gt;</code> element is preserved, rendering text as bold and centered horizontally. Developers can override the behavior of the <code>&lt;th&gt;</code> element using a cascading style sheet.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property works only with bound fields. It does not work with template fields.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowHeaderColumn property to display a header column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowHeaderColumn#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowHeaderColumn Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowHeaderColumn Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        rowheadercolumn=&quot;CustomerID&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowHeaderColumn#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowHeaderColumn Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowHeaderColumn Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        rowheadercolumn=&quot;CustomerID&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Rows\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_Rows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rows</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> objects that represent the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrowcollection\" data-linktype=\"relative-path\">GridViewRowCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrowcollection\" data-linktype=\"relative-path\">GridViewRowCollection</a> that contains all the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Rows property (collection) is used to store the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically populates the Rows collection by creating a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object for each record in the data source and then adding each object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Only rows with their <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow#System_Web_UI_WebControls_GridViewRow_RowType_\" data-linktype=\"relative-path\">RowType</a> property set to <code>DataControlRowType.DataRow</code> are stored in the Rows collection. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> objects that represent the header, footer, and pager rows are not included in the collection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Rows collection to access the row being edited in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. After a row is updated, a message is displayed to indicate that the update was successful.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRows#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    \n    // Clear the message label when the user enters edit mode.\n    if (e.CommandName == &quot;Edit&quot;)\n    {\n      Message.Text = &quot;&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n    {\n   \n        // The update operation was successful. Retrieve the row being edited.\n        int index = CustomersGridView.EditIndex;\n        GridViewRow row = CustomersGridView.Rows[index];\n        \n        // Notify the user that the update was successful.\n        Message.Text = &quot;Updated record &quot; + row.Cells[1].Text + &quot;.&quot;;\n    \n    }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n    {\n   \n        // The update operation was canceled. Display the appropriate message.\n        Message.Text = &quot;Update operation canceled.&quot;;\n    \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Rows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Rows Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;    \n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRows#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n    \n    &#39; Clear the message label when the user enters edit mode.\n    If e.CommandName = &quot;Edit&quot; Then\n      Message.Text = &quot;&quot;\n    End If\n    \n  End Sub\n  \n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n   \n    &#39; The update operation was successful. Retrieve the row being edited.\n    Dim index As Integer = CustomersGridView.EditIndex\n    Dim row As GridViewRow = CustomersGridView.Rows(index)\n        \n    &#39; Notify the user that the update was successful.\n    Message.Text = &quot;Updated record &quot; &amp; row.Cells(1).Text + &quot;.&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n   \n    &#39; The update operation was canceled. Display the appropriate message.\n    Message.Text = &quot;Update operation canceled.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Rows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Rows Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;    \n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_RowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RowStyle property to control the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> property is also set, the data rows are displayed alternating between the RowStyle settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>RowStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;RowStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>RowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowStyle property to declaratively define the style for the item rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;rowstyle backcolor=&quot;LightCyan&quot;  \n           forecolor=&quot;DarkBlue&quot;\n           font-italic=&quot;true&quot;/&gt;\n                    \n        &lt;alternatingrowstyle backcolor=&quot;PaleTurquoise&quot;  \n          forecolor=&quot;DarkBlue&quot;\n          font-italic=&quot;true&quot;/&gt;\n                            \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;rowstyle backcolor=&quot;LightCyan&quot;  \n           forecolor=&quot;DarkBlue&quot;\n           font-italic=&quot;true&quot;/&gt;\n                    \n        &lt;alternatingrowstyle backcolor=&quot;PaleTurquoise&quot;  \n          forecolor=&quot;DarkBlue&quot;\n          font-italic=&quot;true&quot;/&gt;\n                            \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedDataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedDataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedDataKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that contains the data key value for the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> for the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The default is <code>null</code>, which indicates that no row is currently selected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No data keys are specified in the <span class=\"xref\">stem.Web.UI.WebControls.GridView.DataKeyNames*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property is set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for each row in the control using the value or values of the specified field or fields. The <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> objects are then added to the control&#39;s <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> collection. Normally, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> property is used to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for a specific data row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. However, if you just need to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object of the currently selected row, you can simply use the SelectedDataKey property as a shortcut.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This is the same as retrieving the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object at the index specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property from the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> collection. You can also use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property to retrieve the data key value for the currently selected row directly.  </p>\n</div>\n<p> If you are creating a <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object and want to access a key field other than the first field, use the indexed SelectedDataKey property in the <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter#System_Web_UI_WebControls_ControlParameter_PropertyName_\" data-linktype=\"relative-path\">PropertyName</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object. An example is shown below.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedDataKey property to determine the data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelectedDataKey#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)  \n  {\n        \n    // Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; +\n      CustomersGridView.SelectedDataKey.Value.ToString() + &quot;.&quot;;\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView SelectedDataKey Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView SelectedDataKey Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        allowpaging=&quot;true&quot;\n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;   \n        runat=&quot;server&quot;&gt;\n                \n        &lt;selectedrowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt; \n               \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelectedDataKey#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; &amp; _\n      CustomersGridView.SelectedDataKey.Value.ToString() &amp; &quot;.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView SelectedDataKey Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView SelectedDataKey Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        allowpaging=&quot;true&quot;\n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;   \n        runat=&quot;server&quot;&gt;\n                \n        &lt;selectedrowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt; \n               \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the second key field as a parameter in a master/detail scenario. A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is used to display records from the Order Details table of the Northwind database. When a record is selected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the details of the product from the Products table are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. ProductID is the second key name in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. To access the second key, the value of GridView1.SelectedDataKey[1] is used as the <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter#System_Web_UI_WebControls_ControlParameter_PropertyName_\" data-linktype=\"relative-path\">PropertyName</a> for the <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object of the <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a> control of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelectedDataKeyIndex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n  &lt;title&gt;Selecting Data Key Values&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n  &lt;div&gt;\n    &lt;asp:SqlDataSource \n      ID=&quot;SqlDataSource1&quot; \n      runat=&quot;server&quot; \n      ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n      ProviderName=&quot;System.Data.SqlClient&quot; \n      SelectCommand=&quot;SELECT * FROM [Order Details]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n\n    &lt;asp:SqlDataSource \n      ID=&quot;SqlDataSource2&quot; \n      runat=&quot;server&quot; \n      ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n      ProviderName=&quot;System.Data.SqlClient&quot; \n      SelectCommand=&quot;SELECT * FROM [Products]WHERE [ProductID] = @productid&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter \n          Name=&quot;productid&quot; \n          ControlID=&quot;GridView1&quot; \n          PropertyName=&quot;SelectedDataKey[1]&quot; /&gt;\n      &lt;/SelectParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n    \n  &lt;/div&gt;\n\n  &lt;asp:GridView \n    ID=&quot;GridView1&quot; \n    runat=&quot;server&quot; \n    AllowPaging=&quot;True&quot; \n    AutoGenerateColumns=&quot;False&quot;\n    DataKeyNames=&quot;OrderID,ProductID&quot; DataSourceID=&quot;SqlDataSource1&quot;&gt;\n    &lt;Columns&gt;\n      &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;OrderID&quot; HeaderText=&quot;OrderID&quot; ReadOnly=&quot;True&quot;/&gt;\n      &lt;asp:BoundField DataField=&quot;ProductID&quot; HeaderText=&quot;ProductID&quot; ReadOnly=&quot;True&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;UnitPrice&quot; HeaderText=&quot;UnitPrice&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;Quantity&quot; HeaderText=&quot;Quantity&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;Discount&quot; HeaderText=&quot;Discount&quot; /&gt;\n      &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n    &lt;br /&gt;\n    &lt;asp:DetailsView \n      ID=&quot;DetailsView1&quot; \n      runat=&quot;server&quot; \n      AutoGenerateRows=&quot;False&quot; \n      DataKeyNames=&quot;ProductID&quot;\n      DataSourceID=&quot;SqlDataSource2&quot; \n      Height=&quot;50px&quot; Width=&quot;125px&quot;&gt;\n      &lt;Fields&gt;\n        &lt;asp:BoundField \n          DataField=&quot;ProductID&quot; \n          HeaderText=&quot;ProductID&quot; \n          InsertVisible=&quot;False&quot;\n          ReadOnly=&quot;True&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;ProductName&quot; HeaderText=&quot;ProductName&quot;/&gt;\n        &lt;asp:BoundField DataField=&quot;SupplierID&quot; HeaderText=&quot;SupplierID&quot;/&gt;\n        &lt;asp:BoundField DataField=&quot;CategoryID&quot; HeaderText=&quot;CategoryID&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;QuantityPerUnit&quot; HeaderText=&quot;QuantityPerUnit&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitPrice&quot; HeaderText=&quot;UnitPrice&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitsInStock&quot; HeaderText=&quot;UnitsInStock&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitsOnOrder&quot; HeaderText=&quot;UnitsOnOrder&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;ReorderLevel&quot; HeaderText=&quot;ReorderLevel&quot; /&gt;\n        &lt;asp:CheckBoxField DataField=&quot;Discontinued&quot; HeaderText=&quot;Discontinued&quot; /&gt;\n      &lt;/Fields&gt;\n    &lt;/asp:DetailsView&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelectedDataKeyIndex#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n  &lt;title&gt;Selecting Data Key Values&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n  &lt;div&gt;\n    &lt;asp:SqlDataSource \n      ID=&quot;SqlDataSource1&quot; \n      runat=&quot;server&quot; \n      ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n      ProviderName=&quot;System.Data.SqlClient&quot; \n      SelectCommand=&quot;SELECT * FROM [Order Details]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n\n    &lt;asp:SqlDataSource \n      ID=&quot;SqlDataSource2&quot; \n      runat=&quot;server&quot; \n      ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n      ProviderName=&quot;System.Data.SqlClient&quot; \n      SelectCommand=&quot;SELECT * FROM [Products]WHERE [ProductID] = @productid&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter \n          Name=&quot;productid&quot; \n          ControlID=&quot;GridView1&quot; \n          PropertyName=&quot;SelectedDataKey[1]&quot; /&gt;\n      &lt;/SelectParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n    \n  &lt;/div&gt;\n\n  &lt;asp:GridView \n    ID=&quot;GridView1&quot; \n    runat=&quot;server&quot; \n    AllowPaging=&quot;True&quot; \n    AutoGenerateColumns=&quot;False&quot;\n    DataKeyNames=&quot;OrderID,ProductID&quot; DataSourceID=&quot;SqlDataSource1&quot;&gt;\n    &lt;Columns&gt;\n      &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;OrderID&quot; HeaderText=&quot;OrderID&quot; ReadOnly=&quot;True&quot;/&gt;\n      &lt;asp:BoundField DataField=&quot;ProductID&quot; HeaderText=&quot;ProductID&quot; ReadOnly=&quot;True&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;UnitPrice&quot; HeaderText=&quot;UnitPrice&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;Quantity&quot; HeaderText=&quot;Quantity&quot; /&gt;\n      &lt;asp:BoundField DataField=&quot;Discount&quot; HeaderText=&quot;Discount&quot; /&gt;\n      &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n    &lt;br /&gt;\n    &lt;asp:DetailsView \n      ID=&quot;DetailsView1&quot; \n      runat=&quot;server&quot; \n      AutoGenerateRows=&quot;False&quot; \n      DataKeyNames=&quot;ProductID&quot;\n      DataSourceID=&quot;SqlDataSource2&quot; \n      Height=&quot;50px&quot; Width=&quot;125px&quot;&gt;\n      &lt;Fields&gt;\n        &lt;asp:BoundField \n          DataField=&quot;ProductID&quot; \n          HeaderText=&quot;ProductID&quot; \n          InsertVisible=&quot;False&quot;\n          ReadOnly=&quot;True&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;ProductName&quot; HeaderText=&quot;ProductName&quot;/&gt;\n        &lt;asp:BoundField DataField=&quot;SupplierID&quot; HeaderText=&quot;SupplierID&quot;/&gt;\n        &lt;asp:BoundField DataField=&quot;CategoryID&quot; HeaderText=&quot;CategoryID&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;QuantityPerUnit&quot; HeaderText=&quot;QuantityPerUnit&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitPrice&quot; HeaderText=&quot;UnitPrice&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitsInStock&quot; HeaderText=&quot;UnitsInStock&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;UnitsOnOrder&quot; HeaderText=&quot;UnitsOnOrder&quot; /&gt;\n        &lt;asp:BoundField DataField=&quot;ReorderLevel&quot; HeaderText=&quot;ReorderLevel&quot; /&gt;\n        &lt;asp:CheckBoxField DataField=&quot;Discontinued&quot; HeaderText=&quot;Discontinued&quot; /&gt;\n      &lt;/Fields&gt;\n    &lt;/asp:DetailsView&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int SelectedIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The default is -1, which indicates that no row is currently selected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The SelectedIndex property is set to a value less than -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SelectedIndex property to determine the index of the currently selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. You can also use this property to programmatically select a row in the control. To clear the selection of a row, set this property to -1. The appearance of the currently selected row can be customized by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedRowStyle_\" data-linktype=\"relative-path\">SelectedRowStyle</a> property. To access the currently selected row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedRow_\" data-linktype=\"relative-path\">SelectedRow</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedIndex property to select the second row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when the control is initially displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedPersistedDataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedPersistedDataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedPersistedDataKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data-key value for the persisted selected item in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>The data key for the persisted selected item in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The default is <code>null</code>, which indicates that no item is currently selected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the selected row in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the selected row in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a row is selected in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, use the SelectedRow property to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents that row.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This is the same as retrieving the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object at the index specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property from the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection.  </p>\n</div>\n<p> This object can then be used to access the properties of the selected row.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedRow property to access the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the selected row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that enables you to set the appearance of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SelectedRowStyle property to control the appearance of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively using one of the following methods:  </p>\n<ul>\n<li><p>Place an attribute in the opening tag of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>SelectedRowStyle-ForeColor</code>).  </p>\n</li>\n<li><p>Nest a <code>&lt;SelectedRowStyle&gt;</code> element between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p>The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>SelectedRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedRowStyle property to define a custom style for the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedValue\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SelectedValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property is set with a comma-separated list of field names that represent the primary key of the data source, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for each row in the control using the value or values of the specified field or fields. The <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> objects are then added to the control&#39;s <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> collection. Normally, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> property is used to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object for a specific data row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. However, if you just need to retrieve the <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object of the currently selected row, you can simply use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedDataKey_\" data-linktype=\"relative-path\">SelectedDataKey</a> property as a shortcut. As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the SelectedValue property.  </p>\n<p> If you are creating a <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object and want to access a key field other than the first field, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedDataKey_\" data-linktype=\"relative-path\">SelectedDataKey</a> property. For an example, see <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedDataKey_\" data-linktype=\"relative-path\">SelectedDataKey</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedValue property to determine the data key value of the selected row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelectedValue#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)  \n  {\n        \n    // Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; +\n      CustomersGridView.SelectedValue.ToString() + &quot;.&quot;;\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView SelectedValue Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView SelectedValue Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        allowpaging=&quot;true&quot;\n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;   \n        runat=&quot;server&quot;&gt;\n                \n        &lt;selectedrowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt; \n               \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelectedValue#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Display the primary key value of the selected row.\n    Message.Text = &quot;The primary key value of the selected row is &quot; &amp; _\n      CustomersGridView.SelectedValue.ToString() &amp; &quot;.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView SelectedValue Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView SelectedValue Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;&lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        allowpaging=&quot;true&quot;\n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;    \n        datakeynames=&quot;CustomerID&quot;\n        onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;   \n        runat=&quot;server&quot;&gt;\n                \n        &lt;selectedrowstyle backcolor=&quot;LightBlue&quot;\n          forecolor=&quot;DarkBlue&quot;/&gt; \n               \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ShowFooter\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ShowFooter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowFooter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the footer row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ShowFooter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the footer row; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ShowFooter property to specify whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays the footer row. To control the appearance of the footer row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the ShowFooter property to display the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ShowHeader\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ShowHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowHeader</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the header row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ShowHeader { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the header row; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ShowHeader property to specify whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control displays the header row. To control the appearance of the header row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the ShowHeader property to display the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewShowHeader#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView ShowHeader and ShowFooter Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView ShowHeader and ShowFooter Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                                    \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ShowHeaderWhenEmpty\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ShowHeaderWhenEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowHeaderWhenEmpty</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the heading of a column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is visible when the column has no data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ShowHeaderWhenEmpty { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the header is visible; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortDirection\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortDirection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortDirection</div>        \r\n          </div>\r\n    \r\n            <p>Gets the sort direction of the column being sorted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.sortdirection\" data-linktype=\"relative-path\">SortDirection</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.sortdirection\" data-linktype=\"relative-path\">SortDirection</a> values. The default is <code>SortDirection.Ascending</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SortDirection property to determine whether the column being sorted is sorted in ascending or descending order.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SortDirection property to programmatically determine the sort direction of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Get the header row.\n    Dim headerRow As GridViewRow = CustomersGridView.HeaderRow\n    \n    &#39; Get the footer row.\n    Dim footerRow As GridViewRow = CustomersGridView.FooterRow\n\n    &#39; Set the font color of the header and footer rows\n    &#39; based on the sort direction. \n    Select Case CustomersGridView.SortDirection\n\n      Case SortDirection.Ascending\n        headerRow.ForeColor = System.Drawing.Color.Green\n        footerRow.ForeColor = System.Drawing.Color.Green\n      Case SortDirection.Descending\n        headerRow.ForeColor = System.Drawing.Color.Red\n        footerRow.ForeColor = System.Drawing.Color.Red\n      Case Else\n        headerRow.ForeColor = System.Drawing.Color.Black\n        footerRow.ForeColor = System.Drawing.Color.Black\n        \n    End Select\n\n    &#39; Display the sort order in the footer row.\n    footerRow.Cells(0).Text = &quot;Sort Order = &quot; &amp; CustomersGridView.SortDirection.ToString()\n      \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewFooterRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n    GridViewRow headerRow = CustomersGridView.HeaderRow;   \n    \n    // Get the footer row.\n    GridViewRow footerRow = CustomersGridView.FooterRow; \n\n    // Set the font color of the header and footer rows\n    // based on the sort direction. \n    switch (CustomersGridView.SortDirection)\n    {\n      case SortDirection.Ascending:\n        headerRow.ForeColor = System.Drawing.Color.Green;\n        footerRow.ForeColor = System.Drawing.Color.Green;\n        break;\n      case SortDirection.Descending:\n        headerRow.ForeColor = System.Drawing.Color.Red;\n        footerRow.ForeColor = System.Drawing.Color.Red;\n        break;\n      default:\n        headerRow.ForeColor = System.Drawing.Color.Black;\n        footerRow.ForeColor = System.Drawing.Color.Black;\n        break;\n    }\n\n    // Display the sort order in the footer row.\n    footerRow.Cells[0].Text = &quot;Sort Order = &quot; + CustomersGridView.SortDirection.ToString();\n      \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView HeaderRow and FooterRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView HeaderRow and FooterRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        showheader=&quot;true&quot;\n        showfooter=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;    \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                    \n        &lt;footerstyle backcolor=&quot;LightCyan&quot;\n          forecolor=&quot;MediumBlue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortedAscendingCellStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortedAscendingCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortedAscendingCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the CSS style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column when the column is sorted in ascending order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a style is applied to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when the column is sorted in ascending order; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, a style is applied to cells in the column when the data is sorted in ascending order. For example, the column can be highlighted with a specific color when the sort type is ascending.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortedAscendingHeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortedAscendingHeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortedAscendingHeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the CSS style to apply to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column heading when the column is sorted in ascending order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a style is applied to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> heading when the column is sorted in ascending order; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, an arrow that indicates the sort direction is displayed in the column heading.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortedDescendingCellStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortedDescendingCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortedDescendingCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column when the column is sorted in descending order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a style is applied to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> when the column is sorted in descending order; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, a style is applied to cells in the column when the data is sorted in descending order. For example, the column can be highlighted with a specific color when the sort type is descending.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortedDescendingHeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortedDescendingHeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortedDescendingHeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style to apply to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> column heading when the column is sorted in descending order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a style is applied to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> heading when the column is sorted in descending order; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, an arrow that indicates the sort direction is displayed in the column heading.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SortExpression\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SortExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortExpression</div>        \r\n          </div>\r\n    \r\n            <p>Gets the sort expression associated with the column or columns being sorted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string SortExpression { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The sort expression associated with the column or columns being sorted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SortExpression property to determine the sort expression associated with the column or columns being sorted.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n</div>\n<p> When multiple columns are sorted, this property contains a comma-separated list of the fields by which to sort.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SortExpression property to determine the name of the column being sorted.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewAllowSortingColumns#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCreated(Object sender, GridViewRowEventArgs e)\n  {\n    \n    // Use the RowType property to determine whether the \n    // row being created is the header row. \n    if (e.Row.RowType == DataControlRowType.Header)\n    {\n      // Call the GetSortColumnIndex helper method to determine\n      // the index of the column being sorted.\n      int sortColumnIndex = GetSortColumnIndex();\n      \n      if (sortColumnIndex != -1)\n      {\n        // Call the AddSortImage helper method to add\n        // a sort direction image to the appropriate\n        // column header. \n        AddSortImage(sortColumnIndex, e.Row);\n      }\n    }\n  }\n\n  // This is a helper method used to determine the index of the\n  // column being sorted. If no column is being sorted, -1 is returned.\n  int GetSortColumnIndex()\n  {\n\n    // Iterate through the Columns collection to determine the index\n    // of the column being sorted.\n    foreach (DataControlField field in CustomersGridView.Columns)\n    {\n      if (field.SortExpression == CustomersGridView.SortExpression)\n      {\n        return CustomersGridView.Columns.IndexOf(field);\n      }\n    }\n\n    return -1;\n  }\n\n  // This is a helper method used to add a sort direction\n  // image to the header of the column being sorted.\n  void AddSortImage(int columnIndex, GridViewRow headerRow)\n  {\n    \n    // Create the sorting image based on the sort direction.\n    Image sortImage = new Image();\n    if (CustomersGridView.SortDirection == SortDirection.Ascending)\n    {\n      sortImage.ImageUrl = &quot;~/Images/Ascending.jpg&quot;;\n      sortImage.AlternateText = &quot;Ascending Order&quot;;\n    }\n    else\n    {\n      sortImage.ImageUrl = &quot;~/Images/Descending.jpg&quot;;\n      sortImage.AlternateText = &quot;Descending Order&quot;;\n    }\n\n    // Add the image to the appropriate header cell.\n    headerRow.Cells[columnIndex].Controls.Add(sortImage);\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onrowcreated=&quot;CustomersGridView_RowCreated&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n            headertext=&quot;Customer ID&quot;\n            headerstyle-wrap=&quot;false&quot; \n            sortexpression=&quot;CustomerID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n            headertext=&quot;CompanyName&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;CompanyName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot;\n            headertext=&quot;Address&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot;\n            headertext=&quot;City&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n            headertext=&quot;Postal Code&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;PostalCode&quot; /&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot;\n            headertext=&quot;Country&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Country&quot;/&gt;         \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewAllowSortingColumns#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n    \n    &#39; Use the RowType property to determine whether the \n    &#39; row being created is the header row. \n    If e.Row.RowType = DataControlRowType.Header Then\n    \n      &#39; Call the GetSortColumnIndex helper method to determine\n      &#39; the index of the column being sorted.\n      Dim sortColumnIndex As Integer = GetSortColumnIndex()\n      \n      If sortColumnIndex &lt;&gt; -1 Then\n      \n        &#39; Call the AddSortImage helper method to add\n        &#39; a sort direction image to the appropriate\n        &#39; column header. \n        AddSortImage(sortColumnIndex, e.Row)\n    \n      End If\n      \n    End If\n    \n  End Sub\n\n  &#39; This is a helper method used to determine the index of the\n  &#39; column being sorted. If no column is being sorted, -1 is returned.\n  Function GetSortColumnIndex() As Integer\n\n    &#39; Iterate through the Columns collection to determine the index\n    &#39; of the column being sorted.\n    Dim field As DataControlField\n    For Each field In CustomersGridView.Columns\n    \n      If field.SortExpression = CustomersGridView.SortExpression Then\n      \n        Return CustomersGridView.Columns.IndexOf(field)\n\n      End If\n      \n    Next\n\n    Return -1\n      \n  End Function\n\n  &#39; This is a helper method used to add a sort direction\n  &#39; image to the header of the column being sorted.\n  Sub AddSortImage(ByVal columnIndex As Integer, ByVal row As GridViewRow)\n\n    &#39; Create the sorting image based on the sort direction.\n    Dim sortImage As New Image()\n    If CustomersGridView.SortDirection = SortDirection.Ascending Then\n    \n      sortImage.ImageUrl = &quot;~/Images/Ascending.jpg&quot;\n      sortImage.AlternateText = &quot;Ascending Order&quot;\n    \n    Else\n    \n      sortImage.ImageUrl = &quot;~/Images/Descending.jpg&quot;\n      sortImage.AlternateText = &quot;Descending Order&quot;\n    \n    End If\n    &#39; Add the image to the appropriate header cell.\n    row.Cells(columnIndex).Controls.Add(sortImage)\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView AllowSorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView AllowSorting Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;false&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onrowcreated=&quot;CustomersGridView_RowCreated&quot;\n        runat=&quot;server&quot;&gt;\n        \n        &lt;columns&gt;\n          &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n            headertext=&quot;Customer ID&quot;\n            headerstyle-wrap=&quot;false&quot; \n            sortexpression=&quot;CustomerID&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n            headertext=&quot;CompanyName&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;CompanyName&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;Address&quot;\n            headertext=&quot;Address&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Address&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;City&quot;\n            headertext=&quot;City&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;City&quot;/&gt;\n          &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n            headertext=&quot;Postal Code&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;PostalCode&quot; /&gt;\n          &lt;asp:boundfield datafield=&quot;Country&quot;\n            headertext=&quot;Country&quot;\n            headerstyle-wrap=&quot;false&quot;\n            sortexpression=&quot;Country&quot;/&gt;         \n        &lt;/columns&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_TagKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_TagKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagKey property allows the output stream to write the appropriate HTML markup for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_EnableSortingAndPagingCallbacks_\" data-linktype=\"relative-path\">EnableSortingAndPagingCallbacks</a> property is set to <code>true</code>, this property returns <code>HtmlTextWriterTag.Div</code>; otherwise, this property returns <code>HtmlTextWriterTag.Table</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_TopPagerRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_TopPagerRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopPagerRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the top pager row in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When paging is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The pager row contains controls that allow the user to navigate to the other pages and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the TopPagerRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object that represents the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The TopPagerRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control creates the top pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the TopPagerRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the TopPagerRow property to access the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The TopPagerRow property is used to retrieve a <a class=\"xref\" href=\"system.web.ui.webcontrols.dropdownlist\" data-linktype=\"relative-path\">DropDownList</a> control from the pager row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewTopPagerRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub PageDropDownList_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n    \n    &#39; Retrieve the pager row.\n    Dim pagerRow As GridViewRow = CustomersGridView.TopPagerRow\n    \n    &#39; Retrieve the PageDropDownList DropDownList from the bottom pager row.\n    Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n        \n    &#39; Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex\n    \n  End Sub\n    \n  Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n    \n    &#39; Get the PagerRow.\n    Dim pagerRow As GridViewRow = CustomersGridView.TopPagerRow\n    \n    &#39; Retrieve the DropDownList and Label controls from the row.\n    Dim pageList As DropDownList = CType(pagerRow.Cells(0).FindControl(&quot;PageDropDownList&quot;), DropDownList)\n    Dim pageLabel As Label = CType(pagerRow.Cells(0).FindControl(&quot;CurrentPageLabel&quot;), Label)\n        \n    If Not pageList Is Nothing Then\n        \n      &#39; Create the values for the DropDownList control based on \n      &#39; the  total number of pages required to display the data\n      &#39; source.\n      Dim i As Integer\n            \n      For i = 0 To CustomersGridView.PageCount - 1\n            \n        &#39; Create a ListItem object to represent a page.\n        Dim pageNumber As Integer = i + 1\n        Dim item As ListItem = New ListItem(pageNumber.ToString())\n            \n        &#39; If the ListItem object matches the currently selected\n        &#39; page, flag the ListItem object as being selected. Because\n        &#39; the DropDownList control is recreated each time the pager\n        &#39; row gets created, this will persist the selected item in\n        &#39; the DropDownList control.   \n        If i = CustomersGridView.PageIndex Then\n          \n          item.Selected = True\n                \n        End If\n            \n        &#39; Add the ListItem object to the Items collection of the \n        &#39; DropDownList.\n        pageList.Items.Add(item)\n                \n      Next i\n        \n    End If\n        \n    If Not pageLabel Is Nothing Then\n        \n      &#39; Calculate the current page number.\n      Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n        \n      &#39; Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; _\n          &quot; of &quot; &amp; CustomersGridView.PageCount.ToString()\n        \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView TopPagerRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView TopPagerRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n          \n        &lt;pagersettings position=&quot;Top&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%&quot; align=&quot;right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewTopPagerRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void PageDropDownList_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n\n    // Retrieve the pager row.\n    GridViewRow pagerRow = CustomersGridView.TopPagerRow;\n   \n    // Retrieve the PageDropDownList DropDownList from the pager row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n\n    // Set the PageIndex property to display that page selected by the user.\n    CustomersGridView.PageIndex = pageList.SelectedIndex;\n\n  }\n\n  void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n    \n    // Retrieve the PagerRow.\n    GridViewRow pagerRow = CustomersGridView.TopPagerRow;\n    \n    // Retrieve the DropDownList and Label controls from the row.\n    DropDownList pageList = (DropDownList)pagerRow.Cells[0].FindControl(&quot;PageDropDownList&quot;);\n    Label pageLabel = (Label)pagerRow.Cells[0].FindControl(&quot;CurrentPageLabel&quot;);\n        \n    if(pageList != null)\n    {\n        \n      // Create the values for the DropDownList control based on \n      // the  total number of pages required to display the data\n      // source.\n      for(int i=0; i&lt;CustomersGridView.PageCount; i++)\n      {\n            \n        // Create a ListItem object to represent a page.\n        int pageNumber = i + 1;\n        ListItem item = new ListItem(pageNumber.ToString());         \n            \n        // If the ListItem object matches the currently selected\n        // page, flag the ListItem object as being selected. Because\n        // the DropDownList control is recreated each time the pager\n        // row gets created, this will persist the selected item in\n        // the DropDownList control.   \n        if(i==CustomersGridView.PageIndex)\n        {\n          item.Selected = true;\n        }\n            \n        // Add the ListItem object to the Items collection of the \n        // DropDownList.\n        pageList.Items.Add(item);\n                \n      }\n        \n    }\n        \n    if(pageLabel != null)\n    {\n        \n      // Calculate the current page number.\n      int currentPage = CustomersGridView.PageIndex + 1;     \n        \n      // Update the Label control with the current page information.\n      pageLabel.Text = &quot;Page &quot; + currentPage.ToString() +\n        &quot; of &quot; + CustomersGridView.PageCount.ToString();\n        \n    }    \n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView TopPagerRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView TopPagerRow Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot;   \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;  \n        runat=&quot;server&quot;&gt;\n              \n        &lt;pagerstyle forecolor=&quot;Blue&quot;\n          backcolor=&quot;LightBlue&quot;/&gt;\n          \n        &lt;pagersettings position=&quot;Top&quot;/&gt;\n              \n        &lt;pagertemplate&gt;\n          \n          &lt;table width=&quot;100%&quot;&gt;                    \n            &lt;tr&gt;                        \n              &lt;td style=&quot;width:70%&quot;&gt;\n                          \n                &lt;asp:label id=&quot;MessageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  text=&quot;Select a page:&quot; \n                  runat=&quot;server&quot;/&gt;\n                &lt;asp:dropdownlist id=&quot;PageDropDownList&quot;\n                  autopostback=&quot;true&quot;\n                  onselectedindexchanged=&quot;PageDropDownList_SelectedIndexChanged&quot; \n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;   \n                      \n              &lt;td style=&quot;width:70%&quot; align=&quot;right&quot;&gt;\n                      \n                &lt;asp:label id=&quot;CurrentPageLabel&quot;\n                  forecolor=&quot;Blue&quot;\n                  runat=&quot;server&quot;/&gt;\n                      \n              &lt;/td&gt;\n                                            \n            &lt;/tr&gt;                    \n          &lt;/table&gt;\n          \n        &lt;/pagertemplate&gt; \n          \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_UpdateMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_UpdateMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method to call in order to update data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string UpdateMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property causes model binding to be used as the data-binding method.  </p>\n<p> For a tutorial series on using model binding with Web Forms, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_UseAccessibleHeader\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_UseAccessibleHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseAccessibleHeader</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control renders its header in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool UseAccessibleHeader { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control renders its header in an accessible format; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the UseAccessibleHeader property to specify whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control renders its header row in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices. By default, the value of this property is <code>true</code> and the header for the control is rendered using <code>&lt;th&gt;</code> table header cell tags. In addition, a <code>scope=&quot;col&quot;</code> attribute is added to the table header to specify that the header applies to all the cells in the column. The default rendering of the <code>&lt;th&gt;</code> element is preserved, rendering text as bold and centered horizontally. Developers can override the style of the <code>&lt;th&gt;</code> element using a cascading style sheet.  </p>\n<p> If the value of this property is <code>false</code>, the header for the control is rendered using <code>&lt;td&gt;</code> table cell tags.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the UseAccessibleHeader property to disable the accessible header.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewUseAccessibleHeader#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView UseAccessibleHeader Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView UseAccessibleHeader Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        useaccessibleheader=&quot;false&quot; \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightSteelBlue&quot;\n          font-names=&quot;Verdana&quot;\n          font-italic=&quot;true&quot;\n          font-size=&quot;12&quot; \n          forecolor=&quot;Blue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewUseAccessibleHeader#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView UseAccessibleHeader Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView UseAccessibleHeader Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        useaccessibleheader=&quot;false&quot; \n        runat=&quot;server&quot;&gt;\n        \n        &lt;headerstyle backcolor=&quot;LightSteelBlue&quot;\n          font-names=&quot;Verdana&quot;\n          font-italic=&quot;true&quot;\n          font-size=&quot;12&quot; \n          forecolor=&quot;Blue&quot;/&gt;\n                        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_VirtualItemCount\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_VirtualItemCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualItemCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the virtual number of items in the data source that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to when custom paging is used.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int VirtualItemCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The virtual number of items in the data source that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to when custom paging is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is used only when the value of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowCustomPaging_\" data-linktype=\"relative-path\">AllowCustomPaging</a> property is <code>true</code>. For more information, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AllowCustomPaging_\" data-linktype=\"relative-path\">AllowCustomPaging</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateAutoGeneratedColumn_System_Web_UI_WebControls_AutoGeneratedFieldProperties_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateAutoGeneratedColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAutoGeneratedColumn(AutoGeneratedFieldProperties)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an automatically generated column field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fieldProperties</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfieldproperties\" data-linktype=\"relative-path\">AutoGeneratedFieldProperties</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfieldproperties\" data-linktype=\"relative-path\">AutoGeneratedFieldProperties</a> that represents the properties of the automatically generated column field to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> that represents the automatically generated column field specified by the <code>fieldProperties</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateAutoGeneratedColumn method is used to create an automatically generated column field when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>true</code>. The properties of the automatically generated column field are specified through the <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfieldproperties\" data-linktype=\"relative-path\">AutoGeneratedFieldProperties</a> object contained in the <code>fieldProperties</code> parameter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateChildControls_System_Collections_IEnumerable_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateChildControls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateChildControls(IEnumerable,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the control hierarchy used to render the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control using the specified data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> that contains the data source for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataBinding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the child controls are bound to data; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>dataSource</code> returns a null <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a>.  </p>\n<p> -or-  </p>\n<p> <code>dataSource</code> does not implement the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface and cannot return a <span class=\"xref\">stem.Web.UI.DataSourceSelectArguments.TotalRowCount*</span>.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Web.UI.WebControls.GridView.AllowPaging*</span> is <code>true</code> and <code>dataSource</code> does not implement the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface and cannot perform data source paging.  </p>\n<p> -or-  </p>\n<p> <code>dataSource</code> does not implement the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface and <code>dataBinding</code> is set to <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateChildControls method is used to create the control hierarchy of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateChildTable\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateChildTable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateChildTable()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new child table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.Table CreateChildTable ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.table\" data-linktype=\"relative-path\">Table</a></div>\r\n                  </div>\r\n                  <p>Always returns a new <a class=\"xref\" href=\"system.web.ui.webcontrols.table\" data-linktype=\"relative-path\">Table</a> that represents the child table.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateChildTable method is a helper method used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create a child table.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateColumns_System_Web_UI_WebControls_PagedDataSource_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateColumns(PagedDataSource,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the set of column fields used to build the control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a> that represents the data source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>useDataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to use the data source specified by the <code>dataSource</code> parameter; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the fields used to build the control hierarchy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>true</code>, a bound column field is automatically created for each field in the data source. Each bound column field is then displayed as a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control in the order that the fields appear in the data source. The CreateColumns method is used to create the automatically generated column fields.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateControlStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateControlStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateControlStyle()</div>        \r\n          </div>\r\n    \r\n            <p>Creates the default style for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.WebControls.Style CreateControlStyle ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that represents the style for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateControlStyle method is used to create the default style for the control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateDataSourceSelectArguments\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateDataSourceSelectArguments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateDataSourceSelectArguments()</div>        \r\n          </div>\r\n    \r\n            <p>Creates the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that contains the arguments that get passed to the data source for processing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> that contains the arguments that get passed to the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateDataSourceSelectArguments method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that contains the arguments passed to the data source. In this implementation, the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object contains the arguments for paging operations.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_CreateRow_System_Int32_System_Int32_System_Web_UI_WebControls_DataControlRowType_System_Web_UI_WebControls_DataControlRowState_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_CreateRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRow(Int32,Int32,DataControlRowType,DataControlRowState)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to create.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSourceIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the data source item to bind to the row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowtype\" data-linktype=\"relative-path\">DataControlRowType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowtype\" data-linktype=\"relative-path\">DataControlRowType</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> created using the specified parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateRow method is used to create a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. A data-bound <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control automatically generates the rows needed to display the target data.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_DataBind\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_DataBind_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBind()</div>        \r\n          </div>\r\n    \r\n            <p>Binds the data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This method cannot be inherited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed void DataBind ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataBind method to bind data from a data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This method resolves all data-binding expressions in the active template of the control.  </p>\n<p> The DataBind method is called automatically if the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID_\" data-linktype=\"relative-path\">DataSourceID</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control refers to a valid data source control.  </p>\n<p> Instead of manually calling the DataBind method, you can use model binding with your DataBind control by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_SelectMethod_\" data-linktype=\"relative-path\">SelectMethod</a> property to the name of a method that returns data for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a>. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> is then automatically populated with the data that is returned from the select method. Model binding can simplify your code for working with data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the DataBind method to bind a data source to a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewDataBind#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data.SqlClient&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void Page_Load(Object sender, EventArgs e)\n  {\n    \n    // This example uses Microsoft SQL Server and connects\n    // to the Northwind sample database. The data source needs\n    // to be bound to the GridView control only when the \n    // page is first loaded. Thereafter, the values are\n    // stored in view state.                      \n    if(!IsPostBack)\n    {\n        \n      // Declare the query string.\n      String queryString = \n        &quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;;\n        \n      // Run the query and bind the resulting DataSet\n      // to the GridView control.\n      DataSet ds = GetData(queryString);\n      if (ds.Tables.Count &gt; 0)\n      {\n        AuthorsGridView.DataSource = ds;\n        AuthorsGridView.DataBind();\n      }\n      else\n      {\n        Message.Text = &quot;Unable to connect to the database.&quot;;\n      }\n            \n    }     \n    \n  }\n    \n  DataSet GetData(String queryString)\n  {\n\n    // Retrieve the connection string stored in the Web.config file.\n    String connectionString = ConfigurationManager.ConnectionStrings[&quot;NorthWindConnectionString&quot;].ConnectionString;      \n \n    DataSet ds = new DataSet();\n        \n    try\n    {\n      // Connect to the database and run the query.\n      SqlConnection connection = new SqlConnection(connectionString);        \n      SqlDataAdapter adapter = new SqlDataAdapter(queryString, connection);\n        \n      // Fill the DataSet.\n      adapter.Fill(ds);\n            \n    }\n    catch(Exception ex)\n    {\n        \n      // The connection failed. Display an error message.\n      Message.Text = &quot;Unable to connect to the database.&quot;;\n        \n    }\n        \n    return ds;\n        \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DataBind Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DataBind Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n               \n      &lt;br/&gt;    \n\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        autogeneratecolumns=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n                        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewDataBind#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data.SqlClient&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n    \n    &#39; This example uses Microsoft SQL Server and connects\n    &#39; to the Northwind sample database. The data source needs\n    &#39; to be bound to the GridView control only when the \n    &#39; page is first loaded. Thereafter, the values are\n    &#39; stored in view state.                      \n    If Not IsPostBack Then\n        \n      &#39; Declare the query string.\n      Dim queryString As String = _\n        &quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        \n      &#39; Run the query and bind the resulting DataSet\n      &#39; to the GridView control.\n      Dim ds As DataSet = GetData(queryString)\n      If (ds.Tables.Count &gt; 0) Then\n      \n        AuthorsGridView.DataSource = ds\n        AuthorsGridView.DataBind()\n      \n      Else\n      \n        Message.Text = &quot;Unable to connect to the database.&quot;\n        \n      End If\n            \n    End If\n    \n  End Sub\n    \n  Function GetData(ByVal queryString As String) As DataSet\n    \n    &#39; Retrieve the connection string stored in the Web.config file.\n    Dim connectionString As String = ConfigurationManager.ConnectionStrings(&quot;NorthWindConnectionString&quot;).ConnectionString\n \n    Dim ds As New DataSet()\n        \n    Try\n\n      &#39; Connect to the database and run the query.\n      Dim connection As New SqlConnection(connectionString)\n      Dim adapter As New SqlDataAdapter(queryString, Connection)\n        \n      &#39; Fill the DataSet.\n      Adapter.Fill(ds)\n            \n    \n    Catch ex As Exception\n        \n      &#39; The connection failed. Display an error message.\n      Message.Text = &quot;Unable to connect to the database.&quot;\n        \n    End Try\n        \n    Return ds\n        \n  End Function\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DataBind Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DataBind Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n               \n      &lt;br/&gt;    \n\n      &lt;asp:gridview id=&quot;AuthorsGridView&quot; \n        autogeneratecolumns=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n                        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_DeleteRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_DeleteRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the record at the specified index from the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void DeleteRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is not bound to a data source control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The data source control that the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to does not support delete operations, or there is no delete command defined for the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DeleteRow method to programmatically delete the record at the specified index from the data source. This method is commonly used when you need to delete a record from outside of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, such as from a different control on the page. Calling this method also raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> events.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the DeleteRow method to programmatically delete a record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewDeleteRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void DeleteRowButton_Click(Object sender, EventArgs e)\n  {\n    // Programmatically delete the selected record.\n    CustomersGridView.DeleteRow(CustomersGridView.SelectedIndex);\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DeleteRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DeleteRow Example&lt;/h3&gt;\n\n      &lt;asp:button id=&quot;DeleteRowButton&quot;\n        text=&quot;Delete Record&quot;\n        onclick=&quot;DeleteRowButton_Click&quot; \n        runat=&quot;server&quot;/&gt;\n\n      &lt;hr/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        allowpaging=&quot;true&quot;\n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        selectedindex=&quot;0&quot;   \n        runat=&quot;server&quot;&gt;\n        \n        &lt;selectedrowstyle BackColor=&quot;lightblue&quot;/&gt;\n        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewDeleteRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub DeleteRowButton_Click(sender As Object, e As EventArgs)\n \n    &#39; Programmatically delete the selected record.\n    CustomersGridView.DeleteRow(CustomersGridView.SelectedIndex)\n    \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView DeleteRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView DeleteRow Example&lt;/h3&gt;\n\n      &lt;asp:button id=&quot;DeleteRowButton&quot;\n        text=&quot;Delete Record&quot;\n        onclick=&quot;DeleteRowButton_Click&quot; \n        runat=&quot;server&quot;/&gt;\n\n      &lt;hr/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        allowpaging=&quot;true&quot;\n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateselectbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        selectedindex=&quot;0&quot;   \n        runat=&quot;server&quot;&gt;\n        \n        &lt;selectedrowstyle BackColor=&quot;lightblue&quot;/&gt;\n        \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_ExtractRowValues_System_Collections_Specialized_IOrderedDictionary_System_Web_UI_WebControls_GridViewRow_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_ExtractRowValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExtractRowValues(IOrderedDictionary,GridViewRow,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the values of each field declared within the specified row and stores them in the specified <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fieldValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> used to store the field values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>row</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> from which to retrieve the field values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeReadOnlyFields</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include read-only fields; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includePrimaryKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include the primary key field or fields; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExtractRowValues method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to retrieve the values of each field declared within the row specified by the <code>row</code> parameter. You can specify whether the extracted values include read-only fields and key fields by using the <code>includeReadOnlyFields</code> and <code>includePrimaryKey</code> parameters, respectively.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_GetCallbackResult\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_GetCallbackResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCallbackResult()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetCallbackResult ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The results of the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control implements the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler\" data-linktype=\"relative-path\">ICallbackEventHandler</a> interface and uses the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> to asynchronously retrieve data and the GetCallbackResult method to return the retrieved data to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_GetCallbackScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCallbackScript(IButtonControl,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the callback script for a button that performs a sorting operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The button control for which to create the callback script.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to pass to the callback script.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The callback script for a button that performs a sorting operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetCallbackScript method is a helper method used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create the callback script for a button that performs a sorting operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_InitializePager_System_Web_UI_WebControls_GridViewRow_System_Int32_System_Web_UI_WebControls_PagedDataSource_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_InitializePager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializePager(GridViewRow,Int32,PagedDataSource)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the pager row displayed when the paging feature is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>row</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the pager row to initialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnSpan</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of columns the pager row should span.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pagedDataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a> that represents the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializePager method is used to initialize the pager row displayed when the paging feature is enabled.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_InitializeRow_System_Web_UI_WebControls_GridViewRow_System_Web_UI_WebControls_DataControlField___\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_InitializeRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeRow(GridViewRow,DataControlField[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>row</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> that represents the row to initialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fields</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> objects that represent the column fields in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializeRow method is used to initialize a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_IsBindableType_System_Type_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_IsBindableType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBindableType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified data type can be bound to a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsBindableType (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the data type to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified data type can be bound to a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsBindableType method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. The following data types can be bound to a column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">System.Boolean</a>  \n</li>\n<li><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">System.Byte</a>  \n</li>\n<li><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">System.Char</a>  \n</li>\n<li><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">System.DateTime</a>  \n</li>\n<li><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">System.Decimal</a>  \n</li>\n<li><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n</li>\n<li><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">System.Guid</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">System.Int16</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">System.Int64</a>  \n</li>\n<li><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">System.SByte</a>  \n</li>\n<li><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">System.Single</a>  \n</li>\n<li><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">System.UInt16</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">System.UInt32</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">System.UInt64</a></li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_LoadControlState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_LoadControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadControlState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void LoadControlState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved control state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to load the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved view state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnBubbleEvent_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnBubbleEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBubbleEvent(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the event for the Web server control is passed up the page&#39;s user interface (UI) server control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool OnBubbleEvent (object source, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event has been canceled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnBubbleEvent method implements the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnBubbleEvent_\" data-linktype=\"relative-path\">OnBubbleEvent</a> method to pass events from child controls to the page hierarchy.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnDataPropertyChanged\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnDataPropertyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataPropertyChanged()</div>        \r\n          </div>\r\n    \r\n            <p>Rebinds the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to its data after the <span class=\"xref\">stem.Web.UI.WebControls.DataBoundControl.DataMember*</span>, <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataSource*</span>, or <span class=\"xref\">stem.Web.UI.WebControls.DataBoundControl.DataSourceID*</span> property is changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnDataPropertyChanged ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnDataPropertyChanged method is a helper method used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to rebind the control to its data after the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataMember_\" data-linktype=\"relative-path\">DataMember</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID_\" data-linktype=\"relative-path\">DataSourceID</a> property is changed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnDataSourceViewChanged_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnDataSourceViewChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataSourceViewChanged(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_DataSourceViewChanged\" data-linktype=\"relative-path\">DataSourceViewChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnDataSourceViewChanged (object sender, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnDataSourceViewChanged method notifies a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that the underlying data source has changed and that the control should rebind. Typically, the OnDataSourceViewChanged method is called when a property of the data source view has changed.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnInit_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInit(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnInit (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control&#39;s life cycle, the control&#39;s View state has yet to be populated. Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnPageIndexChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnPageIndexChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPageIndexChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPageIndexChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event is raised when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPageIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnPageIndexChanging_System_Web_UI_WebControls_GridViewPageEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnPageIndexChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPageIndexChanging(GridViewPageEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewpageeventargs\" data-linktype=\"relative-path\">GridViewPageEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewpageeventargs\" data-linktype=\"relative-path\">GridViewPageEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event is raised when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPageIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnPagePreLoad_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnPagePreLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPagePreLoad(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the initialized state of the data-bound control before the control is loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPagePreLoad (object sender, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnPreRender_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnPreRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPreRender(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPreRender (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method notifies the server control to perform any necessary pre-rendering steps prior to saving view state and rendering content.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowCancelingEdit_System_Web_UI_WebControls_GridViewCancelEditEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowCancelingEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowCancelingEdit(GridViewCancelEditEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcancelediteventargs\" data-linktype=\"relative-path\">GridViewCancelEditEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcancelediteventargs\" data-linktype=\"relative-path\">GridViewCancelEditEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowCancelingEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowCommand_System_Web_UI_WebControls_GridViewCommandEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowCommand(GridViewCommandEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcommandeventargs\" data-linktype=\"relative-path\">GridViewCommandEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcommandeventargs\" data-linktype=\"relative-path\">GridViewCommandEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> event is raised when a button is clicked in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowCommand method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>A Visual Studio Web site project with source code is available to accompany this topic: <a href=\"http://go.microsoft.com/fwlink/?LinkId=191882\" data-linktype=\"external\">Download</a>.  </p>\n<p> The following example demonstrates how provide an event-handling method for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCommand\" data-linktype=\"relative-path\">RowCommand</a> event. When the Add button is clicked for a given row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, the name of the selected customer is added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.listbox\" data-linktype=\"relative-path\">ListBox</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowCommmand#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void ContactsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // If multiple buttons are used in a GridView control, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Add&quot;)\n    {\n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);\n\n      // Retrieve the row that contains the button clicked \n      // by the user from the Rows collection.\n      GridViewRow row = ContactsGridView.Rows[index];\n\n      // Create a new ListItem object for the contact in the row.     \n      ListItem item = new ListItem();\n      item.Text = Server.HtmlDecode(row.Cells[2].Text) + &quot; &quot; +\n        Server.HtmlDecode(row.Cells[3].Text);\n\n      // If the contact is not already in the ListBox, add the ListItem \n      // object to the Items collection of the ListBox control. \n      if (!ContactsListBox.Items.Contains(item))\n      {\n        ContactsListBox.Items.Add(item);\n      }\n    }\n  }    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;\n        &lt;tr&gt;\n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:gridview id=&quot;ContactsGridView&quot; \n              datasourceid=&quot;ContactsSource&quot;\n              allowpaging=&quot;true&quot; \n              autogeneratecolumns=&quot;false&quot;\n              onrowcommand=&quot;ContactsGridView_RowCommand&quot;\n              runat=&quot;server&quot;&gt;\n\n              &lt;columns&gt;\n                &lt;asp:buttonfield buttontype=&quot;Link&quot; \n                  commandname=&quot;Add&quot; \n                  text=&quot;Add&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;ContactID&quot; \n                  headertext=&quot;Contact ID&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;FirstName&quot; \n                  headertext=&quot;First Name&quot;/&gt; \n                &lt;asp:boundfield datafield=&quot;LastName&quot; \n                  headertext=&quot;Last Name&quot;/&gt;\n              &lt;/columns&gt;\n\n            &lt;/asp:gridview&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Contacts: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ContactsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt;\n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ContactsSource&quot;\n        selectcommand=&quot;Select [ContactID], [FirstName], [LastName] From Person.Contact&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowCommmand#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub ContactsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n\n    &#39; If multiple buttons are used in a GridView control, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Add&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n            \n      &#39; Retrieve the row that contains the button clicked \n      &#39; by the user from the Rows collection.\n      Dim row As GridViewRow = ContactsGridView.Rows(index)\n            \n      &#39; Create a new ListItem object for the contact in the row.     \n      Dim item As New ListItem()\n      item.Text = Server.HtmlDecode(row.Cells(2).Text) &amp; &quot; &quot; &amp; _\n        Server.HtmlDecode(row.Cells(3).Text)\n            \n      &#39; If the contact is not already in the ListBox, add the ListItem \n      &#39; object to the Items collection of the ListBox control. \n      If Not ContactsListBox.Items.Contains(item) Then\n      \n        ContactsListBox.Items.Add(item)\n        \n      End If\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;\n        &lt;tr&gt;\n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:gridview id=&quot;ContactsGridView&quot; \n              datasourceid=&quot;ContactsSource&quot;\n              allowpaging=&quot;true&quot; \n              autogeneratecolumns=&quot;false&quot;\n              onrowcommand=&quot;ContactsGridView_RowCommand&quot;\n              runat=&quot;server&quot;&gt;\n\n              &lt;columns&gt;\n                &lt;asp:buttonfield buttontype=&quot;Link&quot; \n                  commandname=&quot;Add&quot; \n                  text=&quot;Add&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;ContactID&quot; \n                  headertext=&quot;Contact ID&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;FirstName&quot; \n                  headertext=&quot;First Name&quot;/&gt; \n                &lt;asp:boundfield datafield=&quot;LastName&quot; \n                  headertext=&quot;Last Name&quot;/&gt;\n              &lt;/columns&gt;\n\n            &lt;/asp:gridview&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Contacts: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ContactsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt;\n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ContactsSource&quot;\n        selectcommand=&quot;Select [ContactID], [FirstName], [LastName] From Person.Contact&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowCreated_System_Web_UI_WebControls_GridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowCreated(GridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered, a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object must be created for each row in the control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event is raised when each row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how provide an event-handling method for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCreated\" data-linktype=\"relative-path\">RowCreated</a> event. When a row is being created, its index is stored in the <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton#System_Web_UI_WebControls_LinkButton_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control that is contained in the new row. This enables you to determine the index of the row when the user clicks the command button.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowCreated#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub ProductsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n\n    &#39; If multiple buttons are used in a GridView control, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Add&quot; Then\n\n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n\n      &#39; Retrieve the row that contains the button clicked \n      &#39; by the user from the Rows collection.\n      Dim row As GridViewRow = ProductsGridView.Rows(index)\n\n      &#39; Create a new ListItem object for the product in the row.     \n      Dim item As New ListItem()\n      item.Text = Server.HtmlDecode(row.Cells(1).Text)\n\n      &#39; If the product is not already in the ListBox, add the ListItem \n      &#39; object to the Items collection of the ListBox control. \n      If Not ProductsListBox.Items.Contains(item) Then\n\n        ProductsListBox.Items.Add(item)\n\n      End If\n\n    End If\n\n  End Sub\n\n  Sub ProductsGridView_RowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n\n    &#39; The GridViewCommandEventArgs class does not contain a \n    &#39; property that indicates which row&#39;s command button was\n    &#39; clicked. To identify which row&#39;s button was clicked, use \n    &#39; the button&#39;s CommandArgument property by setting it to the \n    &#39; row&#39;s index.\n    If e.Row.RowType = DataControlRowType.DataRow Then\n\n      &#39; Retrieve the LinkButton control from the first column.\n      Dim addButton As LinkButton = CType(e.Row.FindControl(&quot;AddButton&quot;), LinkButton)\n\n      &#39; Set the LinkButton&#39;s CommandArgument property with the\n      &#39; row&#39;s index.\n      addButton.CommandArgument = e.Row.RowIndex.ToString()\n\n    End If\n\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html&gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCreated Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;         \n        &lt;tr&gt;                \n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:GridView ID=&quot;ProductsGridView&quot; \n              DataSourceID=&quot;ProductsDataSource&quot;\n              AllowPaging=&quot;true&quot; \n              AutoGenerateColumns=&quot;false&quot;\n              OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n              OnRowCreated=&quot;ProductsGridView_RowCreated&quot;  \n              runat=&quot;server&quot;&gt;\n              &lt;Columns&gt;\n                &lt;asp:TemplateField&gt;\n                  &lt;ItemTemplate&gt;\n                    &lt;asp:LinkButton runat=&quot;server&quot;\n                      ID=&quot;AddButton&quot;\n                      CommandName=&quot;Add&quot;\n                      Text=&quot;Add&quot; /&gt;\n                  &lt;/ItemTemplate&gt;\n                &lt;/asp:TemplateField&gt;\n                &lt;asp:BoundField DataField=&quot;Name&quot; \n                  HeaderText=&quot;Product Name&quot;/&gt; \n                &lt;asp:BoundField DataField=&quot;ProductNumber&quot; \n                  HeaderText=&quot;Product Number&quot;/&gt;\n              &lt;/Columns&gt;\n\n            &lt;/asp:GridView&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Products: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ProductsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt; \n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ProductsDataSource&quot;\n        selectcommand=&quot;Select [Name], [ProductNumber] From Production.Product&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowCreated#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void ProductsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // If multiple buttons are used in a GridView control, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Add&quot;)\n    {\n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);\n\n      // Retrieve the row that contains the button clicked \n      // by the user from the Rows collection.\n      GridViewRow row = ProductsGridView.Rows[index];\n\n      // Create a new ListItem object for the product in the row.     \n      ListItem item = new ListItem();\n      item.Text = Server.HtmlDecode(row.Cells[1].Text);\n\n      // If the product is not already in the ListBox, add the ListItem \n      // object to the Items collection of the ListBox control. \n      if (!ProductsListBox.Items.Contains(item))\n      {\n        ProductsListBox.Items.Add(item);\n      }\n    }\n  }\n\n  void ProductsGridView_RowCreated(Object sender, GridViewRowEventArgs e)\n  {\n\n    // The GridViewCommandEventArgs class does not contain a \n    // property that indicates which row&#39;s command button was\n    // clicked. To identify which row&#39;s button was clicked, use \n    // the button&#39;s CommandArgument property by setting it to the \n    // row&#39;s index.\n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      // Retrieve the LinkButton control from the first column.\n      LinkButton addButton = (LinkButton)e.Row.FindControl(&quot;AddButton&quot;);\n\n      // Set the LinkButton&#39;s CommandArgument property with the\n      // row&#39;s index.\n      addButton.CommandArgument = e.Row.RowIndex.ToString();\n    }\n\n  }\n\n&lt;/script&gt;\n\n&lt;html&gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCreated Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;         \n        &lt;tr&gt;                \n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:GridView ID=&quot;ProductsGridView&quot; \n              DataSourceID=&quot;ProductsDataSource&quot;\n              AllowPaging=&quot;true&quot; \n              AutoGenerateColumns=&quot;false&quot;\n              OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n              OnRowCreated=&quot;ProductsGridView_RowCreated&quot;  \n              runat=&quot;server&quot;&gt;\n              &lt;Columns&gt;\n                &lt;asp:TemplateField&gt;\n                  &lt;ItemTemplate&gt;\n                    &lt;asp:LinkButton runat=&quot;server&quot;\n                      ID=&quot;AddButton&quot;\n                      CommandName=&quot;Add&quot;\n                      Text=&quot;Add&quot; /&gt;\n                  &lt;/ItemTemplate&gt;\n                &lt;/asp:TemplateField&gt;\n                &lt;asp:BoundField DataField=&quot;Name&quot; \n                  HeaderText=&quot;Product Name&quot;/&gt; \n                &lt;asp:BoundField DataField=&quot;ProductNumber&quot; \n                  HeaderText=&quot;Product Number&quot;/&gt;\n              &lt;/Columns&gt;\n\n            &lt;/asp:GridView&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Products: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ProductsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt; \n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ProductsDataSource&quot;\n        selectcommand=&quot;Select [Name], [ProductNumber] From Production.Product&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowDataBound_System_Web_UI_WebControls_GridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowDataBound_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDataBound(GridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered, each row in the control must be bound to a record in the data source. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDataBound\" data-linktype=\"relative-path\">RowDataBound</a> event is raised when a data row (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object) is bound to data in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDataBound method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  </p>\n<p> A Visual Studio Web site project with source code is available to accompany this topic: <a href=\"http://go.microsoft.com/fwlink/?LinkId=191882\" data-linktype=\"external\">Download</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowDeleted_System_Web_UI_WebControls_GridViewDeletedEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowDeleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDeleted(GridViewDeletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeletedeventargs\" data-linktype=\"relative-path\">GridViewDeletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeletedeventargs\" data-linktype=\"relative-path\">GridViewDeletedEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> event is raised when a row&#39;s Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowDeleting_System_Web_UI_WebControls_GridViewDeleteEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowDeleting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDeleting(GridViewDeleteEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> event is raised when a row&#39;s Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowEditing_System_Web_UI_WebControls_GridViewEditEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowEditing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowEditing(GridViewEditEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event is raised when a row&#39;s Edit button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowEditing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowUpdated_System_Web_UI_WebControls_GridViewUpdatedEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowUpdated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowUpdated(GridViewUpdatedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdatedeventargs\" data-linktype=\"relative-path\">GridViewUpdatedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdatedeventargs\" data-linktype=\"relative-path\">GridViewUpdatedEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> event is raised when a row&#39;s Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnRowUpdating_System_Web_UI_WebControls_GridViewUpdateEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnRowUpdating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowUpdating(GridViewUpdateEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event is raised when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnSelectedIndexChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnSelectedIndexChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectedIndexChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectedIndexChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event is raised when a row&#39;s Select button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSelectedIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how create an event handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event. In this example, the selected row is persisted in the view state. So even after a sorting or a paging operation, only that row will be selected.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n    \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub ContactsGridView_SelectedIndexChanged()\n    If ContactsGridView.SelectedIndex &gt;= 0 Then\n      ViewState(&quot;SelectedKey&quot;) = ContactsGridView.SelectedValue\n    Else\n      ViewState(&quot;SelectedKey&quot;) = Nothing\n    End If\n  End Sub\n\n  Protected Sub ContactsGridView_DataBound()\n    For i As Integer = 0 To ContactsGridView.Rows.Count - 1\n      &#39; Ignore values that cannot be cast as integer.\n      Try\n        If Convert.ToInt32(ContactsGridView.DataKeys(i).Value) = Convert.ToInt32(ViewState(&quot;SelectedKey&quot;)) Then _\n          ContactsGridView.SelectedIndex = i\n      Catch\n      End Try\n    Next\n  End Sub\n\n  Protected Sub ContactsGridView_Sorting()\n    ContactsGridView.SelectedIndex = -1\n  End Sub\n\n  Protected Sub ContactsGridView_PageIndexChanging()\n    ContactsGridView.SelectedIndex = -1\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView OnSelectedIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView OnSelectedIndexChanged Example&lt;/h3&gt;\n      \n      &lt;asp:GridView ID=&quot;ContactsGridView&quot;\n        DataSourceID=&quot;ContactsDataSource&quot; \n        DataKeyNames=&quot;ContactID&quot;        \n        AutoGenerateSelectButton=&quot;True&quot;\n        OnSelectedIndexChanged=&quot;ContactsGridView_SelectedIndexChanged&quot;        \n        AllowPaging=&quot;True&quot; AllowSorting=&quot;True&quot; \n        OnDataBound=&quot;ContactsGridView_DataBound&quot; \n        OnSorting=&quot;ContactsGridView_Sorting&quot; \n        OnPageIndexChanging=&quot;ContactsGridView_PageIndexChanging&quot;\n        runat=&quot;server&quot;&gt;\n        &lt;SelectedRowStyle BackColor=&quot;Aqua&quot; /&gt;\n      &lt;/asp:GridView&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects      --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET    --&gt;\n      &lt;!-- expression to retrieve the connection string value       --&gt;\n      &lt;!-- from the Web.config file.                                --&gt;\n      &lt;asp:SqlDataSource ID=&quot;ContactsDataSource&quot; runat=&quot;server&quot; \n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString %&gt;&quot;\n        SelectCommand=&quot;SELECT [ContactID], [FirstName], [LastName] FROM Person.Contact&quot;&gt;\n      &lt;/asp:SqlDataSource&gt;\n\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.UI.WebControls.GridView.OnSelectedIndexChanged#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n    \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void ContactsGridView_SelectedIndexChanged(object sender, EventArgs e)\n  {\n    if (ContactsGridView.SelectedIndex &gt;= 0)\n      ViewState[&quot;SelectedKey&quot;] = ContactsGridView.SelectedValue;\n    else\n      ViewState[&quot;SelectedKey&quot;] = null;\n  }\n\n  protected void ContactsGridView_DataBound(object sender, EventArgs e)\n  {\n    for (int i = 0; i &lt; ContactsGridView.Rows.Count; i++)\n    {\n      // Ignore values that cannot be cast as integer.\n      try\n      {\n        if ((int)ContactsGridView.DataKeys[i].Value == (int)ViewState[&quot;SelectedKey&quot;])\n          ContactsGridView.SelectedIndex = i;\n      }\n      catch { }\n    }\n  }\n\n  protected void ContactsGridView_Sorting(object sender, GridViewSortEventArgs e)\n  {\n    ContactsGridView.SelectedIndex = -1;\n  }\n\n  protected void ContactsGridView_PageIndexChanging(object sender, GridViewPageEventArgs e)\n  {\n    ContactsGridView.SelectedIndex = -1;\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView OnSelectedIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView OnSelectedIndexChanged Example&lt;/h3&gt;\n      \n      &lt;asp:GridView ID=&quot;ContactsGridView&quot;\n        DataSourceID=&quot;ContactsDataSource&quot; \n        DataKeyNames=&quot;ContactID&quot;        \n        AutoGenerateSelectButton=&quot;True&quot;\n        OnSelectedIndexChanged=&quot;ContactsGridView_SelectedIndexChanged&quot;        \n        AllowPaging=&quot;True&quot; AllowSorting=&quot;True&quot; \n        OnDataBound=&quot;ContactsGridView_DataBound&quot; \n        OnSorting=&quot;ContactsGridView_Sorting&quot; \n        OnPageIndexChanging=&quot;ContactsGridView_PageIndexChanging&quot;\n        runat=&quot;server&quot;&gt;\n        &lt;SelectedRowStyle BackColor=&quot;Aqua&quot; /&gt;\n      &lt;/asp:GridView&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects      --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET    --&gt;\n      &lt;!-- expression to retrieve the connection string value       --&gt;\n      &lt;!-- from the Web.config file.                                --&gt;\n      &lt;asp:SqlDataSource ID=&quot;ContactsDataSource&quot; runat=&quot;server&quot; \n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString %&gt;&quot;\n        SelectCommand=&quot;SELECT [ContactID], [FirstName], [LastName] FROM Person.Contact&quot;&gt;\n      &lt;/asp:SqlDataSource&gt;\n\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnSelectedIndexChanging_System_Web_UI_WebControls_GridViewSelectEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnSelectedIndexChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectedIndexChanging(GridViewSelectEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewselecteventargs\" data-linktype=\"relative-path\">GridViewSelectEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewselecteventargs\" data-linktype=\"relative-path\">GridViewSelectEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> event is raised when a row&#39;s Select button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSelectedIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnSorted_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnSorted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSorted(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSorted (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event is raised when the hyperlink to sort a column is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSorted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_OnSorting_System_Web_UI_WebControls_GridViewSortEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_OnSorting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSorting(GridViewSortEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewsorteventargs\" data-linktype=\"relative-path\">GridViewSortEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewsorteventargs\" data-linktype=\"relative-path\">GridViewSortEventArgs</a> that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> event is raised when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSorting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PerformDataBinding_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PerformDataBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformDataBinding(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Binds the specified data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void PerformDataBinding (System.Collections.IEnumerable data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> that contains the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PerformDataBinding method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to bind the specified data source to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PrepareControlHierarchy\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_PrepareControlHierarchy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareControlHierarchy()</div>        \r\n          </div>\r\n    \r\n            <p>Establishes the control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PrepareControlHierarchy ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to establish the control hierarchy for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RaiseCallbackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_RaiseCallbackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaiseCallbackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RaiseCallbackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument to pass to the event handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RaiseCallbackEvent method is a helper method used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create the arguments for the callback handler in the <a class=\"xref\" href=\"system.web.ui.clientscriptmanager#System_Web_UI_ClientScriptManager_GetCallbackEventReference_\" data-linktype=\"relative-path\">GetCallbackEventReference</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RaisePostBackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_RaisePostBackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaisePostBackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when it posts back to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RaisePostBackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event argument from which to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> for the event or events that are raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page calls the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> method when a postback event occurs that raises the appropriate events for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> object for the events that are raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Render_System_Web_UI_HtmlTextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_Render_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Render(HtmlTextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Renders the Web server control content to the client&#39;s browser using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Render (System.Web.UI.HtmlTextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> used to render the server control content on the client&#39;s browser.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Render method is used to render the server control content to the client&#39;s browser using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">System.Web.UI.HtmlTextWriter</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SaveControlState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SaveControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveControlState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override object SaveControlState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the server control&#39;s current view state. If there is no view state associated with the control, this method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to save the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that need to be persisted, even when the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override object SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved view state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SelectRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Selects the row to edit in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to edit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SetEditRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SetEditRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetEditRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Puts a row in edit mode in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control by using the specified row index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetEditRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to edit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SetPageIndex_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_SetPageIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetPageIndex(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the page index of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control by using the row index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetPageIndex (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row on the page to edit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Sort_System_String_System_Web_UI_WebControls_SortDirection_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_Sort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sort(String,SortDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Sorts the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control based on the specified sort expression and direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sortExpression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The sort expression with which to sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sortDirection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.sortdirection\" data-linktype=\"relative-path\">SortDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.sortdirection\" data-linktype=\"relative-path\">SortDirection</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source control, but the <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> that is associated with the data source is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Sort method to programmatically sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control using the specified sort expression and direction. The sort expression specifies the column or columns with which to sort. To sort multiple columns, create a sort expression that contains a comma-separated list of field names. The sort direction indicates whether sorting is performed in ascending or descending order. This method is commonly used when you need to sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control from outside of the control, such as from a different control on the page. This method is also commonly used to programmatically set a default sort order for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when it is first rendered. Calling this method also raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> events.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Sort method to programmatically sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control by multiple columns.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSort#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void SortButton_Click(Object sender, EventArgs e)\n  {\n\n    String expression = &quot;&quot;;\n    SortDirection direction;\n\n    // Create the sort expression from the values selected \n    // by the user from the DropDownList controls. Multiple\n    // columns can be sorted by creating a sort expression\n    // that contains a comma-separated list of field names.\n    expression = SortList1.SelectedValue + &quot;,&quot; + SortList2.SelectedValue;\n    \n    //  Determine the sort direction. The sort direction\n    // applies only to the second column sorted.\n    switch (DirectionList.SelectedValue)\n    {\n      case &quot;Ascending&quot;:\n        direction = SortDirection.Ascending;\n        break;\n      case &quot;Descending&quot;:\n        direction = SortDirection.Descending;\n        break;\n      default:\n        direction = SortDirection.Ascending;\n        break;\n    }\n    \n    // Use the Sort method to programmatically sort the GridView\n    // control using the sort expression and direction.\n    CustomersGridView.Sort(expression, direction);\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sort Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sort Example&lt;/h3&gt;\n\n      &lt;table&gt;\n        &lt;tr&gt;\n          &lt;td&gt;\n             Sort by:\n            &lt;asp:dropdownlist ID=&quot;SortList1&quot;\n              runat=&quot;server&quot;&gt;\n              &lt;asp:listitem Selected=&quot;true&quot;&gt;CustomerID&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;CompanyName&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Address&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;City&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;PostalCode&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Country&lt;/asp:listitem&gt;\n            &lt;/asp:dropdownlist&gt;\n          &lt;/td&gt;\n          &lt;td colspan=&quot;2&quot;&gt;\n            &amp;nbsp;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;\n            Then by:\n              &lt;asp:dropdownlist ID=&quot;SortList2&quot;\n                runat=&quot;server&quot;&gt;\n                &lt;asp:listitem Selected=&quot;true&quot;&gt;CustomerID&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;CompanyName&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;Address&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;City&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;PostalCode&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;Country&lt;/asp:listitem&gt;\n              &lt;/asp:dropdownlist&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n             Sort order:      \n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;asp:radiobuttonlist id=&quot;DirectionList&quot;\n              runat=&quot;server&quot;&gt;\n              &lt;asp:listitem selected=&quot;true&quot;&gt;Ascending&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Descending&lt;/asp:listitem&gt;\n            &lt;/asp:radiobuttonlist&gt;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;asp:button id=&quot;SortButton&quot;\n        text=&quot;Sort&quot;\n        onclick=&quot;SortButton_Click&quot; \n        runat=&quot;Server&quot;/&gt;  \n\n      &lt;br/&gt;\n      &lt;hr/&gt;\n      &lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSort#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub SortButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n    \n    Dim expression As String = &quot;&quot;\n    Dim direction As SortDirection\n\n    &#39; Create the sort expression from the values selected \n    &#39; by the user from the DropDownList controls. Multiple\n    &#39; columns can be sorted by creating a sort expression\n    &#39; that contains a comma-separated list of field names.\n    expression = SortList1.SelectedValue &amp; &quot;,&quot; &amp; SortList2.SelectedValue\n    \n    &#39; Determine the sort direction. The sort direction\n    &#39; applies only to the second column sorted.\n    Select Case DirectionList.SelectedValue\n    \n      Case &quot;Ascending&quot;\n        direction = SortDirection.Ascending\n      Case &quot;Descending&quot;\n        direction = SortDirection.Descending\n      Case Else\n        direction = SortDirection.Ascending\n\n    End Select\n    \n    &#39; Use the Sort method to programmatically sort the GridView\n    &#39; control using the sort expression and direction.\n    CustomersGridView.Sort(expression, direction)\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sort Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sort Example&lt;/h3&gt;\n\n      &lt;table&gt;\n        &lt;tr&gt;\n          &lt;td&gt;\n             Sort by:\n            &lt;asp:dropdownlist ID=&quot;SortList1&quot;\n              runat=&quot;server&quot;&gt;\n              &lt;asp:listitem Selected=&quot;true&quot;&gt;CustomerID&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;CompanyName&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Address&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;City&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;PostalCode&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Country&lt;/asp:listitem&gt;\n            &lt;/asp:dropdownlist&gt;\n          &lt;/td&gt;\n          &lt;td colspan=&quot;2&quot;&gt;\n            &amp;nbsp;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;\n            Then by:\n              &lt;asp:dropdownlist ID=&quot;SortList2&quot;\n                runat=&quot;server&quot;&gt;\n                &lt;asp:listitem Selected=&quot;true&quot;&gt;CustomerID&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;CompanyName&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;Address&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;City&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;PostalCode&lt;/asp:listitem&gt;\n                &lt;asp:listitem&gt;Country&lt;/asp:listitem&gt;\n              &lt;/asp:dropdownlist&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n             Sort order:      \n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;asp:radiobuttonlist id=&quot;DirectionList&quot;\n              runat=&quot;server&quot;&gt;\n              &lt;asp:listitem selected=&quot;true&quot;&gt;Ascending&lt;/asp:listitem&gt;\n              &lt;asp:listitem&gt;Descending&lt;/asp:listitem&gt;\n            &lt;/asp:radiobuttonlist&gt;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;asp:button id=&quot;SortButton&quot;\n        text=&quot;Sort&quot;\n        onclick=&quot;SortButton_Click&quot; \n        runat=&quot;Server&quot;/&gt;  \n\n      &lt;br/&gt;\n      &lt;hr/&gt;\n      &lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Tracks view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control so they can be stored in the control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object. This object is accessible through the <span class=\"xref\">stem.Web.UI.Control.ViewState*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is overridden to mark the starting point at which to begin tracking and saving changes to the control as part of the control&#39;s view state.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_UpdateRow_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_UpdateRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateRow(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the record at the specified row index using the field values of the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void UpdateRow (int rowIndex, bool causesValidation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to update.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>causesValidation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to perform page validation when this method is called; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a data source control, but the <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> associated with the data source is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the UpdateRow method to programmatically update the record at the specified index in the data source. This method is commonly used when you need to update a record from outside of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, such as from a different control on the page.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control. For more information about two-way binding expressions, see <a href=\"http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742\" data-linktype=\"external\">Binding to Databases</a>.  </p>\n</div>\n<p> To specify whether page validation is performed before the update operation, use the <code>causesValidation</code> parameter. Calling this method also raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> events.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the UpdateRow method to programmatically update a record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewUpdateRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub UpdateRowButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Programmatically update the current record in edit mode.\n    CustomersGridView.UpdateRow(CustomersGridView.EditIndex, True)\n    \n  End Sub\n\n  Sub CustomersGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n  \n    &#39; Enable the UpdateRowButton button only when the GridView control\n    &#39; is in edit mode.\n    Select Case e.CommandName\n    \n      Case &quot;Edit&quot;\n        UpdateRowButton.Enabled = True\n      Case &quot;Cancel&quot;\n        UpdateRowButton.Enabled = False\n      Case &quot;Update&quot;\n        UpdateRowButton.Enabled = False\n      Case Else\n        UpdateRowButton.Enabled = False\n    \n    End Select\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView UpdateRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView UpdateRow Example&lt;/h3&gt;\n      \n      &lt;asp:button id=&quot;UpdateRowButton&quot;\n        text=&quot;Update Record&quot;\n        enabled=&quot;false&quot;\n        onclick=&quot;UpdateRowButton_Click&quot; \n        runat=&quot;server&quot;/&gt;\n        \n      &lt;hr/&gt;\n\n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewUpdateRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void UpdateRowButton_Click(Object sender, EventArgs e)\n  {\n    // Programmatically update the current record in edit mode.\n    CustomersGridView.UpdateRow(CustomersGridView.EditIndex, true);\n  }\n\n  void CustomersGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // Enable the UpdateRowButton button only when the GridView control\n    // is in edit mode.\n    switch (e.CommandName)\n    {\n      case &quot;Edit&quot;:\n        UpdateRowButton.Enabled = true;\n        break;\n      case &quot;Cancel&quot;:\n        UpdateRowButton.Enabled = false;\n        break;\n      case &quot;Update&quot;:\n        UpdateRowButton.Enabled = false;\n        break;\n      default:\n        UpdateRowButton.Enabled = false;\n        break;\n    }\n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView UpdateRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView UpdateRow Example&lt;/h3&gt;\n      \n      &lt;asp:button id=&quot;UpdateRowButton&quot;\n        text=&quot;Update Record&quot;\n        enabled=&quot;false&quot;\n        onclick=&quot;UpdateRowButton_Click&quot; \n        runat=&quot;server&quot;/&gt;\n        \n      &lt;hr/&gt;\n\n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot;\n        allowpaging=&quot;true&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowcommand=&quot;CustomersGridView_RowCommand&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PageIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PageIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PageIndexChanged event is raised when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.  </p>\n<p> To determine the index of the page selected by the user, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the PageIndexChanged event to display the page number selected by the user from the pager row.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewPageIndexChanged#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n      \n    If Not IsPostBack Then\n    \n      &#39; Call a helper method to display the current page number \n      &#39; when the page is first loaded.\n      DisplayCurrentPage()\n      \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_PageIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n  \n    &#39; Call a helper method to display the current page number \n    &#39; when the user navigates to a different page.\n    DisplayCurrentPage()\n  \n  End Sub\n\n  Sub DisplayCurrentPage()\n  \n    &#39; Calculate the current page number.\n    Dim currentPage As Integer = CustomersGridView.PageIndex + 1\n\n    &#39; Display the current page number. \n    Message.Text = &quot;Page &quot; &amp; currentPage.ToString() &amp; &quot; of &quot; &amp; _\n      CustomersGridView.PageCount.ToString() &amp; &quot;.&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageIndexChanged Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;\n        onpageindexchanged=&quot;CustomersGridView_PageIndexChanged&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewPageIndexChanged#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_DataBound(Object sender, EventArgs e)\n  {\n    if (!IsPostBack)\n    {\n      // Call a helper method to display the current page number \n      // when the page is first loaded.\n      DisplayCurrentPage();\n    }\n  }\n\n  void CustomersGridView_PageIndexChanged(Object sender, EventArgs e)\n  {\n    // Call a helper method to display the current page number \n    // when the user navigates to a different page.\n    DisplayCurrentPage();\n  }\n\n  void DisplayCurrentPage()\n  {\n    // Calculate the current page number.\n    int currentPage = CustomersGridView.PageIndex + 1;\n\n    // Display the current page number. \n    Message.Text = &quot;Page &quot; + currentPage.ToString() + &quot; of &quot; + \n      CustomersGridView.PageCount.ToString() + &quot;.&quot;;\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageIndexChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageIndexChanged Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        ondatabound=&quot;CustomersGridView_DataBound&quot;\n        onpageindexchanged=&quot;CustomersGridView_PageIndexChanged&quot;\n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_PageIndexChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndexChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PageIndexChanging event is raised when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is not raised when you programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n</div>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewpageeventargs\" data-linktype=\"relative-path\">GridViewPageEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To cancel the paging operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewpageeventargs\" data-linktype=\"relative-path\">GridViewPageEventArgs</a> object to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the PageIndexChanging event to cancel the paging operation if the user attempts to navigate to another page when a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is in edit mode.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewPageIndexChanging#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_PageIndexChanging(Object sender, GridViewPageEventArgs e)\n  {\n    \n    // Cancel the paging operation if the user attempts to navigate\n    // to another page while the GridView control is in edit mode. \n    if (CustomersGridView.EditIndex != -1)\n    {\n      // Use the Cancel property to cancel the paging operation.\n      e.Cancel = true;\n      \n      // Display an error message.\n      int newPageNumber = e.NewPageIndex + 1;\n      Message.Text = &quot;Please update the record before moving to page &quot; +\n        newPageNumber.ToString() + &quot;.&quot;;\n    }\n    else\n    {\n      // Clear the error message.\n      Message.Text = &quot;&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n    // Clear the error message.\n    Message.Text = &quot;&quot;;\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageIndexChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageIndexChanging Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;  \n        onpageindexchanging=&quot;CustomersGridView_PageIndexChanging&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewPageIndexChanging#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)\n    \n    &#39; Cancel the paging operation if the user attempts to navigate\n    &#39; to another page while the GridView control is in edit mode. \n    If CustomersGridView.EditIndex &lt;&gt; -1 Then\n    \n      &#39; Use the Cancel property to cancel the paging operation.\n      e.Cancel = True\n      \n      &#39; Display an error message.\n      Dim newPageNumber As Integer = e.NewPageIndex + 1\n      Message.Text = &quot;Please update the record before moving to page &quot; &amp; _\n        newPageNumber.ToString() &amp; &quot;.&quot;\n    \n    Else\n    \n      &#39; Clear the error message.\n      Message.Text = &quot;&quot;\n    \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n  \n    &#39; Clear the error message.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView PageIndexChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView PageIndexChanging Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowpaging=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;  \n        onpageindexchanging=&quot;CustomersGridView_PageIndexChanging&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot; \n        runat=&quot;server&quot;&gt;\n                \n        &lt;pagersettings mode=&quot;Numeric&quot;\n          position=&quot;Bottom&quot;           \n          pagebuttoncount=&quot;10&quot;/&gt;\n                      \n        &lt;pagerstyle backcolor=&quot;LightBlue&quot;/&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowCancelingEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowCancelingEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowCancelingEdit event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcancelediteventargs\" data-linktype=\"relative-path\">GridViewCancelEditEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped. To stop the cancel operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcancelediteventargs\" data-linktype=\"relative-path\">GridViewCancelEditEventArgs</a> object to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowCancelingEdit event to display a cancellation message when the user cancels the update operation of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowCancellingEdit#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n    \n    // Retrieve the row that raised the event from the Rows\n    // collection of the GridView control.\n    GridViewRow row = CustomersGridView.Rows[e.RowIndex];\n    \n    // The update operation was canceled. Display the \n    // primary key of the row. In this example, the primary\n    // key is displayed in the second column of the GridView\n    // control. To access the text of the column, use the Cells\n    // collection of the row.\n    Message.Text = &quot;Update for item &quot; + row.Cells[1].Text + &quot; Canceled.&quot;; \n    \n  }\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n\n    // The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;;\n\n  }\n  \n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n\n    // The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;;\n\n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCancelingEdit Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowCancelingEdit Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n      \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot; \n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;    \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowCancellingEdit#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n    \n    &#39; Retrieve the row that raised the event from the Rows\n    &#39; collection of the GridView control.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.RowIndex)\n    \n    &#39; The update operation was canceled. Display the \n    &#39; primary key of the row. In this example, the primary\n    &#39; key is displayed in the second column of the GridView\n    &#39; control. To access the text of the column, use the Cells\n    &#39; collection of the row.\n    Message.Text = &quot;Update for item &quot; &amp; row.Cells(1).Text &amp; &quot; Canceled.&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n\n    &#39; The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;\n\n  End Sub\n  \n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n    \n    &#39; The update operation was successful. Clear the message label.\n    Message.Text = &quot;&quot;\n\n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCancelingEdit Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowCancelingEdit Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n      \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot; \n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;    \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the RowCancelingEdit event to cancel the update operation when the data source is set programmatically.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void Page_Load(object sender, EventArgs e)\n  {\n          \n    if (!Page.IsPostBack)\n    {\n      // Create a new table.\n      DataTable taskTable = new DataTable(&quot;TaskList&quot;);\n      \n      // Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, typeof(int));\n      taskTable.Columns.Add(&quot;Description&quot;, typeof(string));\n      taskTable.Columns.Add(&quot;IsComplete&quot;, typeof(bool) );\n\n      //Add data to the new table.\n      for (int i = 0; i &lt; 20; i++)\n      {\n        DataRow tableRow = taskTable.NewRow();\n        tableRow[&quot;Id&quot;] = i;\n        tableRow[&quot;Description&quot;] = &quot;Task &quot; + i.ToString();\n        tableRow[&quot;IsComplete&quot;] = false;            \n        taskTable.Rows.Add(tableRow);\n      }\n\n      //Persist the table in the Session object.\n      Session[&quot;TaskTable&quot;] = taskTable;\n\n      //Bind data to the GridView control.\n      BindData();\n    }\n\n  }\n\n  protected void TaskGridView_PageIndexChanging(object sender, GridViewPageEventArgs e)\n  {\n    TaskGridView.PageIndex = e.NewPageIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowEditing(object sender, GridViewEditEventArgs e)\n  {\n    //Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)\n  {\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowUpdating(object sender, GridViewUpdateEventArgs e)\n  {    \n    //Retrieve the table from the session object.\n    DataTable dt = (DataTable)Session[&quot;TaskTable&quot;];\n\n    //Update the values.\n    GridViewRow row = TaskGridView.Rows[e.RowIndex];\n    dt.Rows[row.DataItemIndex][&quot;Id&quot;] = ((TextBox)(row.Cells[1].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;Description&quot;] = ((TextBox)(row.Cells[2].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;IsComplete&quot;] = ((CheckBox)(row.Cells[3].Controls[0])).Checked;\n\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  private void BindData()\n  {\n    TaskGridView.DataSource = Session[&quot;TaskTable&quot;];\n    TaskGridView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub Page_Load()\n\n    If Not Page.IsPostBack Then\n      &#39; Create a new table.\n      Dim taskTable As New DataTable(&quot;TaskList&quot;)\n\n      &#39; Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, GetType(Integer))\n      taskTable.Columns.Add(&quot;Description&quot;, GetType(String))\n      taskTable.Columns.Add(&quot;IsComplete&quot;, GetType(Boolean))\n\n      &#39;Add data to the new table.\n      For i = 0 To 19\n        Dim tableRow = taskTable.NewRow()\n        tableRow(&quot;Id&quot;) = i\n        tableRow(&quot;Description&quot;) = &quot;Task &quot; + i.ToString()\n        tableRow(&quot;IsComplete&quot;) = False\n        taskTable.Rows.Add(tableRow)\n      Next\n\n      &#39;Persist the table in the Session object.\n      Session(&quot;TaskTable&quot;) = taskTable\n\n      &#39;Bind data to the GridView control.\n      BindData()\n    End If\n\n  End Sub\n  \n  Protected Sub TaskGridView_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)\n    TaskGridView.PageIndex = e.NewPageIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n    &#39;Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowCancelingEdit()\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    &#39;Retrieve the table from the session object.\n    Dim dt = CType(Session(&quot;TaskTable&quot;), DataTable)\n\n    &#39;Update the values.\n    Dim row = TaskGridView.Rows(e.RowIndex)\n    dt.Rows(row.DataItemIndex)(&quot;Id&quot;) = (CType((row.Cells(1).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;Description&quot;) = (CType((row.Cells(2).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;IsComplete&quot;) = (CType((row.Cells(3).Controls(0)), CheckBox)).Checked\n\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Private Sub BindData()\n    TaskGridView.DataSource = Session(&quot;TaskTable&quot;)\n    TaskGridView.DataBind()\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowCommand\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowCommand</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a button is clicked in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowCommand event is raised when a button is clicked in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.  </p>\n<p> Buttons within a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can also invoke some of the built-in functionality of the control. To perform one of these operations, set the <code>CommandName</code> property of a button to one of the values in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th><code>CommandName</code> value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&quot;Cancel&quot;</td>\n<td>Cancels an edit operation and returns the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to read-only mode. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowCancelingEdit\" data-linktype=\"relative-path\">RowCancelingEdit</a> event.</td>\n</tr>\n<tr>\n<td>&quot;Delete&quot;</td>\n<td>Deletes the current record. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleting\" data-linktype=\"relative-path\">RowDeleting</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowDeleted\" data-linktype=\"relative-path\">RowDeleted</a> events.</td>\n</tr>\n<tr>\n<td>&quot;Edit&quot;</td>\n<td>Puts the current record in edit mode. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowEditing\" data-linktype=\"relative-path\">RowEditing</a> event.</td>\n</tr>\n<tr>\n<td>&quot;Page&quot;</td>\n<td>Performs a paging operation. Sets the <code>CommandArgument</code> property of the button to &quot;First&quot;, &quot;Last&quot;, &quot;Next&quot;, &quot;Prev&quot;, or a page number to specify the type of paging operation to perform. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> events.</td>\n</tr>\n<tr>\n<td>&quot;Select&quot;</td>\n<td>Selects the current record. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanging\" data-linktype=\"relative-path\">SelectedIndexChanging</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> events.</td>\n</tr>\n<tr>\n<td>&quot;Sort&quot;</td>\n<td>Sorts the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorting\" data-linktype=\"relative-path\">Sorting</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> events.</td>\n</tr>\n<tr>\n<td>&quot;Update&quot;</td>\n<td>Updates the current record in the data source. Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdated\" data-linktype=\"relative-path\">RowUpdated</a> events.</td>\n</tr>\n</tbody>\n</table>\n<p> Although the RowCommand event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewcommandeventargs\" data-linktype=\"relative-path\">GridViewCommandEventArgs</a> object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To determine the index of the row that raised the event, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of the event argument that is passed to the event. The <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a> class automatically populates the <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs#System_Web_UI_WebControls_CommandEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property with the appropriate index value. For other command buttons, you must manually set the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of the command button. For example, you can set the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> to <code>&lt;%# Container.DataItemIndex %&gt;</code> when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control has no paging enabled.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>A Visual Studio Web site project with source code is available to accompany this topic: <a href=\"http://go.microsoft.com/fwlink/?LinkId=191882\" data-linktype=\"external\">Download</a>.  </p>\n<p> The following example demonstrates how to use the RowCommand event to add the name of a customer from a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to a <a class=\"xref\" href=\"system.web.ui.webcontrols.listbox\" data-linktype=\"relative-path\">ListBox</a> control when a row&#39;s Add button is clicked.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowCommmand#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void ContactsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // If multiple buttons are used in a GridView control, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Add&quot;)\n    {\n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);\n\n      // Retrieve the row that contains the button clicked \n      // by the user from the Rows collection.\n      GridViewRow row = ContactsGridView.Rows[index];\n\n      // Create a new ListItem object for the contact in the row.     \n      ListItem item = new ListItem();\n      item.Text = Server.HtmlDecode(row.Cells[2].Text) + &quot; &quot; +\n        Server.HtmlDecode(row.Cells[3].Text);\n\n      // If the contact is not already in the ListBox, add the ListItem \n      // object to the Items collection of the ListBox control. \n      if (!ContactsListBox.Items.Contains(item))\n      {\n        ContactsListBox.Items.Add(item);\n      }\n    }\n  }    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;\n        &lt;tr&gt;\n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:gridview id=&quot;ContactsGridView&quot; \n              datasourceid=&quot;ContactsSource&quot;\n              allowpaging=&quot;true&quot; \n              autogeneratecolumns=&quot;false&quot;\n              onrowcommand=&quot;ContactsGridView_RowCommand&quot;\n              runat=&quot;server&quot;&gt;\n\n              &lt;columns&gt;\n                &lt;asp:buttonfield buttontype=&quot;Link&quot; \n                  commandname=&quot;Add&quot; \n                  text=&quot;Add&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;ContactID&quot; \n                  headertext=&quot;Contact ID&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;FirstName&quot; \n                  headertext=&quot;First Name&quot;/&gt; \n                &lt;asp:boundfield datafield=&quot;LastName&quot; \n                  headertext=&quot;Last Name&quot;/&gt;\n              &lt;/columns&gt;\n\n            &lt;/asp:gridview&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Contacts: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ContactsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt;\n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ContactsSource&quot;\n        selectcommand=&quot;Select [ContactID], [FirstName], [LastName] From Person.Contact&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowCommmand#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub ContactsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n\n    &#39; If multiple buttons are used in a GridView control, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Add&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n            \n      &#39; Retrieve the row that contains the button clicked \n      &#39; by the user from the Rows collection.\n      Dim row As GridViewRow = ContactsGridView.Rows(index)\n            \n      &#39; Create a new ListItem object for the contact in the row.     \n      Dim item As New ListItem()\n      item.Text = Server.HtmlDecode(row.Cells(2).Text) &amp; &quot; &quot; &amp; _\n        Server.HtmlDecode(row.Cells(3).Text)\n            \n      &#39; If the contact is not already in the ListBox, add the ListItem \n      &#39; object to the Items collection of the ListBox control. \n      If Not ContactsListBox.Items.Contains(item) Then\n      \n        ContactsListBox.Items.Add(item)\n        \n      End If\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;\n        &lt;tr&gt;\n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:gridview id=&quot;ContactsGridView&quot; \n              datasourceid=&quot;ContactsSource&quot;\n              allowpaging=&quot;true&quot; \n              autogeneratecolumns=&quot;false&quot;\n              onrowcommand=&quot;ContactsGridView_RowCommand&quot;\n              runat=&quot;server&quot;&gt;\n\n              &lt;columns&gt;\n                &lt;asp:buttonfield buttontype=&quot;Link&quot; \n                  commandname=&quot;Add&quot; \n                  text=&quot;Add&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;ContactID&quot; \n                  headertext=&quot;Contact ID&quot;/&gt;\n                &lt;asp:boundfield datafield=&quot;FirstName&quot; \n                  headertext=&quot;First Name&quot;/&gt; \n                &lt;asp:boundfield datafield=&quot;LastName&quot; \n                  headertext=&quot;Last Name&quot;/&gt;\n              &lt;/columns&gt;\n\n            &lt;/asp:gridview&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Contacts: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ContactsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt;\n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ContactsSource&quot;\n        selectcommand=&quot;Select [ContactID], [FirstName], [LastName] From Person.Contact&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the RowCommand event to update the price of a product when a row&#39;s button is clicked. This example has the paging functionality enabled for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control and sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.button\" data-linktype=\"relative-path\">Button</a> control to the appropriate row index.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowCommmand#2\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void ProductsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // If multiple buttons are used in a GridView control, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Increase&quot;)\n    {\n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);\n\n      // Retrieve the row that contains the button clicked \n      // by the user from the Rows collection.      \n      GridViewRow row = ProductsGridView.Rows[index];\n\n      // Calculate the new price.\n      Label listPriceTextBox = (Label)row.FindControl(&quot;PriceLabel&quot;);\n      listPriceTextBox.Text = (Convert.ToDouble(listPriceTextBox.Text) * 1.05).ToString();     \n\n      // Update the row.\n      ProductsGridView.UpdateRow(index, false);\n    }\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;asp:GridView id=&quot;ProductsGridView&quot; \n        DataSourceID=&quot;ProductsDataSource&quot;\n        DataKeyNames=&quot;ProductID&quot;\n        AllowPaging=&quot;True&quot; \n        OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n        AutoGenerateColumns=&quot;False&quot;\n        runat=&quot;server&quot;&gt;\n        &lt;Columns&gt;\n          &lt;asp:BoundField DataField=&quot;Name&quot; HeaderText=&quot;Product Name&quot; /&gt;\n          &lt;asp:BoundField DataField=&quot;ProductNumber&quot; HeaderText=&quot;Product Number&quot; /&gt;          \n          &lt;asp:TemplateField HeaderText=&quot;Price&quot;&gt;\n            &lt;ItemTemplate&gt;\n              &lt;asp:Label ID=&quot;PriceLabel&quot; runat=&quot;server&quot; \n                Text=&#39;&lt;%# Bind(&quot;ListPrice&quot;) %&gt;&#39;&gt;\n              &lt;/asp:Label&gt;\n            &lt;/ItemTemplate&gt;\n          &lt;/asp:TemplateField&gt;\n          &lt;asp:TemplateField&gt;\n            &lt;ItemTemplate&gt;                \n              &lt;asp:Button runat=&quot;server&quot; ID=&quot;IncreaseButton&quot;\n                Text=&quot;Increase Price 5%&quot;\n                CommandName=&quot;Increase&quot;\n                CommandArgument=&quot;&lt;%# ((GridViewRow) Container).RowIndex %&gt;&quot; /&gt;\n            &lt;/ItemTemplate&gt;\n          &lt;/asp:TemplateField&gt;\n        &lt;/Columns&gt;\n      &lt;/asp:GridView&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:SqlDataSource id=&quot;ProductsDataSource&quot;\n        SelectCommand=&quot;SELECT [ProductID], [Name], [ProductNumber], [ListPrice] \n          FROM Production.Product \n          WHERE ListPrice &amp;lt;&amp;gt; 0&quot;\n        UpdateCommand=&quot;UPDATE Production.Product SET [ListPrice] = @ListPrice \n          WHERE [ProductID] = @ProductID&quot;\n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString %&gt;&quot;\n        runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowCommmand#2\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n\n  Sub ProductsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n\n    &#39; If multiple buttons are used in a GridView control, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Increase&quot; Then\n    \n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index = Convert.ToInt32(e.CommandArgument)\n            \n      &#39; Retrieve the row that contains the button clicked \n      &#39; by the user from the Rows collection.\n      Dim row = ProductsGridView.Rows(index)\n      \n      &#39; Calculate the new price.\n      Dim listPriceTextBox = CType(row.FindControl(&quot;PriceLabel&quot;), Label)\n      listPriceTextBox.Text = (Convert.ToDouble(listPriceTextBox.Text) * 1.05).ToString()\n\n      &#39; Update the row.\n      ProductsGridView.UpdateRow(index, False)\n      \n    End If\n    \n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCommand Example&lt;/h3&gt;\n\n      &lt;asp:GridView id=&quot;ProductsGridView&quot; \n        DataSourceID=&quot;ProductsDataSource&quot;\n        DataKeyNames=&quot;ProductID&quot;\n        AllowPaging=&quot;True&quot; \n        OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n        AutoGenerateColumns=&quot;False&quot;\n        runat=&quot;server&quot;&gt;\n        &lt;Columns&gt;\n          &lt;asp:BoundField DataField=&quot;Name&quot; HeaderText=&quot;Product Name&quot; /&gt;\n          &lt;asp:BoundField DataField=&quot;ProductNumber&quot; HeaderText=&quot;Product Number&quot; /&gt;          \n          &lt;asp:TemplateField HeaderText=&quot;Price&quot;&gt;\n            &lt;ItemTemplate&gt;\n              &lt;asp:Label ID=&quot;PriceLabel&quot; runat=&quot;server&quot; \n                Text=&#39;&lt;%# Bind(&quot;ListPrice&quot;) %&gt;&#39;&gt;\n              &lt;/asp:Label&gt;\n            &lt;/ItemTemplate&gt;\n          &lt;/asp:TemplateField&gt;\n          &lt;asp:TemplateField&gt;\n            &lt;ItemTemplate&gt;                \n              &lt;asp:Button runat=&quot;server&quot; ID=&quot;IncreaseButton&quot;\n                Text=&quot;Increase Price 5%&quot;\n                CommandName=&quot;Increase&quot;\n                CommandArgument=&quot;&lt;%# CType(Container, GridViewRow).RowIndex %&gt;&quot; /&gt;\n            &lt;/ItemTemplate&gt;\n          &lt;/asp:TemplateField&gt;\n        &lt;/Columns&gt;\n      &lt;/asp:GridView&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:SqlDataSource id=&quot;ProductsDataSource&quot;\n        SelectCommand=&quot;SELECT [ProductID], [Name], [ProductNumber], [ListPrice] \n          FROM Production.Product \n          WHERE ListPrice &amp;lt;&amp;gt; 0&quot;\n        UpdateCommand=&quot;UPDATE Production.Product SET [ListPrice] = @ListPrice \n          WHERE [ProductID] = @ProductID&quot;\n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString %&gt;&quot;\n        runat=&quot;server&quot; /&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowCreated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowCreated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row is created in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered, a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object must be created for each row in the control. The RowCreated event is raised when each row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> object is passed to the event-handling method, which enables you to access the properties of the row being created. To access a specific cell in the row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablerow#System_Web_UI_WebControls_TableRow_Cells_\" data-linktype=\"relative-path\">Cells</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> object. You can determine which row type (header row, data row, and so on) is being created by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow#System_Web_UI_WebControls_GridViewRow_RowType_\" data-linktype=\"relative-path\">RowType</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowCreated event to store the index of the row being created in the <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton#System_Web_UI_WebControls_LinkButton_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control contained in the row. This enables you to determine the index of the row that contains the <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control when the user clicked the button.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowCreated#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub ProductsGridView_RowCommand(ByVal sender As Object, ByVal e As GridViewCommandEventArgs)\n\n    &#39; If multiple buttons are used in a GridView control, use the\n    &#39; CommandName property to determine which button was clicked.\n    If e.CommandName = &quot;Add&quot; Then\n\n      &#39; Convert the row index stored in the CommandArgument\n      &#39; property to an Integer.\n      Dim index As Integer = Convert.ToInt32(e.CommandArgument)\n\n      &#39; Retrieve the row that contains the button clicked \n      &#39; by the user from the Rows collection.\n      Dim row As GridViewRow = ProductsGridView.Rows(index)\n\n      &#39; Create a new ListItem object for the product in the row.     \n      Dim item As New ListItem()\n      item.Text = Server.HtmlDecode(row.Cells(1).Text)\n\n      &#39; If the product is not already in the ListBox, add the ListItem \n      &#39; object to the Items collection of the ListBox control. \n      If Not ProductsListBox.Items.Contains(item) Then\n\n        ProductsListBox.Items.Add(item)\n\n      End If\n\n    End If\n\n  End Sub\n\n  Sub ProductsGridView_RowCreated(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n\n    &#39; The GridViewCommandEventArgs class does not contain a \n    &#39; property that indicates which row&#39;s command button was\n    &#39; clicked. To identify which row&#39;s button was clicked, use \n    &#39; the button&#39;s CommandArgument property by setting it to the \n    &#39; row&#39;s index.\n    If e.Row.RowType = DataControlRowType.DataRow Then\n\n      &#39; Retrieve the LinkButton control from the first column.\n      Dim addButton As LinkButton = CType(e.Row.FindControl(&quot;AddButton&quot;), LinkButton)\n\n      &#39; Set the LinkButton&#39;s CommandArgument property with the\n      &#39; row&#39;s index.\n      addButton.CommandArgument = e.Row.RowIndex.ToString()\n\n    End If\n\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html&gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCreated Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;         \n        &lt;tr&gt;                \n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:GridView ID=&quot;ProductsGridView&quot; \n              DataSourceID=&quot;ProductsDataSource&quot;\n              AllowPaging=&quot;true&quot; \n              AutoGenerateColumns=&quot;false&quot;\n              OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n              OnRowCreated=&quot;ProductsGridView_RowCreated&quot;  \n              runat=&quot;server&quot;&gt;\n              &lt;Columns&gt;\n                &lt;asp:TemplateField&gt;\n                  &lt;ItemTemplate&gt;\n                    &lt;asp:LinkButton runat=&quot;server&quot;\n                      ID=&quot;AddButton&quot;\n                      CommandName=&quot;Add&quot;\n                      Text=&quot;Add&quot; /&gt;\n                  &lt;/ItemTemplate&gt;\n                &lt;/asp:TemplateField&gt;\n                &lt;asp:BoundField DataField=&quot;Name&quot; \n                  HeaderText=&quot;Product Name&quot;/&gt; \n                &lt;asp:BoundField DataField=&quot;ProductNumber&quot; \n                  HeaderText=&quot;Product Number&quot;/&gt;\n              &lt;/Columns&gt;\n\n            &lt;/asp:GridView&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Products: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ProductsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt; \n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ProductsDataSource&quot;\n        selectcommand=&quot;Select [Name], [ProductNumber] From Production.Product&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowCreated#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void ProductsGridView_RowCommand(Object sender, GridViewCommandEventArgs e)\n  {\n    // If multiple buttons are used in a GridView control, use the\n    // CommandName property to determine which button was clicked.\n    if(e.CommandName==&quot;Add&quot;)\n    {\n      // Convert the row index stored in the CommandArgument\n      // property to an Integer.\n      int index = Convert.ToInt32(e.CommandArgument);\n\n      // Retrieve the row that contains the button clicked \n      // by the user from the Rows collection.\n      GridViewRow row = ProductsGridView.Rows[index];\n\n      // Create a new ListItem object for the product in the row.     \n      ListItem item = new ListItem();\n      item.Text = Server.HtmlDecode(row.Cells[1].Text);\n\n      // If the product is not already in the ListBox, add the ListItem \n      // object to the Items collection of the ListBox control. \n      if (!ProductsListBox.Items.Contains(item))\n      {\n        ProductsListBox.Items.Add(item);\n      }\n    }\n  }\n\n  void ProductsGridView_RowCreated(Object sender, GridViewRowEventArgs e)\n  {\n\n    // The GridViewCommandEventArgs class does not contain a \n    // property that indicates which row&#39;s command button was\n    // clicked. To identify which row&#39;s button was clicked, use \n    // the button&#39;s CommandArgument property by setting it to the \n    // row&#39;s index.\n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      // Retrieve the LinkButton control from the first column.\n      LinkButton addButton = (LinkButton)e.Row.FindControl(&quot;AddButton&quot;);\n\n      // Set the LinkButton&#39;s CommandArgument property with the\n      // row&#39;s index.\n      addButton.CommandArgument = e.Row.RowIndex.ToString();\n    }\n\n  }\n\n&lt;/script&gt;\n\n&lt;html&gt;\n  &lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowCreated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;h3&gt;GridView RowCreated Example&lt;/h3&gt;\n\n      &lt;table width=&quot;100%&quot;&gt;         \n        &lt;tr&gt;                \n          &lt;td style=&quot;width:50%&quot;&gt;\n\n            &lt;asp:GridView ID=&quot;ProductsGridView&quot; \n              DataSourceID=&quot;ProductsDataSource&quot;\n              AllowPaging=&quot;true&quot; \n              AutoGenerateColumns=&quot;false&quot;\n              OnRowCommand=&quot;ProductsGridView_RowCommand&quot;\n              OnRowCreated=&quot;ProductsGridView_RowCreated&quot;  \n              runat=&quot;server&quot;&gt;\n              &lt;Columns&gt;\n                &lt;asp:TemplateField&gt;\n                  &lt;ItemTemplate&gt;\n                    &lt;asp:LinkButton runat=&quot;server&quot;\n                      ID=&quot;AddButton&quot;\n                      CommandName=&quot;Add&quot;\n                      Text=&quot;Add&quot; /&gt;\n                  &lt;/ItemTemplate&gt;\n                &lt;/asp:TemplateField&gt;\n                &lt;asp:BoundField DataField=&quot;Name&quot; \n                  HeaderText=&quot;Product Name&quot;/&gt; \n                &lt;asp:BoundField DataField=&quot;ProductNumber&quot; \n                  HeaderText=&quot;Product Number&quot;/&gt;\n              &lt;/Columns&gt;\n\n            &lt;/asp:GridView&gt;\n\n          &lt;/td&gt;\n\n          &lt;td style=&quot;vertical-align:top; width:50%&quot;&gt;\n\n            Products: &lt;br/&gt;\n            &lt;asp:listbox id=&quot;ProductsListBox&quot;\n              runat=&quot;server&quot; Height=&quot;200px&quot; Width=&quot;200px&quot;/&gt; \n\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n\n      &lt;!-- This example uses Microsoft SQL Server and connects    --&gt;\n      &lt;!-- to the AdventureWorks sample database. Use an ASP.NET  --&gt;\n      &lt;!-- expression to retrieve the connection string value     --&gt;\n      &lt;!-- from the Web.config file.                              --&gt;\n      &lt;asp:sqldatasource id=&quot;ProductsDataSource&quot;\n        selectcommand=&quot;Select [Name], [ProductNumber] From Production.Product&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorks_DataConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowDataBound\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDataBound</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a data row is bound to data in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control can be rendered, each row in the control must be bound to a record in the data source. The RowDataBound event is raised when a data row (represented by a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object) is bound to data in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> object is passed to the event-handling method, which enables you to access the properties of the row being bound. To access a specific cell in the row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablerow#System_Web_UI_WebControls_TableRow_Cells_\" data-linktype=\"relative-path\">Cells</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow\" data-linktype=\"relative-path\">GridViewRow</a> object contained in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs#System_Web_UI_WebControls_GridViewRowEventArgs_Row_\" data-linktype=\"relative-path\">Row</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewroweventargs\" data-linktype=\"relative-path\">GridViewRowEventArgs</a> object. You can determine which row type (header row, data row, and so on) is being bound by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewrow#System_Web_UI_WebControls_GridViewRow_RowType_\" data-linktype=\"relative-path\">RowType</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>A Visual Studio Web site project with source code is available to accompany this topic: <a href=\"http://go.microsoft.com/fwlink/?LinkId=191882\" data-linktype=\"external\">Download</a>.  </p>\n<p> The following example demonstrates how to use the RowDataBound event to modify the value of a field in the data source before it is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowDataBound#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowDataBound(Object sender, GridViewRowEventArgs e)\n  {\n        \n    if(e.Row.RowType == DataControlRowType.DataRow)\n    {\n      // Display the company name in italics.\n      e.Row.Cells[1].Text = &quot;&lt;i&gt;&quot; + e.Row.Cells[1].Text + &quot;&lt;/i&gt;&quot;;\n        \n    }\n    \n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDataBound Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        onrowdatabound=&quot;CustomersGridView_RowDataBound&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowDataBound#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowDataBound(ByVal sender As Object, ByVal e As GridViewRowEventArgs)\n\n    If e.Row.RowType = DataControlRowType.DataRow Then\n    \n      &#39; Display the company name in italics.\n      e.Row.Cells(1).Text = &quot;&lt;i&gt;&quot; &amp; e.Row.Cells(1).Text &amp; &quot;&lt;/i&gt;&quot;\n        \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDataBound Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDataBound Example&lt;/h3&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        onrowdatabound=&quot;CustomersGridView_RowDataBound&quot; \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowDeleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDeleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowDeleted event is raised when a row&#39;s Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeletedeventargs\" data-linktype=\"relative-path\">GridViewDeletedEventArgs</a> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeletedeventargs#System_Web_UI_WebControls_GridViewDeletedEventArgs_ExceptionHandled_\" data-linktype=\"relative-path\">ExceptionHandled</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeletedeventargs\" data-linktype=\"relative-path\">GridViewDeletedEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowDeleted event to check the result of the delete operation. A message is displayed to indicate to the user whether the operation succeeded.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowDeleted#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowDeleted(Object sender, GridViewDeletedEventArgs e)\n  {\n    \n    // Display whether the delete operation succeeded.\n    if(e.Exception == null)\n    {\n      Message.Text = &quot;Row deleted successfully.&quot;;\n    }\n    else\n    {\n      Message.Text = &quot;An error occurred while attempting to delete the row.&quot;;\n      e.ExceptionHandled = true;   \n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDeleted Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDeleted Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogeneratedeletebutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowdeleted=&quot;CustomersGridView_RowDeleted&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n      \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowDeleted#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowDeleted(sender As Object, e As GridViewDeletedEventArgs)\n    \n    &#39; Display whether the delete operation succeeded.\n    If e.Exception Is Nothing Then\n    \n      Message.Text = &quot;Row deleted successfully.&quot;\n    \n    Else\n          \n      Message.Text = &quot;An error occurred while attempting to delete the row.&quot;\n      e.ExceptionHandled = True\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDeleted Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowDeleted Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogeneratedeletebutton=&quot;true&quot;\n        datakeynames=&quot;CustomerID&quot;\n        onrowdeleted=&quot;CustomersGridView_RowDeleted&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        deletecommand=&quot;Delete from Customers where CustomerID = @CustomerID&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n      \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowDeleting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDeleting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowDeleting event is raised when a row&#39;s Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a> object to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs#System_Web_UI_WebControls_GridViewDeleteEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs#System_Web_UI_WebControls_GridViewDeleteEventArgs_Values_\" data-linktype=\"relative-path\">Values</a> collections, if necessary, before the values are passed to the data source.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowDeleting event to cancel the delete operation. The page contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control that displays a list of customer names and addresses from the AdventureWorksLT database. When the user clicks the <strong>Delete</strong> link for a row, the handler for the RowDeleting event checks the last name of the person displayed in the row that the user is trying to delete. If the last name is &quot;Beaver&quot;, the delete operation is canceled, and an error message is displayed. For any other name, the delete operation proceeds and the row is deleted.  </p>\n<p> The event handler uses the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs#System_Web_UI_WebControls_GridViewDeleteEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs\" data-linktype=\"relative-path\">GridViewDeleteEventArgs</a> object to find the row that the user is trying to delete. The example examines the contents of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection. If the value you want to compare to is a key value, you could examine the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeys_\" data-linktype=\"relative-path\">DataKeys</a> collection instead.  </p>\n<p> Rows are deleted from the CustomerAddress table instead of the Customer table in order to keep the example simple. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control shows the result of joining three tables: Customer, Address, and CustomerAddress. When a CustomerAddress row is deleted, the corresponding <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> row disappears. Referential integrity constraints would make the code for an example that actually deletes rows from the Customer table more complex.  </p>\n<p> For information about how to set up the AdventureWorksLT database, see <a href=\"../Topic/How%20to:%20Set%20Up%20an%20AdventureWorksLT%20Sample%20Database%20for%20ASP.NET%20Development.md\" data-linktype=\"relative-path\">How to: Set Up an AdventureWorksLT Sample Database for ASP.NET Development</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowDeleting#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    Private Sub CustomersGridView_RowDeleting _\n        (ByVal sender As [Object], _\n        ByVal e As GridViewDeleteEventArgs)\n        Dim cell As TableCell\n        cell = CustomersGridView.Rows(e.RowIndex).Cells(2)\n        If cell.Text = &quot;Beaver&quot; Then\n            e.Cancel = True\n            Message.Text = &quot;You cannot delete customer Beaver.&quot;\n        Else\n            Message.Text = &quot;&quot;\n        End If\n    End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDeleting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n        GridView RowDeleting Example\n    &lt;/h3&gt;\n    &lt;asp:Label ID=&quot;Message&quot; ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n    &lt;br /&gt;\n    &lt;asp:GridView ID=&quot;CustomersGridView&quot; runat=&quot;server&quot; \n        DataSourceID=&quot;CustomersSqlDataSource&quot; \n        AutoGenerateColumns=&quot;False&quot;\n        AutoGenerateDeleteButton=&quot;True&quot; \n        OnRowDeleting=&quot;CustomersGridView_RowDeleting&quot;\n        DataKeyNames=&quot;CustomerID,AddressID&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                HeaderText=&quot;FirstName&quot; SortExpression=&quot;FirstName&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;LastName&quot; HeaderText=&quot;LastName&quot; \n                SortExpression=&quot;LastName&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; \n                SortExpression=&quot;City&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;StateProvince&quot; HeaderText=&quot;State&quot; \n                SortExpression=&quot;StateProvince&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n    &lt;asp:SqlDataSource ID=&quot;CustomersSqlDataSource&quot; runat=&quot;server&quot;\n        SelectCommand=&quot;SELECT SalesLT.CustomerAddress.CustomerID, \n            SalesLT.CustomerAddress.AddressID, \n            SalesLT.Customer.FirstName, \n            SalesLT.Customer.LastName, \n            SalesLT.Address.City, \n            SalesLT.Address.StateProvince \n            FROM SalesLT.Customer \n            INNER JOIN SalesLT.CustomerAddress \n            ON SalesLT.Customer.CustomerID = \n                SalesLT.CustomerAddress.CustomerID \n            INNER JOIN SalesLT.Address ON SalesLT.CustomerAddress.AddressID = \n                SalesLT.Address.AddressID&quot;\n        DeleteCommand=&quot;Delete from SalesLT.CustomerAddress where CustomerID = \n            @CustomerID and AddressID = @AddressID&quot; \n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot;&gt;\n        &lt;DeleteParameters&gt;\n            &lt;asp:Parameter Name=&quot;AddressID&quot; /&gt;\n            &lt;asp:Parameter Name=&quot;CustomerID&quot; /&gt;\n        &lt;/DeleteParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowDeleting#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomersGridView_RowDeleting\n        (Object sender, GridViewDeleteEventArgs e)\n    {\n        TableCell cell = CustomersGridView.Rows[e.RowIndex].Cells[2];\n        if (cell.Text == &quot;Beaver&quot;)\n        {\n            e.Cancel = true;\n            Message.Text = &quot;You cannot delete customer Beaver.&quot;;\n        }\n        else\n        {\n            Message.Text = &quot;&quot;;\n        }\n    }  \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowDeleting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n        GridView RowDeleting Example\n    &lt;/h3&gt;\n    &lt;asp:Label ID=&quot;Message&quot; ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n    &lt;br /&gt;\n    &lt;asp:GridView ID=&quot;CustomersGridView&quot; runat=&quot;server&quot; \n        DataSourceID=&quot;CustomersSqlDataSource&quot; \n        AutoGenerateColumns=&quot;False&quot;\n        AutoGenerateDeleteButton=&quot;True&quot; \n        OnRowDeleting=&quot;CustomersGridView_RowDeleting&quot;\n        DataKeyNames=&quot;CustomerID,AddressID&quot;&gt;\n        &lt;Columns&gt;\n            &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                HeaderText=&quot;FirstName&quot; SortExpression=&quot;FirstName&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;LastName&quot; HeaderText=&quot;LastName&quot; \n                SortExpression=&quot;LastName&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; \n                SortExpression=&quot;City&quot; /&gt;\n            &lt;asp:BoundField DataField=&quot;StateProvince&quot; HeaderText=&quot;State&quot; \n                SortExpression=&quot;StateProvince&quot; /&gt;\n        &lt;/Columns&gt;\n    &lt;/asp:GridView&gt;\n    &lt;asp:SqlDataSource ID=&quot;CustomersSqlDataSource&quot; runat=&quot;server&quot;\n        SelectCommand=&quot;SELECT SalesLT.CustomerAddress.CustomerID, \n            SalesLT.CustomerAddress.AddressID, \n            SalesLT.Customer.FirstName, \n            SalesLT.Customer.LastName, \n            SalesLT.Address.City, \n            SalesLT.Address.StateProvince \n            FROM SalesLT.Customer \n            INNER JOIN SalesLT.CustomerAddress \n            ON SalesLT.Customer.CustomerID = \n                SalesLT.CustomerAddress.CustomerID \n            INNER JOIN SalesLT.Address ON SalesLT.CustomerAddress.AddressID = \n                SalesLT.Address.AddressID&quot;\n        DeleteCommand=&quot;Delete from SalesLT.CustomerAddress where CustomerID = \n            @CustomerID and AddressID = @AddressID&quot; \n        ConnectionString=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot;&gt;\n        &lt;DeleteParameters&gt;\n            &lt;asp:Parameter Name=&quot;AddressID&quot; /&gt;\n            &lt;asp:Parameter Name=&quot;CustomerID&quot; /&gt;\n        &lt;/DeleteParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowEditing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowEditing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Edit button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowEditing event is raised when a row&#39;s Edit button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled. To cancel the edit operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewediteventargs\" data-linktype=\"relative-path\">GridViewEditEventArgs</a> object to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowEditing event to put a row in edit mode when the data source is set programmatically.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void Page_Load(object sender, EventArgs e)\n  {\n          \n    if (!Page.IsPostBack)\n    {\n      // Create a new table.\n      DataTable taskTable = new DataTable(&quot;TaskList&quot;);\n      \n      // Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, typeof(int));\n      taskTable.Columns.Add(&quot;Description&quot;, typeof(string));\n      taskTable.Columns.Add(&quot;IsComplete&quot;, typeof(bool) );\n\n      //Add data to the new table.\n      for (int i = 0; i &lt; 20; i++)\n      {\n        DataRow tableRow = taskTable.NewRow();\n        tableRow[&quot;Id&quot;] = i;\n        tableRow[&quot;Description&quot;] = &quot;Task &quot; + i.ToString();\n        tableRow[&quot;IsComplete&quot;] = false;            \n        taskTable.Rows.Add(tableRow);\n      }\n\n      //Persist the table in the Session object.\n      Session[&quot;TaskTable&quot;] = taskTable;\n\n      //Bind data to the GridView control.\n      BindData();\n    }\n\n  }\n\n  protected void TaskGridView_PageIndexChanging(object sender, GridViewPageEventArgs e)\n  {\n    TaskGridView.PageIndex = e.NewPageIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowEditing(object sender, GridViewEditEventArgs e)\n  {\n    //Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)\n  {\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowUpdating(object sender, GridViewUpdateEventArgs e)\n  {    \n    //Retrieve the table from the session object.\n    DataTable dt = (DataTable)Session[&quot;TaskTable&quot;];\n\n    //Update the values.\n    GridViewRow row = TaskGridView.Rows[e.RowIndex];\n    dt.Rows[row.DataItemIndex][&quot;Id&quot;] = ((TextBox)(row.Cells[1].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;Description&quot;] = ((TextBox)(row.Cells[2].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;IsComplete&quot;] = ((CheckBox)(row.Cells[3].Controls[0])).Checked;\n\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  private void BindData()\n  {\n    TaskGridView.DataSource = Session[&quot;TaskTable&quot;];\n    TaskGridView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub Page_Load()\n\n    If Not Page.IsPostBack Then\n      &#39; Create a new table.\n      Dim taskTable As New DataTable(&quot;TaskList&quot;)\n\n      &#39; Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, GetType(Integer))\n      taskTable.Columns.Add(&quot;Description&quot;, GetType(String))\n      taskTable.Columns.Add(&quot;IsComplete&quot;, GetType(Boolean))\n\n      &#39;Add data to the new table.\n      For i = 0 To 19\n        Dim tableRow = taskTable.NewRow()\n        tableRow(&quot;Id&quot;) = i\n        tableRow(&quot;Description&quot;) = &quot;Task &quot; + i.ToString()\n        tableRow(&quot;IsComplete&quot;) = False\n        taskTable.Rows.Add(tableRow)\n      Next\n\n      &#39;Persist the table in the Session object.\n      Session(&quot;TaskTable&quot;) = taskTable\n\n      &#39;Bind data to the GridView control.\n      BindData()\n    End If\n\n  End Sub\n  \n  Protected Sub TaskGridView_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)\n    TaskGridView.PageIndex = e.NewPageIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n    &#39;Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowCancelingEdit()\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    &#39;Retrieve the table from the session object.\n    Dim dt = CType(Session(&quot;TaskTable&quot;), DataTable)\n\n    &#39;Update the values.\n    Dim row = TaskGridView.Rows(e.RowIndex)\n    dt.Rows(row.DataItemIndex)(&quot;Id&quot;) = (CType((row.Cells(1).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;Description&quot;) = (CType((row.Cells(2).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;IsComplete&quot;) = (CType((row.Cells(3).Controls(0)), CheckBox)).Checked\n\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Private Sub BindData()\n    TaskGridView.DataSource = Session(&quot;TaskTable&quot;)\n    TaskGridView.DataBind()\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the RowEditing event to cancel the editing operation if the user attempts to edit the record for a company in the United States.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowEditing#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n        \n    &#39; Get the country for the row being edited. For this example, the\n    &#39; country is contained in the seventh column (index 6). \n    Dim country As String = CustomersGridView.Rows(e.NewEditIndex).Cells(6).Text\n\n    &#39; For this example, cancel the edit operation if the user attempts\n    &#39; to edit the record of a customer from the United States. \n    If country = &quot;USA&quot; Then\n    \n      &#39; Cancel the edit operation.\n      e.Cancel = True\n      Message.Text = &quot;You cannot edit this record.&quot;\n     \n    Else\n      \n      Message.Text = &quot;&quot;\n      \n    End If\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowEditing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowEditing Example&lt;/h3&gt;\n          \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowEditing#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n    \n    // Get the country for the row being edited. For this example, the\n    // country is contained in the seventh column (index 6). \n    String country = CustomersGridView.Rows[e.NewEditIndex].Cells[6].Text;\n\n    // For this example, cancel the edit operation if the user attempts\n    // to edit the record of a customer from the Unites States. \n    if (country == &quot;USA&quot;)\n    {\n      // Cancel the edit operation.\n      e.Cancel = true;\n      Message.Text = &quot;You cannot edit this record.&quot;;\n    }\n    else\n    {\n      Message.Text = &quot;&quot;;\n    }\n    \n  }\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowEditing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowEditing Example&lt;/h3&gt;\n          \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowUpdated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowUpdated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowUpdated event is raised when a row&#39;s Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdatedeventargs\" data-linktype=\"relative-path\">GridViewUpdatedEventArgs</a> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdatedeventargs#System_Web_UI_WebControls_GridViewUpdatedEventArgs_ExceptionHandled_\" data-linktype=\"relative-path\">ExceptionHandled</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdatedeventargs\" data-linktype=\"relative-path\">GridViewUpdatedEventArgs</a> object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowUpdated event to check the result of the update operation. A message is displayed to indicate to the user whether the operation succeeded.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowUpdated#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n    \n    &#39; Indicate whether the update operation succeeded.\n    If e.Exception Is Nothing Then\n    \n      Message.Text = &quot;Row updated successfully.&quot;\n    \n    Else\n    \n      e.ExceptionHandled = True\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;\n    \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_RowCancelingEdit(ByVal sender As Object, ByVal e As GridViewCancelEditEventArgs)\n        \n    &#39; The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n\n  Sub CustomersGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n  \n    &#39; The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;\n    \n  End Sub\n    \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdated Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowUpdated#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n  {\n    \n    // Indicate whether the update operation succeeded.\n    if(e.Exception == null)\n    {\n      Message.Text = &quot;Row updated successfully.&quot;;\n    }\n    else\n    {\n      e.ExceptionHandled = true;\n      Message.Text = &quot;An error occurred while attempting to update the row.&quot;;\n    }\n    \n  }\n\n  void CustomersGridView_RowCancelingEdit(Object sender, GridViewCancelEditEventArgs e)\n  {\n        \n    // The update operation was canceled. Clear the message label.\n    Message.Text = &quot;&quot;;\n    \n  }\n\n  void CustomersGridView_RowEditing(Object sender, GridViewEditEventArgs e)\n  {\n    // The GridView control is entering edit mode. Clear the message label.\n    Message.Text = &quot;&quot;;\n  }\n    \n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdated Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdated Example&lt;/h3&gt;\n            \n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;          \n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdated=&quot;CustomersGridView_RowUpdated&quot;\n        onrowcancelingedit=&quot;CustomersGridView_RowCancelingEdit&quot;\n        onrowediting=&quot;CustomersGridView_RowEditing&quot;   \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_RowUpdating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowUpdating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowUpdating event is raised when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled. To cancel the update operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> object to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> collections are automatically populated only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to data by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSourceID_\" data-linktype=\"relative-path\">DataSourceID</a> property.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the RowUpdating event to update the values in the data source object when the data source is set programmatically.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void Page_Load(object sender, EventArgs e)\n  {\n          \n    if (!Page.IsPostBack)\n    {\n      // Create a new table.\n      DataTable taskTable = new DataTable(&quot;TaskList&quot;);\n      \n      // Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, typeof(int));\n      taskTable.Columns.Add(&quot;Description&quot;, typeof(string));\n      taskTable.Columns.Add(&quot;IsComplete&quot;, typeof(bool) );\n\n      //Add data to the new table.\n      for (int i = 0; i &lt; 20; i++)\n      {\n        DataRow tableRow = taskTable.NewRow();\n        tableRow[&quot;Id&quot;] = i;\n        tableRow[&quot;Description&quot;] = &quot;Task &quot; + i.ToString();\n        tableRow[&quot;IsComplete&quot;] = false;            \n        taskTable.Rows.Add(tableRow);\n      }\n\n      //Persist the table in the Session object.\n      Session[&quot;TaskTable&quot;] = taskTable;\n\n      //Bind data to the GridView control.\n      BindData();\n    }\n\n  }\n\n  protected void TaskGridView_PageIndexChanging(object sender, GridViewPageEventArgs e)\n  {\n    TaskGridView.PageIndex = e.NewPageIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowEditing(object sender, GridViewEditEventArgs e)\n  {\n    //Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)\n  {\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  protected void TaskGridView_RowUpdating(object sender, GridViewUpdateEventArgs e)\n  {    \n    //Retrieve the table from the session object.\n    DataTable dt = (DataTable)Session[&quot;TaskTable&quot;];\n\n    //Update the values.\n    GridViewRow row = TaskGridView.Rows[e.RowIndex];\n    dt.Rows[row.DataItemIndex][&quot;Id&quot;] = ((TextBox)(row.Cells[1].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;Description&quot;] = ((TextBox)(row.Cells[2].Controls[0])).Text;\n    dt.Rows[row.DataItemIndex][&quot;IsComplete&quot;] = ((CheckBox)(row.Cells[3].Controls[0])).Checked;\n\n    //Reset the edit index.\n    TaskGridView.EditIndex = -1;\n\n    //Bind data to the GridView control.\n    BindData();\n  }\n\n  private void BindData()\n  {\n    TaskGridView.DataSource = Session[&quot;TaskTable&quot;];\n    TaskGridView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewRowEditing#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub Page_Load()\n\n    If Not Page.IsPostBack Then\n      &#39; Create a new table.\n      Dim taskTable As New DataTable(&quot;TaskList&quot;)\n\n      &#39; Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, GetType(Integer))\n      taskTable.Columns.Add(&quot;Description&quot;, GetType(String))\n      taskTable.Columns.Add(&quot;IsComplete&quot;, GetType(Boolean))\n\n      &#39;Add data to the new table.\n      For i = 0 To 19\n        Dim tableRow = taskTable.NewRow()\n        tableRow(&quot;Id&quot;) = i\n        tableRow(&quot;Description&quot;) = &quot;Task &quot; + i.ToString()\n        tableRow(&quot;IsComplete&quot;) = False\n        taskTable.Rows.Add(tableRow)\n      Next\n\n      &#39;Persist the table in the Session object.\n      Session(&quot;TaskTable&quot;) = taskTable\n\n      &#39;Bind data to the GridView control.\n      BindData()\n    End If\n\n  End Sub\n  \n  Protected Sub TaskGridView_PageIndexChanging(ByVal sender As Object, ByVal e As GridViewPageEventArgs)\n    TaskGridView.PageIndex = e.NewPageIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowEditing(ByVal sender As Object, ByVal e As GridViewEditEventArgs)\n    &#39;Set the edit index.\n    TaskGridView.EditIndex = e.NewEditIndex\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowCancelingEdit()\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Protected Sub TaskGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    &#39;Retrieve the table from the session object.\n    Dim dt = CType(Session(&quot;TaskTable&quot;), DataTable)\n\n    &#39;Update the values.\n    Dim row = TaskGridView.Rows(e.RowIndex)\n    dt.Rows(row.DataItemIndex)(&quot;Id&quot;) = (CType((row.Cells(1).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;Description&quot;) = (CType((row.Cells(2).Controls(0)), TextBox)).Text\n    dt.Rows(row.DataItemIndex)(&quot;IsComplete&quot;) = (CType((row.Cells(3).Controls(0)), CheckBox)).Checked\n\n    &#39;Reset the edit index.\n    TaskGridView.EditIndex = -1\n\n    &#39;Bind data to the GridView control.\n    BindData()\n  End Sub\n\n  Private Sub BindData()\n    TaskGridView.DataSource = Session(&quot;TaskTable&quot;)\n    TaskGridView.DataBind()\n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AutoGenerateEditButton=&quot;True&quot; \n        AllowPaging=&quot;true&quot;\n        OnRowEditing=&quot;TaskGridView_RowEditing&quot;         \n        OnRowCancelingEdit=&quot;TaskGridView_RowCancelingEdit&quot; \n        OnRowUpdating=&quot;TaskGridView_RowUpdating&quot;\n        OnPageIndexChanging=&quot;TaskGridView_PageIndexChanging&quot;&gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Select button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SelectedIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectedIndexChanged event is raised when a row&#39;s Select button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedIndexChanged event to display the name of the customer in the selected row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_SelectedIndexChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedIndexChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s Select button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectedIndexChanging event is raised when a row&#39;s Select button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is not raised when you programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_SelectedIndex_\" data-linktype=\"relative-path\">SelectedIndex</a> property.  </p>\n</div>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewselecteventargs\" data-linktype=\"relative-path\">GridViewSelectEventArgs</a> object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewselecteventargs\" data-linktype=\"relative-path\">GridViewSelectEventArgs</a> object to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SelectedIndexChanging event to cancel a select operation.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_SelectedIndexChanged(Object sender, EventArgs e)\n  {\n    // Get the currently selected row using the SelectedRow property.\n    GridViewRow row = CustomersGridView.SelectedRow;\n        \n    // Display the first name from the selected row.\n    // In this example, the third column (index 2) contains\n    // the first name.\n    MessageLabel.Text = &quot;You selected &quot; + row.Cells[2].Text + &quot;.&quot;;\n  }\n\n  void CustomersGridView_SelectedIndexChanging(Object sender, GridViewSelectEventArgs e)\n  {\n    // Get the currently selected row. Because the SelectedIndexChanging event\n    // occurs before the select operation in the GridView control, the\n    // SelectedRow property cannot be used. Instead, use the Rows collection\n    // and the NewSelectedIndex property of the e argument passed to this \n    // event handler.\n    GridViewRow row = CustomersGridView.Rows[e.NewSelectedIndex];\n\n    // You can cancel the select operation by using the Cancel\n    // property. For this example, if the user selects a customer with \n    // the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    // is displayed.\n    if (row.Cells[1].Text == &quot;ANATR&quot;)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You cannot select &quot; + row.Cells[2].Text + &quot;.&quot;; \n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSelect#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs)\n        \n    &#39; Get the currently selected row using the SelectedRow property.\n    Dim row As GridViewRow = CustomersGridView.SelectedRow\n        \n    &#39; Display the first name from the selected row.\n    &#39; In this example, the third column (index 2) contains\n    &#39; the first name.\n    MessageLabel.Text = &quot;You selected &quot; &amp; row.Cells(2).Text &amp; &quot;.&quot;\n  End Sub\n\n  Sub CustomersGridView_SelectedIndexChanging(ByVal sender As Object, ByVal e As GridViewSelectEventArgs)\n        \n    &#39; Get the currently selected row. Because the SelectedIndexChanging event\n    &#39; occurs before the select operation in the GridView control, the\n    &#39; SelectedRow property cannot be used. Instead, use the Rows collection\n    &#39; and the NewSelectedIndex property of the e argument passed to this \n    &#39; event handler.\n    Dim row As GridViewRow = CustomersGridView.Rows(e.NewSelectedIndex)\n\n    &#39; You can cancel the select operation by using the Cancel\n    &#39; property. For this example, if the user selects a customer with \n    &#39; the ID &quot;ANATR&quot;, the select operation is canceled and an error message\n    &#39; is displayed.\n    If row.Cells(1).Text = &quot;ANATR&quot; Then\n        e.Cancel = True\n        MessageLabel.Text = &quot;You cannot select &quot; + row.Cells(2).Text &amp; &quot;.&quot;\n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Select Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n     &lt;h3&gt;GridView Select Example&lt;/h3&gt;\n\n     &lt;asp:gridview id=&quot;CustomersGridView&quot; \n       datasourceid=&quot;CustomersSource&quot; \n       autogeneratecolumns=&quot;False&quot;\n       autogenerateselectbutton=&quot;True&quot;\n       selectedindex=&quot;1&quot;\n       onselectedindexchanged=&quot;CustomersGridView_SelectedIndexChanged&quot;\n       onselectedindexchanging=&quot;CustomersGridView_SelectedIndexChanging&quot;   \n       runat=&quot;server&quot; DataKeyNames=&quot;CustomerID&quot;&gt;\n                \n         &lt;Columns&gt;\n             &lt;asp:BoundField DataField=&quot;CustomerID&quot; \n                 HeaderText=&quot;CustomerID&quot; \n                 InsertVisible=&quot;False&quot; ReadOnly=&quot;True&quot; \n                 SortExpression=&quot;CustomerID&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;FirstName&quot; \n                 HeaderText=&quot;FirstName&quot; \n                 SortExpression=&quot;FirstName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;MiddleName&quot; \n                 HeaderText=&quot;MiddleName&quot; \n                 SortExpression=&quot;MiddleName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;LastName&quot; \n                 HeaderText=&quot;LastName&quot; \n                 SortExpression=&quot;LastName&quot; /&gt;\n             &lt;asp:BoundField DataField=&quot;Phone&quot; \n                 HeaderText=&quot;Phone&quot; \n                 SortExpression=&quot;Phone&quot; /&gt;\n         &lt;/Columns&gt;\n                \n       &lt;selectedrowstyle backcolor=&quot;LightCyan&quot;\n         forecolor=&quot;DarkBlue&quot;\n         font-bold=&quot;true&quot;/&gt;  \n                \n     &lt;/asp:gridview&gt;\n            \n      &lt;br/&gt;\n            \n      &lt;asp:label id=&quot;MessageLabel&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;SELECT CustomerID, FirstName, MiddleName, LastName, Phone FROM SalesLT.Customer&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:AdventureWorksLTConnectionString %&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n            \n    &lt;/form&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Sorted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sorted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the hyperlink to sort a column is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Sorted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Sorted event is raised when the hyperlink to sort a column is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Sorted event to display the name of the column being sorted.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_Sorting(sender As Object, e As GridViewSortEventArgs)\n  \n    &#39; Cancel the sorting operation if the user attempts\n    &#39; to sort by address.\n    If e.SortExpression = &quot;Address&quot; Then\n    \n      e.Cancel = True\n      Message.Text = &quot;You cannot sort by address.&quot;\n      SortInformationLabel.Text = &quot;&quot;\n    \n    Else\n    \n      Message.Text = &quot;&quot;\n      \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_Sorted(ByVal sender As Object, ByVal e As EventArgs)\n \n    &#39; Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; &amp; _\n      CustomersGridView.SortExpression.ToString() &amp; _\n      &quot; in &quot; &amp; CustomersGridView.SortDirection.ToString() &amp; _\n      &quot; order.&quot;\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorted and Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorted and Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_Sorting(Object sender, GridViewSortEventArgs e)\n  {\n    // Cancel the sorting operation if the user attempts\n    // to sort by address.\n    if (e.SortExpression == &quot;Address&quot;)\n    {\n      e.Cancel = true;\n      Message.Text = &quot;You cannot sort by address.&quot;;\n      SortInformationLabel.Text = &quot;&quot;;\n    }\n    else\n    {\n      Message.Text = &quot;&quot;;\n    }\n  }\n\n  void CustomersGridView_Sorted(Object sender, EventArgs e)\n  {\n    // Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; +\n      CustomersGridView.SortExpression.ToString() +\n      &quot; in &quot; + CustomersGridView.SortDirection.ToString() +\n      &quot; order.&quot;;\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_Sorting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sorting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Sorting event is raised when the hyperlink to sort a column is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewsorteventargs\" data-linktype=\"relative-path\">GridViewSortEventArgs</a> object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewsorteventargs\" data-linktype=\"relative-path\">GridViewSortEventArgs</a> object to <code>true</code>.  </p>\n<p> For information about how to programmatically initiate a sort operation, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Sort_\" data-linktype=\"relative-path\">Sort</a> method.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Sorting event to perform the sorting functionality when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is bound to a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property programmatically.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewSorting#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  protected void TaskGridView_Sorting(object sender, GridViewSortEventArgs e)\n  {\n\n    //Retrieve the table from the session object.\n    DataTable dt = Session[&quot;TaskTable&quot;] as DataTable;\n\n    if (dt != null)\n    {\n\n      //Sort the data.\n      dt.DefaultView.Sort = e.SortExpression + &quot; &quot; + GetSortDirection(e.SortExpression);\n      TaskGridView.DataSource = Session[&quot;TaskTable&quot;];\n      TaskGridView.DataBind();\n    }\n\n  }\n\n  private string GetSortDirection(string column)\n  {\n\n    // By default, set the sort direction to ascending.\n    string sortDirection = &quot;ASC&quot;;\n\n    // Retrieve the last column that was sorted.\n    string sortExpression = ViewState[&quot;SortExpression&quot;] as string;\n\n    if (sortExpression != null)\n    {\n      // Check if the same column is being sorted.\n      // Otherwise, the default value can be returned.\n      if (sortExpression == column)\n      {\n        string lastDirection = ViewState[&quot;SortDirection&quot;] as string;\n        if ((lastDirection != null) &amp;&amp; (lastDirection == &quot;ASC&quot;))\n        {\n          sortDirection = &quot;DESC&quot;;\n        }\n      }\n    }\n\n    // Save new values in ViewState.\n    ViewState[&quot;SortDirection&quot;] = sortDirection;\n    ViewState[&quot;SortExpression&quot;] = column;\n\n    return sortDirection;\n  }\n    \n  protected void Page_Load(object sender, EventArgs e)\n  {\n          \n    if (!Page.IsPostBack)\n    {\n\n      // Create a new table.\n      DataTable taskTable = new DataTable(&quot;TaskList&quot;);\n\n      // Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, typeof(int));\n      taskTable.Columns.Add(&quot;Description&quot;, typeof(string));\n\n      //Add data to the new table.\n      for (int i = 0; i &lt; 10; i++)\n      {\n        DataRow tableRow = taskTable.NewRow();\n        tableRow[&quot;Id&quot;] = i;\n        tableRow[&quot;Description&quot;] = &quot;Task &quot; + (10 - i).ToString();\n        taskTable.Rows.Add(tableRow);\n      }\n\n      //Persist the table in the Session object.\n      Session[&quot;TaskTable&quot;] = taskTable;\n\n      //Bind the GridView control to the data source.\n      TaskGridView.DataSource = Session[&quot;TaskTable&quot;];\n      TaskGridView.DataBind();\n      \n    }\n\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Sorting example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AllowSorting=&quot;true&quot; \n        OnSorting=&quot;TaskGridView_Sorting&quot; &gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewSorting#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub TaskGridView_Sorting(ByVal sender As Object, ByVal e As GridViewSortEventArgs)\n    \n    &#39;Retrieve the table from the session object.\n    Dim dt = TryCast(Session(&quot;TaskTable&quot;), DataTable)\n    \n    If dt IsNot Nothing Then\n        \n      &#39;Sort the data.\n      dt.DefaultView.Sort = e.SortExpression &amp; &quot; &quot; &amp; GetSortDirection(e.SortExpression)\n      TaskGridView.DataSource = Session(&quot;TaskTable&quot;)\n      TaskGridView.DataBind()\n      \n    End If\n\n  End Sub\n \n\n  Private Function GetSortDirection(ByVal column As String) As String\n    \n    &#39; By default, set the sort direction to ascending.\n    Dim sortDirection = &quot;ASC&quot;\n    \n    &#39; Retrieve the last column that was sorted.\n    Dim sortExpression = TryCast(ViewState(&quot;SortExpression&quot;), String)\n    \n    If sortExpression IsNot Nothing Then\n      &#39; Check if the same column is being sorted.\n      &#39; Otherwise, the default value can be returned.\n      If sortExpression = column Then\n        Dim lastDirection = TryCast(ViewState(&quot;SortDirection&quot;), String)\n        If lastDirection IsNot Nothing _\n          AndAlso lastDirection = &quot;ASC&quot; Then\n          \n          sortDirection = &quot;DESC&quot;\n          \n        End If\n      End If\n    End If\n    \n    &#39; Save new values in ViewState.\n    ViewState(&quot;SortDirection&quot;) = sortDirection\n    ViewState(&quot;SortExpression&quot;) = column\n    \n    Return sortDirection\n\n  End Function\n\n  Protected Sub Page_Load()\n    \n    If Not Page.IsPostBack Then\n        \n      &#39; Create a new table.\n      Dim taskTable As New DataTable(&quot;TaskList&quot;)\n        \n      &#39; Create the columns.\n      taskTable.Columns.Add(&quot;Id&quot;, GetType(Integer))\n      taskTable.Columns.Add(&quot;Description&quot;, GetType(String))\n        \n      &#39;Add data to the new table.\n      For i = 0 To 9\n        Dim tableRow As DataRow = taskTable.NewRow()\n        tableRow(&quot;Id&quot;) = i\n        tableRow(&quot;Description&quot;) = &quot;Task &quot; &amp; (10 - i)\n        taskTable.Rows.Add(tableRow)\n      Next i\n        \n      &#39;Persist the table in the Session object.\n      Session(&quot;TaskTable&quot;) = taskTable\n        \n      &#39;Bind the GridView control to the data source.\n      TaskGridView.DataSource = Session(&quot;TaskTable&quot;)\n      TaskGridView.DataBind()\n    End If\n \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;Sorting example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n    \n      &lt;asp:GridView ID=&quot;TaskGridView&quot; runat=&quot;server&quot; \n        AllowSorting=&quot;true&quot; \n        OnSorting=&quot;TaskGridView_Sorting&quot; &gt;\n      &lt;/asp:GridView&gt;\n    \n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example demonstrates how to use the Sorting event to cancel a sorting operation.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomersGridView_Sorting(sender As Object, e As GridViewSortEventArgs)\n  \n    &#39; Cancel the sorting operation if the user attempts\n    &#39; to sort by address.\n    If e.SortExpression = &quot;Address&quot; Then\n    \n      e.Cancel = True\n      Message.Text = &quot;You cannot sort by address.&quot;\n      SortInformationLabel.Text = &quot;&quot;\n    \n    Else\n    \n      Message.Text = &quot;&quot;\n      \n    End If\n    \n  End Sub\n\n  Sub CustomersGridView_Sorted(ByVal sender As Object, ByVal e As EventArgs)\n \n    &#39; Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; &amp; _\n      CustomersGridView.SortExpression.ToString() &amp; _\n      &quot; in &quot; &amp; CustomersGridView.SortDirection.ToString() &amp; _\n      &quot; order.&quot;\n    \n  End Sub\n    \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorted and Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorted and Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewSorting#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomersGridView_Sorting(Object sender, GridViewSortEventArgs e)\n  {\n    // Cancel the sorting operation if the user attempts\n    // to sort by address.\n    if (e.SortExpression == &quot;Address&quot;)\n    {\n      e.Cancel = true;\n      Message.Text = &quot;You cannot sort by address.&quot;;\n      SortInformationLabel.Text = &quot;&quot;;\n    }\n    else\n    {\n      Message.Text = &quot;&quot;;\n    }\n  }\n\n  void CustomersGridView_Sorted(Object sender, EventArgs e)\n  {\n    // Display the sort expression and sort direction.\n    SortInformationLabel.Text = &quot;Sorting by &quot; +\n      CustomersGridView.SortExpression.ToString() +\n      &quot; in &quot; + CustomersGridView.SortDirection.ToString() +\n      &quot; order.&quot;;\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView Sorting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView Sorting Example&lt;/h3&gt;\n\n      &lt;asp:label id=&quot;Message&quot;\n        forecolor=&quot;Red&quot;\n        runat=&quot;server&quot;/&gt;\n        \n      &lt;br/&gt;\n        \n      &lt;asp:label id=&quot;SortInformationLabel&quot;\n        forecolor=&quot;Navy&quot;\n        runat=&quot;server&quot;/&gt;\n                \n      &lt;br/&gt;  \n\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        allowpaging=&quot;true&quot;\n        emptydatatext=&quot;No data available.&quot; \n        allowsorting=&quot;true&quot;\n        onsorting=&quot;CustomersGridView_Sorting&quot;\n        onsorted=&quot;CustomersGridView_Sorted&quot;  \n        runat=&quot;server&quot;&gt;\n                \n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSource&quot;\n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n        runat=&quot;server&quot;/&gt;\n        \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_GetCallbackResult\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_GetCallbackResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackEventHandler.GetCallbackResult()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string ICallbackEventHandler.GetCallbackResult ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The results of the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control implements the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler\" data-linktype=\"relative-path\">ICallbackEventHandler</a> interface and uses the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> to asynchronously retrieve data and the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a> method to return the retrieved data to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackEventHandler.RaiseCallbackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument to pass to the event handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ICallbackEventHandler.RaiseCallbackEvent is a helper method that is used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create the arguments for the callback handler in the <a class=\"xref\" href=\"system.web.ui.clientscriptmanager#System_Web_UI_ClientScriptManager_GetCallbackEventReference_\" data-linktype=\"relative-path\">GetCallbackEventReference</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_IDataKeysControl_ClientIDRowSuffixDataKeys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_IDataKeysControl_ClientIDRowSuffixDataKeys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataKeysControl.ClientIDRowSuffixDataKeys</div>        \r\n          </div>\r\n    \r\n            <p>Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakeyarray\" data-linktype=\"relative-path\">DataKeyArray</a></div>\r\n                  </div>\r\n                  <p>The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.idatakeyscontrol\" data-linktype=\"relative-path\">IDataKeysControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPostBackEventHandler.RaisePostBackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control when it posts back to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event argument from which to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> for the event or events that are raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page calls the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> method when a postback event occurs to raise the appropriate events for a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> object for the event or events that are raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackContainer.GetCallbackScript(IButtonControl,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the callback script for a button that performs a sorting operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The button control for which to create the callback script.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments to pass to the callback script.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The callback script for a button that performs a sorting operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ICallbackContainer.GetCallbackScript is a helper method that is used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control to create the callback script for a button that performs a sorting operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataKeyNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the names of the primary key fields for the items displayed in a data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array that contains the names of the primary-key fields for the items that are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.  </p>\n<p> This property provides access to the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control. It is exposed through the <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> Interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataMember\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataMember</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the table that is exposed by the data source control to bind to the data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The table that is exposed by the data source control to bind to the data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.  </p>\n<p> If the data source contains multiple sources of data, use this property to set the specific data table, collection, or other data for the control to bind to. For example, if the data source is a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance that contains multiple tables, you can specify which table to bind the control to by using this property.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSource\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data source object from which the data-bound control retrieves the list of data items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The data source object that the data-bound control uses.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSourceID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the ID of the data source from which the data-bound control retrieves the list of data items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The ID of the data source from which the data-bound control retrieves data items.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSourceObject</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data source object from which the data-bound control retrieves the list of data items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.idatasource\" data-linktype=\"relative-path\">IDataSource</a></div>\r\n                  </div>\r\n                  <p>The data source object from which the data-bound control retrieves the list of data items</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_ClientIDRowSuffix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundListControl.ClientIDRowSuffix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the names of the data fields whose values are appended to the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> property value to uniquely identify each instance of a data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>The names of the data fields whose values are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <span class=\"xref\">stem.Web.UI.Control.ClientID*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol\" data-linktype=\"relative-path\">IDataBoundListControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_DataKeys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_DataKeys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundListControl.DataKeys</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of objects that represent the <span class=\"xref\">stem.Web.UI.WebControls.GridView.DataKeys*</span> value in a data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakeyarray\" data-linktype=\"relative-path\">DataKeyArray</a></div>\r\n                  </div>\r\n                  <p>An array that contains the data key of each row in a data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol\" data-linktype=\"relative-path\">IDataBoundListControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_EnablePersistedSelection\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_EnablePersistedSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundListControl.EnablePersistedSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the selection of a row is based on index or on data-key values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row selection is based on data-key values; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol\" data-linktype=\"relative-path\">IDataBoundListControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedDataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedDataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundListControl.SelectedDataKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object that contains the data key value for the selected row in a data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>The data-key value for the selected row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol\" data-linktype=\"relative-path\">IDataBoundListControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IDataBoundListControl_SelectedIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundListControl.SelectedIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the selected row in the data-bound control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the selected row in the data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundlistcontrol\" data-linktype=\"relative-path\">IDataBoundListControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IFieldControl.FieldsGenerator</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the control that automatically generates the columns for a data-bound control for use by ASP.NET Dynamic Data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a></div>\r\n                  </div>\r\n                  <p>The control that automatically generates the columns for a data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.ifieldcontrol\" data-linktype=\"relative-path\">IFieldControl</a> interface.  </p>\n<p> ASP.NET Dynamic Data supports this property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPersistedSelector_DataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPersistedSelector_DataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPersistedSelector.DataKey</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.IPersistedSelector.DataKey*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>The data-key value for the persisted selected record in a data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can specify how selected rows are persisted when the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is in paging mode. By default, row selection is based on row index. The same row (for example, the third row) is selected on each page. Alternatively, you can enable persistence based on the data key of the selected row. In that case, if you select row 3 on page 1 and you move to page 2, no row is selected on page 2. If you move back to page 1, row 3 is still selected. To enable this functionality, set this property to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In versions 2.0, 3.0, and 3.5 of ASP.NET, row selection was based only on row index. By default, row selection in ASP.NET 4 is based on index for backward compatibility.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_System_Web_UI_WebControls_IButtonControl_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPostBackContainer.GetPostBackOptions(IButtonControl)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a> object that represents the postback behavior of the specified button control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The button control for which to create the callback script.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a> that represents the postback behavior of the specified button control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>buttonControl</code> parameter contains <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>buttonControl</code> causes validation and is attempting to post back to the same container it validates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.GridView.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.GridView.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AllowCustomPaging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AllowPaging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AllowSorting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AlternatingRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AutoGenerateColumns\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AutoGenerateEditButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.AutoGenerateSelectButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.BackImageUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.BottomPagerRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Caption\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CaptionAlign\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CellPadding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CellSpacing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ClientIDRowSuffix\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Columns\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ColumnsGenerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateChildControls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateChildTable\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateColumns\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateControlStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.CreateRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.DataBind\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.DataKeyNames\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.DataKeys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.DeleteMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.DeleteRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EditIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EditRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EmptyDataRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EmptyDataTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EmptyDataText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EnableModelValidation\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EnablePersistedSelection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ExtractRowValues\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.FooterRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.FooterStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.GetCallbackResult\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.GetCallbackScript\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.GridLines\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.HeaderRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.HeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.HorizontalAlign\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.InitializePager\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.InitializeRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IsBindableType\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.LoadControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnBubbleEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnDataPropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnDataSourceViewChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnInit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnPageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnPageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnPagePreLoad\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnPreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowCancelingEdit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowDataBound\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowEditing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnRowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnSelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnSelectedIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnSorted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.OnSorting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PageCount\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PageIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PagerSettings\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PagerStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PagerTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PageSize\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PerformDataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.PrepareControlHierarchy\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RaiseCallbackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RaisePostBackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Render\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowCancelingEdit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowCancelingEdit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowCancelingEdit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowDataBound\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowDataBound\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowDataBound\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowEditing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowEditing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowEditing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowHeaderColumn\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Rows\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_RowUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SaveControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedDataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_SelectedIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_SelectedIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedPersistedDataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectedValue\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SelectRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SetEditRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SetPageIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ShowFooter\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ShowHeader\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Sort\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortDirection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Sorted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_Sorted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_Sorted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortedAscendingCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortedDescendingCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.SortExpression\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.Sorting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.add_Sorting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.remove_Sorting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ICallbackEventHandler.GetCallbackResult\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ICallbackEventHandler.RaiseCallbackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataKeysControl.ClientIDRowSuffixDataKeys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IPostBackEventHandler.RaisePostBackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.ICallbackContainer.GetCallbackScript\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundControl.DataKeyNames\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundControl.DataMember\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundControl.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundControl.DataSourceID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundControl.DataSourceObject\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundListControl.ClientIDRowSuffix\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundListControl.DataKeys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundListControl.EnablePersistedSelection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundListControl.SelectedDataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IDataBoundListControl.SelectedIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IFieldControl.FieldsGenerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IPersistedSelector.DataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.IPostBackContainer.GetPostBackOptions\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.TagKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.TopPagerRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.UpdateMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.UpdateRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.UseAccessibleHeader\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridView.VirtualItemCount\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"07f56b20-b0c4-b136-26e0-36c21f3e4ae2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridView\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.GridView.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.GridView.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.GridView","System.Web.UI.WebControls.GridView..ctor","System.Web.UI.WebControls.GridView.AllowCustomPaging","System.Web.UI.WebControls.GridView.AllowPaging","System.Web.UI.WebControls.GridView.AllowSorting","System.Web.UI.WebControls.GridView.AlternatingRowStyle","System.Web.UI.WebControls.GridView.AutoGenerateColumns","System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton","System.Web.UI.WebControls.GridView.AutoGenerateEditButton","System.Web.UI.WebControls.GridView.AutoGenerateSelectButton","System.Web.UI.WebControls.GridView.BackImageUrl","System.Web.UI.WebControls.GridView.BottomPagerRow","System.Web.UI.WebControls.GridView.Caption","System.Web.UI.WebControls.GridView.CaptionAlign","System.Web.UI.WebControls.GridView.CellPadding","System.Web.UI.WebControls.GridView.CellSpacing","System.Web.UI.WebControls.GridView.ClientIDRowSuffix","System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys","System.Web.UI.WebControls.GridView.Columns","System.Web.UI.WebControls.GridView.ColumnsGenerator","System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn","System.Web.UI.WebControls.GridView.CreateChildControls","System.Web.UI.WebControls.GridView.CreateChildTable","System.Web.UI.WebControls.GridView.CreateColumns","System.Web.UI.WebControls.GridView.CreateControlStyle","System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments","System.Web.UI.WebControls.GridView.CreateRow","System.Web.UI.WebControls.GridView.DataBind","System.Web.UI.WebControls.GridView.DataKeyNames","System.Web.UI.WebControls.GridView.DataKeys","System.Web.UI.WebControls.GridView.DeleteMethod","System.Web.UI.WebControls.GridView.DeleteRow","System.Web.UI.WebControls.GridView.EditIndex","System.Web.UI.WebControls.GridView.EditRowStyle","System.Web.UI.WebControls.GridView.EmptyDataRowStyle","System.Web.UI.WebControls.GridView.EmptyDataTemplate","System.Web.UI.WebControls.GridView.EmptyDataText","System.Web.UI.WebControls.GridView.EnableModelValidation","System.Web.UI.WebControls.GridView.EnablePersistedSelection","System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks","System.Web.UI.WebControls.GridView.ExtractRowValues","System.Web.UI.WebControls.GridView.FooterRow","System.Web.UI.WebControls.GridView.FooterStyle","System.Web.UI.WebControls.GridView.GetCallbackResult","System.Web.UI.WebControls.GridView.GetCallbackScript","System.Web.UI.WebControls.GridView.GridLines","System.Web.UI.WebControls.GridView.HeaderRow","System.Web.UI.WebControls.GridView.HeaderStyle","System.Web.UI.WebControls.GridView.HorizontalAlign","System.Web.UI.WebControls.GridView.InitializePager","System.Web.UI.WebControls.GridView.InitializeRow","System.Web.UI.WebControls.GridView.IsBindableType","System.Web.UI.WebControls.GridView.LoadControlState","System.Web.UI.WebControls.GridView.LoadViewState","System.Web.UI.WebControls.GridView.OnBubbleEvent","System.Web.UI.WebControls.GridView.OnDataPropertyChanged","System.Web.UI.WebControls.GridView.OnDataSourceViewChanged","System.Web.UI.WebControls.GridView.OnInit","System.Web.UI.WebControls.GridView.OnPageIndexChanged","System.Web.UI.WebControls.GridView.OnPageIndexChanging","System.Web.UI.WebControls.GridView.OnPagePreLoad","System.Web.UI.WebControls.GridView.OnPreRender","System.Web.UI.WebControls.GridView.OnRowCancelingEdit","System.Web.UI.WebControls.GridView.OnRowCommand","System.Web.UI.WebControls.GridView.OnRowCreated","System.Web.UI.WebControls.GridView.OnRowDataBound","System.Web.UI.WebControls.GridView.OnRowDeleted","System.Web.UI.WebControls.GridView.OnRowDeleting","System.Web.UI.WebControls.GridView.OnRowEditing","System.Web.UI.WebControls.GridView.OnRowUpdated","System.Web.UI.WebControls.GridView.OnRowUpdating","System.Web.UI.WebControls.GridView.OnSelectedIndexChanged","System.Web.UI.WebControls.GridView.OnSelectedIndexChanging","System.Web.UI.WebControls.GridView.OnSorted","System.Web.UI.WebControls.GridView.OnSorting","System.Web.UI.WebControls.GridView.PageCount","System.Web.UI.WebControls.GridView.PageIndex","System.Web.UI.WebControls.GridView.PageIndexChanged","System.Web.UI.WebControls.GridView.add_PageIndexChanged","System.Web.UI.WebControls.GridView.remove_PageIndexChanged","System.Web.UI.WebControls.GridView.PageIndexChanging","System.Web.UI.WebControls.GridView.add_PageIndexChanging","System.Web.UI.WebControls.GridView.remove_PageIndexChanging","System.Web.UI.WebControls.GridView.PagerSettings","System.Web.UI.WebControls.GridView.PagerStyle","System.Web.UI.WebControls.GridView.PagerTemplate","System.Web.UI.WebControls.GridView.PageSize","System.Web.UI.WebControls.GridView.PerformDataBinding","System.Web.UI.WebControls.GridView.PrepareControlHierarchy","System.Web.UI.WebControls.GridView.RaiseCallbackEvent","System.Web.UI.WebControls.GridView.RaisePostBackEvent","System.Web.UI.WebControls.GridView.Render","System.Web.UI.WebControls.GridView.RowCancelingEdit","System.Web.UI.WebControls.GridView.add_RowCancelingEdit","System.Web.UI.WebControls.GridView.remove_RowCancelingEdit","System.Web.UI.WebControls.GridView.RowCommand","System.Web.UI.WebControls.GridView.add_RowCommand","System.Web.UI.WebControls.GridView.remove_RowCommand","System.Web.UI.WebControls.GridView.RowCreated","System.Web.UI.WebControls.GridView.add_RowCreated","System.Web.UI.WebControls.GridView.remove_RowCreated","System.Web.UI.WebControls.GridView.RowDataBound","System.Web.UI.WebControls.GridView.add_RowDataBound","System.Web.UI.WebControls.GridView.remove_RowDataBound","System.Web.UI.WebControls.GridView.RowDeleted","System.Web.UI.WebControls.GridView.add_RowDeleted","System.Web.UI.WebControls.GridView.remove_RowDeleted","System.Web.UI.WebControls.GridView.RowDeleting","System.Web.UI.WebControls.GridView.add_RowDeleting","System.Web.UI.WebControls.GridView.remove_RowDeleting","System.Web.UI.WebControls.GridView.RowEditing","System.Web.UI.WebControls.GridView.add_RowEditing","System.Web.UI.WebControls.GridView.remove_RowEditing","System.Web.UI.WebControls.GridView.RowHeaderColumn","System.Web.UI.WebControls.GridView.Rows","System.Web.UI.WebControls.GridView.RowStyle","System.Web.UI.WebControls.GridView.RowUpdated","System.Web.UI.WebControls.GridView.add_RowUpdated","System.Web.UI.WebControls.GridView.remove_RowUpdated","System.Web.UI.WebControls.GridView.RowUpdating","System.Web.UI.WebControls.GridView.add_RowUpdating","System.Web.UI.WebControls.GridView.remove_RowUpdating","System.Web.UI.WebControls.GridView.SaveControlState","System.Web.UI.WebControls.GridView.SaveViewState","System.Web.UI.WebControls.GridView.SelectedDataKey","System.Web.UI.WebControls.GridView.SelectedIndex","System.Web.UI.WebControls.GridView.SelectedIndexChanged","System.Web.UI.WebControls.GridView.add_SelectedIndexChanged","System.Web.UI.WebControls.GridView.remove_SelectedIndexChanged","System.Web.UI.WebControls.GridView.SelectedIndexChanging","System.Web.UI.WebControls.GridView.add_SelectedIndexChanging","System.Web.UI.WebControls.GridView.remove_SelectedIndexChanging","System.Web.UI.WebControls.GridView.SelectedPersistedDataKey","System.Web.UI.WebControls.GridView.SelectedRow","System.Web.UI.WebControls.GridView.SelectedRowStyle","System.Web.UI.WebControls.GridView.SelectedValue","System.Web.UI.WebControls.GridView.SelectRow","System.Web.UI.WebControls.GridView.SetEditRow","System.Web.UI.WebControls.GridView.SetPageIndex","System.Web.UI.WebControls.GridView.ShowFooter","System.Web.UI.WebControls.GridView.ShowHeader","System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty","System.Web.UI.WebControls.GridView.Sort","System.Web.UI.WebControls.GridView.SortDirection","System.Web.UI.WebControls.GridView.Sorted","System.Web.UI.WebControls.GridView.add_Sorted","System.Web.UI.WebControls.GridView.remove_Sorted","System.Web.UI.WebControls.GridView.SortedAscendingCellStyle","System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle","System.Web.UI.WebControls.GridView.SortedDescendingCellStyle","System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle","System.Web.UI.WebControls.GridView.SortExpression","System.Web.UI.WebControls.GridView.Sorting","System.Web.UI.WebControls.GridView.add_Sorting","System.Web.UI.WebControls.GridView.remove_Sorting","System.Web.UI.WebControls.GridView.ICallbackEventHandler.GetCallbackResult","System.Web.UI.WebControls.GridView.ICallbackEventHandler.RaiseCallbackEvent","System.Web.UI.WebControls.GridView.IDataKeysControl.ClientIDRowSuffixDataKeys","System.Web.UI.WebControls.GridView.IPostBackEventHandler.RaisePostBackEvent","System.Web.UI.WebControls.GridView.ICallbackContainer.GetCallbackScript","System.Web.UI.WebControls.GridView.IDataBoundControl.DataKeyNames","System.Web.UI.WebControls.GridView.IDataBoundControl.DataMember","System.Web.UI.WebControls.GridView.IDataBoundControl.DataSource","System.Web.UI.WebControls.GridView.IDataBoundControl.DataSourceID","System.Web.UI.WebControls.GridView.IDataBoundControl.DataSourceObject","System.Web.UI.WebControls.GridView.IDataBoundListControl.ClientIDRowSuffix","System.Web.UI.WebControls.GridView.IDataBoundListControl.DataKeys","System.Web.UI.WebControls.GridView.IDataBoundListControl.EnablePersistedSelection","System.Web.UI.WebControls.GridView.IDataBoundListControl.SelectedDataKey","System.Web.UI.WebControls.GridView.IDataBoundListControl.SelectedIndex","System.Web.UI.WebControls.GridView.IFieldControl.FieldsGenerator","System.Web.UI.WebControls.GridView.IPersistedSelector.DataKey","System.Web.UI.WebControls.GridView.IPostBackContainer.GetPostBackOptions","System.Web.UI.WebControls.GridView.TagKey","System.Web.UI.WebControls.GridView.TopPagerRow","System.Web.UI.WebControls.GridView.TrackViewState","System.Web.UI.WebControls.GridView.UpdateMethod","System.Web.UI.WebControls.GridView.UpdateRow","System.Web.UI.WebControls.GridView.UseAccessibleHeader","System.Web.UI.WebControls.GridView.VirtualItemCount"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridView","System::Web::UI::WebControls::GridView","System.Web.UI.WebControls.GridView.#ctor","System::Web::UI::WebControls::GridView::#ctor","System.Web.UI.WebControls.GridView.AllowCustomPaging","System::Web::UI::WebControls::GridView::AllowCustomPaging","System.Web.UI.WebControls.GridView.AllowPaging","System::Web::UI::WebControls::GridView::AllowPaging","System.Web.UI.WebControls.GridView.AllowSorting","System::Web::UI::WebControls::GridView::AllowSorting","System.Web.UI.WebControls.GridView.AlternatingRowStyle","System::Web::UI::WebControls::GridView::AlternatingRowStyle","System.Web.UI.WebControls.GridView.AutoGenerateColumns","System::Web::UI::WebControls::GridView::AutoGenerateColumns","System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton","System::Web::UI::WebControls::GridView::AutoGenerateDeleteButton","System.Web.UI.WebControls.GridView.AutoGenerateEditButton","System::Web::UI::WebControls::GridView::AutoGenerateEditButton","System.Web.UI.WebControls.GridView.AutoGenerateSelectButton","System::Web::UI::WebControls::GridView::AutoGenerateSelectButton","System.Web.UI.WebControls.GridView.BackImageUrl","System::Web::UI::WebControls::GridView::BackImageUrl","System.Web.UI.WebControls.GridView.BottomPagerRow","System::Web::UI::WebControls::GridView::BottomPagerRow","System.Web.UI.WebControls.GridView.Caption","System::Web::UI::WebControls::GridView::Caption","System.Web.UI.WebControls.GridView.CaptionAlign","System::Web::UI::WebControls::GridView::CaptionAlign","System.Web.UI.WebControls.GridView.CellPadding","System::Web::UI::WebControls::GridView::CellPadding","System.Web.UI.WebControls.GridView.CellSpacing","System::Web::UI::WebControls::GridView::CellSpacing","System.Web.UI.WebControls.GridView.ClientIDRowSuffix","System::Web::UI::WebControls::GridView::ClientIDRowSuffix","System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys","System::Web::UI::WebControls::GridView::ClientIDRowSuffixDataKeys","System.Web.UI.WebControls.GridView.Columns","System::Web::UI::WebControls::GridView::Columns","System.Web.UI.WebControls.GridView.ColumnsGenerator","System::Web::UI::WebControls::GridView::ColumnsGenerator","System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn","System::Web::UI::WebControls::GridView::CreateAutoGeneratedColumn","System.Web.UI.WebControls.GridView.CreateChildControls","System::Web::UI::WebControls::GridView::CreateChildControls","System.Web.UI.WebControls.GridView.CreateChildTable","System::Web::UI::WebControls::GridView::CreateChildTable","System.Web.UI.WebControls.GridView.CreateColumns","System::Web::UI::WebControls::GridView::CreateColumns","System.Web.UI.WebControls.GridView.CreateControlStyle","System::Web::UI::WebControls::GridView::CreateControlStyle","System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments","System::Web::UI::WebControls::GridView::CreateDataSourceSelectArguments","System.Web.UI.WebControls.GridView.CreateRow","System::Web::UI::WebControls::GridView::CreateRow","System.Web.UI.WebControls.GridView.DataBind","System::Web::UI::WebControls::GridView::DataBind","System.Web.UI.WebControls.GridView.DataKeyNames","System::Web::UI::WebControls::GridView::DataKeyNames","System.Web.UI.WebControls.GridView.DataKeys","System::Web::UI::WebControls::GridView::DataKeys","System.Web.UI.WebControls.GridView.DeleteMethod","System::Web::UI::WebControls::GridView::DeleteMethod","System.Web.UI.WebControls.GridView.DeleteRow","System::Web::UI::WebControls::GridView::DeleteRow","System.Web.UI.WebControls.GridView.EditIndex","System::Web::UI::WebControls::GridView::EditIndex","System.Web.UI.WebControls.GridView.EditRowStyle","System::Web::UI::WebControls::GridView::EditRowStyle","System.Web.UI.WebControls.GridView.EmptyDataRowStyle","System::Web::UI::WebControls::GridView::EmptyDataRowStyle","System.Web.UI.WebControls.GridView.EmptyDataTemplate","System::Web::UI::WebControls::GridView::EmptyDataTemplate","System.Web.UI.WebControls.GridView.EmptyDataText","System::Web::UI::WebControls::GridView::EmptyDataText","System.Web.UI.WebControls.GridView.EnableModelValidation","System::Web::UI::WebControls::GridView::EnableModelValidation","System.Web.UI.WebControls.GridView.EnablePersistedSelection","System::Web::UI::WebControls::GridView::EnablePersistedSelection","System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks","System::Web::UI::WebControls::GridView::EnableSortingAndPagingCallbacks","System.Web.UI.WebControls.GridView.ExtractRowValues","System::Web::UI::WebControls::GridView::ExtractRowValues","System.Web.UI.WebControls.GridView.FooterRow","System::Web::UI::WebControls::GridView::FooterRow","System.Web.UI.WebControls.GridView.FooterStyle","System::Web::UI::WebControls::GridView::FooterStyle","System.Web.UI.WebControls.GridView.GetCallbackResult","System::Web::UI::WebControls::GridView::GetCallbackResult","System.Web.UI.WebControls.GridView.GetCallbackScript","System::Web::UI::WebControls::GridView::GetCallbackScript","System.Web.UI.WebControls.GridView.GridLines","System::Web::UI::WebControls::GridView::GridLines","System.Web.UI.WebControls.GridView.HeaderRow","System::Web::UI::WebControls::GridView::HeaderRow","System.Web.UI.WebControls.GridView.HeaderStyle","System::Web::UI::WebControls::GridView::HeaderStyle","System.Web.UI.WebControls.GridView.HorizontalAlign","System::Web::UI::WebControls::GridView::HorizontalAlign","System.Web.UI.WebControls.GridView.InitializePager","System::Web::UI::WebControls::GridView::InitializePager","System.Web.UI.WebControls.GridView.InitializeRow","System::Web::UI::WebControls::GridView::InitializeRow","System.Web.UI.WebControls.GridView.IsBindableType","System::Web::UI::WebControls::GridView::IsBindableType","System.Web.UI.WebControls.GridView.LoadControlState","System::Web::UI::WebControls::GridView::LoadControlState","System.Web.UI.WebControls.GridView.LoadViewState","System::Web::UI::WebControls::GridView::LoadViewState","System.Web.UI.WebControls.GridView.OnBubbleEvent","System::Web::UI::WebControls::GridView::OnBubbleEvent","System.Web.UI.WebControls.GridView.OnDataPropertyChanged","System::Web::UI::WebControls::GridView::OnDataPropertyChanged","System.Web.UI.WebControls.GridView.OnDataSourceViewChanged","System::Web::UI::WebControls::GridView::OnDataSourceViewChanged","System.Web.UI.WebControls.GridView.OnInit","System::Web::UI::WebControls::GridView::OnInit","System.Web.UI.WebControls.GridView.OnPageIndexChanged","System::Web::UI::WebControls::GridView::OnPageIndexChanged","System.Web.UI.WebControls.GridView.OnPageIndexChanging","System::Web::UI::WebControls::GridView::OnPageIndexChanging","System.Web.UI.WebControls.GridView.OnPagePreLoad","System::Web::UI::WebControls::GridView::OnPagePreLoad","System.Web.UI.WebControls.GridView.OnPreRender","System::Web::UI::WebControls::GridView::OnPreRender","System.Web.UI.WebControls.GridView.OnRowCancelingEdit","System::Web::UI::WebControls::GridView::OnRowCancelingEdit","System.Web.UI.WebControls.GridView.OnRowCommand","System::Web::UI::WebControls::GridView::OnRowCommand","System.Web.UI.WebControls.GridView.OnRowCreated","System::Web::UI::WebControls::GridView::OnRowCreated","System.Web.UI.WebControls.GridView.OnRowDataBound","System::Web::UI::WebControls::GridView::OnRowDataBound","System.Web.UI.WebControls.GridView.OnRowDeleted","System::Web::UI::WebControls::GridView::OnRowDeleted","System.Web.UI.WebControls.GridView.OnRowDeleting","System::Web::UI::WebControls::GridView::OnRowDeleting","System.Web.UI.WebControls.GridView.OnRowEditing","System::Web::UI::WebControls::GridView::OnRowEditing","System.Web.UI.WebControls.GridView.OnRowUpdated","System::Web::UI::WebControls::GridView::OnRowUpdated","System.Web.UI.WebControls.GridView.OnRowUpdating","System::Web::UI::WebControls::GridView::OnRowUpdating","System.Web.UI.WebControls.GridView.OnSelectedIndexChanged","System::Web::UI::WebControls::GridView::OnSelectedIndexChanged","System.Web.UI.WebControls.GridView.OnSelectedIndexChanging","System::Web::UI::WebControls::GridView::OnSelectedIndexChanging","System.Web.UI.WebControls.GridView.OnSorted","System::Web::UI::WebControls::GridView::OnSorted","System.Web.UI.WebControls.GridView.OnSorting","System::Web::UI::WebControls::GridView::OnSorting","System.Web.UI.WebControls.GridView.PageCount","System::Web::UI::WebControls::GridView::PageCount","System.Web.UI.WebControls.GridView.PageIndex","System::Web::UI::WebControls::GridView::PageIndex","System.Web.UI.WebControls.GridView.PageIndexChanged","System::Web::UI::WebControls::GridView::PageIndexChanged","System.Web.UI.WebControls.GridView.PageIndexChanging","System::Web::UI::WebControls::GridView::PageIndexChanging","System.Web.UI.WebControls.GridView.PagerSettings","System::Web::UI::WebControls::GridView::PagerSettings","System.Web.UI.WebControls.GridView.PagerStyle","System::Web::UI::WebControls::GridView::PagerStyle","System.Web.UI.WebControls.GridView.PagerTemplate","System::Web::UI::WebControls::GridView::PagerTemplate","System.Web.UI.WebControls.GridView.PageSize","System::Web::UI::WebControls::GridView::PageSize","System.Web.UI.WebControls.GridView.PerformDataBinding","System::Web::UI::WebControls::GridView::PerformDataBinding","System.Web.UI.WebControls.GridView.PrepareControlHierarchy","System::Web::UI::WebControls::GridView::PrepareControlHierarchy","System.Web.UI.WebControls.GridView.RaiseCallbackEvent","System::Web::UI::WebControls::GridView::RaiseCallbackEvent","System.Web.UI.WebControls.GridView.RaisePostBackEvent","System::Web::UI::WebControls::GridView::RaisePostBackEvent","System.Web.UI.WebControls.GridView.Render","System::Web::UI::WebControls::GridView::Render","System.Web.UI.WebControls.GridView.RowCancelingEdit","System::Web::UI::WebControls::GridView::RowCancelingEdit","System.Web.UI.WebControls.GridView.RowCommand","System::Web::UI::WebControls::GridView::RowCommand","System.Web.UI.WebControls.GridView.RowCreated","System::Web::UI::WebControls::GridView::RowCreated","System.Web.UI.WebControls.GridView.RowDataBound","System::Web::UI::WebControls::GridView::RowDataBound","System.Web.UI.WebControls.GridView.RowDeleted","System::Web::UI::WebControls::GridView::RowDeleted","System.Web.UI.WebControls.GridView.RowDeleting","System::Web::UI::WebControls::GridView::RowDeleting","System.Web.UI.WebControls.GridView.RowEditing","System::Web::UI::WebControls::GridView::RowEditing","System.Web.UI.WebControls.GridView.RowHeaderColumn","System::Web::UI::WebControls::GridView::RowHeaderColumn","System.Web.UI.WebControls.GridView.Rows","System::Web::UI::WebControls::GridView::Rows","System.Web.UI.WebControls.GridView.RowStyle","System::Web::UI::WebControls::GridView::RowStyle","System.Web.UI.WebControls.GridView.RowUpdated","System::Web::UI::WebControls::GridView::RowUpdated","System.Web.UI.WebControls.GridView.RowUpdating","System::Web::UI::WebControls::GridView::RowUpdating","System.Web.UI.WebControls.GridView.SaveControlState","System::Web::UI::WebControls::GridView::SaveControlState","System.Web.UI.WebControls.GridView.SaveViewState","System::Web::UI::WebControls::GridView::SaveViewState","System.Web.UI.WebControls.GridView.SelectedDataKey","System::Web::UI::WebControls::GridView::SelectedDataKey","System.Web.UI.WebControls.GridView.SelectedIndex","System::Web::UI::WebControls::GridView::SelectedIndex","System.Web.UI.WebControls.GridView.SelectedIndexChanged","System::Web::UI::WebControls::GridView::SelectedIndexChanged","System.Web.UI.WebControls.GridView.SelectedIndexChanging","System::Web::UI::WebControls::GridView::SelectedIndexChanging","System.Web.UI.WebControls.GridView.SelectedPersistedDataKey","System::Web::UI::WebControls::GridView::SelectedPersistedDataKey","System.Web.UI.WebControls.GridView.SelectedRow","System::Web::UI::WebControls::GridView::SelectedRow","System.Web.UI.WebControls.GridView.SelectedRowStyle","System::Web::UI::WebControls::GridView::SelectedRowStyle","System.Web.UI.WebControls.GridView.SelectedValue","System::Web::UI::WebControls::GridView::SelectedValue","System.Web.UI.WebControls.GridView.SelectRow","System::Web::UI::WebControls::GridView::SelectRow","System.Web.UI.WebControls.GridView.SetEditRow","System::Web::UI::WebControls::GridView::SetEditRow","System.Web.UI.WebControls.GridView.SetPageIndex","System::Web::UI::WebControls::GridView::SetPageIndex","System.Web.UI.WebControls.GridView.ShowFooter","System::Web::UI::WebControls::GridView::ShowFooter","System.Web.UI.WebControls.GridView.ShowHeader","System::Web::UI::WebControls::GridView::ShowHeader","System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty","System::Web::UI::WebControls::GridView::ShowHeaderWhenEmpty","System.Web.UI.WebControls.GridView.Sort","System::Web::UI::WebControls::GridView::Sort","System.Web.UI.WebControls.GridView.SortDirection","System::Web::UI::WebControls::GridView::SortDirection","System.Web.UI.WebControls.GridView.Sorted","System::Web::UI::WebControls::GridView::Sorted","System.Web.UI.WebControls.GridView.SortedAscendingCellStyle","System::Web::UI::WebControls::GridView::SortedAscendingCellStyle","System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle","System::Web::UI::WebControls::GridView::SortedAscendingHeaderStyle","System.Web.UI.WebControls.GridView.SortedDescendingCellStyle","System::Web::UI::WebControls::GridView::SortedDescendingCellStyle","System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle","System::Web::UI::WebControls::GridView::SortedDescendingHeaderStyle","System.Web.UI.WebControls.GridView.SortExpression","System::Web::UI::WebControls::GridView::SortExpression","System.Web.UI.WebControls.GridView.Sorting","System::Web::UI::WebControls::GridView::Sorting","System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult","System::Web::UI::WebControls::GridView::System#Web#UI#ICallbackEventHandler#GetCallbackResult","System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent","System::Web::UI::WebControls::GridView::System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent","System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys","System::Web::UI::WebControls::GridView::System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys","System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent","System::Web::UI::WebControls::GridView::System#Web#UI#IPostBackEventHandler#RaisePostBackEvent","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundControl#DataKeyNames","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundControl#DataMember","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundControl#DataSource","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundControl#DataSourceID","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundControl#DataSourceObject","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundListControl#DataKeys","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IFieldControl#FieldsGenerator","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IPersistedSelector#DataKey","System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions","System::Web::UI::WebControls::GridView::System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions","System.Web.UI.WebControls.GridView.TagKey","System::Web::UI::WebControls::GridView::TagKey","System.Web.UI.WebControls.GridView.TopPagerRow","System::Web::UI::WebControls::GridView::TopPagerRow","System.Web.UI.WebControls.GridView.TrackViewState","System::Web::UI::WebControls::GridView::TrackViewState","System.Web.UI.WebControls.GridView.UpdateMethod","System::Web::UI::WebControls::GridView::UpdateMethod","System.Web.UI.WebControls.GridView.UpdateRow","System::Web::UI::WebControls::GridView::UpdateRow","System.Web.UI.WebControls.GridView.UseAccessibleHeader","System::Web::UI::WebControls::GridView::UseAccessibleHeader","System.Web.UI.WebControls.GridView.VirtualItemCount","System::Web::UI::WebControls::GridView::VirtualItemCount"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"07f56b20-b0c4-b136-26e0-36c21f3e4ae2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/GridView.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridView class | Microsoft Docs","_op_ogTitle":"GridView class","description":"Displays the values of a data source in a table where each column represents a field and each row represents a record. The GridView control enables you to select, sort, and edit these items.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridView","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.gridview","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.gridview","fileRelativePath":"System.Web.UI.WebControls.GridView.html"},"themesRelativePathToOutputRoot":"_themes/"}