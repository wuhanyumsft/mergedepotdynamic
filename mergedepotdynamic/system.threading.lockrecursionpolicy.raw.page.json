{"content":"    <!-- ENUM -->\r\n    <h1 id=\"System_Threading_LockRecursionPolicy\">\r\n      <span class=\"lang-csharp\">LockRecursionPolicy</span>\r\n        Enum\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies whether a lock can be entered multiple times by the same thread.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public enum LockRecursionPolicy</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LockRecursionPolicy</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The default recursion policy depends on the type of lock. For the default policy and the precise behavior of lock recursion for any given lock type, see the documentation for the type. For example, the <a class=\"xref\" href=\"system.threading.readerwriterlockslim\" data-linktype=\"relative-path\">ReaderWriterLockSlim</a> class does not allow a thread to enter the lock in write mode if it already entered the lock in read mode, regardless of the lock policy setting, in order to reduce the chance of deadlocks.  </p>\n<p> Currently only one lock uses this enumeration:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.threading.readerwriterlockslim\" data-linktype=\"relative-path\">ReaderWriterLockSlim</a>. For more information, see the <a class=\"xref\" href=\"system.threading.readerwriterlockslim#System_Threading_ReaderWriterLockSlim_RecursionPolicy_\" data-linktype=\"relative-path\">RecursionPolicy</a> property.</li>\n</ul>\n\r\n        <header class=\"header\" id=\"fields\">\r\n          <h2>Fields\r\n        </h2>\r\n        </header>\r\n        <table class=\"nameValue\">\r\n            <tbody>\r\n              <tr>\r\n                <td id=\"System_Threading_LockRecursionPolicy_NoRecursion\">\r\n            <div class=\"lang-csharp\">NoRecursion</div>\r\n          </td>\r\n                <td><p>If a thread tries to enter a lock recursively, an exception is thrown. Some classes may allow certain recursions when this setting is in effect.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_LockRecursionPolicy_SupportsRecursion\">\r\n            <div class=\"lang-csharp\">SupportsRecursion</div>\r\n          </td>\r\n                <td><p>A thread can enter a lock recursively. Some classes may restrict this capability.</p>\n</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.LockRecursionPolicy.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.LockRecursionPolicy\">\r\n<meta name=\"APIName\" content=\"System.Threading.LockRecursionPolicy.NoRecursion\">\r\n<meta name=\"APIName\" content=\"System.Threading.LockRecursionPolicy.SupportsRecursion\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-10 02:17 AM\">\r\n<meta name=\"document_id\" content=\"e5728a64-0566-0a01-e6cb-c0c058757104\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\LockRecursionPolicy.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies whether a lock can be entered multiple times by the same thread.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.LockRecursionPolicy\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.LockRecursionPolicy.yml","open_to_public_contributors":true,"api_name":["System.Threading.LockRecursionPolicy","System.Threading.LockRecursionPolicy.NoRecursion","System.Threading.LockRecursionPolicy.SupportsRecursion"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.LockRecursionPolicy","System::Threading::LockRecursionPolicy","System.Threading.LockRecursionPolicy.NoRecursion","System::Threading::LockRecursionPolicy::NoRecursion","System.Threading.LockRecursionPolicy.SupportsRecursion","System::Threading::LockRecursionPolicy::SupportsRecursion"],"dev_langs":["csharp"],"updated_at":"2017-03-10 02:17 AM","document_id":"e5728a64-0566-0a01-e6cb-c0c058757104","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\LockRecursionPolicy.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/LockRecursionPolicy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LockRecursionPolicy enum | Microsoft Docs","_op_ogTitle":"LockRecursionPolicy enum","description":"Specifies whether a lock can be entered multiple times by the same thread.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.LockRecursionPolicy","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.lockrecursionpolicy","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.lockrecursionpolicy","fileRelativePath":"System.Threading.LockRecursionPolicy.html"},"themesRelativePathToOutputRoot":"_themes/"}