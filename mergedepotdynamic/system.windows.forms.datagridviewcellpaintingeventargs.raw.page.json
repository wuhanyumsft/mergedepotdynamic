{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs\">\r\n      <span class=\"lang-csharp\">DataGridViewCellPaintingEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">CellPainting</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DataGridViewCellPaintingEventArgs : System.ComponentModel.HandledEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.handledeventargs\" data-linktype=\"relative-path\">System.ComponentModel.HandledEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridViewCellPaintingEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.handledeventargs#System_ComponentModel_HandledEventArgs_Handled\" data-linktype=\"relative-path\">Handled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">CellPainting</a> event is raised for each <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is visible on a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. To improve performance, set the properties in a DataGridViewCellPaintingEventArgs to change the appearance of the cell instead of directly accessing a cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. If you manually paint the cell, set the <a class=\"xref\" href=\"system.componentmodel.handledeventargs#System_ComponentModel_HandledEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property to <code>true</code>. If you do not set <a class=\"xref\" href=\"system.componentmodel.handledeventargs#System_ComponentModel_HandledEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> to <code>true</code>, the cell will paint over your customizations.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs__ctor_System_Windows_Forms_DataGridView_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_Object_System_Object_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewPaintParts_\" data-linktype=\"self-bookmark\">DataGridViewCellPaintingEventArgs(DataGridView,Graphics,Rectangle,Rectangle,Int32,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs\" data-linktype=\"relative-path\">DataGridViewCellPaintingEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_AdvancedBorderStyle\" data-linktype=\"self-bookmark\">AdvancedBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellBounds\" data-linktype=\"self-bookmark\">CellBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Get the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellStyle\" data-linktype=\"self-bookmark\">CellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cell style of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_ClipBounds\" data-linktype=\"self-bookmark\">ClipBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_ColumnIndex\" data-linktype=\"self-bookmark\">ColumnIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the column index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_ErrorText\" data-linktype=\"self-bookmark\">ErrorText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_FormattedValue\" data-linktype=\"self-bookmark\">FormattedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the formatted value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_Graphics\" data-linktype=\"self-bookmark\">Graphics</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintParts\" data-linktype=\"self-bookmark\">PaintParts</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The cell parts that are to be painted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_RowIndex\" data-linktype=\"self-bookmark\">RowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the row index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_State\" data-linktype=\"self-bookmark\">State</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_Paint_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewPaintParts_\" data-linktype=\"self-bookmark\">Paint(Rectangle,DataGridViewPaintParts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the specified parts of the cell for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintBackground_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"self-bookmark\">PaintBackground(Rectangle,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the cell background for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintContent_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">PaintContent(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the cell content for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs__ctor_System_Windows_Forms_DataGridView_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_Object_System_Object_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewPaintParts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridViewCellPaintingEventArgs(DataGridView,Graphics,Rectangle,Rectangle,Int32,Int32,DataGridViewElementStates,Object,Object,String,DataGridViewCellStyle,DataGridViewAdvancedBorderStyle,DataGridViewPaintParts)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs\" data-linktype=\"relative-path\">DataGridViewCellPaintingEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridViewCellPaintingEventArgs (System.Windows.Forms.DataGridView dataGridView, System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, int columnIndex, System.Windows.Forms.DataGridViewElementStates cellState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridView</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that contains the cell to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that contains the bounds of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index of the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values that specifies the state of the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formattedValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatted data of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An error message that is associated with the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains formatting and style information about the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>advancedBorderStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that contains border styles for the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintParts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values specifying the parts to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>dataGridView</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>cellStyle</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>paintParts</code> is not a valid bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_AdvancedBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_AdvancedBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdvancedBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedBorderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the border style of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Change the borders of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> by setting the properties of the AdvancedBorderStyle property to one of the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedcellborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedCellBorderStyle</a> values.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellBounds</div>        \r\n          </div>\r\n    \r\n            <p>Get the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle CellBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property. For more information, see <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Cells%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_CellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cell style of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle CellStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains the cell style of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Change the appearance of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> by setting the properties of the CellStyle property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ClipBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ClipBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClipBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle ClipBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClipBounds property represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted. For example, if a user covers the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with another window, and then uncovers it, then ClipBounds represents the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. If a user covers a small area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, and then uncovers it, then ClipBounds represents the small area that was covered.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ColumnIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ColumnIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the column index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The column index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ColumnIndex property returns -1 when a row header cell is being painted.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ErrorText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_ErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorText</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ErrorText { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> is a row header cell, the ErrorText property is the same as the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>. When the current cell is a data cell, ErrorText is the same as the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_FormattedValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_FormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormattedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the formatted value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object FormattedValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The formatted value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FormattedValue property contains the value of the cell after the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Format_\" data-linktype=\"relative-path\">Format</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> property has been applied to it, and after the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">CellFormatting</a> event has been handled.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Graphics\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Graphics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Graphics</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintParts\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintParts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintParts</div>        \r\n          </div>\r\n    \r\n            <p>The cell parts that are to be painted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewPaintParts PaintParts { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values specifying the parts to be painted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_RowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_RowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the row index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The row index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowIndex property returns -1 when a column header is being painted.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_State\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_State_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">State</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewElementStates State { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values that specifies the state of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellPainting</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#302\">private void DataGridView1_CellPainting(Object sender, DataGridViewCellPaintingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellPainting Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#302\">Private Sub DataGridView1_CellPainting(sender as Object, e as DataGridViewCellPaintingEventArgs) _ \n     Handles DataGridView1.CellPainting\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AdvancedBorderStyle&quot;, e.AdvancedBorderStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellBounds&quot;, e.CellBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;FormattedValue&quot;, e.FormattedValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PaintParts&quot;, e.PaintParts)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Value&quot;, e.Value)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellPainting Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Value\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Value { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Value property contains the value of the cell before any formatting occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Paint_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewPaintParts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_Paint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paint(Rectangle,DataGridViewPaintParts)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the specified parts of the cell for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Paint (System.Drawing.Rectangle clipBounds, System.Windows.Forms.DataGridViewPaintParts paintParts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintParts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values specifying the parts to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex*</span> is less than -1 or greater than or equal to the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex*</span> is less than -1 or greater than or equal to the number of columns in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintBackground_System_Drawing_Rectangle_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintBackground_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintBackground(Rectangle,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the cell background for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintBackground (System.Drawing.Rectangle clipBounds, bool cellsPaintSelectionBackground);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellsPaintSelectionBackground</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to paint the background of the specified bounds with the color of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.SelectionBackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.InheritedStyle*</span>; <code>false</code> to paint the background of the specified bounds with the color of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.BackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.InheritedStyle*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex*</span> is less than -1 or greater than or equal to the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex*</span> is less than -1 or greater than or equal to the number of columns in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintContent_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintContent(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the cell content for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintContent (System.Drawing.Rectangle clipBounds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex*</span> is less than -1 or greater than or equal to the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex*</span> is less than -1 or greater than or equal to the number of columns in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCellPaintingEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCellPaintingEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.AdvancedBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.ClipBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.ErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.FormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintParts\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.State\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs.Value\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7d8fe5c0-bec6-2edd-6950-0a8e5c9cb7b3\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewCellPaintingEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCellPaintingEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCellPaintingEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridViewCellPaintingEventArgs","System.Windows.Forms.DataGridViewCellPaintingEventArgs..ctor","System.Windows.Forms.DataGridViewCellPaintingEventArgs.AdvancedBorderStyle","System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellBounds","System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellStyle","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ClipBounds","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ErrorText","System.Windows.Forms.DataGridViewCellPaintingEventArgs.FormattedValue","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Graphics","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Paint","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintParts","System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex","System.Windows.Forms.DataGridViewCellPaintingEventArgs.State","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Value"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCellPaintingEventArgs","System::Windows::Forms::DataGridViewCellPaintingEventArgs","System.Windows.Forms.DataGridViewCellPaintingEventArgs.#ctor","System::Windows::Forms::DataGridViewCellPaintingEventArgs::#ctor","System.Windows.Forms.DataGridViewCellPaintingEventArgs.AdvancedBorderStyle","System::Windows::Forms::DataGridViewCellPaintingEventArgs::AdvancedBorderStyle","System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellBounds","System::Windows::Forms::DataGridViewCellPaintingEventArgs::CellBounds","System.Windows.Forms.DataGridViewCellPaintingEventArgs.CellStyle","System::Windows::Forms::DataGridViewCellPaintingEventArgs::CellStyle","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ClipBounds","System::Windows::Forms::DataGridViewCellPaintingEventArgs::ClipBounds","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex","System::Windows::Forms::DataGridViewCellPaintingEventArgs::ColumnIndex","System.Windows.Forms.DataGridViewCellPaintingEventArgs.ErrorText","System::Windows::Forms::DataGridViewCellPaintingEventArgs::ErrorText","System.Windows.Forms.DataGridViewCellPaintingEventArgs.FormattedValue","System::Windows::Forms::DataGridViewCellPaintingEventArgs::FormattedValue","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Graphics","System::Windows::Forms::DataGridViewCellPaintingEventArgs::Graphics","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Paint","System::Windows::Forms::DataGridViewCellPaintingEventArgs::Paint","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground","System::Windows::Forms::DataGridViewCellPaintingEventArgs::PaintBackground","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent","System::Windows::Forms::DataGridViewCellPaintingEventArgs::PaintContent","System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintParts","System::Windows::Forms::DataGridViewCellPaintingEventArgs::PaintParts","System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex","System::Windows::Forms::DataGridViewCellPaintingEventArgs::RowIndex","System.Windows.Forms.DataGridViewCellPaintingEventArgs.State","System::Windows::Forms::DataGridViewCellPaintingEventArgs::State","System.Windows.Forms.DataGridViewCellPaintingEventArgs.Value","System::Windows::Forms::DataGridViewCellPaintingEventArgs::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7d8fe5c0-bec6-2edd-6950-0a8e5c9cb7b3","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewCellPaintingEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridViewCellPaintingEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCellPaintingEventArgs class | Microsoft Docs","_op_ogTitle":"DataGridViewCellPaintingEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCellPaintingEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcellpaintingeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcellpaintingeventargs","fileRelativePath":"System.Windows.Forms.DataGridViewCellPaintingEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}