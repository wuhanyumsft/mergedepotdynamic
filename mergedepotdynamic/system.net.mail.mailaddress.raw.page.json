{"content":"    \r\n    <h1 id=\"System_Net_Mail_MailAddress\">\r\n      <span class=\"lang-csharp\">MailAddress</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the address of an electronic mail sender or recipient.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class MailAddress</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MailAddress</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The MailAddress class is used by the <a class=\"xref\" href=\"system.net.mail.smtpclient\" data-linktype=\"relative-path\">SmtpClient</a> and <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> classes to store address information for e-mail messages.  </p>\n<p> A mail address is composed of a <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_User_\" data-linktype=\"relative-path\">User</a> name, <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Host_\" data-linktype=\"relative-path\">Host</a> name and optionally, a <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a>. The <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> can contain non-ASCII characters if you encode them.  </p>\n<p> The MailAddress class supports the following mail address formats:  </p>\n<ul>\n<li><p>A simple address format of <code>user@host</code>. If a <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> is not set, this is the mail address format generated.  </p>\n</li>\n<li><p>A standard quoted display name format of <code>&quot;display name&quot; &lt;user@host&gt;</code>. If a <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> is set, this is the format generated.  </p>\n</li>\n<li><p>Angle brackets are added around the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_User_\" data-linktype=\"relative-path\">User</a> name, <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Host_\" data-linktype=\"relative-path\">Host</a> name for <code>&quot;display name&quot; user@host</code> if these are not included.  </p>\n</li>\n<li><p>Quotes are added around the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> for <code>display name &lt;user@host&gt;</code>, if these are not included.  </p>\n</li>\n<li><p>Unicode characters are supported in the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a>. property.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_User_\" data-linktype=\"relative-path\">User</a> name with quotes. For example, <code>&quot;user name&quot;@host</code>.  </p>\n</li>\n<li><p>Consecutive and trailing dots in user names. For example, <code>user...name..@host</code>.  </p>\n</li>\n<li><p>Bracketed domain literals. For example, <code>&lt;user@[my domain]&gt;</code>.  </p>\n</li>\n<li><p>Comments. For example, <code>(comment)&quot;display name&quot;(comment)&lt;(comment)user(comment)@(comment)domain(comment)&gt;(comment)</code>. Comments are removed before transmission.  </p>\n<p>A comma is used to separate elements in a list of mail addresses. As a result, a comma should not be used in unquoted display names in a list. The following mail addresses would be allowed  </p>\n<p><code>&quot;John, Doe&quot; &lt;user@host&gt;, &quot;Bob, Smith&quot; &lt;user2@host&gt;</code>  </p>\n<p>The following mail address would not be allowed:  </p>\n<p><code>John, Doe &lt;user@host&gt;, Bob, Smith &lt;user2@host&gt;</code>  </p>\n<p>Quotes can be embedded in a quoted string, but they must be escaped. The following mail addresses would be allowed  </p>\n<p><code>&quot;John \\&quot;Jr\\&quot; Doe&quot; &lt;user@host&gt;</code>  </p>\n<p><code>&quot;\\&quot;John \\\\\\&quot;Jr\\\\\\&quot; Doe\\&quot; &lt;user@host&gt;&quot;</code>  </p>\n<p>The following mail address would not be allowed:  </p>\n<p><code>&quot;John &quot;Jr&quot; Doe&quot; &lt;user@host&gt;</code>  </p>\n<p>When the username is note quoted, all text between the start of the string (or comma) and the address are considered part of the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a>, including comments.  </p>\n<p>-- Example: (non comment) unquoted display (non comment) name (non comment) &lt;user@host&gt;  </p>\n<p>Although the MailAddress class accepts a mail address as valid, other mail servers may not accept the mail address.  </p>\n<p>The MailAddress class does not support the following mail address formats:  </p>\n<p>Mixed quoted and unquoted display names. For example, <code>display &quot;name&quot; &lt;user@host&gt;</code>  </p>\n<p>Groups, as defined in RFC 2822 Section 3.4 published by the IETF.  </p>\n<p>The obsolete user name formats of <code>&quot;user&quot;.&quot;name&quot;@host, user.&quot;name&quot;@host</code> or <code>&quot;user&quot;.name@host</code></p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress__ctor_System_String_\" data-linktype=\"self-bookmark\">MailAddress(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">MailAddress(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address and display name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress__ctor_System_String_System_String_System_Text_Encoding_\" data-linktype=\"self-bookmark\">MailAddress(String,String,Encoding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address, display name, and encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_Address\" data-linktype=\"self-bookmark\">Address</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the e-mail address specified when this instance was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_DisplayName\" data-linktype=\"self-bookmark\">DisplayName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the display name composed from the display name and address information specified when this instance was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_Host\" data-linktype=\"self-bookmark\">Host</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the host portion of the address specified when this instance was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_User\" data-linktype=\"self-bookmark\">User</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the user information from the address specified when this instance was created.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two mail addresses.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a hash value for a mail address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailAddress_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailAddress(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailAddress (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an e-mail address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not in a recognized format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>address</code> parameter can contain a display name and the associated e-mail address if you enclose the address in angle brackets. For example:  </p>\n<p> <code>&quot;Tom Smith &lt;tsmith@contoso.com&gt;&quot;</code>  </p>\n<p> White space is permitted between the display name and the angle brackets.  </p>\n<p> The following table shows the property values for a <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> object constructed using the preceding example address.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a></td>\n<td><code>&quot;Tom Smith&quot;</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Host_\" data-linktype=\"relative-path\">Host</a></td>\n<td><code>&quot;contoso.com&quot;</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_User_\" data-linktype=\"relative-path\">User</a></td>\n<td><code>&quot;tsmith&quot;</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Address_\" data-linktype=\"relative-path\">Address</a></td>\n<td><code>&quot;tsmith@contoso.com&quot;</code></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this constructor to create a <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> object for the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Bcc_\" data-linktype=\"relative-path\">Bcc</a> recipient of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#9\">   static void CreateBccTestMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      MailAddress^ bcc = gcnew MailAddress( L&quot;manager1@contoso.com&quot; );\n      message-&gt;Bcc-&gt;Add( bcc );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} and {1}.&quot;, to-&gt;DisplayName, message-&gt;Bcc );\n      try\n      { \n          client-&gt;Send( message );\n      }\n      catch ( Exception^ ex )\n      {\n          Console::WriteLine(L&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                        ex-&gt;ToString() );\n      }\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#9\">\t\tpublic static void CreateBccTestMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tMailAddress bcc = new MailAddress(&quot;manager1@contoso.com&quot;);\n\t\t\tmessage.Bcc.Add(bcc);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} and {1}.&quot;, \n\t\t\t    to.DisplayName, message.Bcc.ToString());\n      try {\n        client.Send(message);\n      }  \n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n  \t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailAddress(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address and display name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailAddress (string address, string displayName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an e-mail address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the display name associated with <code>address</code>. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not in a recognized format.  </p>\n<p> -or-  </p>\n<p> <code>address</code> contains non-ASCII characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Leading and trailing white space in the display name is preserved.  </p>\n<p> If <code>displayName</code> contains non-ASCII characters, the iso-8859-1 character set is used for the <code>displayName</code> encoding. Encoding non-ASCII characters is discussed in RFC 1522, which is available at <a href=\"http://www.ietf.org\" data-linktype=\"external\">http://www.ietf.org</a>.  </p>\n<p> If <code>address</code> contains a display name, and <code>displayName</code> is not <code>null</code> and is not equal to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a>, <code>displayName</code> overrides the value specified in <code>address</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this constructor to create <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> instances for the sender and recipient of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#9\">   static void CreateBccTestMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      MailAddress^ bcc = gcnew MailAddress( L&quot;manager1@contoso.com&quot; );\n      message-&gt;Bcc-&gt;Add( bcc );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} and {1}.&quot;, to-&gt;DisplayName, message-&gt;Bcc );\n      try\n      { \n          client-&gt;Send( message );\n      }\n      catch ( Exception^ ex )\n      {\n          Console::WriteLine(L&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                        ex-&gt;ToString() );\n      }\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#9\">\t\tpublic static void CreateBccTestMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tMailAddress bcc = new MailAddress(&quot;manager1@contoso.com&quot;);\n\t\t\tmessage.Bcc.Add(bcc);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} and {1}.&quot;, \n\t\t\t    to.DisplayName, message.Bcc.ToString());\n      try {\n        client.Send(message);\n      }  \n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n  \t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress__ctor_System_String_System_String_System_Text_Encoding_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailAddress(String,String,Encoding)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class using the specified address, display name, and encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains an e-mail address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the display name associated with <code>address</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayNameEncoding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that defines the character set used for <code>displayName</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>displayName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>displayName</code> is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not in a recognized format.  </p>\n<p> -or-  </p>\n<p> <code>address</code> contains non-ASCII characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Leading and trailing white space in the display name is preserved.  </p>\n<p> If <code>address</code> contains a display name, and <code>displayName</code> is not <code>null</code> and is not equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>, <code>displayName</code> overrides the value specified in <code>address</code>.  </p>\n<p> The MailAddress method does not check if the <code>displayName</code> parameter is valid. This method removes surrounding quotes not displayed by the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property. Quotes will be added before transmission, except where <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_ASCII_\" data-linktype=\"relative-path\">ASCII</a> or <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode_\" data-linktype=\"relative-path\">Unicode</a> is specified in the <code>displayNameEncoding</code> parameter. The encoding specified in the <code>displayNameEncoding</code> parameter will be applied to the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property before transmission <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_ASCII_\" data-linktype=\"relative-path\">ASCII</a> or <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode_\" data-linktype=\"relative-path\">Unicode</a> is specified in the <code>displayNameEncoding</code> parameter. <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a> is the default encoding if none is specified.  </p>\n<p> For more information on supported mail address formats, see <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this constructor to create <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> instances for the sender of an e-mail message.  </p>\n<pre><code class=\"lang-cs\" name=\"NclMailASync#2\">            // Create a mailing address that includes a UTF8 character\n            // in the display name.\n            MailAddress from = new MailAddress(&quot;jane@contoso.com&quot;, \n               &quot;Jane &quot; + (char)0xD8+ &quot; Clayton&quot;, \n            System.Text.Encoding.UTF8);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclMailASync#2\">        // Create a mailing address that includes a UTF8 \n        // character in the display name.\n        MailAddress^ from = gcnew MailAddress(&quot;jane@contoso.com&quot;,\n            &quot;Jane &quot; + (wchar_t)0xD8 + &quot; Clayton&quot;,\n            System::Text::Encoding::UTF8);\n</code></pre><pre><code class=\"lang-vb\" name=\"NclMailASync#2\">            &#39; Create a mailing address that includes a UTF8 character\n            &#39; in the display name.\n            Dim [from] As New MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane &quot; &amp; ChrW(&amp;HD8) &amp; &quot; Clayton&quot;, System.Text.Encoding.UTF8)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_Address\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_Address_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Address</div>        \r\n          </div>\r\n    \r\n            <p>Gets the e-mail address specified when this instance was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Address { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the e-mail address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by this property does not include the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the address for an e-mail message recipient.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#10\">   static void CreateCopyMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      \n      // message.Subject = &quot;Using the SmtpClient class.&quot;;\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Add a carbon copy recipient.\n      MailAddress^ copy = gcnew MailAddress( L&quot;Notification_List@contoso.com&quot; );\n      message-&gt;CC-&gt;Add( copy );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Include credentials if the server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;, to-&gt;Address, client-&gt;Host );\n      client-&gt;Send( message );\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#10\">\t\tpublic static void CreateCopyMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\t// message.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Add a carbon copy recipient.\n\t\t\tMailAddress copy = new MailAddress(&quot;Notification_List@contoso.com&quot;);\n\t\t\tmessage.CC.Add(copy);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Include credentials if the server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;,\n\t\t\t\t to.Address, client.Host);\n\t\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateCopyMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_DisplayName\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_DisplayName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the display name composed from the display name and address information specified when this instance was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DisplayName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the display name; otherwise, <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;) if no display name information was specified when this instance was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Display names that contain non-ASCII characters are returned in human-readable form. Use the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_ToString_\" data-linktype=\"relative-path\">ToString</a> method to get the encoded form of the DisplayName.  </p>\n<p> Some software programs that are used to read e-mail display the DisplayName property value instead of, or in addition to, the e-mail address.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the DisplayName for the recipient of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#9\">   static void CreateBccTestMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      MailAddress^ bcc = gcnew MailAddress( L&quot;manager1@contoso.com&quot; );\n      message-&gt;Bcc-&gt;Add( bcc );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} and {1}.&quot;, to-&gt;DisplayName, message-&gt;Bcc );\n      try\n      { \n          client-&gt;Send( message );\n      }\n      catch ( Exception^ ex )\n      {\n          Console::WriteLine(L&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                        ex-&gt;ToString() );\n      }\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#9\">\t\tpublic static void CreateBccTestMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tMailAddress bcc = new MailAddress(&quot;manager1@contoso.com&quot;);\n\t\t\tmessage.Bcc.Add(bcc);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} and {1}.&quot;, \n\t\t\t    to.DisplayName, message.Bcc.ToString());\n      try {\n        client.Send(message);\n      }  \n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n  \t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_Host\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_Host_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Host</div>        \r\n          </div>\r\n    \r\n            <p>Gets the host portion of the address specified when this instance was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Host { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the name of the host computer that accepts e-mail for the <span class=\"xref\">stem.Net.Mail.MailAddress.User*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a typical e-mail address, the host string includes all information following the &quot;<code>@</code>&quot; sign. For example, in <code>&quot;tsmith@contoso.com&quot;</code>, the host is <code>&quot;contoso.com&quot;</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the destination of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#4\">   static void CreateTestMessage3()\n   {\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot; );\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Use the application or machine configuration to get the \n      // host, port, and credentials.\n      SmtpClient^ client = gcnew SmtpClient;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} at {1} by using the SMTP host {2}.&quot;, to-&gt;User, to-&gt;Host, client-&gt;Host );\n      client-&gt;Send( message );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#4\">\t\tpublic static void CreateTestMessage3()\n\t\t{\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;);\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Use the application or machine configuration to get the \n\t\t\t// host, port, and credentials.\n\t\t\tSmtpClient client = new SmtpClient();\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} at {1} by using the SMTP host={2}.&quot;,\n\t\t\t\tto.User, to.Host, client.Host);\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage3(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_User\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_User_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">User</div>        \r\n          </div>\r\n    \r\n            <p>Gets the user information from the address specified when this instance was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string User { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the user name portion of the <span class=\"xref\">stem.Net.Mail.MailAddress.Address*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a typical e-mail address, the user string includes all information preceding the &quot;<code>@</code>&quot; sign. For example, in <code>&quot;tsmith@contoso.com&quot;</code>, the user is <code>&quot;tsmith&quot;</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the destination of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#4\">   static void CreateTestMessage3()\n   {\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot; );\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Use the application or machine configuration to get the \n      // host, port, and credentials.\n      SmtpClient^ client = gcnew SmtpClient;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} at {1} by using the SMTP host {2}.&quot;, to-&gt;User, to-&gt;Host, client-&gt;Host );\n      client-&gt;Send( message );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#4\">\t\tpublic static void CreateTestMessage3()\n\t\t{\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;);\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Use the application or machine configuration to get the \n\t\t\t// host, port, and credentials.\n\t\t\tSmtpClient client = new SmtpClient();\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} at {1} by using the SMTP host={2}.&quot;,\n\t\t\t\tto.User, to.Host, client.Host);\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage3(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two mail addresses.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> instance to compare to the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two mail addresses are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_GetHashCode\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a hash value for a mail address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer hash value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetHashCode method returns a hash code of the mail address. This value can be used as a key in hash tables.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailAddress_ToString\">\r\n    \r\n            <a id=\"System_Net_Mail_MailAddress_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the contents of this <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string returned by this method is not necessarily identical to the string specified when the instance was created. If the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> property is not <code>null</code> and not equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> (&quot;&quot;), ToString returns a string composed using the following syntax:  </p>\n<p> <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> &lt;<a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_User_\" data-linktype=\"relative-path\">User</a>@<a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Host_\" data-linktype=\"relative-path\">Host</a>&gt;  </p>\n<p> If <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_DisplayName_\" data-linktype=\"relative-path\">DisplayName</a> is <code>null</code> or is equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>, ToString returns the value of the <a class=\"xref\" href=\"system.net.mail.mailaddress#System_Net_Mail_MailAddress_Address_\" data-linktype=\"relative-path\">Address</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the destination of an e-mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#7\">   static void CreateTestMessage4( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;Jane@contoso.com&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      SmtpClient^ client = gcnew SmtpClient( server );\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} by using SMTP host {1} port {2}.&quot;, to, client-&gt;Host, client-&gt;Port );\n      client-&gt;Send( message );\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#7\">\t\tpublic static void CreateTestMessage4(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;Jane@contoso.com&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} by using SMTP host {1} port {2}.&quot;,\n\t\t\t\t to.ToString(), client.Host, client.Port);\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage4(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.MailAddress.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.MailAddress.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.Address\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.DisplayName\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.Equals\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.Host\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.ToString\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailAddress.User\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"32ebc29d-28fc-d56a-3708-4d2aa5035af1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the address of an electronic mail sender or recipient.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Mail/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Mail.MailAddress\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.MailAddress.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.MailAddress.yml","open_to_public_contributors":true,"api_name":["System.Net.Mail.MailAddress","System.Net.Mail.MailAddress..ctor","System.Net.Mail.MailAddress.Address","System.Net.Mail.MailAddress.DisplayName","System.Net.Mail.MailAddress.Equals","System.Net.Mail.MailAddress.GetHashCode","System.Net.Mail.MailAddress.Host","System.Net.Mail.MailAddress.ToString","System.Net.Mail.MailAddress.User"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Mail.MailAddress","System::Net::Mail::MailAddress","System.Net.Mail.MailAddress.#ctor","System::Net::Mail::MailAddress::#ctor","System.Net.Mail.MailAddress.Address","System::Net::Mail::MailAddress::Address","System.Net.Mail.MailAddress.DisplayName","System::Net::Mail::MailAddress::DisplayName","System.Net.Mail.MailAddress.Equals","System::Net::Mail::MailAddress::Equals","System.Net.Mail.MailAddress.GetHashCode","System::Net::Mail::MailAddress::GetHashCode","System.Net.Mail.MailAddress.Host","System::Net::Mail::MailAddress::Host","System.Net.Mail.MailAddress.ToString","System::Net::Mail::MailAddress::ToString","System.Net.Mail.MailAddress.User","System::Net::Mail::MailAddress::User"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"32ebc29d-28fc-d56a-3708-4d2aa5035af1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Mail/MailAddress.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MailAddress class | Microsoft Docs","_op_ogTitle":"MailAddress class","description":"Represents the address of an electronic mail sender or recipient.\n","toc_asset_id":"_splitted/System.Net.Mail/toc.json","toc_rel":"_splitted/System.Net.Mail/toc.json","source_url":"","ms.assetid":"System.Net.Mail.MailAddress","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.mailaddress","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.mailaddress","fileRelativePath":"System.Net.Mail.MailAddress.html"},"themesRelativePathToOutputRoot":"_themes/"}