{"content":"    \r\n    <h1 id=\"System_Data_DataColumn\">\r\n      <span class=\"lang-csharp\">DataColumn</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the schema of a column in a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultProperty(&quot;ColumnName&quot;)]\n[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.Editor(&quot;Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, &quot;System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItem(false)]\npublic class DataColumn : System.ComponentModel.MarshalByValueComponent</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent\" data-linktype=\"relative-path\">System.ComponentModel.MarshalByValueComponent</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataColumn</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataColumn is the fundamental building block for creating the schema of a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. You build the schema by adding one or more DataColumn objects to the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a>. For more information, see <a href=\"../Topic/Adding%20Columns%20to%20a%20DataTable.md\" data-linktype=\"relative-path\">Adding Columns to a DataTable</a>.  </p>\n<p> Each DataColumn has a <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_DataType_\" data-linktype=\"relative-path\">DataType</a> property that determines the kind of data the DataColumn contains. For example, you can restrict the data type to integers, or strings, or decimals. Because data that is contained by the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is typically merged back into its original data source, you must match the data types to those in the data source. For more information, see <a href=\"../Topic/Data%20Type%20Mappings%20in%20ADO.NET.md\" data-linktype=\"relative-path\">Data Type Mappings in ADO.NET</a>.  </p>\n<p> Properties such as <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AllowDBNull_\" data-linktype=\"relative-path\">AllowDBNull</a>, <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Unique_\" data-linktype=\"relative-path\">Unique</a>, and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity. You can also use the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>, <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementSeed_\" data-linktype=\"relative-path\">AutoIncrementSeed</a>, and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementStep_\" data-linktype=\"relative-path\">AutoIncrementStep</a> properties to control automatic data generation. For more information about <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a> columns, see <a href=\"../Topic/Creating%20AutoIncrement%20Columns.md\" data-linktype=\"relative-path\">Creating AutoIncrement Columns</a>. For more information, see <a href=\"../Topic/Defining%20Primary%20Keys.md\" data-linktype=\"relative-path\">Defining Primary Keys</a>.  </p>\n<p> You can also make sure that values in a DataColumn are unique by creating a <a class=\"xref\" href=\"system.data.uniqueconstraint\" data-linktype=\"relative-path\">UniqueConstraint</a> and adding it to the <a class=\"xref\" href=\"system.data.constraintcollection\" data-linktype=\"relative-path\">ConstraintCollection</a> of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to which the DataColumn belongs. For more information, see <a href=\"../Topic/DataTable%20Constraints.md\" data-linktype=\"relative-path\">DataTable Constraints</a>.  </p>\n<p> To create a relation between DataColumn objects, create a <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> object and add it to the <a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a> of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property of the DataColumn object to calculate the values in a column, or create an aggregate column. For more information, see <a href=\"../Topic/Creating%20Expression%20Columns.md\" data-linktype=\"relative-path\">Creating Expression Columns</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn__ctor\" data-linktype=\"self-bookmark\">DataColumn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class as type string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn__ctor_System_String_\" data-linktype=\"self-bookmark\">DataColumn(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class, as type string, using the specified column name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn__ctor_System_String_System_Type_\" data-linktype=\"self-bookmark\">DataColumn(String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified column name and data type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn__ctor_System_String_System_Type_System_String_\" data-linktype=\"self-bookmark\">DataColumn(String,Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified name, data type, and expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn__ctor_System_String_System_Type_System_String_System_Data_MappingType_\" data-linktype=\"self-bookmark\">DataColumn(String,Type,String,MappingType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_AllowDBNull\" data-linktype=\"self-bookmark\">AllowDBNull</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_AutoIncrement\" data-linktype=\"self-bookmark\">AutoIncrement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_AutoIncrementSeed\" data-linktype=\"self-bookmark\">AutoIncrementSeed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the starting value for a column that has its <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> property set to <code>true</code>. The default is 0.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_AutoIncrementStep\" data-linktype=\"self-bookmark\">AutoIncrementStep</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the increment used by a column with its <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> property set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Caption\" data-linktype=\"self-bookmark\">Caption</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the caption for the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_ColumnMapping\" data-linktype=\"self-bookmark\">ColumnMapping</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a> of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_ColumnName\" data-linktype=\"self-bookmark\">ColumnName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the column in the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_DataType\" data-linktype=\"self-bookmark\">DataType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type of data stored in the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_DateTimeMode\" data-linktype=\"self-bookmark\">DateTimeMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>DateTimeMode</code> for the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_DefaultValue\" data-linktype=\"self-bookmark\">DefaultValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default value for the column when you are creating new rows.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Expression\" data-linktype=\"self-bookmark\">Expression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_ExtendedProperties\" data-linktype=\"self-bookmark\">ExtendedProperties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of custom user information associated with a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_MaxLength\" data-linktype=\"self-bookmark\">MaxLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum length of a text column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Ordinal\" data-linktype=\"self-bookmark\">Ordinal</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the (zero-based) position of the column in the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Prefix\" data-linktype=\"self-bookmark\">Prefix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an XML prefix that aliases the namespace of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Table\" data-linktype=\"self-bookmark\">Table</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to which the column belongs to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_Unique\" data-linktype=\"self-bookmark\">Unique</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the values in each row of the column must be unique.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_CheckNotAllowNull\" data-linktype=\"self-bookmark\">CheckNotAllowNull()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_CheckUnique\" data-linktype=\"self-bookmark\">CheckUnique()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_OnPropertyChanging_System_ComponentModel_PropertyChangedEventArgs_\" data-linktype=\"self-bookmark\">OnPropertyChanging(PropertyChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_RaisePropertyChanging_System_String_\" data-linktype=\"self-bookmark\">RaisePropertyChanging(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_SetOrdinal_System_Int32_\" data-linktype=\"self-bookmark\">SetOrdinal(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the ordinal or position of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> to the specified ordinal or position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_DataColumn_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <span class=\"xref\">stem.Data.DataColumn.Expression*</span> of the column, if one exists.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn__ctor\">\r\n    \r\n            <a id=\"System_Data_DataColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataColumn()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class as type string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataColumn ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When created, a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> object has no default <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a> or <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Caption_\" data-linktype=\"relative-path\">Caption</a>. When you add it to a <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a>, a default name (&quot;Column1&quot;, &quot;Column2&quot;, and so on) will be generated if a name has not been assigned to the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>, sets various properties, and adds it to a <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataColumn Example#1\">Private Sub AddDataColumn(ByVal table As DataTable)\n    Dim column As DataColumn = New DataColumn()\n\n    &#39; Set various properties.\n    With column\n       .ColumnName = &quot;id&quot;\n       .DataType = System.Type.GetType(&quot;System.Int32&quot;)\n       .AutoIncrement = True\n       .AutoIncrementSeed = 1\n       .AutoIncrementStep = 1\n       .ReadOnly = True\n     End With\n\n    &#39; Add to Columns collection.\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataColumn Example#1\">    private void AddDataColumn(DataTable table)\n    {\n        DataColumn column = new DataColumn();\n\n        // Set various properties.\n        column.ColumnName = &quot;id&quot;;\n        column.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1;\n        column.AutoIncrementStep = 1;\n        column.ReadOnly = true;\n\n        // Add to Columns collection.\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Data_DataColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataColumn(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class, as type string, using the specified column name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataColumn (string columnName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the name of the column to be created. If set to <code>null</code> or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the name specific to a column becomes the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Caption_\" data-linktype=\"relative-path\">Caption</a> property value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> with a specified <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataColumn1 Example#1\">\nPrivate Sub AddDataColumn(ByVal table As DataTable)\n    Dim column As DataColumn \n    column = New DataColumn(&quot;id&quot;)\n\n    &#39; Set various properties.\n    With column\n       .DataType = System.Type.GetType(&quot;System.Int32&quot;)\n       .AutoIncrement = True\n       .AutoIncrementSeed = 1\n       .AutoIncrementStep = 1\n       .ReadOnly = True\n     End With\n\n    &#39; Add to Columns collection.\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataColumn1 Example#1\">    private void AddDataColumn(DataTable table)\n    {\n        DataColumn column = new DataColumn(&quot;id&quot;);\n\n        // Set various properties.\n        column.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1;\n        column.AutoIncrementStep = 1;\n        column.ReadOnly = true;\n\n        // Add to Columns collection.\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn__ctor_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Data_DataColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataColumn(String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified column name and data type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataColumn (string columnName, Type dataType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the name of the column to be created. If set to <code>null</code> or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A supported <span class=\"xref\">stem.Data.DataColumn.DataType*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>No <code>dataType</code> was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> with a specified <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a> and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_DataType_\" data-linktype=\"relative-path\">DataType</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataColumn2 Example#1\">    private void AddDataColumn(DataTable table)\n    {\n        System.Type typeInt32 = \n            System.Type.GetType(&quot;System.Int32&quot;);\n        DataColumn column = new DataColumn(&quot;id&quot;, typeInt32);\n\n        // Set various properties.\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1;\n        column.AutoIncrementStep = 1;\n        column.ReadOnly = true;\n\n        // Add to Columns collection.\n        table.Columns.Add(column);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataColumn2 Example#1\">\n Private Sub AddDataColumn(ByVal table As DataTable)\n     \n    Dim typeInt32 As System.Type = _\n       System.Type.GetType(&quot;System.Int32&quot;)\n    Dim column As DataColumn = _\n        New DataColumn(&quot;id&quot;, typeInt32)\n\n    &#39; Set various properties.\n    With column\n       .AutoIncrement = True\n       .AutoIncrementSeed = 1\n       .AutoIncrementStep = 1\n       .ReadOnly = True\n     End With\n\n    &#39; Add to Columns collection.\n    table.Columns.Add(column)\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn__ctor_System_String_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Data_DataColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataColumn(String,Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified name, data type, and expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataColumn (string columnName, Type dataType, string expr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the name of the column to be created. If set to <code>null</code> or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A supported <span class=\"xref\">stem.Data.DataColumn.DataType*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression used to create this column. For more information, see the <span class=\"xref\">stem.Data.DataColumn.Expression*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>No <code>dataType</code> was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a computed column.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataColumn3 Example#1\">Private Sub AddDataColumn(ByVal table As DataTable)\n    Dim column As DataColumn \n    Dim decimalType As System.Type\n \n    decimalType = System.Type.GetType(&quot;System.Decimal&quot;)\n    column = New DataColumn(&quot;Tax&quot;, decimalType, &quot;UnitPrice * .0862&quot;)\n\n    &#39; Set various properties.\n    With column\n       .AutoIncrement = False\n       .ReadOnly = True\n    End With\n\n    &#39; Add to Columns collection.\n    table.Columns.Add(column)\n End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataColumn3 Example#1\">    private void AddDataColumn(DataTable table)\n    {\n        System.Type decimalType;\n        decimalType = System.Type.GetType(&quot;System.Decimal&quot;);\n\n        // Create the column. The name is &#39;Tax,&#39; with data type Decimal,and \n        // an expression (&#39;UnitPrice * .0862) to calculate the tax.\n        DataColumn column = new DataColumn(&quot;Tax&quot;, \n            decimalType, &quot;UnitPrice * .0862&quot;);\n\n        // Set various properties.\n        column.AutoIncrement = false;\n        column.ReadOnly = true;\n\n        // Add to Columns collection.;\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn__ctor_System_String_System_Type_System_String_System_Data_MappingType_\">\r\n    \r\n            <a id=\"System_Data_DataColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataColumn(String,Type,String,MappingType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the name of the column to be created. If set to <code>null</code> or an empty string (&quot;&quot;), a default name will be specified when added to the columns collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A supported <span class=\"xref\">stem.Data.DataColumn.DataType*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression used to create this column. For more information, see the <span class=\"xref\">stem.Data.DataColumn.Expression*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>No <code>dataType</code> was specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>type</code> argument sets the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnMapping_\" data-linktype=\"relative-path\">ColumnMapping</a> property. The property specifies how a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is mapped when a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is transformed into an XML document. For example, if the column is named &quot;fName,&quot; and the value it contains is &quot;Bob,&quot; and <code>type</code> is set to <code>MappingType.Attribute</code>, the XML element would be as follows:  </p>\n<p> &lt;Name fName = &#39;Bob&#39;/&gt;  </p>\n<p> For more information about how columns are mapped to elements or attributes, see the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnMapping_\" data-linktype=\"relative-path\">ColumnMapping</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example constructs a computed column.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataColumn4 Example#1\">    private void CreateComputedColumn(DataTable table)\n    {\n        System.Type myDataType = \n            System.Type.GetType(&quot;System.Decimal&quot;);\n\n        // The expression multiplies the &quot;Price&quot; column value \n        // by the &quot;Quantity&quot; to create the &quot;Total&quot; column.\n        string expression = &quot;Price * Quantity&quot;;\n\n        // Create the column, setting the type to Attribute.\n        DataColumn column = new DataColumn(&quot;Total&quot;, myDataType, \n            expression, MappingType.Attribute);\n\n        // Set various properties.\n        column.AutoIncrement = false;\n        column.ReadOnly = true;\n\n        // Add the column to a DataTable object&#39;s to DataColumnCollection.\n        DataSet1.Tables[&quot;OrderDetails&quot;].Columns.Add(column);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataColumn4 Example#1\">Private Sub CreateComputedColumn(ByVal table As DataTable)\n    Dim column As DataColumn\n    Dim decimalType As System.Type = _\n        System.Type.GetType(&quot;System.Decimal&quot;)\n\n    &#39; The expression multiplies the &quot;Price&quot; column value by the \n    &#39; &quot;Quantity&quot; to create the &quot;Total&quot; column.\n    Dim expression As String = &quot;Price * Quantity&quot;\n\n    &#39; Create the column, setting the type to Attribute.\n    column = New DataColumn(&quot;Total&quot;, decimalType, _\n        expression, MappingType.Attribute)\n\n    &#39; Set various properties.\n    column.AutoIncrement = False\n    column.ReadOnly = True\n\n    &#39; Add the column to a DataTable object&#39;s DataColumnCollection.\n    DataSet1.Tables(&quot;OrderDetails&quot;).Columns.Add(column)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_AllowDBNull\">\r\n    \r\n            <a id=\"System_Data_DataColumn_AllowDBNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowDBNull</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowDBNull { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if null values values are allowed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> and sets its AllowDBNull property to <code>true</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.AllowDBNull Example#1\">Private Sub AddNullAllowedColumn()\n    Dim column As DataColumn\n    column = New DataColumn(&quot;classID&quot;, _\n        System.Type.GetType(&quot;System.Int32&quot;))\n    column.AllowDBNull = True\n\n    &#39; Add the column to a new DataTable.\n    Dim table As DataTable\n    table = New DataTable\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.AllowDBNull Example#1\">    private void AddNullAllowedColumn()\n    {\n        DataColumn column;\n        column = new DataColumn(&quot;classID&quot;, \n            System.Type.GetType(&quot;System.Int32&quot;));\n        column.AllowDBNull = true;\n\n        // Add the column to a new DataTable.\n        DataTable table;\n        table = new DataTable();\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_AutoIncrement\">\r\n    \r\n            <a id=\"System_Data_DataColumn_AutoIncrement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoIncrement</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoIncrement { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of the column increments automatically; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column is a computed column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the type of this column is not Int16, Int32, or Int64 when this property is set, the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_DataType_\" data-linktype=\"relative-path\">DataType</a> property is coerced to Int32. An exception is generated if this is a computed column. The <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Expression_\" data-linktype=\"relative-path\">Expression</a> property is set. The incremented value is used only if the row&#39;s value for this column, when added to the columns collection, is equal to the default value.  </p>\n<p> You can create a new row using the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property of the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> class and passing in an array of values. This is a potential problem for a column with its AutoIncrement set to <code>true</code>, because its value is generated automatically. To use the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property, place <code>null</code> in the column&#39;s position in the array. For more information, see the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property of the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> class.  </p>\n<p> If the type of the column is <a class=\"xref\" href=\"system.data.sqltypes.sqlint16\" data-linktype=\"relative-path\">SqlInt16</a> or <a class=\"xref\" href=\"system.data.sqltypes.sqlint32\" data-linktype=\"relative-path\">SqlInt32</a>, AutoIncrement will not work. Use Int16 or Int32 instead.  </p>\n<p> If the type of the column is <a class=\"xref\" href=\"system.data.sqltypes.sqlint64\" data-linktype=\"relative-path\">SqlInt64</a> or <a class=\"xref\" href=\"system.data.sqltypes.sqldecimal\" data-linktype=\"relative-path\">SqlDecimal</a>, AutoIncrement will only partially work. Use Int64 or Decimal instead.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementStep_\" data-linktype=\"relative-path\">AutoIncrementStep</a> value is added to the current value, the overflow check is suppressed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the AutoIncrement, <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementSeed_\" data-linktype=\"relative-path\">AutoIncrementSeed</a>, and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementStep_\" data-linktype=\"relative-path\">AutoIncrementStep</a> properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">Private Sub AddAutoIncrementColumn()\n    Dim column As DataColumn = New DataColumn\n    column.DataType = System.Type.GetType(&quot;System.Int32&quot;)\n    With column\n        .AutoIncrement = True\n        .AutoIncrementSeed = 1000\n        .AutoIncrementStep = 10\n    End With\n\n    &#39; Add the column to a new DataTable.\n    Dim table As DataTable\n    table = New DataTable\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">    private void AddAutoIncrementColumn()\n    {\n        DataColumn column = new DataColumn();\n        column.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1000;\n        column.AutoIncrementStep = 10;\n\n        // Add the column to a new DataTable.\n        DataTable table = new DataTable(&quot;table&quot;);\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_AutoIncrementSeed\">\r\n    \r\n            <a id=\"System_Data_DataColumn_AutoIncrementSeed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoIncrementSeed</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the starting value for a column that has its <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> property set to <code>true</code>. The default is 0.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long AutoIncrementSeed { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The starting value for the <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> feature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>, AutoIncrementSeed, and <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementStep_\" data-linktype=\"relative-path\">AutoIncrementStep</a> properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">Private Sub AddAutoIncrementColumn()\n    Dim column As DataColumn = New DataColumn\n    column.DataType = System.Type.GetType(&quot;System.Int32&quot;)\n    With column\n        .AutoIncrement = True\n        .AutoIncrementSeed = 1000\n        .AutoIncrementStep = 10\n    End With\n\n    &#39; Add the column to a new DataTable.\n    Dim table As DataTable\n    table = New DataTable\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">    private void AddAutoIncrementColumn()\n    {\n        DataColumn column = new DataColumn();\n        column.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1000;\n        column.AutoIncrementStep = 10;\n\n        // Add the column to a new DataTable.\n        DataTable table = new DataTable(&quot;table&quot;);\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_AutoIncrementStep\">\r\n    \r\n            <a id=\"System_Data_DataColumn_AutoIncrementStep_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoIncrementStep</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the increment used by a column with its <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> property set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long AutoIncrementStep { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number by which the value of the column is automatically incremented. The default is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value set is zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a>, <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrementSeed_\" data-linktype=\"relative-path\">AutoIncrementSeed</a>, and AutoIncrementStep properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">Private Sub AddAutoIncrementColumn()\n    Dim column As DataColumn = New DataColumn\n    column.DataType = System.Type.GetType(&quot;System.Int32&quot;)\n    With column\n        .AutoIncrement = True\n        .AutoIncrementSeed = 1000\n        .AutoIncrementStep = 10\n    End With\n\n    &#39; Add the column to a new DataTable.\n    Dim table As DataTable\n    table = New DataTable\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.AutoIncrementSeed Example#1\">    private void AddAutoIncrementColumn()\n    {\n        DataColumn column = new DataColumn();\n        column.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n        column.AutoIncrement = true;\n        column.AutoIncrementSeed = 1000;\n        column.AutoIncrementStep = 10;\n\n        // Add the column to a new DataTable.\n        DataTable table = new DataTable(&quot;table&quot;);\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Caption\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Caption_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Caption</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the caption for the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Caption { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The caption of the column. If not set, returns the <span class=\"xref\">stem.Data.DataColumn.ColumnName*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Caption property to display a descriptive or friendly name for a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. It then adds three <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects to a <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> and sets the Caption property for each <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.Caption Example#1\">private void CreateDataTable()\n{\n   DataTable table;\n   DataColumn column;\n\n   table = new DataTable(&quot;Customers&quot;);\n\n   //CustomerID column\n   column = table.Columns.Add(&quot;CustomerID&quot;, \n       System.Type.GetType(&quot;System.Int32&quot;));\n   column.Unique = true;\n\t\n   //CustomerName column\n   column = table.Columns.Add(&quot;CustomerName&quot;, \n       System.Type.GetType(&quot;System.String&quot;));\n   column.Caption = &quot;Name&quot;;\n\n   //CreditLimit\n   column = table.Columns.Add(&quot;CreditLimit&quot;, \n       System.Type.GetType(&quot;System.Double&quot;));\n   column.DefaultValue = 0;\n   column.Caption = &quot;Limit&quot;;\n\n   table.Rows.Add(new object[] {1, &quot;Jonathan&quot;, 23.44});\n   table.Rows.Add(new object[] {2, &quot;Bill&quot;, 56.87});\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.Caption Example#1\">Private Sub CreateDataTable()\n    Dim table As DataTable\n    Dim column As DataColumn \n\n    table = new DataTable(&quot;Customers&quot;)\n\n    &#39;CustomerID column\n    column = table.Columns.Add( _\n        &quot;CustomerID&quot;, System.Type.GetType(&quot;System.Int32&quot;))\n    column.Unique = True\n\t\n    &#39;CustomerName column\n    column = table.Columns.Add( _\n        &quot;CustomerName&quot;, System.Type.GetType(&quot;System.String&quot;))\n    column.Caption = &quot;Name&quot;\n\n    &#39;CreditLimit\n    column = table.Columns.Add( _\n        &quot;CreditLimit&quot;, System.Type.GetType(&quot;System.Double&quot;))\n    column.DefaultValue = 0\n    column.Caption = &quot;Limit&quot;\n\n    table.Rows.Add(new object() {1, &quot;Jonathan&quot;, 23.44})\n    table.Rows.Add(new object() {2, &quot;Bill&quot;, 56.87})\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_ColumnMapping\">\r\n    \r\n            <a id=\"System_Data_DataColumn_ColumnMapping_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnMapping</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a> of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Data.MappingType ColumnMapping { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.data.mappingtype\" data-linktype=\"relative-path\">MappingType</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ColumnMapping property determines how a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is mapped when a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is saved as an XML document using the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> For example, if a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is named &quot;customerID,&quot; and its ColumnMapping property is set to <code>MappingType.Element</code>, the column value will produce the following XML:  </p>\n<pre><code>&lt;Customers&gt;  \n &lt;customerID&gt;ALFKI&lt;/customerID&gt;  \n......  \n &lt;/Customers&gt;  \n &lt;Orders&gt;  \n &lt;OrderID&gt;12345&lt;/OrderID&gt;  \n &lt;customerID&gt;ALFKI&lt;/customerID&gt;  \n......  \n &lt;/Orders&gt;\n</code></pre><p> However, if the same column is mapped to <code>MappingType.Attribute</code>, the following XML is produced:  </p>\n<pre><code>&lt;Customers customerID=&quot;ALFKI&quot;........more attributes.....&gt;  \n &lt;Order orderID=&quot;1234&quot;....more attributes..../&gt;  \n &lt;Order orderID=&quot;1234&quot;....more attributes..../&gt;  \n...... More orders for this customer  \n &lt;/Customers&gt;\n</code></pre><p> Use the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn__ctor_\" data-linktype=\"relative-path\">DataColumn</a> constructor that contains the <code>type</code> argument to specificy how the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is mapped when its <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is transformed to an XML document.  </p>\n<p> The ColumnMapping property corresponds to the constructor argument <code>type</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ColumnMapping type property of new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.ColumnMapping Example#1\">    private void AddColumn(DataTable table)\n    {\n        // Create a new column and set its properties.\n        DataColumn column = new DataColumn(&quot;column&quot;, \n            typeof(int), &quot;&quot;, MappingType.Attribute);\n        column.DataType = Type.GetType(&quot;System.String&quot;);\n        column.ColumnMapping = MappingType.Element;\n\n        // Add the column the table&#39;s columns collection.\n        table.Columns.Add(column);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.ColumnMapping Example#1\">Private Sub AddColumn(table As DataTable )\n    &#39; Create a new column and set its properties.\n    Dim column As DataColumn = New DataColumn(&quot;ID&quot;, _\n        Type.GetType(&quot;System.Int32&quot;), &quot;&quot;, MappingType.Attribute)\n    column.DataType = Type.GetType(&quot;System.String&quot;)\n    column.ColumnMapping = MappingType.Element\n\n    &#39; Add the column the table&#39;s columns collection.\n    table.Columns.Add(column)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_ColumnName\">\r\n    \r\n            <a id=\"System_Data_DataColumn_ColumnName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the column in the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ColumnName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The property is set to <code>null</code> or an empty string and the column belongs to a collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.duplicatenameexception\" data-linktype=\"relative-path\">DuplicateNameException</a></div>\r\n                  </div>\r\n                  <p>A column with the same name already exists in the collection. The name comparison is not case sensitive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is created, it has no ColumnName value. However, when the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is added to a <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> for a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object, it is given a default name (&quot;Column1&quot;, &quot;Column2&quot;, and so on).  </p>\n<p> By default, the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_Caption_\" data-linktype=\"relative-path\">Caption</a> value is set to the ColumnName value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following examples gets the ColumnName for every column in every table in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The example also shows how to create a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> with a new ColumnName.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.ColumnName Example#1\">Private Sub PrintColumnNames(dataSet As DataSet)\n    Dim table As DataTable\n    Dim column As DataColumn \n\n    &#39; For each DataTable, print the ColumnName.\n    For Each table in dataSet.Tables\n        For Each column in table.Columns\n        Console.WriteLine(column.ColumnName)\n        Next\n    Next\nEnd Sub\n\nPrivate Sub AddColumn(table As DataTable)\n    Dim column As DataColumn\n    column = New DataColumn()\n\n    With column\n        .ColumnName = &quot;SupplierID&quot;\n        .DataType = System.Type.GetType(&quot;System.String&quot;)\n        .Unique = True\n        .AutoIncrement = False\n        .Caption = &quot;SupplierID&quot;\n        .ReadOnly = False\n    End With\n\n    &#39; Add the column to the table&#39;s columns collection.\n    table.Columns.Add(column)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.ColumnName Example#1\">    private void PrintColumnNames(DataSet dataSet)\n    {\n        // For each DataTable, print the ColumnName.\n        foreach(DataTable table in dataSet.Tables)\n        {\n            foreach(DataColumn column in table.Columns)\n            {\n                Console.WriteLine(column.ColumnName);\n            }\n        }\n    }\n \n    private void AddColumn(DataTable table)\n    {\n        DataColumn column;\n        column = new DataColumn();\n        column.ColumnName = &quot;SupplierID&quot;;\n        column.DataType = System.Type.GetType(&quot;System.String&quot;);\n        column.Unique = true;\n        column.AutoIncrement = false;\n        column.Caption = &quot;SupplierID&quot;;\n        column.ReadOnly = false;\n\n        // Add the column to the table&#39;s columns collection.\n        table.Columns.Add(column);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_DataType\">\r\n    \r\n            <a id=\"System_Data_DataColumn_DataType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type of data stored in the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type DataType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that represents the column data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column already has data stored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting the DataType value is very important to guaranteeing the correct creation and updating of data in a data source.  </p>\n<p> The DataType property supports the following base .NET Framework data types:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>  \n</li>\n<li><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>  \n</li>\n<li><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>  \n</li>\n<li><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>  \n</li>\n<li><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>  \n</li>\n<li><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n</li>\n<li><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>  \n</li>\n<li><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>  \n</li>\n<li><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a>  \n</li>\n<li><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>  \n</li>\n<li><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>  \n</li>\n<li><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a>  \n</li>\n<li><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>  \n\n<p>as well as the following array type:  </p>\n</li>\n<li><p><code>Byte[]</code>  </p>\n<p>An exception is generated when changing this property after the column has begun storing data.  </p>\n<p>If <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a> is set to <code>true</code> before setting the DataType property, and you try to set the type to anything except an integer type, an exception is generated.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> A column of data type <code>Byte[]</code> requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type. If a column of data type <code>Byte[]</code> is used as a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_PrimaryKey_\" data-linktype=\"relative-path\">PrimaryKey</a>, or as a <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_Sort_\" data-linktype=\"relative-path\">Sort</a> or <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_RowFilter_\" data-linktype=\"relative-path\">RowFilter</a> key for a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>, any change to the column value must involve assigning the <code>Byte[]</code> column value to a separately instantiated <code>Byte[]</code> object. This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations. This is illustrated by the following example:  </p>\n</div>\n<pre><code>byte[] columnValue = (byte[])myDataTable.Rows[0][0];  \nbyte[] newValue = (byte[])columnValue.Clone();  \nnewValue[1] = 2;  \nmyDataTable.Rows[0][0] = newValue;\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> Although it is possible to define a column as data type other than the base .NET Framework data types and <code>Byte[]</code>, such a column will be treated as a user-defined type, subject to the following usage restrictions. (For more information on user-defined types, see <a href=\"http://msdn.microsoft.com/en-us/ec0266d2-7e5b-47e4-938a-85ac9d04fa40\" data-linktype=\"external\">Creating and Using User-Defined Types</a>.)  </p>\n</div>\n<ul>\n<li><p>The column cannot be part of a <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_RowFilter_\" data-linktype=\"relative-path\">RowFilter</a> or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a> expression.  </p>\n</li>\n<li><p>If the column is used as a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_PrimaryKey_\" data-linktype=\"relative-path\">PrimaryKey</a>, or as a <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_Sort_\" data-linktype=\"relative-path\">Sort</a> or for a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.  </p>\n</li>\n<li><p>Its <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnMapping_\" data-linktype=\"relative-path\">ColumnMapping</a> can be only set to <code>MappingType.Element</code>.  </p>\n</li>\n<li><p>The class that implements the columnâ€™s data type must be must be marked with the <a class=\"xref\" href=\"system.serializableattribute\" data-linktype=\"relative-path\">SerializableAttribute</a>, and if necessary implement the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> or <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.  </p>\n</li>\n<li><p>Support for change tracking is limited. To utilize the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> classâ€™s change tracking mechanism, the class that implements the columnâ€™s data type must either implement the <a class=\"xref\" href=\"system.componentmodel.ichangetracking\" data-linktype=\"relative-path\">IChangeTracking</a> interface, or take over the responsibility for informing the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> when the column value has been modified, either by calling <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_SetModified_\" data-linktype=\"relative-path\">SetModified</a> on the row or by assigning the column value object to a separately instantiated column value object.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds columns of several data types to a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, and then adds one row to the table.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.DataType Example#1\">public DataTable MakeDataTable(){\n    \n    DataTable myTable;\n    DataRow myNewRow; \n    // Create a new DataTable.\n    myTable = new DataTable(&quot;My Table&quot;);\n\n    // Create DataColumn objects of data types.\n    DataColumn colString = new DataColumn(&quot;StringCol&quot;);\n    colString.DataType = System.Type.GetType(&quot;System.String&quot;);\n    myTable.Columns.Add(colString); \n \n    DataColumn colInt32 = new DataColumn(&quot;Int32Col&quot;);\n    colInt32.DataType = System.Type.GetType(&quot;System.Int32&quot;);\n    myTable.Columns.Add(colInt32);\n\n    DataColumn colBoolean = new DataColumn(&quot;BooleanCol&quot;);\n    colBoolean.DataType = System.Type.GetType(&quot;System.Boolean&quot;);\n    myTable.Columns.Add(colBoolean);\n\n    DataColumn colTimeSpan = new DataColumn(&quot;TimeSpanCol&quot;);\n    colTimeSpan.DataType = System.Type.GetType(&quot;System.TimeSpan&quot;);\n    myTable.Columns.Add(colTimeSpan);\n\n    DataColumn colDateTime = new DataColumn(&quot;DateTimeCol&quot;);\n    colDateTime.DataType = System.Type.GetType(&quot;System.DateTime&quot;);\n    myTable.Columns.Add(colDateTime);\n\n    DataColumn colDecimal = new DataColumn(&quot;DecimalCol&quot;);\n    colDecimal.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n    myTable.Columns.Add(colDecimal);\n\n    DataColumn colByteArray = new DataColumn(&quot;ByteArrayCol&quot;);\n    colByteArray.DataType = System.Type.GetType(&quot;System.Byte[]&quot;);\n    myTable.Columns.Add(colByteArray);\n\n\n    // Populate one row with values.\n    myNewRow = myTable.NewRow();\n\n    myNewRow[&quot;StringCol&quot;] = &quot;Item Name&quot;;\n    myNewRow[&quot;Int32Col&quot;] = 2147483647;\n    myNewRow[&quot;BooleanCol&quot;] = true;\n    myNewRow[&quot;TimeSpanCol&quot;] = new TimeSpan(10,22,10,15,100);\n    myNewRow[&quot;DateTimeCol&quot;] = System.DateTime.Today;\n    myNewRow[&quot;DecimalCol&quot;] = 64.0021;\n    myNewRow[&quot;ByteArrayCol&quot;] = new Byte[] { 1, 5, 120 };\n    myTable.Rows.Add(myNewRow);\n    return myTable;  \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DataType Example#1\">Public Function MakeDataTable() As DataTable\n    \n    Dim myTable As DataTable \n    Dim myNewRow As DataRow \n    &#39; Create a new DataTable.\n    myTable = New DataTable(&quot;My Table&quot;)\n \n    &#39; Create DataColumn objects of data types.\n    Dim colString As DataColumn = New DataColumn(&quot;StringCol&quot;)\n    colString.DataType = System.Type.GetType(&quot;System.String&quot;)\n    myTable.Columns.Add(colString) \n \n    Dim colInt32 As DataColumn = New DataColumn(&quot;Int32Col&quot;)\n    colInt32.DataType = System.Type.GetType(&quot;System.Int32&quot;)\n    myTable.Columns.Add(colInt32)\n \n    Dim colBoolean As DataColumn = New DataColumn(&quot;BooleanCol&quot;)\n    colBoolean.DataType = System.Type.GetType(&quot;System.Boolean&quot;)\n    myTable.Columns.Add(colBoolean)\n \n    Dim colTimeSpan As DataColumn = New DataColumn(&quot;TimeSpanCol&quot;)\n    colTimeSpan.DataType = System.Type.GetType(&quot;System.TimeSpan&quot;)\n    myTable.Columns.Add(colTimeSpan)\n \n    Dim colDateTime As DataColumn = New DataColumn(&quot;DateTimeCol&quot;)\n    colDateTime.DataType = System.Type.GetType(&quot;System.DateTime&quot;)\n    myTable.Columns.Add(colDateTime)\n \n    Dim colDecimal As DataColumn = New DataColumn(&quot;DecimalCol&quot;)\n    colDecimal.DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n    myTable.Columns.Add(colDecimal)\n \n    &#39; Populate one row with values.\n    myNewRow = myTable.NewRow()\n \n    myNewRow(&quot;StringCol&quot;) = &quot;Item Name&quot;\n    myNewRow(&quot;Int32Col&quot;) = 2147483647\n    myNewRow(&quot;BooleanCol&quot;) = True\n    myNewRow(&quot;TimeSpanCol&quot;) = New TimeSpan(10,22,10,15,100)\n    myNewRow(&quot;DateTimeCol&quot;) = System.DateTime.Today\n    myNewRow(&quot;DecimalCol&quot;) = 64.0021\n    myNewRow(&quot;ByteArrayCol&quot;) = New [Byte]() {1, 5, 120}\n    myTable.Rows.Add(myNewRow)\n    MakeDataTable = myTable  \n End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_DateTimeMode\">\r\n    \r\n            <a id=\"System_Data_DataColumn_DateTimeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>DateTimeMode</code> for the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataSetDateTime DateTimeMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datasetdatetime\" data-linktype=\"relative-path\">DataSetDateTime</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.data.datasetdatetime\" data-linktype=\"relative-path\">DataSetDateTime</a> for the specified column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DateTimeMode cannot be modified after rows are added to a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>, except for modifying from <a class=\"xref\" href=\"system.data.datasetdatetime\" data-linktype=\"relative-path\">DataSetDateTime</a> and <a class=\"xref\" href=\"system.data.datasetdatetime\" data-linktype=\"relative-path\">DataSetDateTime</a> or vice-versa. The modification from <code>UnspecifiedLocal</code> to <code>Unspecified</code> and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_DefaultValue\">\r\n    \r\n            <a id=\"System_Data_DataColumn_DefaultValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default value for the column when you are creating new rows.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object DefaultValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A value appropriate to the column&#39;s <span class=\"xref\">stem.Data.DataColumn.DataType*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>When you are adding a row, the default value is not an instance of the column&#39;s data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A default value is the value that is automatically assigned to the column when a <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> is created (for example, the date and time when the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> was created.  </p>\n<p> When <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_AutoIncrement_\" data-linktype=\"relative-path\">AutoIncrement</a> is set to true, there can be no default value.  </p>\n<p> You can create a new row using the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property of the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> class and passing the method an array of values. This is a potential problem for a column with a default value because its value is generated automatically. To use the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property with such a column, place <code>null</code> in the column&#39;s position in the array. For more information, see the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_ItemArray_\" data-linktype=\"relative-path\">ItemArray</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates several <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects that have different data types, and sets appropriate default values to each column.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.DefaultValue Example#1\">Private Sub CreateColumns()\n    Dim column As DataColumn\n    Dim table As New DataTable\n \n    column = New DataColumn\n    With column\n       .DataType = System.Type.GetType(&quot;System.String&quot;)\n       .DefaultValue = &quot;Address&quot;\n       .Unique = False\n    End With\n    table.Columns.Add(column)\n    \n    column = New DataColumn\n    With column\n       .DataType = System.Type.GetType(&quot;System.Int32&quot;)\n       .DefaultValue = 100\n    End With\n    table.Columns.Add(column)\n \n    column = New DataColumn\n    With column\n       .DataType = System.Type.GetType(&quot;System.DateTime&quot;)\n       .DefaultValue = &quot;1/1/2001&quot;\n    End With\n    table.Columns.Add(column)\n \n    Dim row As DataRow\n    &#39; Add one row. Since it has default values, \n    &#39; no need to set values yet.\n    row = table.NewRow\n   \n    table.Rows.Add(row)\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Expression\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Expression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Expression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Expression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An expression to calculate the value of a column, or create an aggregate column. The return type of an expression is determined by the <span class=\"xref\">stem.Data.DataColumn.DataType*</span> of the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Data.DataColumn.AutoIncrement*</span> or <span class=\"xref\">stem.Data.DataColumn.Unique*</span> property is set to <code>true</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>When you are using the CONVERT function, the requested cast is not possible. See the Conversion function in the following section for detailed information about possible casts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>When you use the SUBSTRING function, the start argument is out of range.  </p>\n<p> -Or-  </p>\n<p> When you use the SUBSTRING function, the length argument is out of range.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>When you use the LEN function or the TRIM function, the expression does not evaluate to a string. This includes expressions that evaluate to <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>One use of the Expression property is to create calculated columns. For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region. Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the Expression property, as shown in the Visual Basic code in the following section:  </p>\n<p> DataSet1.Tables(&quot;Products&quot;).Columns(&quot;tax&quot;).Expression = &quot;UnitPrice * 0.086&quot;  </p>\n<p> A second use is to create an aggregate column. Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. A simple example is to count the number of rows returned in the set. This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:  </p>\n<pre><code>DataSet1.Tables(&quot;Orders&quot;).Columns(&quot;OrderCount&quot;).Expression = &quot;Count(OrderID)&quot;\n</code></pre><h2 id=\"expression-syntax\">Expression Syntax</h2>\n<p> When you create an expression, use the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a> property to refer to columns. For example, if the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_ColumnName_\" data-linktype=\"relative-path\">ColumnName</a> for one column is &quot;UnitPrice&quot;, and another &quot;Quantity&quot;, the expression would be as follows:  </p>\n<p> &quot;UnitPrice * Quantity&quot;  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a column is used in an expression, then the expression is said to have a dependency on that column. If a dependent column is renamed or removed, no exception is thrown. An exception will be thrown when the now-broken expression column is accessed.  </p>\n</div>\n<p> When you create an expression for a filter, enclose strings with single quotation marks:  </p>\n<p> &quot;LastName = &#39;Jones&#39;&quot;  </p>\n<p> If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.  </p>\n<p> And  </p>\n<p> Between  </p>\n<p> Child  </p>\n<p> False  </p>\n<p> In  </p>\n<p> Is  </p>\n<p> Like  </p>\n<p> Not  </p>\n<p> Null  </p>\n<p> Or  </p>\n<p> Parent  </p>\n<p> True  </p>\n<p> If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the &quot;`&quot; (grave accent) quotes. For example, to use a column named &quot;Column#&quot; in an expression, you would write either &quot;[Column#]&quot;:  </p>\n<p> Total * [Column#]  </p>\n<p> or &quot;`Column#`&quot;:  </p>\n<p> Total * `Column#`  </p>\n<p> If the column name is enclosed in square brackets then any &#39;]&#39; and &#39;\\&#39; characters (but not any other characters) in it must be escaped by prepending them with the backslash (&quot;\\&quot;) character. If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it. For example, a column named &quot;Column[]\\&quot; would be written:  </p>\n<p> Total * [Column[\\]\\\\]  </p>\n<p> or  </p>\n<p> Total * `Column[]\\`  </p>\n<h2 id=\"user-defined-values\">User-Defined Values</h2>\n<p> User-defined values may be used within expressions to be compared with column values. String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character). Date values should be enclosed within pound signs (#) or single quotes (&#39;) based on the data provider. Decimals and scientific notation are permissible for numeric values. For example:  </p>\n<p> &quot;FirstName = &#39;John&#39;&quot;  </p>\n<p> &quot;Price &lt;= 50.00&quot;  </p>\n<p> &quot;Birthdate &lt; #1/31/82#&quot;  </p>\n<p> For columns that contain enumeration values, cast the value to an integer data type. For example:  </p>\n<p> &quot;EnumColumn = 5&quot;  </p>\n<h2 id=\"parsing-literal-expressions\">Parsing Literal Expressions</h2>\n<p> All literal expressions must be expressed in the invariant culture locale. When <code>DataSet</code> parses and converts literal expressions, it always uses the invariant culture, not the current culture.  </p>\n<p> String literals are identified when there are single quotes surrounding the value. For example:  </p>\n<p> &#39;John&#39;  </p>\n<p> <code>Boolean</code> literals are true and false; they are not quoted in expressions.  </p>\n<p> <code>Integer</code> literals [+-]?[0-9]+ are treated as <code>System.Int32</code>, <code>System.Int64</code> or <code>System.Double</code>. <code>System.Double</code> can lose precision depending on how large the number is. For example, if the number in the literal is 2147483650, <code>DataSet</code> will first attempt to parse the number as an <code>Int32</code>. This will not succeed because the number is too large. In this case <code>DataSet</code> will parse the number as an <code>Int64</code>, which will succeed. If the literal was a number larger than the maximum value of an Int64, <code>DataSet</code> will parse the literal using <code>Double</code>.  </p>\n<p> Real literals using scientific notation, such as 4.42372E-30, are parsed using <code>System.Double</code>.  </p>\n<p> Real literals without scientific notation, but with a decimal point, are treated as <code>System.Decimal</code>. If the number exceeds the maximum or minimum values supported by <code>System.Decimal</code>, then it is parsed as a <code>System.Double</code>. For example:  </p>\n<p> 142526.144524 will be converted to a <code>Decimal</code>.  </p>\n<p> 345262.78036719560925667 will be treated as a <code>Double</code>.  </p>\n<h2 id=\"operators\">Operators</h2>\n<p> Concatenation is allowed using Boolean AND, OR, and NOT operators. You can use parentheses to group clauses and force precedence. The AND operator has precedence over other operators. For example:  </p>\n<p> (LastName = &#39;Smith&#39; OR LastName = &#39;Jones&#39;) AND FirstName = &#39;John&#39;  </p>\n<p> When you create comparison expressions, the following operators are allowed:  </p>\n<p> &lt;  </p>\n<p> >  </p>\n<p> &lt;=  </p>\n<p> >=  </p>\n<p> &lt;&gt;  </p>\n<p> =  </p>\n<p> IN  </p>\n<p> LIKE  </p>\n<p> The following arithmetic operators are also supported in expressions:  </p>\n<p> + (addition)  </p>\n<p> - (subtraction)  </p>\n<p> * (multiplication)  </p>\n<p> / (division)  </p>\n<p> % (modulus)  </p>\n<h2 id=\"string-operators\">String Operators</h2>\n<p> To concatenate a string, use the + character. The value of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_CaseSensitive_\" data-linktype=\"relative-path\">CaseSensitive</a> property of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class determines whether string comparisons are case-sensitive. However, you can override that value with the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_CaseSensitive_\" data-linktype=\"relative-path\">CaseSensitive</a> property of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> class.  </p>\n<h2 id=\"wildcard-characters\">Wildcard Characters</h2>\n<p> Both the * and % can be used interchangeably for wildcard characters in a LIKE comparison. If the string in a LIKE clause contains a * or %, those characters should be enclosed in brackets ([]). If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]). A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern. For example:  </p>\n<p> &quot;ItemName LIKE &#39;<em>product\\</em>&#39;&quot;  </p>\n<p> &quot;ItemName LIKE &#39;*product&#39;&quot;  </p>\n<p> &quot;ItemName LIKE &#39;product*&#39;&quot;  </p>\n<p> Wildcard characters are not allowed in the middle of a string. For example, &#39;te*xt&#39; is not allowed.  </p>\n<h2 id=\"parentchild-relation-referencing\">Parent/Child Relation Referencing</h2>\n<p> A parent table may be referenced in an expression by prepending the column name with <code>Parent</code>. For example, the <code>Parent.Price</code> references the parent table&#39;s column named <code>Price</code>.  </p>\n<p> When a child has more than one parent row, use Parent(RelationName).ColumnName. For example, the Parent(RelationName).Price references the parent tableâ€™s column named Price via the relation.  </p>\n<p> A column in a child table may be referenced in an expression by prepending the column name with <code>Child</code>. However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function. For example, <code>Sum(Child.Price)</code> would return the sum of the column named <code>Price</code> in the child table.  </p>\n<p> If a table has more than one child, the syntax is: <code>Child(RelationName)</code>. For example, if a table has two child tables named <code>Customers</code> and <code>Orders</code>, and the <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> object is named <code>Customers2Orders</code>, the reference would be as follows:  </p>\n<p> Avg(Child(Customers2Orders).Quantity)  </p>\n<h2 id=\"aggregates\">Aggregates</h2>\n<p> The following aggregate types are supported:  </p>\n<p> Sum (Sum)  </p>\n<p> Avg (Average)  </p>\n<p> Min (Minimum)  </p>\n<p> Max (Maximum)  </p>\n<p> Count (Count)  </p>\n<p> StDev (Statistical standard deviation)  </p>\n<p> Var (Statistical variance).  </p>\n<p> Aggregates are ordinarily performed along relationships. Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier. For example:  </p>\n<p> Avg(Child.Price)  </p>\n<p> Avg(Child(Orders2Details).Price)  </p>\n<p> An aggregate can also be performed on a single table. For example, to create a summary of figures in a column named &quot;Price&quot;:  </p>\n<p> Sum(Price)  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you use a single table to create an aggregate, there would be no group-by functionality. Instead, all rows would display the same value in the column.  </p>\n</div>\n<p> If a table has no rows, the aggregate functions will return <code>null</code>.  </p>\n<p> Data types can always be determined by examining the <a class=\"xref\" href=\"system.data.datacolumn#System_Data_DataColumn_DataType_\" data-linktype=\"relative-path\">DataType</a> property of a column. You can also convert data types using the Convert function, shown in the following section.  </p>\n<p> An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.  </p>\n<h2 id=\"functions\">Functions</h2>\n<p> The following functions are also supported:  </p>\n<p> <code>CONVERT</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Converts particular expression to a specified .NET Framework Type.</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>Convert(<code>expression</code>, <code>type</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expression</code> -- The expression to convert.<br><br> <code>type</code> -- The .NET Framework type to which the value will be converted.</td>\n</tr>\n</tbody>\n</table>\n<p> Example: myDataColumn.Expression=&quot;Convert(total, &#39;System.Int32&#39;)&quot;  </p>\n<p> All conversions are valid with the following exceptions: <code>Boolean</code> can be coerced to and from <code>Byte</code>, <code>SByte</code>, <code>Int16</code>, <code>Int32</code>, <code>Int64</code>, <code>UInt16</code>, <code>UInt32</code>, <code>UInt64</code>, <code>String</code> and itself only. <code>Char</code> can be coerced to and from <code>Int32</code>, <code>UInt32</code>, <code>String</code>, and itself only. <code>DateTime</code> can be coerced to and from <code>String</code> and itself only. <code>TimeSpan</code> can be coerced to and from <code>String</code> and itself only.  </p>\n<p> <code>LEN</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Gets the length of a string</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>LEN(<code>expression</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expression</code> -- The string to be evaluated.</td>\n</tr>\n</tbody>\n</table>\n<p> Example: myDataColumn.Expression=&quot;Len(ItemName)&quot;  </p>\n<p> <code>ISNULL</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Checks an expression and either returns the checked expression or a replacement value.</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>ISNULL(<code>expression</code>, <code>replacementvalue</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expression</code> -- The expression to check.<br><br> <code>replacementvalue</code> -- If expression is <code>null</code>, <code>replacementvalue</code> is returned.</td>\n</tr>\n</tbody>\n</table>\n<p> Example: myDataColumn.Expression=&quot;IsNull(price, -1)&quot;  </p>\n<p> <code>IIF</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Gets one of two values depending on the result of a logical expression.</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>IIF(<code>expr</code>, <code>truepart</code>, <code>falsepart</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expr</code> -- The expression to evaluate.<br><br> <code>truepart</code> -- The value to return if the expression is true.<br><br> <code>falsepart</code> -- The value to return if the expression is false.</td>\n</tr>\n</tbody>\n</table>\n<p> Example: myDataColumn.Expression = &quot;IIF(total&gt;1000, &#39;expensive&#39;, &#39;dear&#39;)  </p>\n<p> <code>TRIM</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Removes all leading and trailing blank characters like \\r, \\n, \\t, &#39; &#39;</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>TRIM(<code>expression</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expression</code> -- The expression to trim.</td>\n</tr>\n</tbody>\n</table>\n<p> <code>SUBSTRING</code>  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>Gets a sub-string of a specified length, starting at a specified point in the string.</td>\n</tr>\n<tr>\n<td>Syntax</td>\n<td>SUBSTRING(<code>expression</code>, <code>start</code>, <code>length</code>)</td>\n</tr>\n<tr>\n<td>Arguments</td>\n<td><code>expression</code> -- The source string for the substring.<br><br> <code>start</code> -- Integer that specifies where the substring starts.<br><br> <code>length</code> -- Integer that specifies the length of the substring.</td>\n</tr>\n</tbody>\n</table>\n<p> Example: myDataColumn.Expression = &quot;SUBSTRING(phone, 7, 8)&quot;  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can reset the Expression property by assigning it a null value or empty string. If a default value is set on the expression column, all previously filled rows are assigned the default value after the Expression property is reset.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates three columns in a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column. The resulting table is displayed in a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.Expression Example#1\">    private void CalcColumns()\n    {\n        DataTable table = new DataTable ();\n \n        // Create the first column.\n        DataColumn priceColumn = new DataColumn();\n        priceColumn.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n        priceColumn.ColumnName = &quot;price&quot;;\n        priceColumn.DefaultValue = 50;\n         \n        // Create the second, calculated, column.\n        DataColumn taxColumn = new DataColumn();\n        taxColumn.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n        taxColumn.ColumnName = &quot;tax&quot;;\n        taxColumn.Expression = &quot;price * 0.0862&quot;;\n         \n        // Create third column.\n        DataColumn totalColumn = new DataColumn();\n        totalColumn.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n        totalColumn.ColumnName = &quot;total&quot;;\n        totalColumn.Expression = &quot;price + tax&quot;;\n    \n        // Add columns to DataTable.\n        table.Columns.Add(priceColumn);\n        table.Columns.Add(taxColumn);\n        table.Columns.Add(totalColumn);\n\n        DataRow row = table.NewRow();\n        table.Rows.Add(row);\n        DataView view = new DataView(table);\n        dataGrid1.DataSource = view;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.Expression Example#1\">Private Sub CalcColumns()\n     Dim rate As Single = .0862\n     dim table as DataTable = New DataTable \n \n     &#39; Create the first column.\n     Dim priceColumn As DataColumn = New DataColumn\n     With priceColumn\n         .DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n         .ColumnName = &quot;price&quot;\n         .DefaultValue = 50\n     End With\n     \n     &#39; Create the second, calculated, column.\n     Dim taxColumn As DataColumn = New DataColumn\n     With taxColumn\n         .DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n         .ColumnName = &quot;tax&quot;\n         .Expression = &quot;price * 0.0862&quot;\n     End With\n     \n    &#39; Create third column\n     Dim totalColumn As DataColumn = New DataColumn\n     With totalColumn\n         .DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n         .ColumnName = &quot;total&quot;\n         .Expression = &quot;price + tax&quot;\n     End With\n \n     &#39; Add columns to DataTable\n     With table.Columns\n         .Add(priceColumn)\n         .Add(taxColumn)\n         .Add(totalColumn)\n     End With\n    \n     Dim row As DataRow= table.NewRow\n     table.Rows.Add(row)\n     Dim view As New DataView\n     view.Table = table\n     DataGrid1.DataSource = view\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_ExtendedProperties\">\r\n    \r\n            <a id=\"System_Data_DataColumn_ExtendedProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExtendedProperties</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of custom user information associated with a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.PropertyCollection ExtendedProperties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a> of custom information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExtendedProperties property lets you store custom information with the object. For example, you may store a time when the data should be refreshed.  </p>\n<p> Extended properties must be of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. Properties that are not of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> are not persisted when the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is written as XML.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a custom property to the <a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a> returned by the ExtendedProperties property. The second example retrieves the custom property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.ExtendedProperties Example#1\">    private void SetProperty(DataColumn column)\n    {\n        column.ExtendedProperties.Add(&quot;TimeStamp&quot;, DateTime.Now);\n    }\n \n    private void GetProperty(DataColumn column)\n    {\n        Console.WriteLine(column.ExtendedProperties[&quot;TimeStamp&quot;].ToString());\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.ExtendedProperties Example#1\"> Private Sub SetProperty(column As DataColumn)\n     column.ExtendedProperties.Add(&quot;TimeStamp&quot;, DateTime.Now)\n End Sub    \n    \n Private Sub GetProperty(column As DataColumn)\n     Console.WriteLine(column.ExtendedProperties(&quot;TimeStamp&quot;).ToString())\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_MaxLength\">\r\n    \r\n            <a id=\"System_Data_DataColumn_MaxLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum length of a text column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MaxLength { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The maximum length of the column in characters. If the column has no maximum length, the value is â€“1 (default).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MaxLength property is ignored for non-text columns. A <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> exception is raised if you assign MaxLength to a non-string column.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Namespace\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Namespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Namespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The namespace already has data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Namespace property is used when reading and writing an XML document into a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a>, or <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods.  </p>\n<p> The namespace of an XML document is used to scope XML attributes and elements when read into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For example, a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains a schema read from a document that has the namespace &quot;myCompany,&quot; and an attempt is made to read data (with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method) from a document that has the namespace &quot;theirCompany.&quot; Any data that does not correspond to the existing schema will be ignored.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Ordinal\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Ordinal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Ordinal</div>        \r\n          </div>\r\n    \r\n            <p>Gets the (zero-based) position of the column in the <a class=\"xref\" href=\"system.data.datacolumncollection\" data-linktype=\"relative-path\">DataColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Ordinal { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The position of the column. Gets -1 if the column is not a member of a collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns the column name, ordinal, and data type of a column.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.Ordinal Example#1\">Private Sub PrintColumnDetails(ByVal column As DataColumn)\n    &#39; Print the Ordinal, ColumnName, and \n    &#39; DataType of the column.\n    Console.WriteLine(column.Ordinal)\n    Console.WriteLine(column.ColumnName)\n    Console.WriteLine(column.DataType)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.Ordinal Example#1\">    private void PrintColumnDetails(DataColumn column)\n    {\n        // Print the Ordinal, ColumnName, and \n        // DataType of the column.\n        Console.WriteLine(column.Ordinal);\n        Console.WriteLine(column.ColumnName);\n        Console.WriteLine(column.DataType);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Prefix\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Prefix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Prefix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an XML prefix that aliases the namespace of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Prefix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML prefix for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Prefix_\" data-linktype=\"relative-path\">Prefix</a> is used throughout an XML document to identify elements which belong to the namespace for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object (as set by the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_ReadOnly\">\r\n    \r\n            <a id=\"System_Data_DataColumn_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the column is read only; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The property is set to <code>false</code> on a computed column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> and sets its ReadOnly property <code>true</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.ReadOnly Example#1\">Private Sub AddColumn(ByVal table As DataTable)\n    &#39; Add a DataColumn to the collection and set its properties.\n    &#39; The constructor sets the ColumnName of the column.\n    Dim column As DataColumn = table.Columns.Add(&quot;Total&quot;)\n    column.DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n    column.ReadOnly = True\n    column.Expression = &quot;UnitPrice * Quantity&quot;\n    column.Unique = False\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.ReadOnly Example#1\">    private void AddColumn(DataTable table)\n    {\n        // Add a DataColumn to the collection and set its properties.\n        // The constructor sets the ColumnName of the column.\n        DataColumn column = table.Columns.Add(&quot;Total&quot;);\n        column.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n        column.ReadOnly = true;\n        column.Expression = &quot;UnitPrice * Quantity&quot;;\n        column.Unique = false;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Table\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Table_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Table</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to which the column belongs to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataTable Table { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> belongs to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example returns the parent table of a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> through its Table property.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.Table Example#1\">Private Sub GetTable(ByVal column As DataColumn)\n    &#39; Get the Table of the column.\n    Dim table As DataTable = column.Table\n    Console.WriteLine(&quot;columns&quot;, table.Columns.Count)\n    Console.WriteLine(&quot;rows&quot;, table.Rows.Count)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.Table Example#1\">    private void GetTable(DataColumn column)\n    {\n        // Get the Table of the column.\n        DataTable table = column.Table;\n        Console.WriteLine(&quot;columns count: &quot; + table.Columns.Count);\n        Console.WriteLine(&quot;rows count: &quot; + table.Rows.Count);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_Unique\">\r\n    \r\n            <a id=\"System_Data_DataColumn_Unique_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unique</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the values in each row of the column must be unique.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Unique { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value must be unique; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column is a calculated column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates new <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a>, sets its properties, and adds it to a table&#39;s columns collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.Unique Example#1\">    private void AddColumn(DataTable table)\n    {\n        // Add a DataColumn to the collection and set its properties.\n        // The constructor sets the ColumnName of the column.\n        DataColumn column = new DataColumn(&quot;Total&quot;);\n        column.DataType = System.Type.GetType(&quot;System.Decimal&quot;);\n        column.ReadOnly = true;\n        column.Expression = &quot;UnitPrice * Quantity&quot;;\n        column.Unique = false;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.Unique Example#1\">Private Sub AddColumn(table As DataTable)\n    &#39; Add a DataColumn to the collection and set its properties.\n    &#39; The constructor sets the ColumnName of the column.\n    Dim column As DataColumn = New DataColumn(&quot;Total&quot;)\n    column.DataType = System.Type.GetType(&quot;System.Decimal&quot;)\n    column.ReadOnly = True\n    column.Expression = &quot;UnitPrice * Quantity&quot;\n    column.Unique = False\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_CheckNotAllowNull\">\r\n    \r\n            <a id=\"System_Data_DataColumn_CheckNotAllowNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckNotAllowNull()</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CheckNotAllowNull ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_CheckUnique\">\r\n    \r\n            <a id=\"System_Data_DataColumn_CheckUnique_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckUnique()</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CheckUnique ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_OnPropertyChanging_System_ComponentModel_PropertyChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Data_DataColumn_OnPropertyChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPropertyChanging(PropertyChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcevent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Parameter reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_RaisePropertyChanging_System_String_\">\r\n    \r\n            <a id=\"System_Data_DataColumn_RaisePropertyChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaisePropertyChanging(String)</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void RaisePropertyChanging (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Parameter reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_SetOrdinal_System_Int32_\">\r\n    \r\n            <a id=\"System_Data_DataColumn_SetOrdinal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOrdinal(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the ordinal or position of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> to the specified ordinal or position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOrdinal (int ordinal);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ordinal</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specified ordinal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Changes the ordinal or position of the <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> to the specified ordinal or position. If ordinal is less than 0 or greater than the existing number of columns â€“ 1 (greater than the ordinal of the last column) then an Invalid <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n<p> When you change a columnâ€™s ordinal, the column is moved to the new position in the collection of columns. Any columns between the previous and new ordinal will be renumbered, to adjust for a column&#39;s new ordinal.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_DataColumn_ToString\">\r\n    \r\n            <a id=\"System_Data_DataColumn_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <span class=\"xref\">stem.Data.DataColumn.Expression*</span> of the column, if one exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Data.DataColumn.Expression*</span> value, if the property is set; otherwise, the <span class=\"xref\">stem.Data.DataColumn.ColumnName*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ToString property to return the default string of each member of a collection of <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData DataColumn.ToString Example#1\">Private Sub PrintColumns(table As DataTable)\n    &#39; Print the default string of each column in a collection.\n    Dim column As DataColumn\n    For Each column In table.Columns\n       Console.WriteLine(column.ToString())\n    Next\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData DataColumn.ToString Example#1\">    private void PrintColumns(DataTable table)\n    {\n        // Print the default string of each column in a collection.\n        foreach(DataColumn column in table.Columns)\n        {\n            Console.WriteLine(column.ToString());\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataColumn.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataColumn.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.AllowDBNull\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.AutoIncrement\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.AutoIncrementSeed\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.AutoIncrementStep\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Caption\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.CheckNotAllowNull\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.CheckUnique\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.ColumnMapping\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.ColumnName\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.DataType\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.DateTimeMode\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.DefaultValue\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Expression\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.ExtendedProperties\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.MaxLength\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.OnPropertyChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Ordinal\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Prefix\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.RaisePropertyChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.SetOrdinal\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Table\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.ToString\">\r\n<meta name=\"APIName\" content=\"System.Data.DataColumn.Unique\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"11858fcd-2582-a752-ab56-2c242c5e9394\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Data\\DataColumn.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the schema of a column in a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.DataColumn\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataColumn.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataColumn.yml","open_to_public_contributors":true,"api_name":["System.Data.DataColumn","System.Data.DataColumn..ctor","System.Data.DataColumn.AllowDBNull","System.Data.DataColumn.AutoIncrement","System.Data.DataColumn.AutoIncrementSeed","System.Data.DataColumn.AutoIncrementStep","System.Data.DataColumn.Caption","System.Data.DataColumn.CheckNotAllowNull","System.Data.DataColumn.CheckUnique","System.Data.DataColumn.ColumnMapping","System.Data.DataColumn.ColumnName","System.Data.DataColumn.DataType","System.Data.DataColumn.DateTimeMode","System.Data.DataColumn.DefaultValue","System.Data.DataColumn.Expression","System.Data.DataColumn.ExtendedProperties","System.Data.DataColumn.MaxLength","System.Data.DataColumn.Namespace","System.Data.DataColumn.OnPropertyChanging","System.Data.DataColumn.Ordinal","System.Data.DataColumn.Prefix","System.Data.DataColumn.RaisePropertyChanging","System.Data.DataColumn.ReadOnly","System.Data.DataColumn.SetOrdinal","System.Data.DataColumn.Table","System.Data.DataColumn.ToString","System.Data.DataColumn.Unique"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.DataColumn","System::Data::DataColumn","System.Data.DataColumn.#ctor","System::Data::DataColumn::#ctor","System.Data.DataColumn.AllowDBNull","System::Data::DataColumn::AllowDBNull","System.Data.DataColumn.AutoIncrement","System::Data::DataColumn::AutoIncrement","System.Data.DataColumn.AutoIncrementSeed","System::Data::DataColumn::AutoIncrementSeed","System.Data.DataColumn.AutoIncrementStep","System::Data::DataColumn::AutoIncrementStep","System.Data.DataColumn.Caption","System::Data::DataColumn::Caption","System.Data.DataColumn.CheckNotAllowNull","System::Data::DataColumn::CheckNotAllowNull","System.Data.DataColumn.CheckUnique","System::Data::DataColumn::CheckUnique","System.Data.DataColumn.ColumnMapping","System::Data::DataColumn::ColumnMapping","System.Data.DataColumn.ColumnName","System::Data::DataColumn::ColumnName","System.Data.DataColumn.DataType","System::Data::DataColumn::DataType","System.Data.DataColumn.DateTimeMode","System::Data::DataColumn::DateTimeMode","System.Data.DataColumn.DefaultValue","System::Data::DataColumn::DefaultValue","System.Data.DataColumn.Expression","System::Data::DataColumn::Expression","System.Data.DataColumn.ExtendedProperties","System::Data::DataColumn::ExtendedProperties","System.Data.DataColumn.MaxLength","System::Data::DataColumn::MaxLength","System.Data.DataColumn.Namespace","System::Data::DataColumn::Namespace","System.Data.DataColumn.OnPropertyChanging","System::Data::DataColumn::OnPropertyChanging","System.Data.DataColumn.Ordinal","System::Data::DataColumn::Ordinal","System.Data.DataColumn.Prefix","System::Data::DataColumn::Prefix","System.Data.DataColumn.RaisePropertyChanging","System::Data::DataColumn::RaisePropertyChanging","System.Data.DataColumn.ReadOnly","System::Data::DataColumn::ReadOnly","System.Data.DataColumn.SetOrdinal","System::Data::DataColumn::SetOrdinal","System.Data.DataColumn.Table","System::Data::DataColumn::Table","System.Data.DataColumn.ToString","System::Data::DataColumn::ToString","System.Data.DataColumn.Unique","System::Data::DataColumn::Unique"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"11858fcd-2582-a752-ab56-2c242c5e9394","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Data\\DataColumn.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/DataColumn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataColumn class | Microsoft Docs","_op_ogTitle":"DataColumn class","description":"Represents the schema of a column in a .\n","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.DataColumn","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.datacolumn","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.datacolumn","fileRelativePath":"System.Data.DataColumn.html"},"themesRelativePathToOutputRoot":"_themes/"}