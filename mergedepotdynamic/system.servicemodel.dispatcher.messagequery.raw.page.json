{"content":"    \r\n    <h1 id=\"System_ServiceModel_Dispatcher_MessageQuery\">\r\n      <span class=\"lang-csharp\">MessageQuery</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the core behavior of classes used to search for specific correlating data in a message.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class MessageQuery</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MessageQuery</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The MessageQuery class is similar to the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagefilter\" data-linktype=\"relative-path\">MessageFilter</a> class.  However, instead of returning matches, the &lt;xref:System.ServiceModel.Dispatcher.MessageQuery.Evaluate%2A&gt; method returns the results of evaluating a query against a message. The result of the query is a value in the message. Use the value as a key to correlate the message to other messages. To add a new property for the data, use the <a class=\"xref\" href=\"system.servicemodel.channels.correlationdatamessageproperty#System_ServiceModel_Channels_CorrelationDataMessageProperty_Add_\" data-linktype=\"relative-path\">Add</a> method of the <a class=\"xref\" href=\"system.servicemodel.channels.correlationdatamessageproperty\" data-linktype=\"relative-path\">CorrelationDataMessageProperty</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a concrete implementation of the MessageQuery, see the <a class=\"xref\" href=\"system.servicemodel.xpathmessagequery\" data-linktype=\"relative-path\">XPathMessageQuery</a> class.  </p>\n</div>\n<h2 id=\"using-the-xpathmessagequery-and-messagequerycollection-classes\">Using the XPathMessageQuery and MessageQueryCollection classes</h2>\n<p> You can optimize the query process by creating a set of query objects and inserting them into an instance of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a concrete implementation of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a>, see the <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathmessagequerycollection\" data-linktype=\"relative-path\">XPathMessageQueryCollection</a> class.  </p>\n</div>\n<p> A common usage is to populate the collection with queries that have the same XPath predicate, but that differ only in the final leaf value. For example, the following XPath queries are identical except for the final clause. The first queries for all elements that have the quantity attribute set to 1, and the second queries for elements with the product attribute set to &#39;Contoso&#39;):  </p>\n<pre><code>&quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;  \n&quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &#39;Contoso&#39;]&quot;  \n</code></pre><p> The <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a> class allows you to create tables of queries that differ only slightly, enabling more efficient processing.  </p>\n<p> Alternatively, you can use the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerytable-1\" data-linktype=\"relative-path\">MessageQueryTable&lt;TItem&gt;</a> class to store and evaluate message queries.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_MessageQuery__ctor\" data-linktype=\"self-bookmark\">MessageQuery()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequery\" data-linktype=\"relative-path\">MessageQuery</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_MessageQuery_CreateMessageQueryCollection\" data-linktype=\"self-bookmark\">CreateMessageQueryCollection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a collection of queries that returns a specific type of data associated with it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_MessageQuery_Evaluate__1_System_ServiceModel_Channels_Message_\" data-linktype=\"self-bookmark\">Evaluate&lt;TResult&gt;(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, runs a query against the message and returns a result. The body cannot be queried.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Dispatcher_MessageQuery_Evaluate__1_System_ServiceModel_Channels_MessageBuffer_\" data-linktype=\"self-bookmark\">Evaluate&lt;TResult&gt;(MessageBuffer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, runs a query against the message and returns a result.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_MessageQuery__ctor\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_MessageQuery__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MessageQuery()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequery\" data-linktype=\"relative-path\">MessageQuery</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected MessageQuery ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_MessageQuery_CreateMessageQueryCollection\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_MessageQuery_CreateMessageQueryCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateMessageQueryCollection()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a collection of queries that returns a specific type of data associated with it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ServiceModel.Dispatcher.MessageQueryCollection CreateMessageQueryCollection ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a> The collection of queries associated with the data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is intended to be used by the <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_MessageQuery_Evaluate__1_System_ServiceModel_Channels_Message_\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_MessageQuery_Evaluate_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evaluate&lt;TResult&gt;(Message)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, runs a query against the message and returns a result. The body cannot be queried.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a>  \n\n<p> An enumerable collection of results that satisfy the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Dispatcher_MessageQuery_Evaluate__1_System_ServiceModel_Channels_MessageBuffer_\">\r\n    \r\n            <a id=\"System_ServiceModel_Dispatcher_MessageQuery_Evaluate_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evaluate&lt;TResult&gt;(MessageBuffer)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, runs a query against the message and returns a result.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract TResult Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.servicemodel.channels.messagebuffer\" data-linktype=\"relative-path\">MessageBuffer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TResult</span></div>\r\n                  </div>\r\n                  <a class=\"xref\" href=\"system.servicemodel.dispatcher.messagequerycollection\" data-linktype=\"relative-path\">MessageQueryCollection</a>  \n\n<p> An enumerable collection of results that satisfy the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a message and XPath message queries. The queries are evaluated by the <a class=\"xref\" href=\"system.servicemodel.xpathmessagequery\" data-linktype=\"relative-path\">XPathMessageQuery</a> objects contained in an <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathmessagequerycollection\" data-linktype=\"relative-path\">XPathMessageQueryCollection</a> object. The results of each query are tested using the <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathresult#System_ServiceModel_Dispatcher_XPathResult_ResultType_\" data-linktype=\"relative-path\">ResultType</a> property of the <a class=\"xref\" href=\"system.servicemodel.dispatcher.xpathresult\" data-linktype=\"relative-path\">XPathResult</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"XPathMessageQuery#0\">Imports System.IO\nImports System.Xml\nImports System.ServiceModel.Dispatcher\nImports System.ServiceModel\nImports System.ServiceModel.Channels\nImports System.Xml.XPath\n\nNamespace MessageQueryExamples\n\n\n    Public Class Program\n\n        Public Shared Sub Main(ByVal args As String())\n\n            &#39; The XPathMessageQueryCollection inherits from MessageQueryCollection.\n            Dim queryCollection As XPathMessageQueryCollection = MessageHelper.SetupQueryCollection()\n\n\n            &#39; Create a message and a copy of the message. You must create a buffered copy to access the message body.\n            Dim mess As Message = MessageHelper.CreateMessage()\n            Dim mb As MessageBuffer = mess.CreateBufferedCopy(Integer.MaxValue)\n\n\n            &#39; Evaluate every query in the collection. \n            Dim q As XPathMessageQuery\n            For Each q In queryCollection\n\n                &#39; Evaluate the query. Note the result type is an XPathResult.\n                Dim qPathResult As XPathResult = q.Evaluate(Of XPathResult)(mb)\n\n                &#39; Use the XPathResult to determine the result type.\n                Console.WriteLine(&quot;Result type: {0}&quot;, qPathResult.ResultType)\n\n                &#39; The following code prints the result according to the result type.\n\n                If qPathResult.ResultType = XPathResultType.String Then\n                    Console.WriteLine(&quot;{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsString())\n                End If\n                If (qPathResult.ResultType = XPathResultType.NodeSet) Then\n\n                    &#39; Iterate through the node set.\n                    Dim ns As XPathNodeIterator = qPathResult.GetResultAsNodeset()\n                    Dim n As XPathNavigator\n                    For Each n In ns\n                        Console.WriteLine(&quot;     {0} = {1}&quot;, q.Expression, n.Value)\n                    Next\n                End If\n                If qPathResult.ResultType = XPathResultType.Number Then\n                    Console.WriteLine(&quot;    {0} = {1}&quot;, q.Expression, qPathResult.GetResultAsNumber())\n                End If\n                If qPathResult.ResultType = XPathResultType.Boolean Then\n                    Console.WriteLine(&quot;    {0} ={1}&quot;, q.Expression, qPathResult.GetResultAsBoolean())\n                End If\n\n                If qPathResult.ResultType = XPathResultType.Error Then\n                    Console.WriteLine(&quot;    Error!&quot;)\n                End If\n\n            Next\n\n            Console.WriteLine()\n\n            &#39; The alternate code below demonstrates similar funcionality using a MessageQueryTable.\n            &#39; The difference is the KeyValuePair that requires a key to index each value.\n            &#39; The code uses the expression as the key, and an arbitrary value for the value.           \n\n            &#39;Dim mq As MessageQueryTable(Of String) = MessageHelper.SetupTable()\n            &#39;Dim kv As KeyValuePair(Of MessageQuery, String)\n            &#39;For Each kv In mq\n            &#39;    &#39;\n            &#39;    Dim xp As XPathMessageQuery = CType(kv.Key, XPathMessageQuery)\n            &#39;    Console.WriteLine(&quot;Value = {0}&quot;, kv.Value)\n            &#39;    Console.WriteLine(&quot;{0} = {1}&quot;, xp.Expression, xp.Evaluate(Of String)(mb))\n            &#39;Next\n\n            Console.ReadLine()\n        End Sub\n        Private Shared Sub Evaluate(ByVal p1 As Object)\n            Throw New NotImplementedException\n        End Sub\n    End Class\n\n    Public Class MessageHelper\n\n        Shared messageBody As String = _\n              &quot;&lt;PurchaseOrder date=&#39;today&#39;&gt;&quot; + _\n                  &quot;&lt;Number&gt;ABC-2009-XYZ&lt;/Number&gt;&quot; + _\n                  &quot;&lt;Department&gt;OnlineSales&lt;/Department&gt;&quot; + _\n                  &quot;&lt;Items&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;nail&#39; quantity=&#39;1&#39;&gt;item1&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;screw&#39; quantity=&#39;2&#39;&gt;item2&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;brad&#39; quantity=&#39;3&#39;&gt;&quot; + _\n                          &quot;&lt;SpecialOffer/&gt;&quot; + _\n                          &quot;Special item4&quot; + _\n                      &quot;&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;SpecialNails&#39; quantity=&#39;9&#39;&gt;item5&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;SpecialBrads&#39; quantity=&#39;11&#39;&gt;&quot; + _\n                          &quot;&lt;SpecialOffer/&gt;&quot; + _\n                          &quot;Special item6&quot; + _\n                      &quot;&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;hammer&#39; quantity=&#39;1&#39;&gt;item7&lt;/Item&gt;&quot; + _\n                      &quot;&lt;Item product=&#39;wrench&#39; quantity=&#39;2&#39;&gt;item8&lt;/Item&gt;&quot; + _\n                  &quot;&lt;/Items&gt;&quot; + _\n                &quot;&lt;Comments&gt;&quot; + _\n                &quot;Rush order&quot; + _\n                &quot;&lt;/Comments&gt;&quot; + _\n              &quot;&lt;/PurchaseOrder&gt;&quot;\n\n        Public Shared xpath As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;\n        Public Shared xpath2 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &#39;nail&#39;]&quot;\n        Public Shared xpath3 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Comments&quot;\n        Public Shared xpath4 As String = &quot;count(/s12:Envelope/s12:Body/PurchaseOrder/Items/Item)&quot;\n        Public Shared xpath5 As String = &quot;substring(string(/s12:Envelope/s12:Body/PurchaseOrder/Number),5,4)&quot;\n        Public Shared xpath6 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Department=&#39;OnlineSales&#39;&quot;\n        Public Shared xpath7 As String = &quot;//PurchaseOrder/@date&quot;\n        Public Shared xpath8 As String = &quot;//SpecialOffer/ancestor::Item[@product = &#39;brad&#39;]&quot;\n\n        &#39; Invoke the correlation data function.\n\n\n        Public Shared xpath9 As String = &quot;sm:correlation-data(&#39;CorrelationData1&#39;)&quot;\n        Public Shared xpath10 As String = &quot;sm:correlation-data(&#39;CorrelationData2&#39;)&quot;\n\n        Public Shared xpath11 As String = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 2]&quot;\n\n\n        Public Shared Function CreateMessage() As Message\n\n            Dim stringReader As New StringReader(messageBody)\n            Dim xmlReader As New XmlTextReader(stringReader)\n            Dim message As Message = message.CreateMessage( _\n                MessageVersion.Soap12WSAddressing10, &quot;http://purchaseorder&quot;, xmlReader)\n\n            &#39; Add two correlation properties using lambda expressions. The property names are\n            &#39; CorrelationData1 and CorrelationData2. The first goes to &quot;value1&quot; and the\n            &#39; second to &quot;value2&quot;. You can use your own property names and values.\n            Dim data As New CorrelationDataMessageProperty()\n\n            data.Add(&quot;CorrelationData1&quot;, Function() &quot;value1&quot;)\n            data.Add(&quot;CorrelationData2&quot;, Function() &quot;value2&quot;)\n            message.Properties(CorrelationDataMessageProperty.Name) = data\n\n\n            Return message\n        End Function\n\n\n        Public Shared Function SetupQueryCollection() As XPathMessageQueryCollection\n\n            &#39; Create the query collection and add the XPath queries to it. To create\n            &#39; the query, you must also use a new XPathMessageContext.\n\n            Dim queryCollection As New XPathMessageQueryCollection()\n\n            Dim context As XPathMessageContext = New XPathMessageContext()\n            queryCollection.Add(New XPathMessageQuery(xpath, context))\n            queryCollection.Add(New XPathMessageQuery(xpath2, context))\n            queryCollection.Add(New XPathMessageQuery(xpath3, context))\n            queryCollection.Add(New XPathMessageQuery(xpath4, context))\n            queryCollection.Add(New XPathMessageQuery(xpath5, context))\n            queryCollection.Add(New XPathMessageQuery(xpath6, context))\n            queryCollection.Add(New XPathMessageQuery(xpath7, context))\n            queryCollection.Add(New XPathMessageQuery(xpath8, context))\n            queryCollection.Add(New XPathMessageQuery(xpath9, context))\n            queryCollection.Add(New XPathMessageQuery(xpath10, context))\n            queryCollection.Add(New XPathMessageQuery(xpath11, context))\n\n            Return queryCollection\n        End Function\n\n        Public Shared Function SetupTable() As MessageQueryTable(Of String)\n\n            &#39; This is optional code to demonstrate using a MessageQueryTable.\n            &#39; Compare this to the MessageQueryCollection.\n            Dim table As MessageQueryTable(Of String) = New MessageQueryTable(Of String)()\n            Dim context As XPathMessageContext = New XPathMessageContext()\n\n\n            &#39; The code adds a KeyValuePair to the table. Each pair requires\n            &#39; a query used as the Key, and a value that is paired to the key.\n            table.Add(New XPathMessageQuery(xpath, context), &quot;value10&quot;)\n            table.Add(New XPathMessageQuery(xpath2, context), &quot;value20&quot;)\n            table.Add(New XPathMessageQuery(xpath3, context), &quot;value30&quot;)\n            table.Add(New XPathMessageQuery(xpath4, context), &quot;value40&quot;)\n            table.Add(New XPathMessageQuery(xpath5, context), &quot;value50&quot;)\n            table.Add(New XPathMessageQuery(xpath6, context), &quot;value60&quot;)\n            table.Add(New XPathMessageQuery(xpath7, context), &quot;value70&quot;)\n            table.Add(New XPathMessageQuery(xpath8, context), &quot;value80&quot;)\n            table.Add(New XPathMessageQuery(xpath9, context), &quot;value90&quot;)\n            table.Add(New XPathMessageQuery(xpath10, context), &quot;value100&quot;)\n            table.Add(New XPathMessageQuery(xpath11, context), &quot;value110&quot;)\n            Return table\n        End Function\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"XPathMessageQuery#0\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.ServiceModel.Dispatcher;\nusing System.ServiceModel;\nusing System.ServiceModel.Channels;\nusing System.Xml.XPath;\n\nnamespace MessageQueryExamples\n{\n    \n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // The XPathMessageQueryCollection inherits from MessageQueryCollection.\n            XPathMessageQueryCollection queryCollection = MessageHelper.SetupQueryCollection();\n\n\n            // Create a message and a copy of the message. You must create a buffered copy to access the message body.\n            Message mess = MessageHelper.CreateMessage();\n            MessageBuffer mb = mess.CreateBufferedCopy(int.MaxValue);\n\n\n            // Evaluate every query in the collection. \n            foreach (XPathMessageQuery q in queryCollection)\n            {\n                // Evaluate the query. Note the result type is an XPathResult.\n                XPathResult qPathResult = q.Evaluate&lt;XPathResult&gt;(mb);\n\n                // Use the XPathResult to determine the result type.\n                Console.WriteLine(&quot;Result type: {0}&quot;, qPathResult.ResultType);\n\n                // The following code prints the result according to the result type.\n\n                if (qPathResult.ResultType == XPathResultType.String)\n                    Console.WriteLine(&quot;{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsString());\n\n                if (qPathResult.ResultType == XPathResultType.NodeSet)\n                {\n                    // Iterate through the node set.\n                    XPathNodeIterator ns = qPathResult.GetResultAsNodeset();\n                    foreach (XPathNavigator n in ns)\n                        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} = {1}&quot;, q.Expression, n.Value);\n                }\n                if (qPathResult.ResultType == XPathResultType.Number)\n                    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} = {1}&quot;, q.Expression, qPathResult.GetResultAsNumber());\n\n                if (qPathResult.ResultType == XPathResultType.Boolean)\n                    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} ={1}&quot;, q.Expression, qPathResult.GetResultAsBoolean());\n\n                if (qPathResult.ResultType == XPathResultType.Error)\n                    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;Error!&quot;);\n            }\n\n            Console.WriteLine();\n\n            // The alternate code below demonstrates similar funcionality using a MessageQueryTable.\n            // The difference is the KeyValuePair that requires a key to index each value.\n            // The code uses the expression as the key, and an arbitrary value for the value.           \n\n            //MessageQueryTable&lt;string&gt; mq = MessageHelper.SetupTable();\n            //foreach (KeyValuePair&lt;MessageQuery, string&gt; kv in mq)\n            //{\n            //    XPathMessageQuery xp = (XPathMessageQuery)kv.Key;\n            //    Console.WriteLine(&quot;Value = {0}&quot;, kv.Value);\n            //    Console.WriteLine(&quot;{0} = {1}&quot;, xp.Expression, xp.Evaluate&lt;string&gt;(mb));\n            //}\n\n            Console.ReadLine();\n        }\n    }\n\n    public class MessageHelper\n    {\n        static string messageBody =\n              &quot;&lt;PurchaseOrder date=&#39;today&#39;&gt;&quot; +\n                  &quot;&lt;Number&gt;ABC-2009-XYZ&lt;/Number&gt;&quot; +\n                  &quot;&lt;Department&gt;OnlineSales&lt;/Department&gt;&quot; +\n                  &quot;&lt;Items&gt;&quot; +\n                      &quot;&lt;Item product=&#39;nail&#39; quantity=&#39;1&#39;&gt;item1&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;screw&#39; quantity=&#39;2&#39;&gt;item2&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;brad&#39; quantity=&#39;3&#39;&gt;&quot; +\n                          &quot;&lt;SpecialOffer/&gt;&quot; +\n                          &quot;Special item4&quot; +\n                      &quot;&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;SpecialNails&#39; quantity=&#39;9&#39;&gt;item5&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;SpecialBrads&#39; quantity=&#39;11&#39;&gt;&quot; +\n                          &quot;&lt;SpecialOffer/&gt;&quot; +\n                          &quot;Special item6&quot; +\n                      &quot;&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;hammer&#39; quantity=&#39;1&#39;&gt;item7&lt;/Item&gt;&quot; +\n                      &quot;&lt;Item product=&#39;wrench&#39; quantity=&#39;2&#39;&gt;item8&lt;/Item&gt;&quot; +\n                  &quot;&lt;/Items&gt;&quot; +\n                &quot;&lt;Comments&gt;&quot; +\n                &quot;Rush order&quot; +\n                &quot;&lt;/Comments&gt;&quot; +\n              &quot;&lt;/PurchaseOrder&gt;&quot;;\n\n        public static string xpath = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 1]&quot;;\n        public static string xpath2 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@product = &#39;nail&#39;]&quot;;\n        public static string xpath3 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Comments&quot;;\n        public static string xpath4 = &quot;count(/s12:Envelope/s12:Body/PurchaseOrder/Items/Item)&quot;;\n        public static string xpath5 = &quot;substring(string(/s12:Envelope/s12:Body/PurchaseOrder/Number),5,4)&quot;;\n        public static string xpath6 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Department=&#39;OnlineSales&#39;&quot;;\n        public static string xpath7 = &quot;//PurchaseOrder/@date&quot;;\n        public static string xpath8 = &quot;//SpecialOffer/ancestor::Item[@product = &#39;brad&#39;]&quot;;\n\n        // Invoke the correlation data function.\n\n\n        public static string xpath9 = &quot;sm:correlation-data(&#39;CorrelationData1&#39;)&quot;;\n        public static string xpath10 = &quot;sm:correlation-data(&#39;CorrelationData2&#39;)&quot;;\n\n        public static string xpath11 = &quot;/s12:Envelope/s12:Body/PurchaseOrder/Items/Item[@quantity = 2]&quot;;\n\n\n        public static Message CreateMessage()\n        {\n            StringReader stringReader = new StringReader(messageBody);\n            XmlTextReader xmlReader = new XmlTextReader(stringReader);\n            Message message = Message.CreateMessage(MessageVersion.Soap12WSAddressing10, &quot;http://purchaseorder&quot;, xmlReader);\n\n            // Add two correlation properties using lambda expressions. The property names are\n            // CorrelationData1 and CorrelationData2. The first goes to &quot;value1&quot; and the\n            // second to &quot;value2&quot;. You can use your own property names and values.\n            CorrelationDataMessageProperty data = new CorrelationDataMessageProperty();\n\n            data.Add(&quot;CorrelationData1&quot;, () =&gt; &quot;value1&quot;);\n            data.Add(&quot;CorrelationData2&quot;, () =&gt; &quot;value2&quot;);\n            message.Properties[CorrelationDataMessageProperty.Name] = data;\n\n            return message;\n        }\n\n\n\n        public static XPathMessageQueryCollection SetupQueryCollection()\n        {\n            // Create the query collection and add the XPath queries to it. To create\n            // the query, you must also use a new XPathMessageContext.\n\n            XPathMessageQueryCollection queryCollection = new XPathMessageQueryCollection();\n\n            XPathMessageContext context = new XPathMessageContext();\n            queryCollection.Add(new XPathMessageQuery(xpath, context));\n            queryCollection.Add(new XPathMessageQuery(xpath2, context));\n            queryCollection.Add(new XPathMessageQuery(xpath3, context));\n            queryCollection.Add(new XPathMessageQuery(xpath4, context));\n            queryCollection.Add(new XPathMessageQuery(xpath5, context));\n            queryCollection.Add(new XPathMessageQuery(xpath6, context));\n            queryCollection.Add(new XPathMessageQuery(xpath7, context));\n            queryCollection.Add(new XPathMessageQuery(xpath8, context));\n            queryCollection.Add(new XPathMessageQuery(xpath9, context));\n            queryCollection.Add(new XPathMessageQuery(xpath10, context));\n            queryCollection.Add(new XPathMessageQuery(xpath11, context));\n\n            return queryCollection;\n        }\n\n        public static MessageQueryTable&lt;string&gt; SetupTable()\n        {\n            // This is optional code to demonstrate using a MessageQueryTable.\n            // Compare this to the MessageQueryCollection.\n            MessageQueryTable&lt;string&gt; table = new MessageQueryTable&lt;string&gt;();\n            XPathMessageContext context = new XPathMessageContext();\n\n\n            // The code adds a KeyValuePair to the table. Each pair requires\n            // a query used as the Key, and a value that is paired to the key.\n            table.Add(new XPathMessageQuery(xpath, context), &quot;value10&quot;);\n            table.Add(new XPathMessageQuery(xpath2, context), &quot;value20&quot;);\n            table.Add(new XPathMessageQuery(xpath3, context), &quot;value30&quot;);\n            table.Add(new XPathMessageQuery(xpath4, context), &quot;value40&quot;);\n            table.Add(new XPathMessageQuery(xpath5, context), &quot;value50&quot;);\n            table.Add(new XPathMessageQuery(xpath6, context), &quot;value60&quot;);\n            table.Add(new XPathMessageQuery(xpath7, context), &quot;value70&quot;);\n            table.Add(new XPathMessageQuery(xpath8, context), &quot;value80&quot;);\n            table.Add(new XPathMessageQuery(xpath9, context), &quot;value90&quot;);\n            table.Add(new XPathMessageQuery(xpath10, context), &quot;value100&quot;);\n            table.Add(new XPathMessageQuery(xpath11, context), &quot;value110&quot;);\n            return table;\n        }\n    }    \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Dispatcher.MessageQuery.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Dispatcher.MessageQuery.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.MessageQuery\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.MessageQuery..ctor\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Dispatcher.MessageQuery.Evaluate&lt;TResult&gt;\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ff5d0ace-6a7e-1593-ca62-0cc0fe926215\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the core behavior of classes used to search for specific correlating data in a message.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Dispatcher/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Dispatcher.MessageQuery\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Dispatcher.MessageQuery.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Dispatcher.MessageQuery.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Dispatcher.MessageQuery","System.ServiceModel.Dispatcher.MessageQuery..ctor","System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection","System.ServiceModel.Dispatcher.MessageQuery.Evaluate<TResult>"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Dispatcher.MessageQuery","System::ServiceModel::Dispatcher::MessageQuery","System.ServiceModel.Dispatcher.MessageQuery.#ctor","System::ServiceModel::Dispatcher::MessageQuery::#ctor","System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection","System::ServiceModel::Dispatcher::MessageQuery::CreateMessageQueryCollection","System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1","System::ServiceModel::Dispatcher::MessageQuery::Evaluate``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ff5d0ace-6a7e-1593-ca62-0cc0fe926215","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Dispatcher/MessageQuery.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MessageQuery class | Microsoft Docs","_op_ogTitle":"MessageQuery class","description":"Defines the core behavior of classes used to search for specific correlating data in a message.\n","toc_asset_id":"_splitted/System.ServiceModel.Dispatcher/toc.json","toc_rel":"_splitted/System.ServiceModel.Dispatcher/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Dispatcher.MessageQuery","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.dispatcher.messagequery","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.dispatcher.messagequery","fileRelativePath":"System.ServiceModel.Dispatcher.MessageQuery.html"},"themesRelativePathToOutputRoot":"_themes/"}