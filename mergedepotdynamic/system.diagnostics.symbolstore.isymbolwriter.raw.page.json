{"content":"    \r\n    <h1 id=\"System_Diagnostics_SymbolStore_ISymbolWriter\">\r\n      <span class=\"lang-csharp\">ISymbolWriter</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a symbol writer for managed code.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface ISymbolWriter</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The ISymbolWriter interface provides methods that define documents, sequence points, lexical scopes, and variables.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This interface is the managed counterpart of the <code>ISymUnmanagedWriter</code> interface, which is one of the unmanaged symbol store interfaces that provides an alternative way to read and write debug symbol information.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes <a class=\"xref\" href=\"system.diagnostics.symbolstore.isymbolwriter\" data-linktype=\"relative-path\">ISymbolWriter</a> and commits the symbols to the symbol store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_CloseMethod\" data-linktype=\"self-bookmark\">CloseMethod()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the current method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_CloseNamespace\" data-linktype=\"self-bookmark\">CloseNamespace()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the most recent namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_CloseScope_System_Int32_\" data-linktype=\"self-bookmark\">CloseScope(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the current lexical scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineDocument_System_String_System_Guid_System_Guid_System_Guid_\" data-linktype=\"self-bookmark\">DefineDocument(String,Guid,Guid,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a source document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineField_System_Diagnostics_SymbolStore_SymbolToken_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a field in a type or a global field.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineGlobalVariable_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a single global variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineLocalVariable_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a single variable in the current lexical scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineParameter_System_String_System_Reflection_ParameterAttributes_System_Int32_System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a single parameter in the current method. The type of each parameter is taken from its position within the signature of the method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_DefineSequencePoints_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32___System_Int32___System_Int32___System_Int32___System_Int32___\" data-linktype=\"self-bookmark\">DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines a group of sequence points within the current method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_Initialize_System_IntPtr_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Initialize(IntPtr,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the metadata emitter interface to associate with a writer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_OpenMethod_System_Diagnostics_SymbolStore_SymbolToken_\" data-linktype=\"self-bookmark\">OpenMethod(SymbolToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a method to place symbol information into.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_OpenNamespace_System_String_\" data-linktype=\"self-bookmark\">OpenNamespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a new namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_OpenScope_System_Int32_\" data-linktype=\"self-bookmark\">OpenScope(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a new lexical scope in the current method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_SetMethodSourceRange_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32_System_Int32_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the true start and end of a method within a source file. Use SetMethodSourceRange to specify the extent of a method, independent of the sequence points that exist within the method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_SetScopeRange_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetScopeRange(Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines the offset range for the specified lexical scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_SetSymAttribute_System_Diagnostics_SymbolStore_SymbolToken_System_String_System_Byte___\" data-linktype=\"self-bookmark\">SetSymAttribute(SymbolToken,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Defines an attribute when given the attribute name and the attribute value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_SetUnderlyingWriter_System_IntPtr_\" data-linktype=\"self-bookmark\">SetUnderlyingWriter(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the underlying <code>ISymUnmanagedWriter</code> (the corresponding unmanaged interface) that a managed <a class=\"xref\" href=\"system.diagnostics.symbolstore.isymbolwriter\" data-linktype=\"relative-path\">ISymbolWriter</a> uses to emit symbols.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_SetUserEntryPoint_System_Diagnostics_SymbolStore_SymbolToken_\" data-linktype=\"self-bookmark\">SetUserEntryPoint(SymbolToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the user-defined method as the entry point for the current module.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_SymbolStore_ISymbolWriter_UsingNamespace_System_String_\" data-linktype=\"self-bookmark\">UsingNamespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_Close\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes <a class=\"xref\" href=\"system.diagnostics.symbolstore.isymbolwriter\" data-linktype=\"relative-path\">ISymbolWriter</a> and commits the symbols to the symbol store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After this call, <a class=\"xref\" href=\"system.diagnostics.symbolstore.isymbolwriter\" data-linktype=\"relative-path\">ISymbolWriter</a> becomes invalid for further updates.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseMethod\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseMethod()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the current method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CloseMethod ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After a method is closed, you cannot define a symbol from within it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseNamespace\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseNamespace()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the most recent namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CloseNamespace ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseScope_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_CloseScope_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseScope(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Closes the current lexical scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CloseScope (int endOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>endOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The points past the last instruction in the scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After a scope is closed, you cannot define a variable from within it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineDocument_System_String_System_Guid_System_Guid_System_Guid_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineDocument(String,Guid,Guid,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Defines a source document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL that identifies the document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>language</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document language. This parameter can be <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>languageVendor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identity of the vendor for the document language. This parameter can be <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>documentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the document. This parameter can be <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.isymboldocumentwriter\" data-linktype=\"relative-path\">ISymbolDocumentWriter</a></div>\r\n                  </div>\r\n                  <p>The object that represents the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineField_System_Diagnostics_SymbolStore_SymbolToken_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineField_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Defines a field in a type or a global field.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symboltoken\" data-linktype=\"relative-path\">SymbolToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata type or method token.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The field name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldattributes\" data-linktype=\"relative-path\">FieldAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the field attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signature</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The field signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addrKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symaddresskind\" data-linktype=\"relative-path\">SymAddressKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The address types for <code>addr1</code> and <code>addr2</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first address for the field specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second address for the field specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third address for the field specification.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DefineField method defines a single variable that is not within a method by using specified fields in classes, bit fields, and so on.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineGlobalVariable_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineGlobalVariable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Defines a single global variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The global variable name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldattributes\" data-linktype=\"relative-path\">FieldAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the global variable attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signature</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The global variable signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addrKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symaddresskind\" data-linktype=\"relative-path\">SymAddressKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The address types for <code>addr1</code>, <code>addr2</code>, and <code>addr3</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first address for the global variable specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second address for the global variable specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third address for the global variable specification.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineLocalVariable_System_String_System_Reflection_FieldAttributes_System_Byte___System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineLocalVariable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Defines a single variable in the current lexical scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local variable name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldattributes\" data-linktype=\"relative-path\">FieldAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the local variable attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>signature</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local variable signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addrKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symaddresskind\" data-linktype=\"relative-path\">SymAddressKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The address types for <code>addr1</code>, <code>addr2</code>, and <code>addr3</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first address for the local variable specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second address for the local variable specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third address for the local variable specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The start offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The end offset for the variable. If this parameter is zero, it is ignored and the variable is defined throughout the entire scope. If the parameter is nonzero, the variable falls within the offsets of the current scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>startOffset</code> and <code>endOffset</code> parameters are optional. If their value is zero, they are ignored and the variable is defined throughout the entire scope. If their value is nonzero, the variable falls within the offsets of the current scope.  </p>\n<p> You can call DefineLocalVariable multiple times for a variable of the same name that occurs multiple times in different offset ranges throughout a scope. (In this case, start and end offsets must not overlap.)</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineParameter_System_String_System_Reflection_ParameterAttributes_System_Int32_System_Diagnostics_SymbolStore_SymAddressKind_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineParameter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Defines a single parameter in the current method. The type of each parameter is taken from its position within the signature of the method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameter name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parameterattributes\" data-linktype=\"relative-path\">ParameterAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the parameter attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sequence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameter signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addrKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symaddresskind\" data-linktype=\"relative-path\">SymAddressKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The address types for <code>addr1</code>, <code>addr2</code>, and <code>addr3</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first address for the parameter specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second address for the parameter specification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>addr3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The third address for the parameter specification.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If parameters are defined in the metadata for a given method, you do not have to define them again with calls to this method. Symbol readers need to check for these in the normal metadata first, and then use the symbol store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineSequencePoints_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32___System_Int32___System_Int32___System_Int32___System_Int32___\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_DefineSequencePoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])</div>        \r\n          </div>\r\n    \r\n            <p>Defines a group of sequence points within the current method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>document</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.isymboldocumentwriter\" data-linktype=\"relative-path\">ISymbolDocumentWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document object for which the sequence points are being defined.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsets</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The sequence point offsets measured from the beginning of methods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lines</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document lines for the sequence points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document positions for the sequence points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endLines</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document end lines for the sequence points.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endColumns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document end positions for the sequence points.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each line and each column defines the start of a statement within a method. The arrays should be sorted in increasing order of offsets. The offset is always the offset from the start of the method, in bytes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_Initialize_System_IntPtr_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize(IntPtr,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the metadata emitter interface to associate with a writer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Initialize (IntPtr emitter, string filename, bool fFullBuild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>emitter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata emitter interface.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file name for which the debugging symbols are written. Some writers require a file name, and others do not. If a file name is specified for a writer that does not use file names, this parameter is ignored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fFullBuild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> indicates that this is a full rebuild; <code>false</code> indicates that this is an incremental compilation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Initialize also sets the output file name where the debugging symbols are written. This method can be called only once and must be called before any other writer methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenMethod_System_Diagnostics_SymbolStore_SymbolToken_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenMethod(SymbolToken)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a method to place symbol information into.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symboltoken\" data-linktype=\"relative-path\">SymbolToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata token for the method to be opened.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The specified method becomes the current method for calls to define sequence points, parameters, and lexical scopes. There is an implicit lexical scope around the entire method. Reopening a method that has been previously closed erases any previously defined symbols for the method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenNamespace_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenNamespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a new namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenNamespace (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the new namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method before defining methods or variables that exist within a namespace. Namespaces can be nested.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenScope_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_OpenScope_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenScope(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a new lexical scope in the current method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int OpenScope (int startOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset, in bytes, from the beginning of the method to the first instruction in the lexical scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An opaque scope identifier that can be used with <span class=\"xref\">stem.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange*</span> to define the start and end offsets of a scope at a later time. In this case, the offsets passed to OpenScope and <span class=\"xref\">stem.Diagnostics.SymbolStore.ISymbolWriter.CloseScope*</span> are ignored. A scope identifier is valid only in the current method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This scope becomes the new current scope and is pushed onto a stack of scopes. Scopes must form a hierarchy. Siblings are not allowed to overlap.  </p>\n<p> Scope identifiers are valid only in the current method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetMethodSourceRange_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32_System_Int32_System_Diagnostics_SymbolStore_ISymbolDocumentWriter_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetMethodSourceRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the true start and end of a method within a source file. Use SetMethodSourceRange to specify the extent of a method, independent of the sequence points that exist within the method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startDoc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.isymboldocumentwriter\" data-linktype=\"relative-path\">ISymbolDocumentWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document that contains the starting position.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startLine</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting line number.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The starting column.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endDoc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.isymboldocumentwriter\" data-linktype=\"relative-path\">ISymbolDocumentWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document that contains the ending position.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endLine</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ending line number.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ending column number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetScopeRange_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetScopeRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetScopeRange(Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Defines the offset range for the specified lexical scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetScopeRange (int scopeID, int startOffset, int endOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scopeID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the lexical scope.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset of the beginning of the lexical scope.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset of the end of the lexical scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetSymAttribute_System_Diagnostics_SymbolStore_SymbolToken_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetSymAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSymAttribute(SymbolToken,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Defines an attribute when given the attribute name and the attribute value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symboltoken\" data-linktype=\"relative-path\">SymbolToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata token for which the attribute is being defined.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The attribute name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The attribute value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SetSymAttribute method is only associated with symbolic information and is not a metadata custom attribute.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetUnderlyingWriter_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetUnderlyingWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetUnderlyingWriter(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the underlying <code>ISymUnmanagedWriter</code> (the corresponding unmanaged interface) that a managed <a class=\"xref\" href=\"system.diagnostics.symbolstore.isymbolwriter\" data-linktype=\"relative-path\">ISymbolWriter</a> uses to emit symbols.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetUnderlyingWriter (IntPtr underlyingWriter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>underlyingWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to code that represents the underlying writer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The underlying <code>ISymUnmanagedWriter</code> (the corresponding unmanaged interface) represents a symbol writer for managed code. The interface provides methods for defining documents, sequence points, lexical scopes, and variables.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetUserEntryPoint_System_Diagnostics_SymbolStore_SymbolToken_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_SetUserEntryPoint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetUserEntryPoint(SymbolToken)</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the user-defined method as the entry point for the current module.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entryMethod</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.symbolstore.symboltoken\" data-linktype=\"relative-path\">SymbolToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata token for the method that is the user entry point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is normally your main method, rather than compiler-generated stubs before the main method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_SymbolStore_ISymbolWriter_UsingNamespace_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_SymbolStore_ISymbolWriter_UsingNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UsingNamespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the given, fully qualified namespace name is used within the open lexical scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UsingNamespace (string fullName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fullName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Closing the current scope prevents this scope from using the namespace. The namespace remains in use in all scopes that inherit from the current open scope.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.SymbolStore.ISymbolWriter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.SymbolStore.ISymbolWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.Close\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineField\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"958e03aa-fa71-f43b-4b08-1ef7d73de9ab\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics.SymbolStore\\ISymbolWriter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a symbol writer for managed code.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics.SymbolStore/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.SymbolStore.ISymbolWriter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.SymbolStore.ISymbolWriter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.SymbolStore.ISymbolWriter.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.SymbolStore.ISymbolWriter","System.Diagnostics.SymbolStore.ISymbolWriter.Close","System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod","System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace","System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope","System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument","System.Diagnostics.SymbolStore.ISymbolWriter.DefineField","System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable","System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable","System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter","System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints","System.Diagnostics.SymbolStore.ISymbolWriter.Initialize","System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod","System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace","System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope","System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange","System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange","System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute","System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter","System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint","System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.SymbolStore.ISymbolWriter","System::Diagnostics::SymbolStore::ISymbolWriter","System.Diagnostics.SymbolStore.ISymbolWriter.Close","System::Diagnostics::SymbolStore::ISymbolWriter::Close","System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod","System::Diagnostics::SymbolStore::ISymbolWriter::CloseMethod","System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace","System::Diagnostics::SymbolStore::ISymbolWriter::CloseNamespace","System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope","System::Diagnostics::SymbolStore::ISymbolWriter::CloseScope","System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument","System::Diagnostics::SymbolStore::ISymbolWriter::DefineDocument","System.Diagnostics.SymbolStore.ISymbolWriter.DefineField","System::Diagnostics::SymbolStore::ISymbolWriter::DefineField","System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable","System::Diagnostics::SymbolStore::ISymbolWriter::DefineGlobalVariable","System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable","System::Diagnostics::SymbolStore::ISymbolWriter::DefineLocalVariable","System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter","System::Diagnostics::SymbolStore::ISymbolWriter::DefineParameter","System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints","System::Diagnostics::SymbolStore::ISymbolWriter::DefineSequencePoints","System.Diagnostics.SymbolStore.ISymbolWriter.Initialize","System::Diagnostics::SymbolStore::ISymbolWriter::Initialize","System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod","System::Diagnostics::SymbolStore::ISymbolWriter::OpenMethod","System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace","System::Diagnostics::SymbolStore::ISymbolWriter::OpenNamespace","System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope","System::Diagnostics::SymbolStore::ISymbolWriter::OpenScope","System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange","System::Diagnostics::SymbolStore::ISymbolWriter::SetMethodSourceRange","System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange","System::Diagnostics::SymbolStore::ISymbolWriter::SetScopeRange","System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute","System::Diagnostics::SymbolStore::ISymbolWriter::SetSymAttribute","System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter","System::Diagnostics::SymbolStore::ISymbolWriter::SetUnderlyingWriter","System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint","System::Diagnostics::SymbolStore::ISymbolWriter::SetUserEntryPoint","System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace","System::Diagnostics::SymbolStore::ISymbolWriter::UsingNamespace"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"958e03aa-fa71-f43b-4b08-1ef7d73de9ab","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics.SymbolStore\\ISymbolWriter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics.SymbolStore/ISymbolWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ISymbolWriter interface | Microsoft Docs","_op_ogTitle":"ISymbolWriter interface","description":"Represents a symbol writer for managed code.\n","toc_asset_id":"_splitted/System.Diagnostics.SymbolStore/toc.json","toc_rel":"_splitted/System.Diagnostics.SymbolStore/toc.json","source_url":"","ms.assetid":"System.Diagnostics.SymbolStore.ISymbolWriter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.symbolstore.isymbolwriter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.symbolstore.isymbolwriter","fileRelativePath":"System.Diagnostics.SymbolStore.ISymbolWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}