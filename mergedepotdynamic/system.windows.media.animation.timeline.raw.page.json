{"content":"    \r\n    <h1 id=\"System_Windows_Media_Animation_Timeline\">\r\n      <span class=\"lang-csharp\">Timeline</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a segment of time.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n[System.Windows.Markup.RuntimeNameProperty(&quot;Name&quot;)]\npublic abstract class Timeline : System.Windows.Media.Animation.Animatable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable\" data-linktype=\"relative-path\">System.Windows.Media.Animation.Animatable</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l5\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Timeline</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ClearValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"relative-path\">ClearValue(DependencyPropertyKey)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">CoerceValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"relative-path\">DependencyObjectType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"relative-path\">GetLocalValueEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">InvalidateProperty(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_IsSealed\" data-linktype=\"relative-path\">IsSealed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ReadLocalValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetCurrentValue(DependencyProperty,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyProperty,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyPropertyKey,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ShouldSerializeProperty(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CanFreeze\" data-linktype=\"relative-path\">CanFreeze</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Changed\" data-linktype=\"relative-path\">Changed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">CloneCore(Freezable)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValueCore_System_Windows_Freezable_\" data-linktype=\"relative-path\">CloneCurrentValueCore(Freezable)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstance\" data-linktype=\"relative-path\">CreateInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstanceCore\" data-linktype=\"relative-path\">CreateInstanceCore()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze\" data-linktype=\"relative-path\">Freeze()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze_System_Windows_Freezable_System_Boolean_\" data-linktype=\"relative-path\">Freeze(Freezable,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen\" data-linktype=\"relative-path\">GetAsFrozen()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_IsFrozen\" data-linktype=\"relative-path\">IsFrozen</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnChanged\" data-linktype=\"relative-path\">OnChanged()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_ReadPreamble\" data-linktype=\"relative-path\">ReadPreamble()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePostscript\" data-linktype=\"relative-path\">WritePostscript()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePreamble\" data-linktype=\"relative-path\">WritePreamble()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_GetAnimationBaseValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetAnimationBaseValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_HasAnimatedProperties\" data-linktype=\"relative-path\">HasAnimatedProperties</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ShouldSerializeStoredWeakReference_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">ShouldSerializeStoredWeakReference(DependencyObject)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A timeline represents a segment of time.  It provides properties that enable you to specify the length of that segment, when it should start, how many times it will repeat, how fast time progresses in that segment, and more.  </p>\n<p> Classes that inherit from the timeline class provide additional functionality, such as animation and media playback. The following are examples of some of the different types of specialized timelines available.  </p>\n<ul>\n<li><p><strong>Animations</strong>: An <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a> is a type of timeline that produces output values. When you associate an animation with a property, the animation updates the property&#39;s value as it plays, thereby &quot;animating&quot; it. For an introduction to animations, see <a href=\"../Topic/Animation%20Overview.md\" data-linktype=\"relative-path\">Animation Overview</a>. For information about the different ways to apply animations, see the <a href=\"../Topic/Property%20Animation%20Techniques%20Overview.md\" data-linktype=\"relative-path\">Property Animation Techniques Overview</a>.  </p>\n</li>\n<li><p><strong>MediaTimelines</strong>: A <a class=\"xref\" href=\"system.windows.media.mediatimeline\" data-linktype=\"relative-path\">MediaTimeline</a> is a type of timeline that controls the playback of a media file.  </p>\n</li>\n<li><p><strong>ParallelTimelines</strong>: A <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline\" data-linktype=\"relative-path\">ParallelTimeline</a> is a type of timeline that groups other timelines.  </p>\n</li>\n<li><p><strong>Storyboards</strong>: A <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> is a special type of <a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline\" data-linktype=\"relative-path\">ParallelTimeline</a> that provides object and property targeting information for the timelines it contains. For more information about <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> objects, see the <a href=\"../Topic/Storyboards%20Overview.md\" data-linktype=\"relative-path\">Storyboards Overview</a>.  </p>\n<p>For more information about using timelines, see the <a href=\"../Topic/Animation%20Overview.md\" data-linktype=\"relative-path\">Animation Overview</a>. For an introduction to the timing features of timelines, see the <a href=\"../Topic/Timing%20Behaviors%20Overview.md\" data-linktype=\"relative-path\">Timing Behaviors Overview</a>.  </p>\n</li>\n</ul>\n<h2 id=\"data-binding-and-animating-timelines\">Data Binding and Animating Timelines</h2>\n<p> Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects. To understand their behavior, it helps to understand what it means to activate a timeline.  </p>\n<p> When a timeline is applied, copies are made of the timeline and its child timelines. These copies are frozen (made read-only) and <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects are created from them. It&#39;s these clocks that do the actual work of animating the targeted properties. If a timeline was data bound or animated, a snapshot of its current values was made when its clock was created. Even though the original timeline might continue to change, its clock does not.  </p>\n<p> For a timeline to reflect data binding or animation changes, its clock must be regenerated. Clocks are not regenerated for you automatically. The following are several ways to apply timeline changes:  </p>\n<ul>\n<li><p>If the timeline is or belongs to a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, you can make it reflect changes by reapplying its storyboard using a <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> or the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Begin_\" data-linktype=\"relative-path\">Begin</a> method. This has the side effect of also restarting the animation. In code, you can use the <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Seek_\" data-linktype=\"relative-path\">Seek</a> method to advance the storyboard back to its previous position.  </p>\n</li>\n<li><p>If you applied an animation directly to a property using the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_\" data-linktype=\"relative-path\">BeginAnimation</a> method, call the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_\" data-linktype=\"relative-path\">BeginAnimation</a> method again and pass it the animation that&#39;s been modified.  </p>\n</li>\n<li><p>If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of generated clocks.  </p>\n<p>For an example of a data bound animation, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=160011\" data-linktype=\"external\">Key Spline Animation Sample</a> .  </p>\n</li>\n</ul>\n<h2 id=\"using-a-timeline-as-a-timer\">Using a Timeline as a Timer</h2>\n<p> A timeline&#39;s clock will only progress when there&#39;s an event hander associated with it or (in the case of an <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> object) it is associated with a property. For this reason (and others), it&#39;s not recommended that you use a Timeline as a timer.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline__ctor\" data-linktype=\"self-bookmark\">Timeline()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__\" data-linktype=\"self-bookmark\">Timeline(Nullable&lt;TimeSpan&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__System_Windows_Duration_\" data-linktype=\"self-bookmark\">Timeline(Nullable&lt;TimeSpan&gt;,Duration)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__System_Windows_Duration_System_Windows_Media_Animation_RepeatBehavior_\" data-linktype=\"self-bookmark\">Timeline(Nullable&lt;TimeSpan&gt;,Duration,RepeatBehavior)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span>, <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span>, and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.RepeatBehavior*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_AccelerationRatioProperty\" data-linktype=\"self-bookmark\">AccelerationRatioProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AccelerationRatio*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_AutoReverseProperty\" data-linktype=\"self-bookmark\">AutoReverseProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AutoReverse*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_BeginTimeProperty\" data-linktype=\"self-bookmark\">BeginTimeProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_DecelerationRatioProperty\" data-linktype=\"self-bookmark\">DecelerationRatioProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies for the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DecelerationRatio*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_DesiredFrameRateProperty\" data-linktype=\"self-bookmark\">DesiredFrameRateProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DesiredFrameRate*</span> attached property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_DurationProperty\" data-linktype=\"self-bookmark\">DurationProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_FillBehaviorProperty\" data-linktype=\"self-bookmark\">FillBehaviorProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.FillBehavior*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_NameProperty\" data-linktype=\"self-bookmark\">NameProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Name*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_RepeatBehaviorProperty\" data-linktype=\"self-bookmark\">RepeatBehaviorProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.RepeatBehavior*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_SpeedRatioProperty\" data-linktype=\"self-bookmark\">SpeedRatioProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies for the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_AccelerationRatio\" data-linktype=\"self-bookmark\">AccelerationRatio</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value specifying the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent accelerating the passage of time from zero to its maximum rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_AutoReverse\" data-linktype=\"self-bookmark\">AutoReverse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_BeginTime\" data-linktype=\"self-bookmark\">BeginTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_DecelerationRatio\" data-linktype=\"self-bookmark\">DecelerationRatio</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value specifying the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent decelerating the passage of time from its maximum rate to zero.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_Duration\" data-linktype=\"self-bookmark\">Duration</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the length of time for which this timeline plays, not counting repetitions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_FillBehavior\" data-linktype=\"self-bookmark\">FillBehavior</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies how the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> behaves after it reaches the end of its active period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_RepeatBehavior\" data-linktype=\"self-bookmark\">RepeatBehavior</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the repeating behavior of this timeline.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_SpeedRatio\" data-linktype=\"self-bookmark\">SpeedRatio</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rate, relative to its parent, at which time progresses for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_AllocateClock\" data-linktype=\"self-bookmark\">AllocateClock()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>, making deep copies of this object&#39;s values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CloneCurrentValue\" data-linktype=\"self-bookmark\">CloneCurrentValue()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> object, making deep copies of this object&#39;s current values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CreateClock\" data-linktype=\"self-bookmark\">CreateClock()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new, controllable <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> has children, a tree of clocks is created with this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CreateClock_System_Boolean_\" data-linktype=\"self-bookmark\">CreateClock(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> and specifies whether the new <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is controllable. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> has children, a tree of clocks is created with this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_FreezeCore_System_Boolean_\" data-linktype=\"self-bookmark\">FreezeCore(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> unmodifiable or determines whether it can be made unmodifiable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_GetAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">GetAsFrozenCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes this instance a clone of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">GetCurrentValueAsFrozenCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes this instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. Resource references, data bindings, and animations are not copied, but their current values are.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_GetDesiredFrameRate_System_Windows_Media_Animation_Timeline_\" data-linktype=\"self-bookmark\">GetDesiredFrameRate(Timeline)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the desired frame rate of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_GetNaturalDuration_System_Windows_Media_Animation_Clock_\" data-linktype=\"self-bookmark\">GetNaturalDuration(Clock)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_GetNaturalDurationCore_System_Windows_Media_Animation_Clock_\" data-linktype=\"self-bookmark\">GetNaturalDurationCore(Clock)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. This method provides the implementation for <span class=\"xref\">stem.Windows.Media.Animation.Timeline.GetNaturalDuration*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_SetDesiredFrameRate_System_Windows_Media_Animation_Timeline_System_Nullable_System_Int32__\" data-linktype=\"self-bookmark\">SetDesiredFrameRate(Timeline,Nullable&lt;Int32&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the desired frame rate of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_Completed\" data-linktype=\"self-bookmark\">Completed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when this timeline has completely finished playing: it will no longer enter its active period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"self-bookmark\">CurrentGlobalSpeedInvalidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the rate at which time progresses for the timeline&#39;s clock changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"self-bookmark\">CurrentStateInvalidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentState*</span> property of the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is updated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_CurrentTimeInvalidated\" data-linktype=\"self-bookmark\">CurrentTimeInvalidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentTime*</span> property of the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is updated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Animation_Timeline_RemoveRequested\" data-linktype=\"self-bookmark\">RemoveRequested</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the clock created for this timeline or one of its parent timelines is removed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline__ctor\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeline()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Timeline ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeline(Nullable&lt;TimeSpan&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> property for more information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__System_Windows_Duration_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeline(Nullable&lt;TimeSpan&gt;,Duration)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> property for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>duration</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The length of time for which this timeline plays, not counting repetitions. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> property for more information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTime_\" data-linktype=\"relative-path\">BeginTime</a>  \n\n <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline__ctor_System_Nullable_System_TimeSpan__System_Windows_Duration_System_Windows_Media_Animation_RepeatBehavior_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeline(Nullable&lt;TimeSpan&gt;,Duration,RepeatBehavior)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> class with the specified <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span>, <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span>, and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.RepeatBehavior*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>beginTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> property for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>duration</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The length of time for which this timeline plays, not counting repetitions. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> property for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>repeatBehavior</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior\" data-linktype=\"relative-path\">RepeatBehavior</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The repeating behavior of this timeline, either as an iteration <span class=\"xref\">stem.Windows.Media.Animation.RepeatBehavior.Count*</span> or a repeat <span class=\"xref\">stem.Windows.Media.Animation.RepeatBehavior.Duration*</span>. See the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.RepeatBehavior*</span> property for more information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTime_\" data-linktype=\"relative-path\">BeginTime</a>  \n\n <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_AccelerationRatioProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccelerationRatioProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AccelerationRatio*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_AutoReverseProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoReverseProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AutoReverse*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty AutoReverseProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_BeginTimeProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginTimeProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.BeginTime*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty BeginTimeProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_DecelerationRatioProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DecelerationRatioProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies for the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DecelerationRatio*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_DesiredFrameRateProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesiredFrameRateProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DesiredFrameRate*</span> attached property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_DurationProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DurationProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty DurationProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_FillBehaviorProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillBehaviorProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.FillBehavior*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty FillBehaviorProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_NameProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NameProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Name*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty NameProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_RepeatBehaviorProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RepeatBehaviorProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.RepeatBehavior*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_SpeedRatioProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeedRatioProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies for the <span class=\"xref\">stem.Windows.Media.Animation.Timeline.SpeedRatio*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty SpeedRatioProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_AccelerationRatio\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_AccelerationRatio_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccelerationRatio</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value specifying the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent accelerating the passage of time from zero to its maximum rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double AccelerationRatio { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>A value between 0 and 1, inclusive, that specifies the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent accelerating the passage of time from zero to its maximum rate. If the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DecelerationRatio*</span> property is also set, the sum of AccelerationRatio and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DecelerationRatio*</span> must be less than or equal to 1. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>AccelerationRatio is less than 0 or greater than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The sum of AccelerationRatio and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.DecelerationRatio*</span> exceeds 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AccelerationRatio property to create animations that start slowly and then speed up as time progresses. The AccelerationRatio property is useful for creating ease-in effects or making movement seem more natural. Use the AccelerationRatio and <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatio_\" data-linktype=\"relative-path\">DecelerationRatio</a> properties together to create animations that that start slowly, speed up, and then slow down again before finishing.  </p>\n<p><a name=\"dependencyPropertyInfo_AccelerationRatio\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatioProperty\" data-linktype=\"relative-path\">AccelerationRatioProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_AutoReverse\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_AutoReverse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoReverse</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoReverse { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the timeline plays in reverse at the end of each iteration; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the AutoReverse property is set to <code>true</code>, the timeline plays for twice the length of time specified by its <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a> property.  </p>\n<h3 id=\"autoreverse-and-repetitions\">AutoReverse and Repetitions</h3>\n<p> When a timeline&#39;s AutoReverse property is set to <code>true</code> and its <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RepeatBehavior_\" data-linktype=\"relative-path\">RepeatBehavior</a> property causes it to repeat, each forward iteration is followed by a backward iteration. This makes one repetition. For example, a timeline with an AutoReverse value of <code>true</code> with an iteration <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Count_\" data-linktype=\"relative-path\">Count</a> of 2 would play forward once, then backwards, then forwards again, and then backwards again.  </p>\n<p><a name=\"dependencyPropertyInfo_AutoReverse\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverseProperty\" data-linktype=\"relative-path\">AutoReverseProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_BeginTime\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_BeginTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>&gt;</div>\r\n                  </div>\r\n                  <p>The time at which this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> should begin, relative to its parent&#39;s BeginTime. If this timeline is a root timeline, the time is relative to its interactive begin time (the moment at which the timeline was triggered). This value may be positive, negative, or <code>null</code>; a <code>null</code> value means the timeline never plays. The default value is zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeginTime property is useful for creating timelines that play in a sequence: by increasing the BeginTime of successive timelines that share the same parent, you can stagger their play times.  </p>\n<h2 id=\"negative-values\">Negative Values</h2>\n<p> A negative BeginTime value causes a <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> to behave as though it started at some time in the past. For example, a <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> with a BeginTime of negative 2.5 seconds and a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a> of 5 seconds will appear to be half-way finished when it starts.  </p>\n<h2 id=\"begintime-and-speedratio\">BeginTime and SpeedRatio</h2>\n<p> The time described by the BeginTime property is measured in the timeline&#39;s parent&#39;s time. For example, a timeline with a BeginTime of 5 whose parent has a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 2 actually starts after 2.5 seconds.  </p>\n<p> A timeline&#39;s own <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> setting does not affect its BeginTime. For example, a timeline with a BeginTime of 5 seconds, a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 2, and a parent timeline with a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> of 1 starts after 5 seconds, not 2.5.  </p>\n<p><a name=\"dependencyPropertyInfo_BeginTime\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTimeProperty\" data-linktype=\"relative-path\">BeginTimeProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"xamlAttributeUsage_BeginTime\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<em>object</em> BeginTime=&quot;[-][<em>days</em>.]<em>hours</em>:<em>minutes</em>:<em>seconds</em>[.<em>fractionalSeconds</em>]&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object</em> BeginTime=&quot;[-][<em>days</em>.]<em>hours</em>:<em>minutes</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object</em> BeginTime=&quot;[-]<em>days</em>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<em>object</em> BeginTime=&quot;{<a href=\"../Topic/x:Null%20Markup%20Extension.md\" data-linktype=\"relative-path\">x:Null Markup Extension</a>}&quot;/&gt;  </p>\n<p><a name=\"xamlValues_BeginTime\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> Items in square brackets (<code>[</code> and <code>]</code>) are optional.  </p>\n<p> <em>days</em>  </p>\n <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n\n<p> A value greater than or equal to 0 that describes the number of days spanned by this begin time.  </p>\n<p> <em>hours</em>  </p>\n <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n\n<p> A value between 0 and 23 that represents the number of hours spanned by this begin time.  </p>\n<p> <em>minutes</em>  </p>\n <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n\n<p> A value between 0 and 59 that represents the number of minutes spanned by this begin time.  </p>\n<p> <em>seconds</em>  </p>\n <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n\n<p> A value between 0 and 59 that represents the number of seconds spanned by this begin time.  </p>\n<p> <em>fractionalSeconds</em>  </p>\n <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">System.Int32</a>  \n\n<p> A value consisting of 1 to 7 digits that represents fractional seconds.  </p>\n<p> For the complete <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> syntax, see the Remarks section of the <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Parse_\" data-linktype=\"relative-path\">Parse</a> page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>A timeline&#39;s BeginTime property determines the beginning of a timeline&#39;s active period. If the timeline has a parent timeline, the BeginTime property determines how long it takes the timeline to start after its parent starts. If the timeline is a root timeline (a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, for example), the BeginTime property determines how long the timeline takes to start playing after it is triggered.  </p>\n<p> The following example shows several different timelines with different BeginTime settings.  </p>\n<pre><code class=\"lang-xml\" name=\"timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage\">&lt;!-- This example shows how the BeginTime property determines when a timeline starts.\n     Several rectangles are animated by DoubleAnimations with identical \n     durations and target values, but with different\n     BeginTime settings. --&gt;\n     \n&lt;Page xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; \n  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n  WindowTitle=&quot;BeginTime Example&quot;&gt;\n  &lt;StackPanel Margin=&quot;20&quot;&gt;\n\n    &lt;!-- The rectangles to animate. --&gt;\n    &lt;Rectangle Name=&quot;DefaultBeginTimeRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot;  /&gt;\n      \n    &lt;Rectangle Name=&quot;DelayedBeginTimeRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot;  /&gt;\n    \n    &lt;Rectangle Name=&quot;DelayedAnimationWithDelayedParentRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot;  /&gt; \n\n    &lt;Rectangle Name=&quot;NegativeBeginTimeExampleRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot;  /&gt;            \n    \n    &lt;!-- Create a button to start the animations. --&gt;\n    &lt;Button Margin=&quot;20&quot; Content=&quot;Start Animations&quot;&gt;\n      &lt;Button.Triggers&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Button.Click&quot;&gt;\n          &lt;BeginStoryboard&gt;\n            &lt;Storyboard&gt;\n\n              &lt;!-- This animation starts as soon as the button is clicked, because it\n                   has a BeginTime of 0. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;DefaultBeginTimeRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot;\n                BeginTime=&quot;0:0:0&quot; From=&quot;100&quot; To=&quot;600&quot; Duration=&quot;0:0:5&quot;  /&gt; \n\n              &lt;!-- This animation starts 5 seconds after the button is clicked. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;DelayedBeginTimeRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot;  \n                BeginTime=&quot;0:0:5&quot; From=&quot;100&quot; To=&quot;600&quot; Duration=&quot;0:0:5&quot; /&gt;\n                \n              &lt;ParallelTimeline BeginTime=&quot;0:0:5&quot;&gt;  \n\n              &lt;!-- This animation starts 10 seconds after the button is clicked, \n                   because its parent has a BeginTime of 5 seconds and it has\n                   a BeginTime of 5 seconds: 5 + 5 = 10.  --&gt;              \n                &lt;DoubleAnimation  \n                  Storyboard.TargetName=&quot;DelayedAnimationWithDelayedParentRectangle&quot; \n                  Storyboard.TargetProperty=&quot;Width&quot; \n                  BeginTime=&quot;0:0:5&quot; From=&quot;100&quot; To=&quot;600&quot; Duration=&quot;0:0:5&quot;  /&gt;\n              &lt;/ParallelTimeline&gt;\n              \n              &lt;!-- This animation starts as soon as the button is clicked, but\n                   it animates from 350 to 600 instead of from 100 to 600 \n                   because of its negative BeginTime. The negative BeginTime\n                   setting advances the animation, so that it behaves as though\n                   it had already been playing for 2.5 seconds as soon as it is\n                   started. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;NegativeBeginTimeExampleRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot;  \n                BeginTime=&quot;-0:0:2.5&quot; From=&quot;100&quot; To=&quot;600&quot; Duration=&quot;0:0:5&quot; /&gt;              \n              \n            &lt;/Storyboard&gt;\n          &lt;/BeginStoryboard&gt;\n        &lt;/EventTrigger&gt;\n      &lt;/Button.Triggers&gt;      \n    &lt;/Button&gt;\n    \n    &lt;!-- This example demonstrates how the BeginTime property works on a root timeline. --&gt;\n    &lt;Rectangle Name=&quot;RootTimelineWithDelayedBeginTimeRectangle&quot;\n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot; &gt;\n      &lt;Rectangle.Triggers&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Rectangle.MouseLeftButtonDown&quot;&gt;\n          &lt;BeginStoryboard&gt;\n            &lt;Storyboard BeginTime=&quot;0:0:5&quot;&gt;\n            \n              &lt;!-- This animation starts 5 seconds after the left mouse button\n                   is pressed, because its parent storyboard (a root timeline)\n                   has a BeginTime of 5 seconds. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;RootTimelineWithDelayedBeginTimeRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot;\n                BeginTime=&quot;0:0:0&quot; From=&quot;100&quot; To=&quot;600&quot; Duration=&quot;0:0:2&quot; /&gt;\n            &lt;/Storyboard&gt;\n          &lt;/BeginStoryboard&gt;\n        &lt;/EventTrigger&gt;\n      &lt;/Rectangle.Triggers&gt;\n    &lt;/Rectangle&gt;    \n  &lt;/StackPanel&gt;\n&lt;/Page&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_DecelerationRatio\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_DecelerationRatio_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DecelerationRatio</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value specifying the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent decelerating the passage of time from its maximum rate to zero.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double DecelerationRatio { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>A value between 0 and 1, inclusive, that specifies the percentage of the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.Duration*</span> spent decelerating the passage of time from its maximum rate to zero. If the timeline&#39;s <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AccelerationRatio*</span> property is also set, the sum of DecelerationRatio and <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AccelerationRatio*</span> must be less than or equal to 1. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>DecelerationRatio is less than 0 or greater than 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The sum of <span class=\"xref\">stem.Windows.Media.Animation.Timeline.AccelerationRatio*</span> and DecelerationRatio exceeds 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DecelerationRatio property to create animations that slow down before stopping. The DecelerationRatio property is useful for creating ease-in effects or making movement seem more natural. Use the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatio_\" data-linktype=\"relative-path\">AccelerationRatio</a> and DecelerationRatio properties together to create animations that that start slowly, speed up, and then slow down again before finishing.  </p>\n<p><a name=\"dependencyPropertyInfo_DecelerationRatio\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatioProperty\" data-linktype=\"relative-path\">DecelerationRatioProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_Duration\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_Duration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Duration</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the length of time for which this timeline plays, not counting repetitions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Duration Duration { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </div>\r\n                  <p>The timeline&#39;s simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <span class=\"xref\">stem.Windows.Duration.Automatic*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A timeline&#39;s simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.  </p>\n<h2 id=\"default-duration-behavior\">Default Duration Behavior</h2>\n<p> The behavior of a Duration structure with a value of <a class=\"xref\" href=\"system.windows.duration#System_Windows_Duration_Automatic_\" data-linktype=\"relative-path\">Automatic</a> depends on the type of timeline:  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Timeline</strong></td>\n<td><strong>Behavior</strong></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></td>\n<td>Undetermined (<a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> is abstract)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline\" data-linktype=\"relative-path\">ParallelTimeline</a>,<br><br> <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>,<br><br> <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a></td>\n<td>Expands to fit child timelines</td>\n</tr>\n<tr>\n<td>&lt;<em>Type</em>&gt;Animation (Known as a &quot;From/To/By&quot; or &quot;basic&quot; animations)</td>\n<td>1 second</td>\n</tr>\n<tr>\n<td>&lt;<em>Type</em>&gt;AnimationUsingKeyFrames (Known as key frame animations)</td>\n<td>Sum of all key frame <a class=\"xref\" href=\"system.windows.media.animation.keytime\" data-linktype=\"relative-path\">KeyTime</a> values</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"dependencyPropertyInfo_Duration\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DurationProperty\" data-linktype=\"relative-path\">DurationProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.media.animation.paralleltimeline\" data-linktype=\"relative-path\">ParallelTimeline</a> and <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> are types of <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> objects. The duration of a <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> is determined by the duration of its child timelines. For example, the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<a class=\"xref\" href=\"system.windows.media.animation.doubleanimation\" data-linktype=\"relative-path\">DoubleAnimation</a>) ends.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Note: code has been omitted from the following examples, which are provided for illustrative purposed only.  </p>\n</div>\n<p> [xaml]  </p>\n<pre><code>...  \n  &lt;Storyboard&gt;  \n    &lt;DoubleAnimation Duration=&quot;0:0:2&quot; …/&gt;  \n    &lt;DoubleAnimation Duration=&quot;0:0:4&quot; BeginTime=&quot;0:0:2&quot; …/&gt;  \n  &lt;/Storyboard&gt;   \n...  \n</code></pre><p> Examples of &lt;<em>Type</em>&gt;Animations include <a class=\"xref\" href=\"system.windows.media.animation.doubleanimation\" data-linktype=\"relative-path\">DoubleAnimation</a>, <a class=\"xref\" href=\"system.windows.media.animation.pointanimation\" data-linktype=\"relative-path\">PointAnimation</a>, <a class=\"xref\" href=\"system.windows.media.animation.coloranimation\" data-linktype=\"relative-path\">ColorAnimation</a>, etc. If no Duration is specified for these types of animations, they will run for one second.  </p>\n<p> [xaml]  </p>\n<pre><code>...  \n  &lt;!-- With no Duration specified, this animation will run for   \n       one second --&gt;  \n  &lt;DoubleAnimation .../&gt;  \n...  \n</code></pre><p> Examples of &lt;<em>Type</em>&gt;AnimationUsingKeyFrames include <a class=\"xref\" href=\"system.windows.media.animation.doubleanimationusingkeyframes\" data-linktype=\"relative-path\">DoubleAnimationUsingKeyFrames</a>, <a class=\"xref\" href=\"system.windows.media.animation.pointanimationusingkeyframes\" data-linktype=\"relative-path\">PointAnimationUsingKeyFrames</a>, etc. If no Duration is specified for these types of animations they will run until all key frames are finished.  </p>\n<p> [xaml]  </p>\n<pre><code>...  \n  &lt;Storyboard&gt;  \n\n    &lt;!-- This key frame animation will end at 4.5 seconds  \n         Because that is when its last KeyFrame KeyTime ends. --&gt;  \n    &lt;DoubleAnimationUsingKeyFrames ...&gt;  \n      &lt;LinearDoubleKeyFrame ... KeyTime=&quot;0:0:3&quot; /&gt;  \n      &lt;DiscreteDoubleKeyFrame ... KeyTime=&quot;0:0:3.5&quot; /&gt;  \n      &lt;DiscreteDoubleKeyFrame ... KeyTime=&quot;0:0:4&quot; /&gt;  \n      &lt;DiscreteDoubleKeyFrame ... KeyTime=&quot;0:0:4.5&quot; /&gt;  \n    &lt;/DoubleAnimationUsingKeyFrames&gt;  \n  &lt;/Storyboard&gt;   \n...  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_FillBehavior\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_FillBehavior_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FillBehavior</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies how the <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> behaves after it reaches the end of its active period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a></div>\r\n                  </div>\r\n                  <p>A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period. The default value is <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set an animations FillBehavior property to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a> when you want the animation to hold its value after it reaches the end of its active period. An animation that has reached the end of its active period that has a FillBehavior setting of <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a> is said to be in its fill period. When you don&#39;t want an animation to hold its value after it reaches the end of its active period, set its  </p>\n<p> FillBehavior property to <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>.  </p>\n<p> Because an animation in its fill period continues to override its target property&#39;s value, attempting to set the target property&#39;s value through other means might appear to have no effect. For an example showing how to set a property value after it has been animated, see <a href=\"../Topic/How%20to:%20Set%20a%20Property%20After%20Animating%20It%20with%20a%20Storyboard.md\" data-linktype=\"relative-path\">How to: Set a Property After Animating It with a Storyboard</a>.  </p>\n<p> A child timeline stops playing and filling when its parent timeline stops; if you want a child timeline to fill, make sure its parent timeline has a FillBehavior of <a class=\"xref\" href=\"system.windows.media.animation.fillbehavior\" data-linktype=\"relative-path\">FillBehavior</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_FillBehavior\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_FillBehaviorProperty\" data-linktype=\"relative-path\">FillBehaviorProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_Name\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of this timeline. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_RepeatBehavior\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_RepeatBehavior_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RepeatBehavior</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the repeating behavior of this timeline.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior\" data-linktype=\"relative-path\">RepeatBehavior</a></div>\r\n                  </div>\r\n                  <p>An iteration <span class=\"xref\">stem.Windows.Media.Animation.RepeatBehavior.Count*</span> that specifies the number of times the timeline should play, a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> value that specifies the total the length of this timeline&#39;s active period, or the special value <span class=\"xref\">stem.Windows.Media.Animation.RepeatBehavior.Forever*</span>, which specifies that the timeline should repeat indefinitely. The default value is a <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior\" data-linktype=\"relative-path\">RepeatBehavior</a> with a <span class=\"xref\">stem.Windows.Media.Animation.RepeatBehavior.Count*</span> of <code>1</code>, which indicates that the timeline plays once.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an iteration <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Count_\" data-linktype=\"relative-path\">Count</a> is specified and the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> property is set to <code>true</code>, a single repetition consists of one forward iteration and one backward iteration. A timeline with an <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> property set to true an iteration <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Count_\" data-linktype=\"relative-path\">Count</a> of 2 would play forwards, then backwards, then forwards again, and then backwards again.  </p>\n<p> Instead of specifying the number of times a timeline plays, you can also specify the total length of time you want the timeline to play. For a timeline to repeat, this <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Duration_\" data-linktype=\"relative-path\">Duration</a> value should be greater than the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a>. For example, a timeline with a <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a> of 2 seconds and a <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Duration_\" data-linktype=\"relative-path\">Duration</a> of 4 seconds will play twice. If the <a class=\"xref\" href=\"system.windows.media.animation.repeatbehavior#System_Windows_Media_Animation_RepeatBehavior_Duration_\" data-linktype=\"relative-path\">Duration</a> is less than the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a>, the timeline&#39;s active period is cut short.  </p>\n<p> For more information about repeating timelines, see <a href=\"../Topic/Animation%20Overview.md\" data-linktype=\"relative-path\">Animation Overview</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_RepeatBehavior\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_RepeatBehaviorProperty\" data-linktype=\"relative-path\">RepeatBehaviorProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_SpeedRatio\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_SpeedRatio_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeedRatio</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rate, relative to its parent, at which time progresses for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double SpeedRatio { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>A finite value greater than 0 that describes the rate at which time progresses for this timeline, relative to the speed of the timeline&#39;s parent or, if this is a root timeline, the default timeline speed. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>SpeedRatio is less than 0 or is not a finite value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A timeline&#39;s SpeedRatio setting does not have an effect on its <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_BeginTime_\" data-linktype=\"relative-path\">BeginTime</a>; that time is relative to the timeline&#39;s parent or, if the timeline is a root timeline, the moment at which the timeline&#39;s clock was begun.  </p>\n<p> If <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatio_\" data-linktype=\"relative-path\">AccelerationRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatio_\" data-linktype=\"relative-path\">DecelerationRatio</a> are specified, this SpeedRatio is the average ratio over the natural length of the timeline.  </p>\n<p><a name=\"dependencyPropertyInfo_SpeedRatio\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_SpeedRatioProperty\" data-linktype=\"relative-path\">SpeedRatioProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>A timeline&#39;s SpeedRatio property controls its rate of progress, relative to its parent. If the timeline is a root, its <a class=\"xref\" href=\"system.windows.media.mediaplayer#System_Windows_Media_MediaPlayer_SpeedRatio_\" data-linktype=\"relative-path\">SpeedRatio</a> is relative to the default timeline speed. The following example shows several timelines with different SpeedRatio settings.  </p>\n<pre><code class=\"lang-xml\" name=\"timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage\">&lt;!-- This example shows how to use the SpeedRatio property \n     to make animations speed up or slow down. --&gt;\n&lt;Page \n  xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot; \n  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n  WindowTitle=&quot;Speed Example&quot;&gt;\n  &lt;StackPanel&gt;\n\n    &lt;!-- The rectangles to animate. --&gt;          \n    &lt;Rectangle Name=&quot;DefaultSpeedRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot;  /&gt;      \n    &lt;Rectangle Name=&quot;FasterRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot; /&gt;      \n    &lt;Rectangle Name=&quot;SlowerRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot; /&gt;\n    &lt;Rectangle Name=&quot;NestedTimelinesExampleRectangle&quot; \n      Width=&quot;20&quot; Height=&quot;20&quot; Fill=&quot;Blue&quot; /&gt;      \n    \n    &lt;!-- Create a button to start the animations. --&gt;\n    &lt;Button Margin=&quot;0,30,0,0&quot; HorizontalAlignment=&quot;Left&quot;&gt;Start Animations\n      &lt;Button.Triggers&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Button.Click&quot;&gt;\n          &lt;BeginStoryboard&gt;\n            &lt;Storyboard&gt;\n\n              &lt;!-- This animation progresses at the same rate as its parent. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;DefaultSpeedRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot; \n                From=&quot;20&quot; To=&quot;400&quot; Duration=&quot;0:0:2&quot; \n                SpeedRatio=&quot;1&quot; /&gt;\n\n              &lt;!-- This animation progresses twice as fast as its parent. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;FasterRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot;\n                From=&quot;20&quot; To=&quot;400&quot; Duration=&quot;0:0:2&quot; \n                SpeedRatio=&quot;2&quot;  /&gt;   \n\n              &lt;!-- This animation progresses at half the rate of its parent. --&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;SlowerRectangle&quot; \n                Storyboard.TargetProperty=&quot;Width&quot; \n                From=&quot;20&quot; To=&quot;400&quot; Duration=&quot;0:0:2&quot; \n                SpeedRatio=&quot;0.5&quot;  /&gt;    \n                \n\n              &lt;ParallelTimeline SpeedRatio=&quot;2&quot;&gt;\n                &lt;ParallelTimeline SpeedRatio=&quot;2&quot;&gt;\n                \n                  &lt;!-- This animation progresses eight times faster\n                       than normal, because of its SpeedRatio settings\n                       and the SpeedRatio settings on its parents. --&gt;\n                  &lt;DoubleAnimation \n                    Storyboard.TargetName=&quot;NestedTimelinesExampleRectangle&quot; \n                    Storyboard.TargetProperty=&quot;Width&quot; \n                    From=&quot;20&quot; To=&quot;400&quot; Duration=&quot;0:0:2&quot; \n                    SpeedRatio=&quot;2&quot;  /&gt;  \n                &lt;/ParallelTimeline&gt;\n              &lt;/ParallelTimeline&gt;\n            &lt;/Storyboard&gt;\n          &lt;/BeginStoryboard&gt;\n        &lt;/EventTrigger&gt;\n      &lt;/Button.Triggers&gt;     \n    &lt;/Button&gt;\n  &lt;/StackPanel&gt;\n&lt;/Page&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_AllocateClock\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_AllocateClock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllocateClock()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Media.Animation.Clock AllocateClock ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a></div>\r\n                  </div>\r\n                  <p>A clock for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CreateClock_\" data-linktype=\"relative-path\">CreateClock</a> method and should not be called directly by your code.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_Clone\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>, making deep copies of this object&#39;s values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.Timeline Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></div>\r\n                  </div>\r\n                  <p>A modifiable clone of the current object. The cloned object&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>false</code> even if the source&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>true.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to produce modifiable copies of frozen <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> objects (or any <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Clone_\" data-linktype=\"relative-path\">Clone</a>.  </p>\n<p> When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CloneCurrentValue\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_CloneCurrentValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneCurrentValue()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> object, making deep copies of this object&#39;s current values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.Timeline CloneCurrentValue ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></div>\r\n                  </div>\r\n                  <p>A modifiable clone of the current object. The cloned object&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>false</code> even if the source&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to produce modifiable copies of frozen <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> objects (or any <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValue_\" data-linktype=\"relative-path\">CloneCurrentValue</a>.  </p>\n<p> Resource references, data bindings, and animations are not copied, but their current values are.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CreateClock\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_CreateClock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateClock()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new, controllable <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> has children, a tree of clocks is created with this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.Clock CreateClock ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a></div>\r\n                  </div>\r\n                  <p>A new, controllable <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> constructed from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> is a <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> that contains child timelines, a tree of <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects is created with a controllable <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> may be the child of one or more <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> objects, this information is ignored: this method treats the current <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as a root <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CreateClock_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_CreateClock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateClock(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> and specifies whether the new <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is controllable. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> has children, a tree of clocks is created with this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hasControllableRoot</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the root <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> returned should return a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a> from its <span class=\"xref\">stem.Windows.Media.Animation.Clock.Controller*</span> property so that the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> tree can be interactively controlled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> constructed from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. If this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> is a <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> that contains child timelines, a tree of <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects is created with a controllable <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created from this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as the root.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> may be the child of one or more <a class=\"xref\" href=\"system.windows.media.animation.timelinegroup\" data-linktype=\"relative-path\">TimelineGroup</a> objects, this information is ignored: this method treats the current <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> as a root <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_FreezeCore_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_FreezeCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FreezeCore(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Makes this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> unmodifiable or determines whether it can be made unmodifiable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool FreezeCore (bool isChecking);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isChecking</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to check if this instance can be frozen; <code>false</code> to freeze this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>If <code>isChecking</code> is true, this method returns <code>true</code> if this instance can be made read-only, or <code>false</code> if it cannot be made read-only.  </p>\n<p> If <code>isChecking</code> is false, this method returns <code>true</code> if this instance is now read-only, or <code>false</code> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not call this method directly (except when calling base in an implementation). This method is called internally by <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze_\" data-linktype=\"relative-path\">Freeze</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_GetAsFrozenCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_GetAsFrozenCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsFrozenCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes this instance a clone of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> instance to clone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen_\" data-linktype=\"relative-path\">GetAsFrozen</a> will fail when trying to freeze the object and will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> This method is called by the <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen_\" data-linktype=\"relative-path\">GetAsFrozen</a> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen_\" data-linktype=\"relative-path\">GetAsFrozen</a> instead of calling this method directly.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozenCore_\" data-linktype=\"relative-path\">GetAsFrozenCore</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_GetCurrentValueAsFrozenCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrentValueAsFrozenCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes this instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. Resource references, data bindings, and animations are not copied, but their current values are.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> to copy and freeze.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen_\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen</a> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen_\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen</a> instead of calling this method directly.  </p>\n<p> For more information see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozenCore_\" data-linktype=\"relative-path\">GetCurrentValueAsFrozenCore</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_GetDesiredFrameRate_System_Windows_Media_Animation_Timeline_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_GetDesiredFrameRate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDesiredFrameRate(Timeline)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the desired frame rate of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeline</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The timeline from which to retrieve the desired frame rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>&gt;</div>\r\n                  </div>\r\n                  <p>The desired frame rate of this timeline. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides read access to the &lt;xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A&gt; attached property. For more information, see the &lt;xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A&gt; page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_GetNaturalDuration_System_Windows_Media_Animation_Clock_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_GetNaturalDuration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNaturalDuration(Clock)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clock</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </div>\r\n                  <p>The length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>, or <span class=\"xref\">stem.Windows.Duration.Automatic*</span> if the natural duration is unknown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should only be called when the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a> property is set to <a class=\"xref\" href=\"system.windows.duration#System_Windows_Duration_Automatic_\" data-linktype=\"relative-path\">Automatic</a>. If <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_Duration_\" data-linktype=\"relative-path\">Duration</a> is <a class=\"xref\" href=\"system.windows.duration#System_Windows_Duration_Automatic_\" data-linktype=\"relative-path\">Automatic</a>, the natural duration is determined by that particular class&#39;s implementation of <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetNaturalDurationCore_\" data-linktype=\"relative-path\">GetNaturalDurationCore</a>.  </p>\n<p> If GetNaturalDuration returns <a class=\"xref\" href=\"system.windows.duration#System_Windows_Duration_Automatic_\" data-linktype=\"relative-path\">Automatic</a>, it means that the natural duration is unknown, which implies a natural duration of <a class=\"xref\" href=\"system.windows.duration#System_Windows_Duration_Forever_\" data-linktype=\"relative-path\">Forever</a>. Such is the case for streaming media.  </p>\n<p> Note that passing this method a clock other than the one that was created for this timeline is possible, but will provide unreliable results.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_GetNaturalDurationCore_System_Windows_Media_Animation_Clock_\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_GetNaturalDurationCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNaturalDurationCore(Clock)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>. This method provides the implementation for <span class=\"xref\">stem.Windows.Media.Animation.Timeline.GetNaturalDuration*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clock</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </div>\r\n                  <p>The length of a single iteration of this <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>, or <span class=\"xref\">stem.Windows.Duration.Automatic*</span> if the natural duration is unknown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides the implementation for <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetNaturalDuration_\" data-linktype=\"relative-path\">GetNaturalDuration</a> and should not be called directly from your code. Use <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_GetNaturalDuration_\" data-linktype=\"relative-path\">GetNaturalDuration</a> instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_SetDesiredFrameRate_System_Windows_Media_Animation_Timeline_System_Nullable_System_Int32__\">\r\n    \r\n            <a id=\"System_Windows_Media_Animation_Timeline_SetDesiredFrameRate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetDesiredFrameRate(Timeline,Nullable&lt;Int32&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the desired frame rate of the specified <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeline</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.animation.timeline\" data-linktype=\"relative-path\">Timeline</a> to which <code>desiredFrameRate</code> is assigned.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>desiredFrameRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable</a>&lt;<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of frames this timeline should generate each second, or <code>null</code> if the system should control the number of frames.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sets the &lt;xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A&gt; attached property. For more information, see the &lt;xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A&gt; page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_Completed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Completed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when this timeline has completely finished playing: it will no longer enter its active period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Completed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this timeline is the root timeline of a timeline tree, it has completed playing after it reaches the end of its active period (which includes repeats) and all its children have reached the end of their active periods. If this timeline is a child timeline, it is considered to have completely finished playing when the root timeline of the timeline tree to which it belongs reaches the end of its active period and all its child timelines have finished playing.  </p>\n<p> Stopping a timeline does not trigger its completed event, but skipping it to its fill period does.  </p>\n<p> The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> parameter of the <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> event handler is the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a>.  </p>\n<p> Although this event handler appears to be associated with a timeline, it actually registers with the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this timeline.  For more information, see the <a href=\"../Topic/Timing%20Events%20Overview.md\" data-linktype=\"relative-path\">Timing Events Overview</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, two <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> objects are used to create an animation transition between two images, stored using <a class=\"xref\" href=\"system.windows.media.imagesource\" data-linktype=\"relative-path\">ImageSource</a> objects and displayed using an <a class=\"xref\" href=\"system.windows.controls.image\" data-linktype=\"relative-path\">Image</a> control. One storyboard shrinks the image control until it disappears. After it completes, the old <a class=\"xref\" href=\"system.windows.media.imagesource\" data-linktype=\"relative-path\">ImageSource</a> is swapped with the other <a class=\"xref\" href=\"system.windows.media.imagesource\" data-linktype=\"relative-path\">ImageSource</a>, and a second storyboard that expands the image control until it is full-sized again.  </p>\n<pre><code class=\"lang-xml\" name=\"timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage\">&lt;!-- TimelineCompletedExample.xaml \n     This example creates an animated transition between\n     two images. When the user clicks the Start Transition button,\n     a storyboard shrinks an image until it disappears. \n     The Completed event is used to notify the class when this\n     storyboard has completed. The code behind file handles\n     this event by swapping the image and making it visible again.\n--&gt;\n&lt;Page xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n  x:Class=&quot;SDKSample.TimelineCompletedExample&quot;\n  WindowTitle=&quot;Timeline Completed Example&quot;\n  Loaded=&quot;exampleLoaded&quot;&gt;\n  &lt;Page.Resources&gt;\n\n    &lt;!-- A simple picture of a rectangle. --&gt;\n    &lt;DrawingImage x:Key=&quot;RectangleDrawingImage&quot;&gt;\n      &lt;DrawingImage.Drawing&gt;\n        &lt;DrawingGroup&gt;\n          &lt;GeometryDrawing Brush=&quot;White&quot;&gt;\n            &lt;GeometryDrawing.Geometry&gt;\n              &lt;RectangleGeometry Rect=&quot;0,0,100,100&quot;  /&gt;\n            &lt;/GeometryDrawing.Geometry&gt;\n          &lt;/GeometryDrawing&gt;\n          &lt;GeometryDrawing Brush=&quot;Orange&quot;&gt;\n            &lt;GeometryDrawing.Geometry&gt;\n              &lt;RectangleGeometry Rect=&quot;25,25,50,50&quot;  /&gt;\n            &lt;/GeometryDrawing.Geometry&gt;\n          &lt;/GeometryDrawing&gt;\n        &lt;/DrawingGroup&gt;\n      &lt;/DrawingImage.Drawing&gt;\n    &lt;/DrawingImage&gt;\n\n    &lt;!-- A simple picture of a cirlce. --&gt;\n    &lt;DrawingImage x:Key=&quot;CircleDrawingImage&quot;&gt;\n      &lt;DrawingImage.Drawing&gt;\n        &lt;DrawingGroup&gt;\n          &lt;GeometryDrawing Brush=&quot;White&quot;&gt;\n            &lt;GeometryDrawing.Geometry&gt;\n              &lt;RectangleGeometry Rect=&quot;0,0,100,100&quot;  /&gt;\n            &lt;/GeometryDrawing.Geometry&gt;\n          &lt;/GeometryDrawing&gt;\n          &lt;GeometryDrawing&gt;\n            &lt;GeometryDrawing.Geometry&gt;\n              &lt;EllipseGeometry Center=&quot;50,50&quot; RadiusX=&quot;25&quot; RadiusY=&quot;25&quot;  /&gt;\n            &lt;/GeometryDrawing.Geometry&gt;\n            &lt;GeometryDrawing.Brush&gt;\n              &lt;RadialGradientBrush GradientOrigin=&quot;0.75,0.25&quot; Center=&quot;0.75,0.25&quot;&gt;\n                &lt;GradientStop Offset=&quot;0.0&quot; Color=&quot;White&quot; /&gt;\n                &lt;GradientStop Offset=&quot;1.0&quot; Color=&quot;LimeGreen&quot; /&gt;\n              &lt;/RadialGradientBrush&gt;\n            &lt;/GeometryDrawing.Brush&gt;\n          &lt;/GeometryDrawing&gt;\n        &lt;/DrawingGroup&gt;\n      &lt;/DrawingImage.Drawing&gt;\n    &lt;/DrawingImage&gt;\n\n    &lt;!-- Define the storyboard that enlarges the image.\n         This storyboard is applied using code when\n         ZoomOutStoryboard completes. --&gt;\n    &lt;Storyboard x:Key=&quot;ZoomInStoryboardResource&quot;&gt;\n      &lt;DoubleAnimation \n        Storyboard.TargetName=&quot;AnimatedImageScaleTranform&quot; \n        Storyboard.TargetProperty=&quot;ScaleX&quot; \n        Duration=&quot;0:0:5&quot; To=&quot;1&quot; /&gt;\n      &lt;DoubleAnimation \n       Storyboard.TargetName=&quot;AnimatedImageScaleTranform&quot; \n       Storyboard.TargetProperty=&quot;ScaleY&quot; \n       Duration=&quot;0:0:5&quot; To=&quot;1&quot; /&gt;\n    &lt;/Storyboard&gt;\n  &lt;/Page.Resources&gt;\n\n  &lt;StackPanel Margin=&quot;20&quot; &gt;\n    &lt;Border \n      BorderBrush=&quot;Gray&quot; BorderThickness=&quot;2&quot; \n      HorizontalAlignment=&quot;Center&quot; VerticalAlignment=&quot;Center&quot;&gt;\n\n      &lt;!-- Displays the current ImageSource. --&gt;\n      &lt;Image\n        Name=&quot;AnimatedImage&quot; \n        Width=&quot;200&quot; Height=&quot;200&quot;\n        RenderTransformOrigin=&quot;0.5,0.5&quot;&gt;\n        &lt;Image.RenderTransform&gt;\n          &lt;ScaleTransform x:Name=&quot;AnimatedImageScaleTranform&quot; \n            ScaleX=&quot;1&quot; ScaleY=&quot;1&quot; /&gt;\n        &lt;/Image.RenderTransform&gt;\n      &lt;/Image&gt;\n    &lt;/Border&gt;\n\n\n    &lt;!-- This StackPanel contains buttons that control the storyboard. --&gt;\n    &lt;StackPanel Orientation=&quot;Horizontal&quot; Margin=&quot;0,30,0,0&quot;&gt;\n\n      &lt;Button Name=&quot;BeginButton&quot;&gt;Start Transition&lt;/Button&gt;\n      &lt;Button Name=&quot;SkipToFillButton&quot;&gt;Skip To Fill&lt;/Button&gt;\n      &lt;Button Name=&quot;StopButton&quot;&gt;Stop&lt;/Button&gt;\n\n      &lt;StackPanel.Triggers&gt;\n\n        &lt;!-- Begin the storyboard that shrinks the image. After the storyboard\n             completes, --&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Button.Click&quot; SourceName=&quot;BeginButton&quot;&gt;\n          &lt;BeginStoryboard Name=&quot;ZoomOutBeginStoryboard&quot;&gt;\n            &lt;Storyboard x:Name=&quot;ZoomOutStoryboard&quot; \n              Completed=&quot;zoomOutStoryboardCompleted&quot; FillBehavior=&quot;Stop&quot;&gt;\n              &lt;DoubleAnimation \n                Storyboard.TargetName=&quot;AnimatedImageScaleTranform&quot; \n                Storyboard.TargetProperty=&quot;ScaleX&quot; \n                Duration=&quot;0:0:5&quot; To=&quot;0&quot; FillBehavior=&quot;Stop&quot; /&gt;\n              &lt;DoubleAnimation \n               Storyboard.TargetName=&quot;AnimatedImageScaleTranform&quot; \n               Storyboard.TargetProperty=&quot;ScaleY&quot; \n               Duration=&quot;0:0:5&quot; To=&quot;0&quot; FillBehavior=&quot;Stop&quot; /&gt;\n            &lt;/Storyboard&gt;\n          &lt;/BeginStoryboard&gt;\n        &lt;/EventTrigger&gt;\n\n        &lt;!-- Advances ZoomOutStoryboard to its fill period.\n             This action triggers the Completed event. --&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Button.Click&quot; SourceName=&quot;SkipToFillButton&quot;&gt;\n          &lt;SkipStoryboardToFill BeginStoryboardName=&quot;ZoomOutBeginStoryboard&quot; /&gt;\n        &lt;/EventTrigger&gt;\n\n        &lt;!-- Stops the storyboard. This action does not\n             trigger the completed event. --&gt;\n        &lt;EventTrigger RoutedEvent=&quot;Button.Click&quot; SourceName=&quot;StopButton&quot;&gt;\n          &lt;StopStoryboard BeginStoryboardName=&quot;ZoomOutBeginStoryboard&quot; /&gt;\n        &lt;/EventTrigger&gt;\n      &lt;/StackPanel.Triggers&gt;\n    &lt;/StackPanel&gt;\n  &lt;/StackPanel&gt;\n&lt;/Page&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentGlobalSpeedInvalidated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the rate at which time progresses for the timeline&#39;s clock changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentGlobalSpeedInvalidated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current global speed of a timeline&#39;s clock changes in the following circumstances:  </p>\n<ul>\n<li><p>The clock changes direction because of its timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AutoReverse_\" data-linktype=\"relative-path\">AutoReverse</a> setting.  </p>\n</li>\n<li><p>The clock accelerates or decelerates because of its timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_AccelerationRatio_\" data-linktype=\"relative-path\">AccelerationRatio</a> or <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_DecelerationRatio_\" data-linktype=\"relative-path\">DecelerationRatio</a> property settings.  </p>\n</li>\n<li><p>The clock is paused or resumed.  </p>\n</li>\n<li><p>The clock becomes inactive or reactivates.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentGlobalSpeed_\" data-linktype=\"relative-path\">CurrentGlobalSpeed</a> of one of the clock&#39;s parent changes.  </p>\n<p>The CurrentGlobalSpeedInvalidated event is useful for tracking when a timeline&#39;s clock becomes paused; in your event handler, use your storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_GetCurrentGlobalSpeed_\" data-linktype=\"relative-path\">GetCurrentGlobalSpeed</a> method or check the clock&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_IsPaused_\" data-linktype=\"relative-path\">IsPaused</a> property to determine whether its clock is paused; compare this against a previously cached value to determine whether it changed.  </p>\n<p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> parameter of the <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> event handler is the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a>.  </p>\n<p>Although this event handler appears to be associated with a timeline, it actually registers with the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this timeline.  For more information, see the <a href=\"../Topic/Timing%20Events%20Overview.md\" data-linktype=\"relative-path\">Timing Events Overview</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to register for the CurrentGlobalSpeedInvalidated event.  </p>\n<pre><code class=\"lang-cs\" name=\"timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage\">/*\n\n   This example shows how to register for the\n   CurrentGlobalSpeedInvalidated event\n   using a Timeline. \n\n*/\n\nusing System;\nusing System.Windows;\nusing System.Windows.Navigation;\nusing System.Windows.Media;\nusing System.Windows.Media.Animation;\nusing System.Windows.Shapes;\nusing System.Windows.Controls;\nusing System.Windows.Input;\n\nnamespace Microsoft.Samples.Animation.TimingBehaviors\n{\n\n    \n    public class TimelineCurrentGlobalSpeedInvalidatedExample : Page {\n        \n\n        private TextBlock currentTimeTextBlock;\n        public TimelineCurrentGlobalSpeedInvalidatedExample()\n        {\n            \n            // Create a name scope.\n            NameScope.SetNameScope(this, new NameScope());\n            \n            WindowTitle = &quot;GetAnimationBaseValue Example&quot;;\n            StackPanel myPanel = new StackPanel();\n            myPanel.Margin = new Thickness(20);     \n            \n            // Create a rectangle.\n            Rectangle animatedRectangle = new Rectangle();\n            animatedRectangle.Width = 100;\n            animatedRectangle.Height = 50;\n            animatedRectangle.Margin = new Thickness(50);\n            animatedRectangle.Fill = Brushes.Orange;\n            animatedRectangle.Stroke = Brushes.Gray;\n            animatedRectangle.StrokeThickness = 2;\n            \n            // Create a RotateTransform.\n            RotateTransform animatedTransform = new RotateTransform();\n            animatedTransform.Angle = 0;\n            this.RegisterName(&quot;animatedTransform&quot;, animatedTransform);\n            animatedRectangle.RenderTransform = animatedTransform;\n            animatedRectangle.RenderTransformOrigin = new Point(0.5,0.5);\n            myPanel.Children.Add(animatedRectangle);\n            this.Content = myPanel;\n\n            // Create a TextBlock to show the storyboard&#39;s current time.\n            currentTimeTextBlock = new TextBlock();\n            myPanel.Children.Add(currentTimeTextBlock);\n            \n            // Animate the RotateTransform&#39;s angle using a Storyboard.\n            DoubleAnimation angleAnimation = new DoubleAnimation(0,360, TimeSpan.FromSeconds(5));\n            angleAnimation.RepeatBehavior = RepeatBehavior.Forever;\n            angleAnimation.AutoReverse = true;\n            Storyboard.SetTargetName(angleAnimation, &quot;animatedTransform&quot;);\n            Storyboard.SetTargetProperty(angleAnimation, \n                new PropertyPath(RotateTransform.AngleProperty));\n  \n            Storyboard theStoryboard = new Storyboard();\n            theStoryboard.Children.Add(angleAnimation);            \n            \n            // Register the CurrentGlobalSpeedInvalidated event.\n            // You must register for events before you begin \n            // the storyboard.\n            angleAnimation.CurrentGlobalSpeedInvalidated += \n                new EventHandler(angleAnimation_CurrentGlobalSpeedInvalidated);\n            \n            // Start the storyboard.\n            theStoryboard.Begin(animatedRectangle, true);\n                   \n        }\n        \n        private void angleAnimation_CurrentGlobalSpeedInvalidated(object sender, EventArgs e)\n        {\n            \n            // Sender is the clock that was created for the DoubleAnimation.\n            Clock doubleAnimationClock = (Clock)sender;\n            \n            // Update the TextBlock with the time of its parent.\n            currentTimeTextBlock.Text = doubleAnimationClock.Parent.CurrentTime.ToString();       \n        }\n        \n\n \n    }\n \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage\">&#39;\n&#39;\n&#39;   This example shows how to register for the\n&#39;   CurrentGlobalSpeedInvalidated event\n&#39;   using a Timeline. \n&#39;\n&#39;\n\nImports System\nImports System.Windows\nImports System.Windows.Navigation\nImports System.Windows.Media\nImports System.Windows.Media.Animation\nImports System.Windows.Shapes\nImports System.Windows.Controls\nImports System.Windows.Input\n\nNamespace Microsoft.Samples.Animation.TimingBehaviors\n\n\n\tPublic Class TimelineCurrentGlobalSpeedInvalidatedExample\n\t\tInherits Page\n\n\n\t\tPrivate currentTimeTextBlock As TextBlock\n\t\tPublic Sub New()\n\n\t\t\t&#39; Create a name scope.\n\t\t\tNameScope.SetNameScope(Me, New NameScope())\n\n\t\t\tWindowTitle = &quot;GetAnimationBaseValue Example&quot;\n\t\t\tDim myPanel As New StackPanel()\n\t\t\tmyPanel.Margin = New Thickness(20)\n\n\t\t\t&#39; Create a rectangle.\n            Dim animatedRectangle As New Rectangle()\n            With animatedRectangle\n                .Width = 100\n                .Height = 50\n                .Margin = New Thickness(50)\n                .Fill = Brushes.Orange\n                .Stroke = Brushes.Gray\n                .StrokeThickness = 2\n            End With\n\n            &#39; Create a RotateTransform.\n            Dim animatedTransform As New RotateTransform()\n            animatedTransform.Angle = 0\n            Me.RegisterName(&quot;animatedTransform&quot;, animatedTransform)\n            animatedRectangle.RenderTransform = animatedTransform\n            animatedRectangle.RenderTransformOrigin = New Point(0.5, 0.5)\n            myPanel.Children.Add(animatedRectangle)\n            Me.Content = myPanel\n\n            &#39; Create a TextBlock to show the storyboard&#39;s current time.\n            currentTimeTextBlock = New TextBlock()\n            myPanel.Children.Add(currentTimeTextBlock)\n\n            &#39; Animate the RotateTransform&#39;s angle using a Storyboard.\n            Dim angleAnimation As New DoubleAnimation(0, 360, TimeSpan.FromSeconds(5))\n            angleAnimation.RepeatBehavior = RepeatBehavior.Forever\n            angleAnimation.AutoReverse = True\n            Storyboard.SetTargetName(angleAnimation, &quot;animatedTransform&quot;)\n            Storyboard.SetTargetProperty(angleAnimation, New PropertyPath(RotateTransform.AngleProperty))\n\n            Dim theStoryboard As New Storyboard()\n            theStoryboard.Children.Add(angleAnimation)\n\n            &#39; Register the CurrentGlobalSpeedInvalidated event.\n            &#39; You must register for events before you begin \n            &#39; the storyboard.\n            AddHandler angleAnimation.CurrentGlobalSpeedInvalidated, AddressOf angleAnimation_CurrentGlobalSpeedInvalidated\n\n            &#39; Start the storyboard.\n            theStoryboard.Begin(animatedRectangle, True)\n\n\t\tEnd Sub\n\n\t\tPrivate Sub angleAnimation_CurrentGlobalSpeedInvalidated(ByVal sender As Object, ByVal e As EventArgs)\n\n\t\t\t&#39; Sender is the clock that was created for the DoubleAnimation.\n\t\t\tDim doubleAnimationClock As Clock = CType(sender, Clock)\n\n\t\t\t&#39; Update the TextBlock with the time of its parent.\n\t\t\tcurrentTimeTextBlock.Text = doubleAnimationClock.Parent.CurrentTime.ToString()\n\t\tEnd Sub\n\n\n\n\tEnd Class\n\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentStateInvalidated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentState*</span> property of the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is updated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentStateInvalidated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CurrentStateInvalidated event when you want to be notified  when a timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> starts, stops, or fills.  </p>\n<p> Pausing a <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> does not change its <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a>. To be notified when a clock becomes paused, use the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentGlobalSpeedInvalidated\" data-linktype=\"relative-path\">CurrentGlobalSpeedInvalidated</a> event.  </p>\n<p> Although this event occurs when the <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> becomes invalid, that doesn&#39;t necessarily mean the <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> changed: a <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that switches from <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> to <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> and then back to <a class=\"xref\" href=\"system.windows.media.animation.clockstate\" data-linktype=\"relative-path\">ClockState</a> in the same tick will cause this event to fire, but its <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentState_\" data-linktype=\"relative-path\">CurrentState</a> property won&#39;t actually change.  </p>\n<p> The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> parameter of the <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> event handler is the  <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> that was created for this timeline.  </p>\n<p> Although this event handler appears to be associated with a timeline, it actually registers with the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this timeline.  For more information, see the <a href=\"../Topic/Timing%20Events%20Overview.md\" data-linktype=\"relative-path\">Timing Events Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_CurrentTimeInvalidated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentTimeInvalidated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Media.Animation.Clock.CurrentTime*</span> property of the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is updated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentTimeInvalidated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.windows.media.animation.timeline#System_Windows_Media_Animation_Timeline_CurrentStateInvalidated\" data-linktype=\"relative-path\">CurrentStateInvalidated</a> event when you want to be notified when the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_CurrentTime_\" data-linktype=\"relative-path\">CurrentTime</a> of a timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> is updated.  </p>\n<p> The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> parameter of the <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> event handler is the timeline&#39;s <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a>.  </p>\n<p> Although this event handler appears to be associated with a timeline, it actually registers with the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this timeline.  For more information, see the <a href=\"../Topic/Timing%20Events%20Overview.md\" data-linktype=\"relative-path\">Timing Events Overview</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to register for the CurrentTimeInvalidated event.  </p>\n<pre><code class=\"lang-cs\" name=\"timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage\">/*\n\n   This example shows how to register for the\n   CurrentTimeInvalidated event\n   using a Timeline. \n\n*/\n\nusing System;\nusing System.Windows;\nusing System.Windows.Navigation;\nusing System.Windows.Media;\nusing System.Windows.Media.Animation;\nusing System.Windows.Shapes;\nusing System.Windows.Controls;\nusing System.Windows.Input;\n\nnamespace Microsoft.Samples.Animation.TimingBehaviors\n{\n\n    \n    public class TimelineCurrentTimeInvalidatedExample : Page {\n        \n\n        private TextBlock currentTimeTextBlock;\n        public TimelineCurrentTimeInvalidatedExample()\n        {\n            \n            // Create a name scope.\n            NameScope.SetNameScope(this, new NameScope());\n            \n            WindowTitle = &quot;GetAnimationBaseValue Example&quot;;\n            StackPanel myPanel = new StackPanel();\n            myPanel.Margin = new Thickness(20);     \n            \n            // Create a rectangle.\n            Rectangle animatedRectangle = new Rectangle();\n            animatedRectangle.Width = 100;\n            animatedRectangle.Height = 50;\n            animatedRectangle.Margin = new Thickness(50);\n            animatedRectangle.Fill = Brushes.Orange;\n            animatedRectangle.Stroke = Brushes.Gray;\n            animatedRectangle.StrokeThickness = 2;\n            \n            // Create a RotateTransform.\n            RotateTransform animatedTransform = new RotateTransform();\n            animatedTransform.Angle = 0;\n            this.RegisterName(&quot;animatedTransform&quot;, animatedTransform);\n            animatedRectangle.RenderTransform = animatedTransform;\n            animatedRectangle.RenderTransformOrigin = new Point(0.5,0.5);\n            myPanel.Children.Add(animatedRectangle);\n            this.Content = myPanel;\n\n            // Create a TextBlock to show the storyboard&#39;s current time.\n            currentTimeTextBlock = new TextBlock();\n            myPanel.Children.Add(currentTimeTextBlock);\n            \n            // Animate the RotateTransform&#39;s angle using a Storyboard.\n            DoubleAnimation angleAnimation = new DoubleAnimation(0,360, TimeSpan.FromSeconds(5));\n            angleAnimation.RepeatBehavior = RepeatBehavior.Forever;\n            Storyboard.SetTargetName(angleAnimation, &quot;animatedTransform&quot;);\n            Storyboard.SetTargetProperty(angleAnimation, \n                new PropertyPath(RotateTransform.AngleProperty));\n  \n            Storyboard theStoryboard = new Storyboard();\n            theStoryboard.Children.Add(angleAnimation);            \n            \n            // Register the CurrentTimeInvalidated event.\n            // You must register for events before you begin \n            // the storyboard.\n            theStoryboard.CurrentTimeInvalidated += \n                new EventHandler(storyboard_CurrentTimeInvalidated);\n            \n            // Start the storyboard.\n            theStoryboard.Begin(animatedRectangle, true);\n\n                   \n        }\n        \n        private void storyboard_CurrentTimeInvalidated(object sender, EventArgs e)\n        {\n\n            // Sender is the clock that was created for this storyboard.\n            Clock storyboardClock = (Clock)sender;\n            \n            // Update the TextBlock with the storyboard&#39;s current time.\n            currentTimeTextBlock.Text = storyboardClock.CurrentTime.ToString();       \n        }\n        \n\n \n    }\n \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage\">&#39;\n&#39;\n&#39;   This example shows how to register for the\n&#39;   CurrentTimeInvalidated event\n&#39;   using a Timeline. \n&#39;\n&#39;\n\nImports System\nImports System.Windows\nImports System.Windows.Navigation\nImports System.Windows.Media\nImports System.Windows.Media.Animation\nImports System.Windows.Shapes\nImports System.Windows.Controls\nImports System.Windows.Input\n\nNamespace Microsoft.Samples.Animation.TimingBehaviors\n\n\n\tPublic Class TimelineCurrentTimeInvalidatedExample\n\t\tInherits Page\n\n\n\t\tPrivate currentTimeTextBlock As TextBlock\n\t\tPublic Sub New()\n\n\t\t\t&#39; Create a name scope.\n\t\t\tNameScope.SetNameScope(Me, New NameScope())\n\n\t\t\tWindowTitle = &quot;GetAnimationBaseValue Example&quot;\n\t\t\tDim myPanel As New StackPanel()\n\t\t\tmyPanel.Margin = New Thickness(20)\n\n\t\t\t&#39; Create a rectangle.\n            Dim animatedRectangle As New Rectangle()\n            With animatedRectangle\n                .Width = 100\n                .Height = 50\n                .Margin = New Thickness(50)\n                .Fill = Brushes.Orange\n                .Stroke = Brushes.Gray\n                .StrokeThickness = 2\n            End With\n\n            &#39; Create a RotateTransform.\n            Dim animatedTransform As New RotateTransform()\n            animatedTransform.Angle = 0\n            Me.RegisterName(&quot;animatedTransform&quot;, animatedTransform)\n            animatedRectangle.RenderTransform = animatedTransform\n            animatedRectangle.RenderTransformOrigin = New Point(0.5, 0.5)\n            myPanel.Children.Add(animatedRectangle)\n            Me.Content = myPanel\n\n            &#39; Create a TextBlock to show the storyboard&#39;s current time.\n            currentTimeTextBlock = New TextBlock()\n            myPanel.Children.Add(currentTimeTextBlock)\n\n            &#39; Animate the RotateTransform&#39;s angle using a Storyboard.\n            Dim angleAnimation As New DoubleAnimation(0, 360, TimeSpan.FromSeconds(5))\n            angleAnimation.RepeatBehavior = RepeatBehavior.Forever\n            Storyboard.SetTargetName(angleAnimation, &quot;animatedTransform&quot;)\n            Storyboard.SetTargetProperty(angleAnimation, New PropertyPath(RotateTransform.AngleProperty))\n\n            Dim theStoryboard As New Storyboard()\n            theStoryboard.Children.Add(angleAnimation)\n\n            &#39; Register the CurrentTimeInvalidated event.\n            &#39; You must register for events before you begin \n            &#39; the storyboard.\n            AddHandler theStoryboard.CurrentTimeInvalidated, AddressOf storyboard_CurrentTimeInvalidated\n\n            &#39; Start the storyboard.\n            theStoryboard.Begin(animatedRectangle, True)\n\n\n\t\tEnd Sub\n\n\t\tPrivate Sub storyboard_CurrentTimeInvalidated(ByVal sender As Object, ByVal e As EventArgs)\n\n\t\t\t&#39; Sender is the clock that was created for this storyboard.\n\t\t\tDim storyboardClock As Clock = CType(sender, Clock)\n\n\t\t\t&#39; Update the TextBlock with the storyboard&#39;s current time.\n\t\t\tcurrentTimeTextBlock.Text = storyboardClock.CurrentTime.ToString()\n\t\tEnd Sub\n\n\n\n\tEnd Class\n\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Animation_Timeline_RemoveRequested\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveRequested</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the clock created for this timeline or one of its parent timelines is removed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RemoveRequested;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised by applying a <a class=\"xref\" href=\"system.windows.media.animation.removestoryboard\" data-linktype=\"relative-path\">RemoveStoryboard</a> action to a storyboard, using a Storyboard&#39;s <a class=\"xref\" href=\"system.windows.media.animation.storyboard#System_Windows_Media_Animation_Storyboard_Remove_\" data-linktype=\"relative-path\">Remove</a> method, or (when working directly with clocks) calling the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method.  </p>\n<p> Although this event handler appears to be associated with a timeline, it actually registers with the <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> created for this timeline.  For more information, see the <a href=\"../Topic/Timing%20Events%20Overview.md\" data-linktype=\"relative-path\">Timing Events Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Animation.Timeline.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Animation.Timeline.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.AccelerationRatio\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.AllocateClock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.AutoReverse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.AutoReverseProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.BeginTime\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.BeginTimeProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.CloneCurrentValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.Completed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.add_Completed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.remove_Completed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.CreateClock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.add_CurrentGlobalSpeedInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.remove_CurrentGlobalSpeedInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.add_CurrentStateInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.remove_CurrentStateInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.add_CurrentTimeInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.remove_CurrentTimeInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.DecelerationRatio\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.Duration\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.DurationProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.FillBehavior\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.FillBehaviorProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.FreezeCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.GetAsFrozenCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.GetDesiredFrameRate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.GetNaturalDuration\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.GetNaturalDurationCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.Name\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.NameProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.RemoveRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.add_RemoveRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.remove_RemoveRequested\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.RepeatBehavior\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.SetDesiredFrameRate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.SpeedRatio\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Animation.Timeline.SpeedRatioProperty\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"234d8afa-0aff-a8b0-f8d3-b696923f24d2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a segment of time.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Media.Animation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Media.Animation.Timeline\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Animation.Timeline.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Animation.Timeline.yml","open_to_public_contributors":true,"api_name":["System.Windows.Media.Animation.Timeline","System.Windows.Media.Animation.Timeline..ctor","System.Windows.Media.Animation.Timeline.AccelerationRatio","System.Windows.Media.Animation.Timeline.AccelerationRatioProperty","System.Windows.Media.Animation.Timeline.AllocateClock","System.Windows.Media.Animation.Timeline.AutoReverse","System.Windows.Media.Animation.Timeline.AutoReverseProperty","System.Windows.Media.Animation.Timeline.BeginTime","System.Windows.Media.Animation.Timeline.BeginTimeProperty","System.Windows.Media.Animation.Timeline.Clone","System.Windows.Media.Animation.Timeline.CloneCurrentValue","System.Windows.Media.Animation.Timeline.Completed","System.Windows.Media.Animation.Timeline.add_Completed","System.Windows.Media.Animation.Timeline.remove_Completed","System.Windows.Media.Animation.Timeline.CreateClock","System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated","System.Windows.Media.Animation.Timeline.add_CurrentGlobalSpeedInvalidated","System.Windows.Media.Animation.Timeline.remove_CurrentGlobalSpeedInvalidated","System.Windows.Media.Animation.Timeline.CurrentStateInvalidated","System.Windows.Media.Animation.Timeline.add_CurrentStateInvalidated","System.Windows.Media.Animation.Timeline.remove_CurrentStateInvalidated","System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated","System.Windows.Media.Animation.Timeline.add_CurrentTimeInvalidated","System.Windows.Media.Animation.Timeline.remove_CurrentTimeInvalidated","System.Windows.Media.Animation.Timeline.DecelerationRatio","System.Windows.Media.Animation.Timeline.DecelerationRatioProperty","System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty","System.Windows.Media.Animation.Timeline.Duration","System.Windows.Media.Animation.Timeline.DurationProperty","System.Windows.Media.Animation.Timeline.FillBehavior","System.Windows.Media.Animation.Timeline.FillBehaviorProperty","System.Windows.Media.Animation.Timeline.FreezeCore","System.Windows.Media.Animation.Timeline.GetAsFrozenCore","System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore","System.Windows.Media.Animation.Timeline.GetDesiredFrameRate","System.Windows.Media.Animation.Timeline.GetNaturalDuration","System.Windows.Media.Animation.Timeline.GetNaturalDurationCore","System.Windows.Media.Animation.Timeline.Name","System.Windows.Media.Animation.Timeline.NameProperty","System.Windows.Media.Animation.Timeline.RemoveRequested","System.Windows.Media.Animation.Timeline.add_RemoveRequested","System.Windows.Media.Animation.Timeline.remove_RemoveRequested","System.Windows.Media.Animation.Timeline.RepeatBehavior","System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty","System.Windows.Media.Animation.Timeline.SetDesiredFrameRate","System.Windows.Media.Animation.Timeline.SpeedRatio","System.Windows.Media.Animation.Timeline.SpeedRatioProperty"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Media.Animation.Timeline","System::Windows::Media::Animation::Timeline","System.Windows.Media.Animation.Timeline.#ctor","System::Windows::Media::Animation::Timeline::#ctor","System.Windows.Media.Animation.Timeline.AccelerationRatio","System::Windows::Media::Animation::Timeline::AccelerationRatio","System.Windows.Media.Animation.Timeline.AccelerationRatioProperty","System::Windows::Media::Animation::Timeline::AccelerationRatioProperty","System.Windows.Media.Animation.Timeline.AllocateClock","System::Windows::Media::Animation::Timeline::AllocateClock","System.Windows.Media.Animation.Timeline.AutoReverse","System::Windows::Media::Animation::Timeline::AutoReverse","System.Windows.Media.Animation.Timeline.AutoReverseProperty","System::Windows::Media::Animation::Timeline::AutoReverseProperty","System.Windows.Media.Animation.Timeline.BeginTime","System::Windows::Media::Animation::Timeline::BeginTime","System.Windows.Media.Animation.Timeline.BeginTimeProperty","System::Windows::Media::Animation::Timeline::BeginTimeProperty","System.Windows.Media.Animation.Timeline.Clone","System::Windows::Media::Animation::Timeline::Clone","System.Windows.Media.Animation.Timeline.CloneCurrentValue","System::Windows::Media::Animation::Timeline::CloneCurrentValue","System.Windows.Media.Animation.Timeline.Completed","System::Windows::Media::Animation::Timeline::Completed","System.Windows.Media.Animation.Timeline.CreateClock","System::Windows::Media::Animation::Timeline::CreateClock","System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated","System::Windows::Media::Animation::Timeline::CurrentGlobalSpeedInvalidated","System.Windows.Media.Animation.Timeline.CurrentStateInvalidated","System::Windows::Media::Animation::Timeline::CurrentStateInvalidated","System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated","System::Windows::Media::Animation::Timeline::CurrentTimeInvalidated","System.Windows.Media.Animation.Timeline.DecelerationRatio","System::Windows::Media::Animation::Timeline::DecelerationRatio","System.Windows.Media.Animation.Timeline.DecelerationRatioProperty","System::Windows::Media::Animation::Timeline::DecelerationRatioProperty","System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty","System::Windows::Media::Animation::Timeline::DesiredFrameRateProperty","System.Windows.Media.Animation.Timeline.Duration","System::Windows::Media::Animation::Timeline::Duration","System.Windows.Media.Animation.Timeline.DurationProperty","System::Windows::Media::Animation::Timeline::DurationProperty","System.Windows.Media.Animation.Timeline.FillBehavior","System::Windows::Media::Animation::Timeline::FillBehavior","System.Windows.Media.Animation.Timeline.FillBehaviorProperty","System::Windows::Media::Animation::Timeline::FillBehaviorProperty","System.Windows.Media.Animation.Timeline.FreezeCore","System::Windows::Media::Animation::Timeline::FreezeCore","System.Windows.Media.Animation.Timeline.GetAsFrozenCore","System::Windows::Media::Animation::Timeline::GetAsFrozenCore","System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore","System::Windows::Media::Animation::Timeline::GetCurrentValueAsFrozenCore","System.Windows.Media.Animation.Timeline.GetDesiredFrameRate","System::Windows::Media::Animation::Timeline::GetDesiredFrameRate","System.Windows.Media.Animation.Timeline.GetNaturalDuration","System::Windows::Media::Animation::Timeline::GetNaturalDuration","System.Windows.Media.Animation.Timeline.GetNaturalDurationCore","System::Windows::Media::Animation::Timeline::GetNaturalDurationCore","System.Windows.Media.Animation.Timeline.Name","System::Windows::Media::Animation::Timeline::Name","System.Windows.Media.Animation.Timeline.NameProperty","System::Windows::Media::Animation::Timeline::NameProperty","System.Windows.Media.Animation.Timeline.RemoveRequested","System::Windows::Media::Animation::Timeline::RemoveRequested","System.Windows.Media.Animation.Timeline.RepeatBehavior","System::Windows::Media::Animation::Timeline::RepeatBehavior","System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty","System::Windows::Media::Animation::Timeline::RepeatBehaviorProperty","System.Windows.Media.Animation.Timeline.SetDesiredFrameRate","System::Windows::Media::Animation::Timeline::SetDesiredFrameRate","System.Windows.Media.Animation.Timeline.SpeedRatio","System::Windows::Media::Animation::Timeline::SpeedRatio","System.Windows.Media.Animation.Timeline.SpeedRatioProperty","System::Windows::Media::Animation::Timeline::SpeedRatioProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"234d8afa-0aff-a8b0-f8d3-b696923f24d2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Media.Animation/Timeline.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Timeline class | Microsoft Docs","_op_ogTitle":"Timeline class","description":"Defines a segment of time.\n","toc_asset_id":"_splitted/System.Windows.Media.Animation/toc.json","toc_rel":"_splitted/System.Windows.Media.Animation/toc.json","source_url":"","ms.assetid":"System.Windows.Media.Animation.Timeline","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.animation.timeline","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.animation.timeline","fileRelativePath":"System.Windows.Media.Animation.Timeline.html"},"themesRelativePathToOutputRoot":"_themes/"}