{"content":"    <!-- ENUM -->\r\n    <h1 id=\"System_Threading_Tasks_TaskContinuationOptions\">\r\n      <span class=\"lang-csharp\">TaskContinuationOptions</span>\r\n        Enum\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies the behavior for a task that is created by using the <span class=\"xref\">stem.Threading.Tasks.Task.ContinueWith*</span> or <span class=\"xref\">stem.Threading.Tasks.Task`1.ContinueWith*</span> method.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Flags]\npublic enum TaskContinuationOptions</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TaskContinuationOptions</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n        <header class=\"header\" id=\"fields\">\r\n          <h2>Fields\r\n        </h2>\r\n        </header>\r\n        <table class=\"nameValue\">\r\n            <tbody>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_AttachedToParent\">\r\n            <div class=\"lang-csharp\">AttachedToParent</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation, if it is a child task, is attached to a parent in the task hierarchy. The continuation can be a child task only if its antecedent is also a child task. By default, a child task (that is, an inner task created by an outer task) executes independently of its parent. You can use the AttachedToParent option so that the parent and child tasks are synchronized.  </p>\n<p> Note that if a parent task is configured with the <span class=\"xref\">stem.Threading.Tasks.TaskCreationOptions.DenyChildAttach</span> option, the <span class=\"xref\">stem.Threading.Tasks.TaskCreationOptions.AttachedToParent</span> option in the child task has no effect, and the child task will execute as a detached child task.  </p>\n<p> For more information, see <a href=\"../Topic/Attached%20and%20Detached%20Child%20Tasks.md\" data-linktype=\"relative-path\">Attached and Detached Child Tasks</a>.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_DenyChildAttach\">\r\n            <div class=\"lang-csharp\">DenyChildAttach</div>\r\n          </td>\r\n                <td><p>Specifies that any child task (that is, any nested inner task created by this continuation) that is created with the <span class=\"xref\">stem.Threading.Tasks.TaskCreationOptions.AttachedToParent</span> option and attempts to execute as an attached child task will not be able to attach to the parent task and will execute instead as a detached child task. For more information, see <a href=\"../Topic/Attached%20and%20Detached%20Child%20Tasks.md\" data-linktype=\"relative-path\">Attached and Detached Child Tasks</a>.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_ExecuteSynchronously\">\r\n            <div class=\"lang-csharp\">ExecuteSynchronously</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should be executed synchronously. With this option specified, the continuation runs on the same thread that causes the antecedent task to transition into its final state. If the antecedent is already complete when the continuation is created, the continuation will run on the thread that creates the continuation. If the antecedent&#39;s <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> is disposed in a <code>finally</code> block (<code>Finally</code> in Visual Basic), a continuation with this option will run in that <code>finally</code> block. Only very short-running continuations should be executed synchronously.  </p>\n<p> Because the task executes synchronously, there is no need to call a method such as <span class=\"xref\">stem.Threading.Tasks.Task.Wait*</span> to ensure that the calling thread waits for the task to complete.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_HideScheduler\">\r\n            <div class=\"lang-csharp\">HideScheduler</div>\r\n          </td>\r\n                <td><p>Specifies that tasks created by the continuation by calling methods such as <span class=\"xref\">stem.Threading.Tasks.Task.Run*</span> or <span class=\"xref\">stem.Threading.Tasks.Task.ContinueWith*</span> see the default scheduler (<span class=\"xref\">stem.Threading.Tasks.TaskScheduler.Default*</span>) rather than the scheduler on which this continuation is running as the current scheduler.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_LazyCancellation\">\r\n            <div class=\"lang-csharp\">LazyCancellation</div>\r\n          </td>\r\n                <td><p>In the case of continuation cancellation, prevents completion of the continuation until the antecedent has completed.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_LongRunning\">\r\n            <div class=\"lang-csharp\">LongRunning</div>\r\n          </td>\r\n                <td><p>Specifies that a continuation will be a long-running, course-grained operation. It provides a hint to the <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> that oversubscription may be warranted.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_None\">\r\n            <div class=\"lang-csharp\">None</div>\r\n          </td>\r\n                <td><p>When no continuation options are specified, specifies that default behavior should be used when executing a continuation. The continuation runs asynchronously when the antecedent task completes, regardless of the antecedent&#39;s final <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property value. It the continuation is a child task, it is created as a detached nested task.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_NotOnCanceled\">\r\n            <div class=\"lang-csharp\">NotOnCanceled</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should not be scheduled if its antecedent was canceled. An antecedent is canceled if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.Canceled</span>. This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_NotOnFaulted\">\r\n            <div class=\"lang-csharp\">NotOnFaulted</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should not be scheduled if its antecedent threw an unhandled exception. An antecedent throws an unhandled exception if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.Faulted</span>. This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_NotOnRanToCompletion\">\r\n            <div class=\"lang-csharp\">NotOnRanToCompletion</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should not be scheduled if its antecedent ran to completion. An antecedent runs to completion if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.RanToCompletion</span>. This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_OnlyOnCanceled\">\r\n            <div class=\"lang-csharp\">OnlyOnCanceled</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation should be scheduled only if its antecedent was canceled.  An antecedent is canceled if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.Canceled</span>. This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_OnlyOnFaulted\">\r\n            <div class=\"lang-csharp\">OnlyOnFaulted</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should be scheduled only if its antecedent threw an unhandled exception. An antecedent throws an unhandled exception if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.Faulted</span>.  </p>\n<p> The OnlyOnFaulted option guarantees that the <span class=\"xref\">stem.Threading.Tasks.Task.Exception*</span> property in the antecedent is not <code>null</code>. You can use that property to catch the exception and see which exception caused the task to fault. If you do not access the <span class=\"xref\">stem.Threading.Tasks.Task.Exception*</span> property, the exception is unhandled. Also, if you attempt to access the <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property of a task that has been canceled or has faulted, a new exception is thrown.  </p>\n<p> This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_OnlyOnRanToCompletion\">\r\n            <div class=\"lang-csharp\">OnlyOnRanToCompletion</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation should be scheduled only if its antecedent ran to completion. An antecedent runs to completion if its <span class=\"xref\">stem.Threading.Tasks.Task.Status*</span> property upon completion is <span class=\"xref\">stem.Threading.Tasks.TaskStatus.RanToCompletion</span>. This option is not valid for multi-task continuations.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_PreferFairness\">\r\n            <div class=\"lang-csharp\">PreferFairness</div>\r\n          </td>\r\n                <td><p>A hint to a <a class=\"xref\" href=\"system.threading.tasks.taskscheduler\" data-linktype=\"relative-path\">TaskScheduler</a> to schedule task in the order in which they were scheduled, so that tasks scheduled sooner are more likely to run sooner, and tasks scheduled later are more likely to run later.</p>\n</td>\r\n              </tr>\r\n              <tr>\r\n                <td id=\"System_Threading_Tasks_TaskContinuationOptions_RunContinuationsAsynchronously\">\r\n            <div class=\"lang-csharp\">RunContinuationsAsynchronously</div>\r\n          </td>\r\n                <td><p>Specifies that the continuation task should be run asynchronously.  This option has precedence over ExecuteSynchronously.</p>\n</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Tasks.TaskContinuationOptions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Tasks.TaskContinuationOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.AttachedToParent\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.HideScheduler\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.LazyCancellation\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.LongRunning\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.None\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.PreferFairness\">\r\n<meta name=\"APIName\" content=\"System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"6af275e5-87de-a7ee-3d9c-987762113006\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies the behavior for a task that is created by using the  or  method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading.Tasks/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.Tasks.TaskContinuationOptions\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Tasks.TaskContinuationOptions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Tasks.TaskContinuationOptions.yml","open_to_public_contributors":true,"api_name":["System.Threading.Tasks.TaskContinuationOptions","System.Threading.Tasks.TaskContinuationOptions.AttachedToParent","System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach","System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously","System.Threading.Tasks.TaskContinuationOptions.HideScheduler","System.Threading.Tasks.TaskContinuationOptions.LazyCancellation","System.Threading.Tasks.TaskContinuationOptions.LongRunning","System.Threading.Tasks.TaskContinuationOptions.None","System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled","System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted","System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion","System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled","System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted","System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion","System.Threading.Tasks.TaskContinuationOptions.PreferFairness","System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.Tasks.TaskContinuationOptions","System::Threading::Tasks::TaskContinuationOptions","System.Threading.Tasks.TaskContinuationOptions.AttachedToParent","System::Threading::Tasks::TaskContinuationOptions::AttachedToParent","System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach","System::Threading::Tasks::TaskContinuationOptions::DenyChildAttach","System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously","System::Threading::Tasks::TaskContinuationOptions::ExecuteSynchronously","System.Threading.Tasks.TaskContinuationOptions.HideScheduler","System::Threading::Tasks::TaskContinuationOptions::HideScheduler","System.Threading.Tasks.TaskContinuationOptions.LazyCancellation","System::Threading::Tasks::TaskContinuationOptions::LazyCancellation","System.Threading.Tasks.TaskContinuationOptions.LongRunning","System::Threading::Tasks::TaskContinuationOptions::LongRunning","System.Threading.Tasks.TaskContinuationOptions.None","System::Threading::Tasks::TaskContinuationOptions::None","System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled","System::Threading::Tasks::TaskContinuationOptions::NotOnCanceled","System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted","System::Threading::Tasks::TaskContinuationOptions::NotOnFaulted","System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion","System::Threading::Tasks::TaskContinuationOptions::NotOnRanToCompletion","System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled","System::Threading::Tasks::TaskContinuationOptions::OnlyOnCanceled","System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted","System::Threading::Tasks::TaskContinuationOptions::OnlyOnFaulted","System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion","System::Threading::Tasks::TaskContinuationOptions::OnlyOnRanToCompletion","System.Threading.Tasks.TaskContinuationOptions.PreferFairness","System::Threading::Tasks::TaskContinuationOptions::PreferFairness","System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously","System::Threading::Tasks::TaskContinuationOptions::RunContinuationsAsynchronously"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"6af275e5-87de-a7ee-3d9c-987762113006","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading.Tasks/TaskContinuationOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TaskContinuationOptions enum | Microsoft Docs","_op_ogTitle":"TaskContinuationOptions enum","description":"Specifies the behavior for a task that is created by using the  or  method.\n","toc_asset_id":"_splitted/System.Threading.Tasks/toc.json","toc_rel":"_splitted/System.Threading.Tasks/toc.json","source_url":"","ms.assetid":"System.Threading.Tasks.TaskContinuationOptions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.tasks.taskcontinuationoptions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.tasks.taskcontinuationoptions","fileRelativePath":"System.Threading.Tasks.TaskContinuationOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}