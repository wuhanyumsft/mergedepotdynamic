{"content":"    \r\n    <h1 id=\"System_Web_IHttpHandlerFactory\">\r\n      <span class=\"lang-csharp\">IHttpHandlerFactory</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the contract that class factories must implement to create new <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IHttpHandlerFactory</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A class that implements the IHttpHandlerFactory interface has no behavior except to dynamically manufacture new instances of classes that implement the <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> interface.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_IHttpHandlerFactory_GetHandler_System_Web_HttpContext_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">GetHandler(HttpContext,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of a class that implements the <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_IHttpHandlerFactory_ReleaseHandler_System_Web_IHttpHandler_\" data-linktype=\"self-bookmark\">ReleaseHandler(IHttpHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables a factory to reuse an existing handler instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_IHttpHandlerFactory_GetHandler_System_Web_HttpContext_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_IHttpHandlerFactory_GetHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHandler(HttpContext,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of a class that implements the <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string url, string pathTranslated);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> class that provides references to intrinsic server objects (for example, <code>Request</code>, <code>Response</code>, <code>Session</code>, and <code>Server</code>) used to service HTTP requests.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP data transfer method (<code>GET</code> or <code>POST</code>) that the client uses.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Web.HttpRequest.RawUrl*</span> of the requested resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathTranslated</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Web.HttpRequest.PhysicalApplicationPath*</span> to the requested resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> object that processes the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create custom handler objects in response to a client request. The example has two parts:  </p>\n<ul>\n<li><p>A handler factory class.  </p>\n</li>\n<li><p>A Web.config file excerpt.  </p>\n<p>The first part of the example shows how to create custom handler objects in response to a client request for a page named either abc.aspx or xyz.aspx. The handler factory class named <code>hwf</code> creates the appropriate handler object depending on the page requested.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic IHttpHandlerFactory.GetHandler Example#1\">&#39; Name this Visual Basic file HandlerFactoryTest.vb and compile it with \n&#39; the command line: vbc /t:Library /r:System.Web.dll HandlerFactoryTest.vb.\n&#39; Copy HandlerFactoryTest.dll to your \\bin directory.\nImports System\nImports System.Web\n\nNamespace test    \n    \n    &#39; Factory class that creates a handler object based on a request \n    &#39; for either abc.aspx or xyz.aspx as specified in the Web.config file.\n    Public Class MyFactory\n        Implements IHttpHandlerFactory\n        \n        &lt;System.Security.Permissions.PermissionSetAttribute(System.Security.Permissions.SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n        Public Overridable Function GetHandler(context As HttpContext, _\n        requestType As String, url As String, pathTranslated As String) _\n        As IHttpHandler _\n        Implements IHttpHandlerFactory.GetHandler\n        \n            Dim fname As String = url.Substring(url.LastIndexOf(&quot;/&quot;c) + 1)\n            Dim cname As String = fname.Substring(0, fname.IndexOf(&quot;.&quot;c))\n            Dim className As String = &quot;test.&quot; &amp; cname\n            \n            Dim h As Object = Nothing\n            \n            Try &#39; to create the handler object.\n                &#39; Create by calling class abc or class xyz.\n                h = Activator.CreateInstance(Type.GetType(className))\n            Catch e As Exception\n                Throw New HttpException(&quot;Factory couldn&#39;t create instance &quot; &amp; _\n                    &quot;of type &quot; &amp; className, e)\n            End Try\n            Return CType(h, IHttpHandler)\n        End Function\n        \n        \n        &#39; This is a must override method.\n        Public Overridable Sub ReleaseHandler(handler As IHttpHandler) _\n        Implements IHttpHandlerFactory.ReleaseHandler\n        \n        End Sub\n        \n    End Class\n    \n    \n    &#39; Class definition for abc.aspx handler.\n    Public Class abc\n        Implements IHttpHandler\n        \n        Public Overridable Sub ProcessRequest(context As HttpContext) _\n        Implements IHttpHandler.ProcessRequest\n        \n            context.Response.Write(&quot;&lt;html&gt;&lt;body&gt;&quot;)\n            context.Response.Write(&quot;&lt;p&gt;ABC Handler&lt;/p&gt;&quot; &amp; _\n                Microsoft.VisualBasic.ControlChars.CrLf)\n            context.Response.Write(&quot;&lt;/body&gt;&lt;/html&gt;&quot;)\n        End Sub        \n        \n        Public Overridable ReadOnly Property IsReusable() As Boolean _\n        Implements IHttpHandler.IsReusable\n        \n            Get\n                Return True\n            End Get\n        End Property\n    End Class\n     \n    &#39; Class definition for xyz.aspx handler.\n    Public Class xyz\n        Implements IHttpHandler\n        \n        Public Overridable Sub ProcessRequest(context As HttpContext) _\n        Implements IHttpHandler.ProcessRequest\n        \n            context.Response.Write(&quot;&lt;html&gt;&lt;body&gt;&quot;)\n            context.Response.Write(&quot;&lt;p&gt;XYZ Handler&lt;/p&gt;&quot; &amp; _\n                Microsoft.VisualBasic.ControlChars.CrLf)\n            context.Response.Write(&quot;&lt;/body&gt;&lt;/html&gt;&quot;)\n        End Sub\n        \n        \n        Public Overridable ReadOnly Property IsReusable() As Boolean _\n        Implements IHttpHandler.IsReusable\n        \n            Get\n                Return True\n            End Get\n        End Property\n    End Class\nEnd Namespace\n\n&#39;______________________________________________________________\n&#39;\n&#39;To use the handler factory, use the following lines in a\n&#39;Web.config file. (be sure to remove the comment markers)\n&#39;\n&#39;&lt;configuration&gt;\n&#39;   &lt;system.web&gt;\n&#39;      &lt;httpHandlers&gt;\n&#39;         &lt;add verb=&quot;*&quot; path=&quot;abc.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;\n&#39;         &lt;add verb=&quot;*&quot; path=&quot;xyz.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;\n&#39;      &lt;/httpHandlers&gt;\n&#39;   &lt;/system.web&gt;\n&#39;&lt;/configuration&gt;\n\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic IHttpHandlerFactory.GetHandler Example#1\">// Name this C# file HandlerFactoryTest.cs and compile it with the\n// command line: csc /t:Library /r:System.Web.dll HandlerFactoryTest.cs.\n// Copy HandlerFactoryTest.dll to your \\bin directory.\n\nnamespace test\n{\n   using System;\n   using System.Web;\n\n   // Factory class that creates a handler object based on a request \n   // for either abc.aspx or xyz.aspx as specified in the Web.config file.\n   public class MyFactory : IHttpHandlerFactory\n   {\n      [System.Security.Permissions.PermissionSet(System.Security.Permissions.SecurityAction.Demand, Name = &quot;FullTrust&quot;)]\n      public virtual IHttpHandler GetHandler(HttpContext context, \n                                             String requestType, \n                                             String url, \n                                             String pathTranslated)\n      {\n         String fname = url.Substring(url.LastIndexOf(&#39;/&#39;)+1);\n         String cname = fname.Substring(0, fname.IndexOf(&#39;.&#39;));\n         String className = &quot;test.&quot; + cname;\n\n         Object h = null;\n\n         // Try to create the handler object.\n         try \n         {\n            // Create the handler by calling class abc or class xyz.\n            h = Activator.CreateInstance(Type.GetType(className));\n         }\n         catch(Exception e)\n         {\n            throw new HttpException(&quot;Factory couldn&#39;t create instance &quot; +\n                                    &quot;of type &quot; + className, e);\n         }\n         return (IHttpHandler)h;\n      }\n\n      // This is a must override method.\n      public virtual void ReleaseHandler(IHttpHandler handler)\n      {\n      }\n   }\n   \n   // Class definition for abc.aspx handler.\n   public class abc : IHttpHandler\n   {\n      public virtual void ProcessRequest(HttpContext context)\n      {\n         context.Response.Write(&quot;&lt;html&gt;&lt;body&gt;&quot;);\n         context.Response.Write(&quot;&lt;p&gt;ABC Handler&lt;/p&gt;<br>&quot;);\n         context.Response.Write(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);\n      }\n    \n      public virtual bool IsReusable\n      {\n         get { return true; }\n      }\n   }\n\n   // Class definition for xyz.aspx handler.\n   public class xyz : IHttpHandler\n   {\n      public virtual void ProcessRequest(HttpContext context)\n      {\n         context.Response.Write(&quot;&lt;html&gt;&lt;body&gt;&quot;);\n         context.Response.Write(&quot;&lt;p&gt;XYZ Handler&lt;/p&gt;<br>&quot;);\n         context.Response.Write(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);\n      }\n    \n      public virtual bool IsReusable\n      {\n         get { return true; }\n      }\n   }\n}\n\n/*\n______________________________________________________________\n\nTo use the handler factory, use the following lines in a \nWeb.config file.\n\n&lt;configuration&gt;\n   &lt;system.web&gt;\n      &lt;httpHandlers&gt;\n         &lt;add verb=&quot;*&quot; path=&quot;abc.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;\n         &lt;add verb=&quot;*&quot; path=&quot;xyz.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;\n      &lt;/httpHandlers&gt;     \n   &lt;/system.web&gt;\n&lt;/configuration&gt;\n*/\n   \n</code></pre><p>The second part of the example shows a Web.config file excerpt. To use the above handler factory, add the following lines to the Web.config file.  </p>\n</li>\n</ul>\n<pre><code>&lt;configuration&gt;   \n  &lt;system.web&gt;   \n    &lt;httpHandlers&gt;   \n      &lt;add verb=&quot;*&quot; path=&quot;abc.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;   \n      &lt;add verb=&quot;*&quot; path=&quot;xyz.aspx&quot; type=&quot;test.MyFactory,HandlerFactoryTest&quot; /&gt;   \n    &lt;/httpHandlers&gt;   \n  &lt;/system.web&gt;  \n&lt;/configuration&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_IHttpHandlerFactory_ReleaseHandler_System_Web_IHttpHandler_\">\r\n    \r\n            <a id=\"System_Web_IHttpHandlerFactory_ReleaseHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHandler(IHttpHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Enables a factory to reuse an existing handler instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseHandler (System.Web.IHttpHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ihttphandler\" data-linktype=\"relative-path\">IHttpHandler</a> object to reuse.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.IHttpHandlerFactory.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.IHttpHandlerFactory.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.IHttpHandlerFactory\">\r\n<meta name=\"APIName\" content=\"System.Web.IHttpHandlerFactory.GetHandler\">\r\n<meta name=\"APIName\" content=\"System.Web.IHttpHandlerFactory.ReleaseHandler\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"22eba612-44ab-d1d6-2407-162eeeb90327\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\IHttpHandlerFactory.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the contract that class factories must implement to create new  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.IHttpHandlerFactory\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.IHttpHandlerFactory.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.IHttpHandlerFactory.yml","open_to_public_contributors":true,"api_name":["System.Web.IHttpHandlerFactory","System.Web.IHttpHandlerFactory.GetHandler","System.Web.IHttpHandlerFactory.ReleaseHandler"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.IHttpHandlerFactory","System::Web::IHttpHandlerFactory","System.Web.IHttpHandlerFactory.GetHandler","System::Web::IHttpHandlerFactory::GetHandler","System.Web.IHttpHandlerFactory.ReleaseHandler","System::Web::IHttpHandlerFactory::ReleaseHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"22eba612-44ab-d1d6-2407-162eeeb90327","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\IHttpHandlerFactory.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web/IHttpHandlerFactory.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IHttpHandlerFactory interface | Microsoft Docs","_op_ogTitle":"IHttpHandlerFactory interface","description":"Defines the contract that class factories must implement to create new  objects.\n","toc_asset_id":"_splitted/System.Web/toc.json","toc_rel":"_splitted/System.Web/toc.json","source_url":"","ms.assetid":"System.Web.IHttpHandlerFactory","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ihttphandlerfactory","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ihttphandlerfactory","fileRelativePath":"System.Web.IHttpHandlerFactory.html"},"themesRelativePathToOutputRoot":"_themes/"}