{"content":"    \r\n    <h1 id=\"System_Xaml_XamlMember\">\r\n      <span class=\"lang-csharp\">XamlMember</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <a class=\"xref\" href=\"system.xaml.xamlnodetype\" data-linktype=\"relative-path\">XamlNodeType</a>) and also for general XAML type system logic.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XamlMember</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XamlMember can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the <code>Lookup*</code> API that is provided by possible XamlMember subclasses. For most uses of .NET Framework XAML Services APIs and the XamlMember API, you use the default XAML schema context. The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system. This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.  </p>\n<h2 id=\"lookup-apis-and-xamlmember-derived-classes\">Lookup* APIs and XamlMember Derived Classes</h2>\n<p> XamlMember defines several virtual members that derived classes might override. These members have names that always start with the string <code>Lookup</code>. The remainder of the API name then references the property that the virtual method influences. For example, a XamlMember derived class might override <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTargetType_\" data-linktype=\"relative-path\">LookupTargetType</a> to influence what the base-defined property <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TargetType_\" data-linktype=\"relative-path\">TargetType</a> returns in a derived class. You can predict return values for such properties in XamlMember or existing derived classes by reading the documentation for the relevant <code>Lookup*</code> methods.  </p>\n<p> The purpose of the <code>Lookup*</code> methods is to provide a XAML type system extension technique that incorporates the XamlMember base class. By deriving from XamlMember and overriding the <code>Lookup</code> virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology. You can also use a provided XAML schema context under this scheme and still return the results you want.  </p>\n<p> As an example, consider the XamlMember property <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWritePublic_\" data-linktype=\"relative-path\">IsWritePublic</a>. This property informs callers that operations such as using a <a class=\"xref\" href=\"system.xaml.xamlwriter\" data-linktype=\"relative-path\">XamlWriter</a> for serialization can write a value for this member on a target object. In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and its members (the <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>). Therefore, by default, the XAML type system depends on the CLR type system. However, you can remove this dependency for your XAML type system reporting of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWritePublic_\" data-linktype=\"relative-path\">IsWritePublic</a> by overriding the API <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsWritePublic_\" data-linktype=\"relative-path\">LookupIsWritePublic</a>. Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.  </p>\n<h2 id=\"constructing-xamlmember-without-xaml-schema-context\">Constructing XamlMember Without XAML Schema Context</h2>\n<p> Most constructors of XamlMember require a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> as part of their initialization. The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> is also necessary for many internal <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> operations, such as obtaining information that is being forwarded from the backing type. When you are working with the XamlMember API, you typically have a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> that is available from a surrounding construct such as a <a class=\"xref\" href=\"system.xaml.xamlwriter\" data-linktype=\"relative-path\">XamlWriter</a>. In this case, you can pass the <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> reference through to all XAML type system calls that require a XAML schema context.  </p>\n<p> One specific constructor, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember__ctor_System_String_System_Xaml_XamlType_System_Boolean_\" data-linktype=\"relative-path\">XamlMember(String,XamlType,Boolean)</a>, does not require a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>. However, a XamlMember that is constructed with the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember__ctor_System_String_System_Xaml_XamlType_System_Boolean_\" data-linktype=\"relative-path\">XamlMember(String,XamlType,Boolean)</a> signature returns <code>true</code> for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a>.  </p>\n<p> For a load path that involves <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, such a member cannot be written into an object graph. Using the .NET Framework XAML services implementation, the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter#System_Xaml_XamlObjectWriter_WriteStartMember_\" data-linktype=\"relative-path\">WriteStartMember</a> call throws a <a class=\"xref\" href=\"system.xaml.xamlobjectwriterexception\" data-linktype=\"relative-path\">XamlObjectWriterException</a> when the relevant XamlMember reports <code>true</code> for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a>.  </p>\n<p> You should not construct a XamlMember that has a value of <code>true</code> for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a> unless your implementation can handle the exceptions from <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, or you have other ways to adjust the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a> behavior. For example, one or more of the  following might be true of your implementation:  </p>\n<ul>\n<li><p>The XAML schema context is available later.  </p>\n</li>\n<li><p>You use a member invoker pattern.  </p>\n</li>\n<li><p>You deliberately override <a class=\"xref\" href=\"system.xaml.xamlobjectwriter#System_Xaml_XamlObjectWriter_WriteStartMember_\" data-linktype=\"relative-path\">WriteStartMember</a> in a custom XAML writer.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_Reflection_EventInfo_System_Xaml_XamlSchemaContext_\" data-linktype=\"self-bookmark\">XamlMember(EventInfo,XamlSchemaContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_Reflection_PropertyInfo_System_Xaml_XamlSchemaContext_\" data-linktype=\"self-bookmark\">XamlMember(PropertyInfo,XamlSchemaContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_Reflection_EventInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\" data-linktype=\"self-bookmark\">XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_Reflection_PropertyInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\" data-linktype=\"self-bookmark\">XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using reflection <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_\" data-linktype=\"self-bookmark\">XamlMember(String,MethodInfo,XamlSchemaContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_String_System_Xaml_XamlType_System_Boolean_\" data-linktype=\"self-bookmark\">XamlMember(String,XamlType,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using a string name and declaring <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> information. A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that is constructed with this signature has significant limitations; see Remarks.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_\" data-linktype=\"self-bookmark\">XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\" data-linktype=\"self-bookmark\">XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable event, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\" data-linktype=\"self-bookmark\">XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable property, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_DeclaringType\" data-linktype=\"self-bookmark\">DeclaringType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for the type that declares the member that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_DeferringLoader\" data-linktype=\"self-bookmark\">DeferringLoader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for deferred loading of XAML declared objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_DependsOn\" data-linktype=\"self-bookmark\">DependsOn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. These report the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_Invoker\" data-linktype=\"self-bookmark\">Invoker</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsAmbient\" data-linktype=\"self-bookmark\">IsAmbient</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsAttachable\" data-linktype=\"self-bookmark\">IsAttachable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is an attachable member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsDirective\" data-linktype=\"self-bookmark\">IsDirective</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is a XAML directive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsEvent\" data-linktype=\"self-bookmark\">IsEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsNameValid\" data-linktype=\"self-bookmark\">IsNameValid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is initialized with a valid <code>xamlName</code> string as its <span class=\"xref\">stem.Xaml.XamlMember.Name*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a read-only member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsReadPublic\" data-linktype=\"self-bookmark\">IsReadPublic</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member with a callable public <code>get</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsUnknown\" data-linktype=\"self-bookmark\">IsUnknown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsWriteOnly\" data-linktype=\"self-bookmark\">IsWriteOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a write-only member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_IsWritePublic\" data-linktype=\"self-bookmark\">IsWritePublic</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a callable public <code>set</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <code>xamlName</code> name string that declares this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_PreferredXamlNamespace\" data-linktype=\"self-bookmark\">PreferredXamlNamespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the single XAML namespace URI that identifies the primary XAML namespace for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_SerializationVisibility\" data-linktype=\"self-bookmark\">SerializationVisibility</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.componentmodel.designerserializationvisibility\" data-linktype=\"relative-path\">DesignerSerializationVisibility</a> value, which indicates how a visual designer should process the member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_TargetType\" data-linktype=\"self-bookmark\">TargetType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_TypeConverter\" data-linktype=\"self-bookmark\">TypeConverter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which can be used for type conversion construction of XAML declared objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_UnderlyingMember\" data-linktype=\"self-bookmark\">UnderlyingMember</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is available for a member that is constructed by <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a>, <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a>, or <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_ValueSerializer\" data-linktype=\"self-bookmark\">ValueSerializer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for value serialization of XAML declared objects.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the current object is equal to another object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_Equals_System_Xaml_XamlMember_\" data-linktype=\"self-bookmark\">Equals(XamlMember)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the current object is equal to another object of the same type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_GetXamlNamespaces\" data-linktype=\"self-bookmark\">GetXamlNamespaces()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a list of XAML namespaces where this XAML member can exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupCustomAttributeProvider\" data-linktype=\"self-bookmark\">LookupCustomAttributeProvider()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, returns an <a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a> implementation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupDeferringLoader\" data-linktype=\"self-bookmark\">LookupDeferringLoader()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for deferred loading of XAML declared objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupDependsOn\" data-linktype=\"self-bookmark\">LookupDependsOn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupInvoker\" data-linktype=\"self-bookmark\">LookupInvoker()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsAmbient\" data-linktype=\"self-bookmark\">LookupIsAmbient()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsEvent\" data-linktype=\"self-bookmark\">LookupIsEvent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsReadOnly\" data-linktype=\"self-bookmark\">LookupIsReadOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an intended read-only property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsReadPublic\" data-linktype=\"self-bookmark\">LookupIsReadPublic()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a property that has a public <code>get</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsUnknown\" data-linktype=\"self-bookmark\">LookupIsUnknown()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsWriteOnly\" data-linktype=\"self-bookmark\">LookupIsWriteOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a public <code>set</code> accessor but not a public <code>get</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupIsWritePublic\" data-linktype=\"self-bookmark\">LookupIsWritePublic()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a public <code>set</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupTargetType\" data-linktype=\"self-bookmark\">LookupTargetType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupType\" data-linktype=\"self-bookmark\">LookupType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member. See Remarks.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupTypeConverter\" data-linktype=\"self-bookmark\">LookupTypeConverter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a type converter implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupUnderlyingGetter\" data-linktype=\"self-bookmark\">LookupUnderlyingGetter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>get</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupUnderlyingMember\" data-linktype=\"self-bookmark\">LookupUnderlyingMember()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupUnderlyingSetter\" data-linktype=\"self-bookmark\">LookupUnderlyingSetter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>set</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_LookupValueSerializer\" data-linktype=\"self-bookmark\">LookupValueSerializer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value serializer implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_op_Equality_System_Xaml_XamlMember_System_Xaml_XamlMember_\" data-linktype=\"self-bookmark\">op_Equality(XamlMember,XamlMember)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects have the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlMember_op_Inequality_System_Xaml_XamlMember_System_Xaml_XamlMember_\" data-linktype=\"self-bookmark\">op_Inequality(XamlMember,XamlMember)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects have different values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_Reflection_EventInfo_System_Xaml_XamlSchemaContext_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(EventInfo,XamlSchemaContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> that represents the event member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an event (event handler connection-point property).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_Reflection_PropertyInfo_System_Xaml_XamlSchemaContext_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(PropertyInfo,XamlSchemaContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> that represents the property member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents a property (and specifically is not an event handler connection).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_Reflection_EventInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a> that represents the event member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invoker</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that handles run-time reflection calls against the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an event (or an event handler connection-point property).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_Reflection_PropertyInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using reflection <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and a <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a>, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> that represents the property member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invoker</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that handles run-time invocation calls against the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor only if the member represents a property and if it is not an event handler connection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(String,MethodInfo,XamlSchemaContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attachableEventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string name of the attachable event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>adder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the handler <code>Add</code> method of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an attachable event member.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_String_System_Xaml_XamlType_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(String,XamlType,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class using a string name and declaring <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> information. A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that is constructed with this signature has significant limitations; see Remarks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string name of the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>declaringType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> information for the declaring type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isAttachable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the member is attachable; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> or <code>declaringType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that is constructed with the XamlMember signature returns <code>true</code> for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a>.  </p>\n<p> For a load path that involves <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, such a member cannot be written into an object graph. Using the .NET Framework XAML Services implementation, the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter#System_Xaml_XamlObjectWriter_WriteStartMember_\" data-linktype=\"relative-path\">WriteStartMember</a> call throws a <a class=\"xref\" href=\"system.xaml.xamlobjectwriterexception\" data-linktype=\"relative-path\">XamlObjectWriterException</a> when the relevant <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> reports <code>true</code> for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a>.  </p>\n<p> You should not construct a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> with <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a><code>true</code> unless your implementation can handle the exceptions from <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, or you have other ways to adjust the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a> behavior. For example, one or more of the following might be true of your implementation:  </p>\n<ul>\n<li><p>The XAML schema context is available later.  </p>\n</li>\n<li><p>You use a member invoker pattern.  </p>\n</li>\n<li><p>You deliberately override <a class=\"xref\" href=\"system.xaml.xamlobjectwriter#System_Xaml_XamlObjectWriter_WriteStartMember_\" data-linktype=\"relative-path\">WriteStartMember</a> in a custom XAML writer.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attachablePropertyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string name of the attachable property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>getter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the <code>get</code> accessor of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>setter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the <code>set</code> accessor of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an attachable property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable event, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attachableEventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string name of the attachable event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>adder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the handler <code>Add</code> method of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invoker</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that handles run-time invocation calls against the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an attachable event member.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember__ctor_System_String_System_Reflection_MethodInfo_System_Reflection_MethodInfo_System_Xaml_XamlSchemaContext_System_Xaml_Schema_XamlMemberInvoker_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> class for a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that represents an attachable property, including <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attachablePropertyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string name of the attachable property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>getter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the <code>get</code> accessor of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>setter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The CLR type system <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the <code>set</code> accessor of the attachable member&#39;s backing implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamlschemacontext\" data-linktype=\"relative-path\">XamlSchemaContext</a> context that qualifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invoker</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that handles run-time invocation calls against the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor if the member represents an attachable property member.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_DeclaringType\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_DeclaringType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeclaringType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for the type that declares the member that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.XamlType DeclaringType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for the type that declares the member that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value is typically set during initialization and is usually not <code>null</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> DeclaringType information can be passed in by constructors for initialization. By calling directly into base constructors, initialization for <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived classes can omit some of the value-checks that are made in the base class. Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration. For any security-critical checks of declaring type information, use the underlying CLR type instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_DeferringLoader\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_DeferringLoader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeferringLoader</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for deferred loading of XAML declared objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> with <a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a> constraint on the generic.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling DeferringLoader invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupDeferringLoader_\" data-linktype=\"relative-path\">LookupDeferringLoader</a> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_DependsOn\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_DependsOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependsOn</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. These report the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>&gt;</div>\r\n                  </div>\r\n                  <p>A list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling DependsOn invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupDependsOn_\" data-linktype=\"relative-path\">LookupDependsOn</a> or a specific override of that method. This behavior occurs in cases where the initial internal reflection logic has not already set the information.  </p>\n<p> The <code>DependsOn</code> pattern can be applied to object model cases that deliberately contradict a general XAML rule. The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order. By applying a <code>DependsOn</code> pattern to a member, you can instruct XAML writers to always process the referenced member before this member. You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.  </p>\n<p> The <code>DependsOn</code> pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose. Large numbers of dependencies have the potential to slow down XAML processing. Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.  </p>\n<p> Example <code>DependsOn</code> scenarios from WPF include certain properties on <a class=\"xref\" href=\"system.windows.controls.controltemplate\" data-linktype=\"relative-path\">ControlTemplate</a> and <a class=\"xref\" href=\"system.windows.datatemplate\" data-linktype=\"relative-path\">DataTemplate</a>, on <a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a>, and on <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_Invoker\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_Invoker_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoker</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Invoker</code> pattern is an advanced XAML type system extension technique. The <code>Invoker</code> pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.  </p>\n<p> If a <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupInvoker_\" data-linktype=\"relative-path\">LookupInvoker</a> override returns <code>null</code>, or if the default implementation returns <code>null</code> because it lacks the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>, the Invoker property returns <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker#System_Xaml_Schema_XamlMemberInvoker_UnknownInvoker_\" data-linktype=\"relative-path\">UnknownInvoker</a>.  </p>\n<p> <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker#System_Xaml_Schema_XamlMemberInvoker_UnknownInvoker_\" data-linktype=\"relative-path\">UnknownInvoker</a> is the default. This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override <code>Invoker</code> patterns are passed for construction of XAML type system entities.  </p>\n<p> Calling Invoker invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupInvoker_\" data-linktype=\"relative-path\">LookupInvoker</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsAmbient\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsAmbient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAmbient</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAmbient { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling IsAmbient invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsAmbient_\" data-linktype=\"relative-path\">LookupIsAmbient</a> or a specific override of that method. This behavior occurs in implementations where the initial internal reflection logic has not already set the information.  </p>\n<p> Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a>. The default implementation of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsAmbient_\" data-linktype=\"relative-path\">LookupIsAmbient</a> uses this existing <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> technique, and it returns <code>true</code> if <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> exists on a member declaration.  </p>\n<p> <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> is found on members of several WPF types, which include <a class=\"xref\" href=\"system.windows.application\" data-linktype=\"relative-path\">Application</a>, <a class=\"xref\" href=\"system.windows.setter\" data-linktype=\"relative-path\">Setter</a>, and <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>. It is also found on the <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a> type, which connotes that any member that uses <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a> as its type should be considered ambient even if the member is not specifically attributed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsAttachable\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsAttachable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAttachable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is an attachable member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAttachable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is an attachable member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsAttachable value is initialized based on which constructor was used to construct a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsDirective\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsDirective_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDirective</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is a XAML directive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDirective { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is a XAML directive; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsDirective value is initialized based on which constructor was used to construct a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>. The base <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> constructors initialize so that IsDirective is <code>false</code>. However, the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> class (a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class) initializes so that IsDirective is <code>true</code>.  </p>\n<p> If you want to report IsDirective as <code>true</code> to callers of a custom XAML schema class for XAML members, make sure you derive from <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> because that is the only way to enable that behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsEvent\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEvent</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEvent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling IsEvent invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsEvent_\" data-linktype=\"relative-path\">LookupIsEvent</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsNameValid\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsNameValid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNameValid</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is initialized with a valid <code>xamlName</code> string as its <span class=\"xref\">stem.Xaml.XamlMember.Name*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsNameValid { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is initialized with a valid <code>xamlName</code> string; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsReadOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a read-only member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a read-only member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling IsReadOnly invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsReadOnly_\" data-linktype=\"relative-path\">LookupIsReadOnly</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsReadPublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsReadPublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadPublic</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member with a callable public <code>get</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadPublic { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a callable public <code>get</code> accessor; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsReadPublic value checks whether the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> is public. If <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> is nonpublic, the <code>get</code> accessor is not callable in a practical way, and IsReadPublic returns <code>false</code>.  </p>\n<p> Calling IsReadPublic invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsReadPublic_\" data-linktype=\"relative-path\">LookupIsReadPublic</a> or a specific override of that method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsReadPublic_\" data-linktype=\"relative-path\">LookupIsReadPublic</a> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsUnknown\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsUnknown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUnknown</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUnknown { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the member is not resolvable; <code>false</code> if the member is resolvable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that is constructed with the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember__ctor_System_String_System_Xaml_XamlType_System_Boolean_\" data-linktype=\"relative-path\">XamlMember(String,XamlType,Boolean)</a> signature returns <code>true</code> for IsUnknown.  </p>\n<p> For a load path that involves <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> with <code>true</code> for IsUnknown cannot be written into an object graph. Under the default implementations in .NET Framework XAML Services APIs, the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter#System_Xaml_XamlObjectWriter_WriteStartMember_\" data-linktype=\"relative-path\">WriteStartMember</a> call throws a <a class=\"xref\" href=\"system.xaml.xamlobjectwriterexception\" data-linktype=\"relative-path\">XamlObjectWriterException</a> when the relevant <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> reports <code>true</code> for IsUnknown.  </p>\n<p> You should not construct a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that has a value of <code>true</code> for IsUnknown unless your implementation can handle the exceptions from <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a>, or you have other ways to adjust the <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a> behavior.  </p>\n<p> Calling IsUnknown invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsUnknown_\" data-linktype=\"relative-path\">LookupIsUnknown</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsWriteOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsWriteOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWriteOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a write-only member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsWriteOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a write-only member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling IsWriteOnly invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsWriteOnly_\" data-linktype=\"relative-path\">LookupIsWriteOnly</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_IsWritePublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_IsWritePublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWritePublic</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a callable public <code>set</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsWritePublic { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a callable public <code>set</code> accessor; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsWritePublic value considers whether the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> is public as part of the determination. If <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> is nonpublic, the <code>set</code> accessor is not callable in a practical way, and IsWritePublic returns <code>false</code>.  </p>\n<p> Calling IsWritePublic invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsWritePublic_\" data-linktype=\"relative-path\">LookupIsWritePublic</a> or a specific override of that method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupIsWritePublic_\" data-linktype=\"relative-path\">LookupIsWritePublic</a> method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_Name\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <code>xamlName</code> name string that declares this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>xamlName</code> name string that declares this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value is always set during construction. The constructors that are implemented by <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be <code>null</code> or an empty string, if you are using default .NET Framework XAML Services implementations.  </p>\n<p> <a href=\"../Topic/XamlName%20Grammar.md\" data-linktype=\"relative-path\">XamlName Grammar</a> and naming rules for CLR type and members are not an exact intersect. It is possible to declare a member name that is legal under CLR but not valid under XAML naming. You should avoid this situation if possible.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_PreferredXamlNamespace\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_PreferredXamlNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredXamlNamespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets the single XAML namespace URI that identifies the primary XAML namespace for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PreferredXamlNamespace { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The identifier for the primary XAML namespace for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>, as a string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PreferredXamlNamespace property provides the same value as calling <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_GetXamlNamespaces_\" data-linktype=\"relative-path\">GetXamlNamespaces</a> and then getting the first value string from the returned list. The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_SerializationVisibility\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_SerializationVisibility_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializationVisibility</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.componentmodel.designerserializationvisibility\" data-linktype=\"relative-path\">DesignerSerializationVisibility</a> value, which indicates how a visual designer should process the member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.designerserializationvisibility\" data-linktype=\"relative-path\">DesignerSerializationVisibility</a></div>\r\n                  </div>\r\n                  <p>A value of the <a class=\"xref\" href=\"system.componentmodel.designerserializationvisibility\" data-linktype=\"relative-path\">DesignerSerializationVisibility</a> enumeration. The default is <a class=\"xref\" href=\"system.componentmodel.designerserializationvisibility\" data-linktype=\"relative-path\">DesignerSerializationVisibility</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_TargetType\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_TargetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TargetType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.XamlType TargetType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The returned value is different for attachable and non-attachable members. For non-attachable members, TargetType returns <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a>. For attachable members, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTargetType_\" data-linktype=\"relative-path\">LookupTargetType</a> returns a result that is based on this logic:  </p>\n<ul>\n<li><p>If reflection cannot resolve a backing (<a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a> <code>true</code>), this method returns an internal constant that represents a generic object type.  </p>\n</li>\n<li><p>If the previous condition does not apply, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTargetType_\" data-linktype=\"relative-path\">LookupTargetType</a> is called. The default implementation returns a <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that is based on examining the methods that implement the <code>get</code> and <code>set</code> accessors. A class might override <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTargetType_\" data-linktype=\"relative-path\">LookupTargetType</a> to use a different behavior such as other metadata forms that might report target types for attachable members.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_Type\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.XamlType Type { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Type invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupType_\" data-linktype=\"relative-path\">LookupType</a> or a specific override of that method. This occurs when the initial internal reflection logic has not already set the information.  </p>\n<p> In the default behavior (no <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupType_\" data-linktype=\"relative-path\">LookupType</a> override), the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> can have different conceptual meanings. Which meaning applies depends on whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a property, method, or event, as the following list shows:  </p>\n<ul>\n<li><p>For a property, the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the type that sets the property or is returned by the property.  </p>\n</li>\n<li><p>For an event, the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the required event handler type (a delegate in a CLR implementation).  </p>\n</li>\n<li><p>For a method, <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the return type of that method, which may be <code>null</code>.  </p>\n<p>In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_TypeConverter\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_TypeConverter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeConverter</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which can be used for type conversion construction of XAML declared objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> value, with a <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> constraint on the generic. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling TypeConverter invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTypeConverter_\" data-linktype=\"relative-path\">LookupTypeConverter</a> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  </p>\n<p> Implementations that return a non-null property value for TypeConverter are not necessarily a working <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>. The following is a list of possible non-null return values for TypeConverter and what these values represent:  </p>\n<ul>\n<li><p>The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter. This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.  </p>\n</li>\n<li><p>The return value reports a built-in value converter. These converters exist for certain internal operations that are performed by a XAML writer. In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives. For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly. For example, a conversion for an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value has built-in forwarded conversion, and therefore, the <a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1#System_Xaml_Schema_XamlValueConverter_1_ConverterType_\" data-linktype=\"relative-path\">ConverterType</a> value references <a class=\"xref\" href=\"system.componentmodel.int32converter\" data-linktype=\"relative-path\">Int32Converter</a>.  </p>\n</li>\n<li><p>The return value reports the special case of an unconstrained object model; that is, the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> has a <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> value of <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. In this case, the <a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter&lt;TConverterBase&gt;</a> reports that the <a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1#System_Xaml_Schema_XamlValueConverter_1_Name_\" data-linktype=\"relative-path\">Name</a> is {<code>Object}</code>. However, <a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1#System_Xaml_Schema_XamlValueConverter_1_ConverterInstance_\" data-linktype=\"relative-path\">ConverterInstance</a> is <code>null</code> because no actual type or instance is available to perform this conversion. Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.  </p>\n<p>If you can access a working <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> from <a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1#System_Xaml_Schema_XamlValueConverter_1_ConverterInstance_\" data-linktype=\"relative-path\">ConverterInstance</a>, you can invoke its conversion methods. However, many conversion methods rely on service context. If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_UnderlyingMember\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_UnderlyingMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnderlyingMember</div>        \r\n          </div>\r\n    \r\n            <p>Gets the CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is available for a member that is constructed by <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a>, <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a>, or <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.MemberInfo UnderlyingMember { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a></div>\r\n                  </div>\r\n                  <p>CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> information, as cast from the initial constructor parameters. A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> that is constructed with the <span class=\"xref\">stem.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)</span> signature returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling UnderlyingMember invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingMember_\" data-linktype=\"relative-path\">LookupUnderlyingMember</a> or a specific override of that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_ValueSerializer\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_ValueSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValueSerializer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for value serialization of XAML declared objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> with <a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a> constraint on the generic.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling ValueSerializer invokes <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupValueSerializer_\" data-linktype=\"relative-path\">LookupValueSerializer</a> or a specific override of that method. This behavior occurs when the initial internal reflection logic has not already set the information.  </p>\n<p> Not all cases that return a non-null property value for ValueSerializer are necessarily a working <a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a>. See Remarks in <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TypeConverter_\" data-linktype=\"relative-path\">TypeConverter</a>; the same considerations apply to ValueSerializer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the current object is equal to another object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current object is equal to the <code>obj</code> parameter; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_Equals_System_Xaml_XamlMember_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(XamlMember)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the current object is equal to another object of the same type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Xaml.XamlMember other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare with this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current object is equal to the <code>other</code> parameter; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_GetHashCode\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_GetXamlNamespaces\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_GetXamlNamespaces_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXamlNamespaces()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a list of XAML namespaces where this XAML member can exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>A list of XAML namespace identifiers as strings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns the <a class=\"xref\" href=\"system.xaml.xamltype#System_Xaml_XamlType_GetXamlNamespaces_\" data-linktype=\"relative-path\">GetXamlNamespaces</a> call result from the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupCustomAttributeProvider\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupCustomAttributeProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupCustomAttributeProvider()</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, returns an <a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a> implementation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a> implementation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values. In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <a class=\"xref\" href=\"system.reflection.customattributedata#System_Reflection_CustomAttributeData_GetCustomAttributes_\" data-linktype=\"relative-path\">GetCustomAttributes</a>.  </p>\n<p> The default implementation returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupDeferringLoader\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupDeferringLoader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupDeferringLoader()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used for deferred loading of XAML declared objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> that has a <a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a> constraint on the generic.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is invoked when a caller gets a value from the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeferringLoader_\" data-linktype=\"relative-path\">DeferringLoader</a> property. Override this method if you want <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeferringLoader_\" data-linktype=\"relative-path\">DeferringLoader</a> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.  </p>\n<p> The default implementation returns an object either by reading <a class=\"xref\" href=\"system.windows.markup.xamldeferloadattribute\" data-linktype=\"relative-path\">XamlDeferLoadAttribute</a> or using a <a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a> from the declaring type. If neither object is available, this method might return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupDependsOn\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupDependsOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupDependsOn()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. Items in the list report the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>&gt;</div>\r\n                  </div>\r\n                  <p>A list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is invoked when a caller gets a value from the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DependsOn_\" data-linktype=\"relative-path\">DependsOn</a> property. Override this method if you want <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DependsOn_\" data-linktype=\"relative-path\">DependsOn</a> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.  </p>\n<p> The WPF XAML reader and writer implementations attribute this case with <a class=\"xref\" href=\"system.windows.markup.dependsonattribute\" data-linktype=\"relative-path\">DependsOnAttribute</a>. The default implementation uses this existing <a class=\"xref\" href=\"system.windows.markup.dependsonattribute\" data-linktype=\"relative-path\">DependsOnAttribute</a> technique.  </p>\n<p> Override this method if you are not using <a class=\"xref\" href=\"system.windows.markup.dependsonattribute\" data-linktype=\"relative-path\">DependsOnAttribute</a> for this purpose and intend to replace that technique for indicating property processing order with your own technique. If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.  </p>\n<p> The list is read-only.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupInvoker\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupInvoker_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupInvoker()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is invoked by calls to <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Invoker_\" data-linktype=\"relative-path\">Invoker</a>.  </p>\n<p> The default implementation does not require that a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> be constructed by using one of the constructors that pass an initial <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a>. However, an <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> value must exist for the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>; otherwise, the default implementation returns <code>null</code>.  </p>\n<p> Override this method if you also derive from <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> and intend to return the derived class. If you return <code>null</code>, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Invoker_\" data-linktype=\"relative-path\">Invoker</a> returns <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker#System_Xaml_Schema_XamlMemberInvoker_UnknownInvoker_\" data-linktype=\"relative-path\">UnknownInvoker</a> to callers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsAmbient\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsAmbient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsAmbient()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsAmbient ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to report this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> as an ambient property; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is invoked by internal calls that check for ambient XAML property information. Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers. The internal calls that reference LookupIsAmbient are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly. The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types. Specifically, the default implementation checks for <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> and returns <code>true</code> for LookupIsAmbient if <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> exists on a member definition.  </p>\n<p> Override this method if you are not using <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.  </p>\n<p> Example APIs from WPF that attribute with <a class=\"xref\" href=\"system.windows.markup.ambientattribute\" data-linktype=\"relative-path\">AmbientAttribute</a> are <a class=\"xref\" href=\"system.windows.trigger#System_Windows_Trigger_Property_\" data-linktype=\"relative-path\">Property</a> and <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_BasedOn_\" data-linktype=\"relative-path\">BasedOn</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsEvent\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsEvent()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsEvent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to report that this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an event; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation checks whether <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> is of type <a class=\"xref\" href=\"system.reflection.eventinfo\" data-linktype=\"relative-path\">EventInfo</a>, and if it is, returns <code>true</code>.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsEvent_\" data-linktype=\"relative-path\">IsEvent</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsReadOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsReadOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents an intended read-only property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsReadOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to report this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> as an intended read-only property; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns <code>true</code> if <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> exists, but a public <code>set</code> accessor does not exist for it, as determined by internal reflection.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsReadPublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsReadPublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsReadPublic()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a property that has a public <code>get</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsReadPublic ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a property that has a public <code>get</code> accessor; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns results based either on internal reflection or the negation of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWriteOnly_\" data-linktype=\"relative-path\">IsWriteOnly</a>, processing in that order.  </p>\n<p> LookupIsReadPublic returns whether the member itself is public; it returns <code>true</code> for a public member on a nonpublic declaring type. Use <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadPublic_\" data-linktype=\"relative-path\">IsReadPublic</a> instead, if you also want to consider the visibility of the declaring type.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadPublic_\" data-linktype=\"relative-path\">IsReadPublic</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The LookupIsReadPublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsUnknown\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsUnknown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsUnknown()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsUnknown ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a non-resolvable member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method may be invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a>. The default implementation returns results that are based on either internal reflection or checking for a <code>null</code> value of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a>, processing in that order.  </p>\n<p> Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsWriteOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsWriteOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsWriteOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a public <code>set</code> accessor but not a public <code>get</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsWriteOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a write-only member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns <code>true</code> if an <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> exists that has a public <code>set</code> accessor and a nonpublic <code>get</code> accessor, as determined by internal reflection.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWriteOnly_\" data-linktype=\"relative-path\">IsWriteOnly</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupIsWritePublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupIsWritePublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsWritePublic()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a member that has a public <code>set</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool LookupIsWritePublic ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a writable member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns results based  either internal reflection or the negation of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a>, processing in that order.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWritePublic_\" data-linktype=\"relative-path\">IsWritePublic</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The LookupIsWritePublic method is virtual and therefore, can be overridden. The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration. For any security-critical checks of access levels, use the underlying CLR type instead.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupTargetType\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupTargetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupTargetType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.XamlType LookupTargetType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation distinguishes between attachable and non-attachable members. For non-attachable members, LookupTargetType always returns <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a>. For attachable members, LookupTargetType returns a result based on examining the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> accessor parameter type and interprets that type based on XAML schema context.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TargetType_\" data-linktype=\"relative-path\">TargetType</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupType\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member. See Remarks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.XamlType LookupType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a>. Override this method if you want <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information.  </p>\n<p> The default implementation uses different code paths and conceptual meanings for the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that is based on whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> represents a property, method, or event.  </p>\n<ul>\n<li><p>For a property, the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the type that sets the property or is returned by the property.  </p>\n</li>\n<li><p>For an event, the returned <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the required event handler type (a delegate in a CLR implementation).  </p>\n</li>\n<li><p>For a method, <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> is the return type.  </p>\n<p>In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.  </p>\n<p>This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupTypeConverter\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupTypeConverter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupTypeConverter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a type converter implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> instance with <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> constraint; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation uses the following logic and processing order:  </p>\n<ul>\n<li><p>If attributing exists at the member level (<a class=\"xref\" href=\"system.componentmodel.typeconverterattribute\" data-linktype=\"relative-path\">TypeConverterAttribute</a>), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.  </p>\n</li>\n<li><p>If <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> is valid, a type converter that is associated with the type is returned.  </p>\n</li>\n<li><p>If the member is an event, an event-specific type converter is returned.  </p>\n<p>This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TypeConverter_\" data-linktype=\"relative-path\">TypeConverter</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupUnderlyingGetter\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupUnderlyingGetter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingGetter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>get</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the associated <code>get</code> accessor; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation interprets the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> property as <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and returns the value of <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetGetMethod_\" data-linktype=\"relative-path\">GetGetMethod</a> (with the parameter set to <code>true</code>), which means that the returned method can be nonpublic. This behavior can result in <code>null</code> for certain cases. including cases where no associated accessor exists or the member is not a property.  </p>\n<p> This method is invoked when a caller gets a value from the <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker#System_Xaml_Schema_XamlMemberInvoker_UnderlyingGetter_\" data-linktype=\"relative-path\">UnderlyingGetter</a> property on an associated <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement LookupUnderlyingGetter, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingSetter_\" data-linktype=\"relative-path\">LookupUnderlyingSetter</a>, and <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingMember_\" data-linktype=\"relative-path\">LookupUnderlyingMember</a> so that they all return correlated results.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupUnderlyingMember\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupUnderlyingMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingMember()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a></div>\r\n                  </div>\r\n                  <p>A CLR type system <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> object that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns the underlying member information, which is based on construction. If the <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns <code>null</code>.  </p>\n<p> If an underlying member was set during construction, you should not need to call this method.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingGetter_\" data-linktype=\"relative-path\">LookupUnderlyingGetter</a>, <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingSetter_\" data-linktype=\"relative-path\">LookupUnderlyingSetter</a>, and LookupUnderlyingMember so that they all return correlated results.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupUnderlyingSetter\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupUnderlyingSetter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingSetter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>set</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for the associated <code>set</code> accessor; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation interprets <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a> as <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> and returns the value of <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetSetMethod_\" data-linktype=\"relative-path\">GetSetMethod</a> (with the parameter set to <code>true</code>), which means that the returned method can be nonpublic. This can result in <code>null</code> for certain cases, including cases where there is no such accessor, or the member is not a property.  </p>\n<p> This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker#System_Xaml_Schema_XamlMemberInvoker_UnderlyingSetter_\" data-linktype=\"relative-path\">UnderlyingSetter</a> on an associated <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a>.Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis. Make sure to implement <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingGetter_\" data-linktype=\"relative-path\">LookupUnderlyingGetter</a>, LookupUnderlyingSetter, and <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupUnderlyingMember_\" data-linktype=\"relative-path\">LookupUnderlyingMember</a> so that they all return correlated results.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_LookupValueSerializer\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_LookupValueSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupValueSerializer()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value serializer implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> instance with <a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a> constraint, or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation uses the following logic and processing order:  </p>\n<ul>\n<li><p>If attributing exists at the member level (<a class=\"xref\" href=\"system.windows.markup.valueserializerattribute\" data-linktype=\"relative-path\">ValueSerializerAttribute</a>), the attribute information is used for a call to &lt;xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A&gt; against the XAML schema context.  </p>\n</li>\n<li><p>If <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> is valid, a value converter that is associated with the type is returned.  </p>\n</li>\n<li><p>If the previous conditions do not apply, <code>null</code> is returned.  </p>\n<p>This method is invoked when a caller gets a value from <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_ValueSerializer_\" data-linktype=\"relative-path\">ValueSerializer</a>. Override this method if you want to report uniform results for an entire <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> derived class, or if you have specialized metadata available to determine this on a per-case basis.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_ToString\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This implementation returns <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Name_\" data-linktype=\"relative-path\">Name</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_op_Equality_System_Xaml_XamlMember_System_Xaml_XamlMember_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(XamlMember,XamlMember)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects have the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlMember1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> or <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlMember2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of <code>xamlMember1</code> is the same as the value of <code>xamlMember2</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlMember_op_Inequality_System_Xaml_XamlMember_System_Xaml_XamlMember_\">\r\n    \r\n            <a id=\"System_Xaml_XamlMember_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(XamlMember,XamlMember)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects have different values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlMember1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> or <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlMember2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of <code>xamlMember1</code> differs from the value of <code>xamlMember2</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.XamlMember.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.XamlMember.yml\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.DeclaringType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.DeferringLoader\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.DependsOn\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.Equals\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.GetXamlNamespaces\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.Invoker\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsAmbient\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsAttachable\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsDirective\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsEvent\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsNameValid\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsReadPublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsUnknown\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsWriteOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.IsWritePublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupCustomAttributeProvider\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupDeferringLoader\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupDependsOn\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupInvoker\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsAmbient\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsEvent\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsReadPublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsUnknown\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsWriteOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupIsWritePublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupTargetType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupTypeConverter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupUnderlyingGetter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupUnderlyingMember\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupUnderlyingSetter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.LookupValueSerializer\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.Name\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.PreferredXamlNamespace\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.SerializationVisibility\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.TargetType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.ToString\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.Type\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.TypeConverter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.UnderlyingMember\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlMember.ValueSerializer\">\r\n<meta name=\"APILocation\" content=\"System.Xaml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"71d10098-dc22-296d-21bf-6a4e30519ccd\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xaml\\XamlMember.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on aâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xaml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xaml.XamlMember\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.XamlMember.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.XamlMember.yml","open_to_public_contributors":true,"api_name":["System.Xaml.XamlMember","System.Xaml.XamlMember..ctor","System.Xaml.XamlMember.DeclaringType","System.Xaml.XamlMember.DeferringLoader","System.Xaml.XamlMember.DependsOn","System.Xaml.XamlMember.Equals","System.Xaml.XamlMember.GetHashCode","System.Xaml.XamlMember.GetXamlNamespaces","System.Xaml.XamlMember.Invoker","System.Xaml.XamlMember.IsAmbient","System.Xaml.XamlMember.IsAttachable","System.Xaml.XamlMember.IsDirective","System.Xaml.XamlMember.IsEvent","System.Xaml.XamlMember.IsNameValid","System.Xaml.XamlMember.IsReadOnly","System.Xaml.XamlMember.IsReadPublic","System.Xaml.XamlMember.IsUnknown","System.Xaml.XamlMember.IsWriteOnly","System.Xaml.XamlMember.IsWritePublic","System.Xaml.XamlMember.LookupCustomAttributeProvider","System.Xaml.XamlMember.LookupDeferringLoader","System.Xaml.XamlMember.LookupDependsOn","System.Xaml.XamlMember.LookupInvoker","System.Xaml.XamlMember.LookupIsAmbient","System.Xaml.XamlMember.LookupIsEvent","System.Xaml.XamlMember.LookupIsReadOnly","System.Xaml.XamlMember.LookupIsReadPublic","System.Xaml.XamlMember.LookupIsUnknown","System.Xaml.XamlMember.LookupIsWriteOnly","System.Xaml.XamlMember.LookupIsWritePublic","System.Xaml.XamlMember.LookupTargetType","System.Xaml.XamlMember.LookupType","System.Xaml.XamlMember.LookupTypeConverter","System.Xaml.XamlMember.LookupUnderlyingGetter","System.Xaml.XamlMember.LookupUnderlyingMember","System.Xaml.XamlMember.LookupUnderlyingSetter","System.Xaml.XamlMember.LookupValueSerializer","System.Xaml.XamlMember.Name","System.Xaml.XamlMember.op_Equality","System.Xaml.XamlMember.op_op_Equality","System.Xaml.XamlMember.op_Inequality","System.Xaml.XamlMember.op_op_Inequality","System.Xaml.XamlMember.PreferredXamlNamespace","System.Xaml.XamlMember.SerializationVisibility","System.Xaml.XamlMember.TargetType","System.Xaml.XamlMember.ToString","System.Xaml.XamlMember.Type","System.Xaml.XamlMember.TypeConverter","System.Xaml.XamlMember.UnderlyingMember","System.Xaml.XamlMember.ValueSerializer"],"api_location":["System.Xaml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xaml.XamlMember","System::Xaml::XamlMember","System.Xaml.XamlMember.#ctor","System::Xaml::XamlMember::#ctor","System.Xaml.XamlMember.DeclaringType","System::Xaml::XamlMember::DeclaringType","System.Xaml.XamlMember.DeferringLoader","System::Xaml::XamlMember::DeferringLoader","System.Xaml.XamlMember.DependsOn","System::Xaml::XamlMember::DependsOn","System.Xaml.XamlMember.Equals","System::Xaml::XamlMember::Equals","System.Xaml.XamlMember.GetHashCode","System::Xaml::XamlMember::GetHashCode","System.Xaml.XamlMember.GetXamlNamespaces","System::Xaml::XamlMember::GetXamlNamespaces","System.Xaml.XamlMember.Invoker","System::Xaml::XamlMember::Invoker","System.Xaml.XamlMember.IsAmbient","System::Xaml::XamlMember::IsAmbient","System.Xaml.XamlMember.IsAttachable","System::Xaml::XamlMember::IsAttachable","System.Xaml.XamlMember.IsDirective","System::Xaml::XamlMember::IsDirective","System.Xaml.XamlMember.IsEvent","System::Xaml::XamlMember::IsEvent","System.Xaml.XamlMember.IsNameValid","System::Xaml::XamlMember::IsNameValid","System.Xaml.XamlMember.IsReadOnly","System::Xaml::XamlMember::IsReadOnly","System.Xaml.XamlMember.IsReadPublic","System::Xaml::XamlMember::IsReadPublic","System.Xaml.XamlMember.IsUnknown","System::Xaml::XamlMember::IsUnknown","System.Xaml.XamlMember.IsWriteOnly","System::Xaml::XamlMember::IsWriteOnly","System.Xaml.XamlMember.IsWritePublic","System::Xaml::XamlMember::IsWritePublic","System.Xaml.XamlMember.LookupCustomAttributeProvider","System::Xaml::XamlMember::LookupCustomAttributeProvider","System.Xaml.XamlMember.LookupDeferringLoader","System::Xaml::XamlMember::LookupDeferringLoader","System.Xaml.XamlMember.LookupDependsOn","System::Xaml::XamlMember::LookupDependsOn","System.Xaml.XamlMember.LookupInvoker","System::Xaml::XamlMember::LookupInvoker","System.Xaml.XamlMember.LookupIsAmbient","System::Xaml::XamlMember::LookupIsAmbient","System.Xaml.XamlMember.LookupIsEvent","System::Xaml::XamlMember::LookupIsEvent","System.Xaml.XamlMember.LookupIsReadOnly","System::Xaml::XamlMember::LookupIsReadOnly","System.Xaml.XamlMember.LookupIsReadPublic","System::Xaml::XamlMember::LookupIsReadPublic","System.Xaml.XamlMember.LookupIsUnknown","System::Xaml::XamlMember::LookupIsUnknown","System.Xaml.XamlMember.LookupIsWriteOnly","System::Xaml::XamlMember::LookupIsWriteOnly","System.Xaml.XamlMember.LookupIsWritePublic","System::Xaml::XamlMember::LookupIsWritePublic","System.Xaml.XamlMember.LookupTargetType","System::Xaml::XamlMember::LookupTargetType","System.Xaml.XamlMember.LookupType","System::Xaml::XamlMember::LookupType","System.Xaml.XamlMember.LookupTypeConverter","System::Xaml::XamlMember::LookupTypeConverter","System.Xaml.XamlMember.LookupUnderlyingGetter","System::Xaml::XamlMember::LookupUnderlyingGetter","System.Xaml.XamlMember.LookupUnderlyingMember","System::Xaml::XamlMember::LookupUnderlyingMember","System.Xaml.XamlMember.LookupUnderlyingSetter","System::Xaml::XamlMember::LookupUnderlyingSetter","System.Xaml.XamlMember.LookupValueSerializer","System::Xaml::XamlMember::LookupValueSerializer","System.Xaml.XamlMember.Name","System::Xaml::XamlMember::Name","System.Xaml.XamlMember.op_Equality","System::Xaml::XamlMember::op_Equality","System.Xaml.XamlMember.op_Inequality","System::Xaml::XamlMember::op_Inequality","System.Xaml.XamlMember.PreferredXamlNamespace","System::Xaml::XamlMember::PreferredXamlNamespace","System.Xaml.XamlMember.SerializationVisibility","System::Xaml::XamlMember::SerializationVisibility","System.Xaml.XamlMember.TargetType","System::Xaml::XamlMember::TargetType","System.Xaml.XamlMember.ToString","System::Xaml::XamlMember::ToString","System.Xaml.XamlMember.Type","System::Xaml::XamlMember::Type","System.Xaml.XamlMember.TypeConverter","System::Xaml::XamlMember::TypeConverter","System.Xaml.XamlMember.UnderlyingMember","System::Xaml::XamlMember::UnderlyingMember","System.Xaml.XamlMember.ValueSerializer","System::Xaml::XamlMember::ValueSerializer"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"71d10098-dc22-296d-21bf-6a4e30519ccd","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xaml\\XamlMember.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xaml/XamlMember.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XamlMember class | Microsoft Docs","_op_ogTitle":"XamlMember class","description":"Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on aâ€¦","toc_asset_id":"_splitted/System.Xaml/toc.json","toc_rel":"_splitted/System.Xaml/toc.json","source_url":"","ms.assetid":"System.Xaml.XamlMember","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.xamlmember","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.xamlmember","fileRelativePath":"System.Xaml.XamlMember.html"},"themesRelativePathToOutputRoot":"_themes/"}