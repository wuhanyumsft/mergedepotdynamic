{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">CacheDependency</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Establishes a dependency relationship between an item stored in an ASP.NET application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class CacheDependency : IDisposable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">CacheDependency</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes. For example, suppose you create a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object based on data in an XML file. You can add the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the cache with a CacheDependency object that makes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> dependent on the XML file. If the XML file changes, the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is removed from the cache.  </p>\n<p> You can add items with dependencies to your application&#39;s cache with the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Add_\" data-linktype=\"relative-path\">Add</a> and <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> methods. You cannot use the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Item_\" data-linktype=\"relative-path\">Item</a> property to add items to the cache with dependencies.  </p>\n<p> To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Add_\" data-linktype=\"relative-path\">Add</a> or <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method. The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object).</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected CacheDependency ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you want to derive your own class from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>, implement this version of the CacheDependency constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string filename);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filename</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the directory or file specified in the <code>filename</code> parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when the directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object.  </p>\n<p> Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> is dependent on.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string filename, DateTime start);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filename</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>start</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time against which to check the last modified date of the directory or file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the directory or file specified in the <code>filename</code> parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when the directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <code>filename</code> parameter. If the last modified date is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[],DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames, DateTime start);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>start</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time against which to check the last modified date of the objects in the array.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <code>filenames</code> parameter. If the last modified date of any object in the array is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[],String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames, string[] cachekeys);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cachekeys</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[],String[],DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cachekeys</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>start</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time against which to check the last modified date of the objects passed in the <code>filenames</code> and <code>cachekeys</code> arrays.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <code>filenames</code> or <code>cachekeys</code> parameters. If the last modified date of any of those objects is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[],String[],CacheDependency)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cachekeys</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dependency</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that this instance is dependent upon.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CacheDependency(String[],String[],CacheDependency,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and a time when the change monitoring begins.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>filenames</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>cachekeys</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dependency</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that this instance is dependent upon.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>start</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time against which to check the last modified date of the objects in the arrays and the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <code>filenames</code>, <code>cachekeys</code>, or <code>dependency</code> parameters. If the last modified date for any of those objects is later than the date and time passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_HasChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasChanged { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object has changed; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can add an item to an ASP.NET application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>. When the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> changes, the item added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> is invalidated and removed from the cache. You can use this property to determine whether a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> has changed, and recreate the item in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> if that has occurred.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_UtcLastModified\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UtcLastModified</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the time when the dependency was last changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime UtcLastModified { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time when the dependency was last changed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_DependencyDispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DependencyDispose()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and any classes that derive from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void DependencyDispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Any class that derives from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class is required to implement this method to clean up resources the derived class has used.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_Dispose\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Dispose ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_FinishInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FinishInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Completes initialization of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void FinishInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The FinishInit method completes the initialization of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object. This method is called by all <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> constructors.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_GetFileDependencies\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetFileDependencies()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the file dependencies.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string[] GetFileDependencies ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file dependencies.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_GetUniqueID\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetUniqueID()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a unique identifier for a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual string GetUniqueID ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The unique identifier for the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be particularly useful for tracking multiple instances of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class associated with an item or an application.  </p>\n<p> The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency. In classes that derive from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class, you can override this method to customize how it generates the unique identifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_NotifyDependencyChanged_System_Object_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NotifyDependencyChanged(Object,EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Notifies the base <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object that the dependency represented by a derived <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class has changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void NotifyDependencyChanged (object sender, EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sender</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Any class that derives from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class must implement this method.  </p>\n<p> When you derive from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class, you use the base functionality of any method or property that you have not overridden. When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon. When a dependency item changes, this method notifies the base functionality of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that the item has changed, so that the values of the <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_HasChanged_\" data-linktype=\"relative-path\">HasChanged</a> and <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_UtcLastModified_\" data-linktype=\"relative-path\">UtcLastModified</a> properties can be updated.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Web_Caching_CacheDependency_SetUtcLastModified_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetUtcLastModified(DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Marks the time when a dependency last changed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void SetUtcLastModified (DateTime utcLastModified);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>utcLastModified</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time when the dependency last changed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Caching.CacheDependency.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Caching.CacheDependency.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.DependencyDispose\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.FinishInit\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.GetFileDependencies\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.GetUniqueID\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.HasChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.NotifyDependencyChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.SetUtcLastModified\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.UtcLastModified\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d3c5d8aa-6c05-1586-9dc5-b57efb775105\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Establishes a dependency relationship between an item stored in an ASP.NET application&amp;#39;s  object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Caching/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Caching.CacheDependency\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Caching.CacheDependency.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Caching.CacheDependency.yml","open_to_public_contributors":true,"api_name":["System.Web.Caching.CacheDependency","System.Web.Caching.CacheDependency..ctor","System.Web.Caching.CacheDependency.DependencyDispose","System.Web.Caching.CacheDependency.Dispose","System.Web.Caching.CacheDependency.FinishInit","System.Web.Caching.CacheDependency.GetFileDependencies","System.Web.Caching.CacheDependency.GetUniqueID","System.Web.Caching.CacheDependency.HasChanged","System.Web.Caching.CacheDependency.NotifyDependencyChanged","System.Web.Caching.CacheDependency.SetUtcLastModified","System.Web.Caching.CacheDependency.UtcLastModified"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Caching.CacheDependency","System::Web::Caching::CacheDependency","System.Web.Caching.CacheDependency.#ctor","System::Web::Caching::CacheDependency::#ctor","System.Web.Caching.CacheDependency.DependencyDispose","System::Web::Caching::CacheDependency::DependencyDispose","System.Web.Caching.CacheDependency.Dispose","System::Web::Caching::CacheDependency::Dispose","System.Web.Caching.CacheDependency.FinishInit","System::Web::Caching::CacheDependency::FinishInit","System.Web.Caching.CacheDependency.GetFileDependencies","System::Web::Caching::CacheDependency::GetFileDependencies","System.Web.Caching.CacheDependency.GetUniqueID","System::Web::Caching::CacheDependency::GetUniqueID","System.Web.Caching.CacheDependency.HasChanged","System::Web::Caching::CacheDependency::HasChanged","System.Web.Caching.CacheDependency.NotifyDependencyChanged","System::Web::Caching::CacheDependency::NotifyDependencyChanged","System.Web.Caching.CacheDependency.SetUtcLastModified","System::Web::Caching::CacheDependency::SetUtcLastModified","System.Web.Caching.CacheDependency.UtcLastModified","System::Web::Caching::CacheDependency::UtcLastModified"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d3c5d8aa-6c05-1586-9dc5-b57efb775105","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Caching/CacheDependency.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CacheDependency class | Microsoft Docs","_op_ogTitle":"CacheDependency class","description":"Establishes a dependency relationship between an item stored in an ASP.NET application&#39;s  object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency…","toc_asset_id":"_splitted/System.Web.Caching/toc.json","toc_rel":"_splitted/System.Web.Caching/toc.json","source_url":"","ms.assetid":"System.Web.Caching.CacheDependency","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.caching.cachedependency","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.caching.cachedependency","fileRelativePath":"System.Web.Caching.CacheDependency.html"},"themesRelativePathToOutputRoot":"_themes/"}