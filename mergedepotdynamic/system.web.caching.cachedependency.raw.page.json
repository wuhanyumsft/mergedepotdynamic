{"content":"    \r\n    <h1 id=\"System_Web_Caching_CacheDependency\">\r\n      <span class=\"lang-csharp\">CacheDependency</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Establishes a dependency relationship between an item stored in an ASP.NET application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependency class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class CacheDependency : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CacheDependency</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes. For example, suppose you create a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object based on data in an XML file. You can add the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the cache with a CacheDependency object that makes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> dependent on the XML file. If the XML file changes, the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is removed from the cache.  </p>\n<p> You can add items with dependencies to your application&#39;s cache with the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Add_\" data-linktype=\"relative-path\">Add</a> and <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> methods. You cannot use the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Item_\" data-linktype=\"relative-path\">Item</a> property to add items to the cache with dependencies.  </p>\n<p> To set up a dependency, you create an instance of the CacheDependency class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Add_\" data-linktype=\"relative-path\">Add</a> or <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method. The CacheDependency instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object).</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor\" data-linktype=\"self-bookmark\">CacheDependency()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String_\" data-linktype=\"self-bookmark\">CacheDependency(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___\" data-linktype=\"self-bookmark\">CacheDependency(String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String_System_DateTime_\" data-linktype=\"self-bookmark\">CacheDependency(String,DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___System_DateTime_\" data-linktype=\"self-bookmark\">CacheDependency(String[],DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___System_String___\" data-linktype=\"self-bookmark\">CacheDependency(String[],String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_DateTime_\" data-linktype=\"self-bookmark\">CacheDependency(String[],String[],DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_\" data-linktype=\"self-bookmark\">CacheDependency(String[],String[],CacheDependency)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_System_DateTime_\" data-linktype=\"self-bookmark\">CacheDependency(String[],String[],CacheDependency,DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and a time when the change monitoring begins.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_HasChanged\" data-linktype=\"self-bookmark\">HasChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_UtcLastModified\" data-linktype=\"self-bookmark\">UtcLastModified</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time when the dependency was last changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_DependencyDispose\" data-linktype=\"self-bookmark\">DependencyDispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and any classes that derive from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_FinishInit\" data-linktype=\"self-bookmark\">FinishInit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes initialization of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_GetFileDependencies\" data-linktype=\"self-bookmark\">GetFileDependencies()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the file dependencies.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_GetUniqueID\" data-linktype=\"self-bookmark\">GetUniqueID()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a unique identifier for a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_NotifyDependencyChanged_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">NotifyDependencyChanged(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the base <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object that the dependency represented by a derived <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Caching_CacheDependency_SetUtcLastModified_System_DateTime_\" data-linktype=\"self-bookmark\">SetUtcLastModified(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks the time when a dependency last changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected CacheDependency ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you want to derive your own class from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>, implement this version of the CacheDependency constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a class that implements this version of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> constructor as all classes that derive from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> are required to.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency_Whidbey_Example1#1\">   &#39; Declare the class.\n   Public Class CustomCacheDependency \n      Inherits CacheDependency\n\n        &#39; Constructor with no arguments \n        &#39; provided by CacheDependency class.\n        Public Sub New()\n        End Sub &#39; New\n      \n        &#39; Declare a Boolean field named disposedValue.\n        &#39; This will be used by Disposed property.\n        Private disposedValue As Boolean                \n        \n        &#39; Create accessors for the Disposed property.\n        Public Property Disposed As Boolean\n          Get\n              Return disposedValue\n          End Get\n          Set (ByVal value As Boolean)\n              disposedValue = value\n          End Set\n        End Property\n        \n        &#39; Create a public method that sets the latest\n        &#39; changed time of the CustomCacheDependency\n        &#39; and notifies the underlying CacheDependency that the \n        &#39; dependency has changed, even though the HasChanged\n        &#39; property is false.\n        Public Sub ResetDependency()\n           If Me.HasChanged = False              \n              SetUtcLastModified(DateTime.MinValue)\n              NotifyDependencyChanged(Me, EventArgs.Empty)\n           End If\n        End Sub\n        \n        &#39; Overrides the DependencyDispose method to set the\n        &#39; Disposed proerty to true. This method automatically\n        &#39; notifies the underlying CacheDependency object to \n        &#39; release any resources associated with this class. \n        Protected Overrides Sub DependencyDispose()\n           Disposed = True\n        End Sub\n        \n        \n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the directory or file specified in the <code>filename</code> parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when the directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class with a dependency on an XML file. The <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method then adds an item to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> that is dependent upon that file.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic CacheDependency.CacheDependency Example#1\">\tDim dep As New CacheDependency(Server.MapPath(&quot;isbn.xml&quot;))\n        Cache.Insert(&quot;ISBNData&quot;, Source, dep)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic CacheDependency.CacheDependency Example#1\">CacheDependency dep = new CacheDependency(Server.MapPath(&quot;isbn.xml&quot;));\nCache.Insert(&quot;ISBNData&quot;, Source, dep);\n   \n</code></pre><p> You can also use the following technique to add an item to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on a file.  </p>\n<pre><code class=\"lang-cs\" name=\"Single File Dependency Cache entry#1\">            // Make key1 dependent on a file.\n            CacheDependency dependency = new CacheDependency(Server.MapPath(&quot;isbn.xml&quot;));\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dependency);\n</code></pre><pre><code class=\"lang-vb\" name=\"Single File Dependency Cache entry#1\">            &#39; Make key1 dependent on a file.\n            Dim dependency as new CacheDependency(Server.MapPath(&quot;isbn.xml&quot;))\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dependency)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object.  </p>\n<p> Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> is dependent on.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method to add an item to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with dependencies on an array of files. You can also make the item dependent on an array of directories.  </p>\n<pre><code class=\"lang-vb\" name=\"Multiple file based dependency#1\">            &#39; Make key1 dependent on several files.\n            Dim files(2) as String\n            files(0) = Server.MapPath(&quot;isbn.xml&quot;)\n            files(1) = Server.MapPath(&quot;customer.xml&quot;)\n            Dim dependency as new CacheDependency(files)\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dependency)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"Multiple file based dependency#1\">            // Make key1 dependent on several files.\n            String[] files = new String[2];\n            files[0] = Server.MapPath(&quot;isbn.xml&quot;);\n            files[1] = Server.MapPath(&quot;customer.xml&quot;);\n            CacheDependency dependency = new CacheDependency(files);\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dependency);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String_System_DateTime_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String,DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors a file or directory for changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string filename, DateTime start);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>start</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time against which to check the last modified date of the directory or file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the directory or file specified in the <code>filename</code> parameter is not found in the file system, it will be treated as missing. If the directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when the directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <code>filename</code> parameter. If the last modified date is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this constructor to instantiate a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object, then inserts an item into the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with that dependency. The <code>dt</code> value passed in the <code>start</code> parameter is set to <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Caching.CacheDependency_HasChanged#1\">&#39; Insert the cache item.\nDim dep As New CacheDependency(fileName, dt)\nmyCache.Insert(&quot;key&quot;, &quot;value&quot;, dep)\n\n&#39; Check whether CacheDependency.HasChanged is true.\nIf dep.HasChanged Then\n   Response.Write(&quot;&lt;p&gt;The dependency has changed.&quot;)\nElse\n   Response.Write(&quot;&lt;p&gt;The dependency has not changed.&quot;)\nEnd If \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Caching.CacheDependency_HasChanged#1\">// Insert the cache item.\nCacheDependency dep = new CacheDependency(fileName, dt);\ncache.Insert(&quot;key&quot;, &quot;value&quot;, dep);\n\n// Check whether CacheDependency.HasChanged is true.\nif (dep.HasChanged)\n  Response.Write(&quot;&lt;p&gt;The dependency has changed.&quot;);  \nelse Response.Write(&quot;&lt;p&gt;The dependency has not changed.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_DateTime_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[],DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames, DateTime start);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>start</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time against which to check the last modified date of the objects in the array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <code>filenames</code> parameter. If the last modified date of any object in the array is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object that passes two XML files and a <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a> value when the object is included as a parameter argument in an <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method call.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency Constructor4#1\">            &#39; Create a DateTime object that determines\n            &#39;  when dependency monitoring begins.\n            Dim dt As DateTime = DateTime.Now\n\n            &#39; Make key1 dependent on several files.\n            Dim files(2) as String\n            files(0) = Server.MapPath(&quot;isbn.xml&quot;)\n            files(1) = Server.MapPath(&quot;customer.xml&quot;)\n            Dim dependency as new CacheDependency(files, dt)\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dependency)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"CacheDependency Constructor4#1\">        // Create a DateTime object that determines\n        // when dependency monitoring begins.\n        DateTime dt = DateTime.Now;\n            // Make key1 dependent on several files.\n            String[] files = new String[2];\n            files[0] = Server.MapPath(&quot;isbn.xml&quot;);\n            files[1] = Server.MapPath(&quot;customer.xml&quot;);\n            CacheDependency dep = new CacheDependency(files, dt);\n\n            Cache.Insert(&quot;key1&quot;, &quot;Value 1&quot;, dep);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[],String[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames, string[] cachekeys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cachekeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment demonstrates how to insert an item into your application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on a key to another item placed in the cache. Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> is dependent.  </p>\n<pre><code class=\"lang-vb\" name=\"Key based dependency#1\">    Public Sub CreateDependency(sender As Object, e As EventArgs)\n        &#39; Create a cache entry.\n        Cache(&quot;key1&quot;) = &quot;Value 1&quot;\n\n        &#39; Make key2 dependent on key1.\n        Dim dependencyKey(0) As String\n        dependencyKey(0) = &quot;key1&quot;\n        Dim dependency As new CacheDependency(Nothing, dependencyKey)\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dependency)\n\n        DisplayValues()\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Key based dependency#1\">    public void CreateDependency(Object sender, EventArgs e) {\n        // Create a cache entry.\n        Cache[&quot;key1&quot;] = &quot;Value 1&quot;;\n\n        // Make key2 dependent on key1.\n        String[] dependencyKey = new String[1];\n        dependencyKey[0] = &quot;key1&quot;;\n        CacheDependency dependency = new CacheDependency(null, dependencyKey);\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dependency);\n\n        DisplayValues();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_DateTime_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[],String[],DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cachekeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>start</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time against which to check the last modified date of the objects passed in the <code>filenames</code> and <code>cachekeys</code> arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <code>filenames</code> or <code>cachekeys</code> parameters. If the last modified date of any of those objects is later than the date and time set passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <code>CreateDependency</code> method. When this method is called, it creates a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object and the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Item_\" data-linktype=\"relative-path\">Item</a> property is used to add an item to the cache with a <code>key</code> parameter of <code>key1</code> and a value of <code>Value 1</code>. An array of strings, <code>dependencyKey</code>, is then created with the value of <code>key1</code> as well. This <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> constructor then instantiates a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object that passes <code>dependencyKey</code> and the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object as parameter arguments. The <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method is called next, using the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object as a parameter. This makes the object added to the cache using the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method dependent on the <code>key1</code> key.  </p>\n<pre><code class=\"lang-cs\" name=\"CacheDependency Constructor6#1\">    public void CreateDependency(Object sender, EventArgs e)\n    {\n        // Create a DateTime object.\n        DateTime dt = DateTime.Now.AddSeconds(10);\n\n        // Create a cache entry.\n        Cache[&quot;key1&quot;] = &quot;Value 1&quot;;\n\n        // Make key2 dependent on key1.\n        String[] dependencyKey = new String[1];\n        dependencyKey[0] = &quot;key1&quot;;\n        CacheDependency dependency = new CacheDependency(null, dependencyKey, dt);\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dependency);\n\n        DisplayValues();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"CacheDependency Constructor6#1\">    Public Sub CreateDependency(sender As Object, e As EventArgs)\n    &#39; Create a DateTime object.\n    Dim dt as DateTime = DateTime.Now.AddSeconds(10)        \n\n    &#39; Create a cache entry.\n        Cache(&quot;key1&quot;) = &quot;Value 1&quot;\n\n        &#39; Make key2 dependent on key1.\n        Dim dependencyKey(0) As String\n        dependencyKey(0) = &quot;key1&quot;\n        Dim dependency As new CacheDependency(Nothing, dependencyKey, dt)\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dependency)\n\n        DisplayValues()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[],String[],CacheDependency)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cachekeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dependency</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that this instance is dependent upon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <code>CreateDependency</code> method. When this method is called, it uses the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Item_\" data-linktype=\"relative-path\">Item</a> property to add an item to the cache with a <code>key</code> parameter of <code>key1</code> and a value of <code>Value 1</code>. An array of strings, <code>dependencyKey</code>, is then created with the value of <code>key1</code> as well. The <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency__ctor_\" data-linktype=\"relative-path\">CacheDependency</a> constructor is used to create a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object, <code>dep1</code>, which passes <code>dependencyKey</code> as a parameter argument. A second <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object, <code>dep2</code>, is created using this constructor, with <code>dep1</code> passed as the third parameter argument. This second dependency is dependent on the first. The <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method is called next, using the second <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object as a parameter. If the first dependency changes in any way, the cached item will be invalidated.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency Constructor7#1\">    Public Sub CreateDependency(sender As [Object], e As EventArgs)\n      &#39; Create a cache entry.\n      Cache(&quot;key1&quot;) = &quot;Value 1&quot;\n   \n      &#39; Make key2 dependent on key1 using double dependency.\n      Dim dependencyKey(0) As [String]\n      dependencyKey(0) = &quot;key1&quot;\n      Dim dep1 As New CacheDependency(Nothing, dependencyKey)\n   \n      &#39; Make a second CacheDependency dependent on dep1.        \n      Dim dep2 As New CacheDependency(Nothing, Nothing, dep1)\n   \n      Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dep2)\n   \n      DisplayValues()\n   End Sub &#39;CreateDependency\n</code></pre><pre><code class=\"lang-cs\" name=\"CacheDependency Constructor7#1\">    public void CreateDependency(Object sender, EventArgs e) {\n        // Create a cache entry.\n        Cache[&quot;key1&quot;] = &quot;Value 1&quot;;\n\n        // Make key2 dependent on key1.\n        String[] dependencyKey = new String[1];\n        dependencyKey[0] = &quot;key1&quot;;\n        CacheDependency dep1 = new CacheDependency(null, dependencyKey);\n\n        // Make a second CacheDependency dependent on dep1.        \n        CacheDependency dep2 = new CacheDependency(null, null, dep1);\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dep2);\n\n        DisplayValues();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency__ctor_System_String___System_String___System_Web_Caching_CacheDependency_System_DateTime_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheDependency(String[],String[],CacheDependency,DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and a time when the change monitoring begins.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cachekeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dependency</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Another instance of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that this instance is dependent upon.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>start</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time against which to check the last modified date of the objects in the arrays and the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Also, if any of the directories or files specified in the <code>filenames</code> parameter is not found in the file system, it is treated as missing. If a directory or file is missing when the object with the dependency is added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, the cached object will be removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> when that directory or file is created.  </p>\n<p> For example, assume that you add an object to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a dependency on the following file path: c:\\stocks\\xyz.dat. If that file is not found when the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Change tracking begins immediately and is not directly based on the <code>start</code> parameter. Use the <code>start</code> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <code>filenames</code>, <code>cachekeys</code>, or <code>dependency</code> parameters. If the last modified date for any of those objects is later than the date and time passed in the <code>start</code> parameter, the cached item is removed from the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a <code>CreateDependency</code> method. When this method is called, it creates a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object and the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Item_\" data-linktype=\"relative-path\">Item</a> property is used to add an item to the cache with a key parameter of <code>key1</code> and a value of <code>Value 1</code>. An array of strings, <code>dependencyKey</code>, is then created with the value at its first (and only) index set to the value of <code>key1</code> as well. The <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency__ctor_\" data-linktype=\"relative-path\">CacheDependency</a> constructor is then used to create a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object, <code>dep1</code>, which passes <code>dependencyKey</code> as a parameter argument. A second <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object, <code>dep2</code>, is then created using this constructor, with <code>dep1</code> and the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object passed as parameter arguments. This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the <code>CreateDependency</code> method is called. The <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method is called next, using the second <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object as a parameter. If the first dependency changes in any way, the cached item will be invalidated.  </p>\n<pre><code class=\"lang-cs\" name=\"CacheDependency Constructor8#1\">    public void CreateDependency(Object sender, EventArgs e) {\n        // Create a DateTime object.\n        DateTime dt = DateTime.Now.AddSeconds(10);\n\n        // Create a cache entry.\n        Cache[&quot;key1&quot;] = &quot;Value 1&quot;;\n\n        // Make key2 dependent on key1.\n        String[] dependencyKey = new String[1];\n        dependencyKey[0] = &quot;key1&quot;;\n        CacheDependency dep1 = new CacheDependency(null, dependencyKey);\n\n        // Make a second CacheDependency dependent on dep1.\n        // and use dt to start change monitoring.        \n        CacheDependency dep2 = new CacheDependency(null, null, dep1, dt);\n\n        Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dep2);\n\n        DisplayValues();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"CacheDependency Constructor8#1\">    Public Sub CreateDependency(sender As [Object], e As EventArgs)\n      &#39; Create a DateTime object.\n      Dim dt as DateTime = DateTime.Now.AddSeconds(10)        \n\n      &#39; Create a cache entry.\n      Cache(&quot;key1&quot;) = &quot;Value 1&quot;\n   \n      &#39; Make key2 dependent on key1 using double dependency.\n      Dim dependencyKey(0) As [String]\n      dependencyKey(0) = &quot;key1&quot;\n      Dim dep1 As New CacheDependency(Nothing, dependencyKey)\n   \n      &#39; Make a second CacheDependency dependent on dep1\n      &#39; and use dt to start change monitoring.        \n      Dim dep2 As New CacheDependency(Nothing, Nothing, dep1, dt)\n   \n      Cache.Insert(&quot;key2&quot;, &quot;Value 2&quot;, dep2)\n   \n      DisplayValues()\n   End Sub &#39;CreateDependency\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_HasChanged\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_HasChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasChanged</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasChanged { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object has changed; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can add an item to an ASP.NET application&#39;s <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> with a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>. When the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> changes, the item added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> is invalidated and removed from the cache. You can use this property to determine whether a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> has changed, and recreate the item in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> if that has occurred.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the HasChanged property to determine whether a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> changed since the previous request for an item in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>. The <code>dt</code> value passed in the <code>start</code> parameter is set to <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Caching.CacheDependency_HasChanged#1\">&#39; Insert the cache item.\nDim dep As New CacheDependency(fileName, dt)\nmyCache.Insert(&quot;key&quot;, &quot;value&quot;, dep)\n\n&#39; Check whether CacheDependency.HasChanged is true.\nIf dep.HasChanged Then\n   Response.Write(&quot;&lt;p&gt;The dependency has changed.&quot;)\nElse\n   Response.Write(&quot;&lt;p&gt;The dependency has not changed.&quot;)\nEnd If \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Caching.CacheDependency_HasChanged#1\">// Insert the cache item.\nCacheDependency dep = new CacheDependency(fileName, dt);\ncache.Insert(&quot;key&quot;, &quot;value&quot;, dep);\n\n// Check whether CacheDependency.HasChanged is true.\nif (dep.HasChanged)\n  Response.Write(&quot;&lt;p&gt;The dependency has changed.&quot;);  \nelse Response.Write(&quot;&lt;p&gt;The dependency has not changed.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_UtcLastModified\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_UtcLastModified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UtcLastModified</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time when the dependency was last changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime UtcLastModified { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The time when the dependency was last changed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.caching.aggregatecachedependency\" data-linktype=\"relative-path\">AggregateCacheDependency</a> class to add an item, with two <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object dependencies, to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>. When a request for the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> item is made, the code checks whether the item is in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>. If it is, the UtcLastModified property is converted to a string and displayed on the page. If it is not, the item and its two dependencies are created and added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"CachingSamples_AggregateCacheDependency1#2\">    &#39; When the page is loaded, use the \n    &#39; AggregateCacheDependency class to make \n    &#39; a cached item dependent on two files.\n    \n    Sub Page_Load(sender As Object, e As EventArgs)\n       Dim Source As DataView\n    \n       Source = Cache(&quot;XMLDataSet&quot;)\n    \n       If Source Is Nothing\n              Dim DS As New DataSet\n              Dim FS As FileStream\n              Dim Reader As StreamReader\n              Dim txtDep As CacheDependency\n              Dim xmlDep As CacheDependency\n              Dim aggDep As AggregateCacheDependency\n    \n    \n              FS = New FileStream(Server.MapPath(&quot;authors.xml&quot;),FileMode.Open,FileAccess.Read)\n              Reader = New StreamReader(FS)\n              DS.ReadXml(Reader)\n              FS.Close()\n    \n              Source = new DataView(ds.Tables(0))\n             &#39; Create two CacheDependency objects, one to a\n             &#39; text file and the other to an XML file. \n             &#39; Create a CacheDependency array with these \n             &#39; two objects as items in the array.\n              txtDep = New CacheDependency(Server.MapPath(&quot;Storage.txt&quot;))\n              xmlDep = New CacheDependency(Server.MapPath(&quot;authors.xml&quot;))\n              Dim DepArray() As CacheDependency = {txtDep, xmlDep}\n\n              &#39; Create an AggregateCacheDependency object and \n              &#39; use the Add method to add the array to it.   \n              aggDep = New AggregateCacheDependency()\n              aggDep.Add(DepArray)\n    \n              &#39; Call the GetUniqueId method to generate\n              &#39; an ID for each dependency in the array.\n              msg1.Text = aggDep.GetUniqueId()\n              \n              &#39; Add the new data set to the cache with \n              &#39; dependencies on both files in the array.\n              Cache.Insert(&quot;XMLDataSet&quot;, Source, aggDep)\n              If aggDep.HasChanged = True Then\n                 chngMsg.Text = &quot;The dependency changed at: &quot; &amp; DateTime.Now\n    \n              Else\n                 chngMsg.Text = &quot;The dependency changed last at: &quot; &amp; aggDep.UtcLastModified.ToString()\n              End If\n\n    \n              cacheMsg1.Text = &quot;Dataset created explicitly&quot;\n            Else\n              cacheMsg1.Text = &quot;Dataset retrieved from cache&quot;\n            End If\n    \n    \n              MyLiteral.Text = Source.Table.TableName\n              MyDataGrid.DataSource = Source\n              MyDataGrid.DataBind()\n          End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_DependencyDispose\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_DependencyDispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependencyDispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and any classes that derive from <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void DependencyDispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any class that derives from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class is required to implement this method to clean up resources the derived class has used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a class that inherits from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class and overrides the DependencyDispose method. When this method is called, it sets a custom Boolean property named <code>Disposed</code> to <code>true</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency_Whidbey_Example1#1\">   &#39; Declare the class.\n   Public Class CustomCacheDependency \n      Inherits CacheDependency\n\n        &#39; Constructor with no arguments \n        &#39; provided by CacheDependency class.\n        Public Sub New()\n        End Sub &#39; New\n      \n        &#39; Declare a Boolean field named disposedValue.\n        &#39; This will be used by Disposed property.\n        Private disposedValue As Boolean                \n        \n        &#39; Create accessors for the Disposed property.\n        Public Property Disposed As Boolean\n          Get\n              Return disposedValue\n          End Get\n          Set (ByVal value As Boolean)\n              disposedValue = value\n          End Set\n        End Property\n        \n        &#39; Create a public method that sets the latest\n        &#39; changed time of the CustomCacheDependency\n        &#39; and notifies the underlying CacheDependency that the \n        &#39; dependency has changed, even though the HasChanged\n        &#39; property is false.\n        Public Sub ResetDependency()\n           If Me.HasChanged = False              \n              SetUtcLastModified(DateTime.MinValue)\n              NotifyDependencyChanged(Me, EventArgs.Empty)\n           End If\n        End Sub\n        \n        &#39; Overrides the DependencyDispose method to set the\n        &#39; Disposed proerty to true. This method automatically\n        &#39; notifies the underlying CacheDependency object to \n        &#39; release any resources associated with this class. \n        Protected Overrides Sub DependencyDispose()\n           Disposed = True\n        End Sub\n        \n        \n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_Dispose\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the resources used by the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_FinishInit\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_FinishInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FinishInit()</div>        \r\n          </div>\r\n    \r\n            <p>Completes initialization of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void FinishInit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FinishInit method completes the initialization of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object. This method is called by all <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> constructors.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_GetFileDependencies\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_GetFileDependencies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFileDependencies()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the file dependencies.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string[] GetFileDependencies ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>The file dependencies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_GetUniqueID\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_GetUniqueID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUniqueID()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a unique identifier for a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetUniqueID ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The unique identifier for the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be particularly useful for tracking multiple instances of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class associated with an item or an application.  </p>\n<p> The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency. In classes that derive from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class, you can override this method to customize how it generates the unique identifier.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an <a class=\"xref\" href=\"system.web.caching.aggregatecachedependency\" data-linktype=\"relative-path\">AggregateCacheDependency</a> object, named <code>aggDep</code>, with two <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> objects in its array. Once <code>aggDep</code> is instantiated, the code calls the GetUniqueID method to generate a unique identifier for both dependencies that <code>aggDep</code> contains and displays the identifiers to the containing page. An item is then added to the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a>, using the <a class=\"xref\" href=\"system.web.caching.cache#System_Web_Caching_Cache_Insert_\" data-linktype=\"relative-path\">Insert</a> method, with <code>aggDep</code> as a dependency.  </p>\n<pre><code class=\"lang-vb\" name=\"CachingSamples_AggregateCacheDependency1#3\">             &#39; Create two CacheDependency objects, one to a\n             &#39; text file and the other to an XML file. \n             &#39; Create a CacheDependency array with these \n             &#39; two objects as items in the array.\n              txtDep = New CacheDependency(Server.MapPath(&quot;Storage.txt&quot;))\n              xmlDep = New CacheDependency(Server.MapPath(&quot;authors.xml&quot;))\n              Dim DepArray() As CacheDependency = {txtDep, xmlDep}\n\n              &#39; Create an AggregateCacheDependency object and \n              &#39; use the Add method to add the array to it.   \n              aggDep = New AggregateCacheDependency()\n              aggDep.Add(DepArray)\n    \n              &#39; Call the GetUniqueId method to generate\n              &#39; an ID for each dependency in the array.\n              msg1.Text = aggDep.GetUniqueId()\n              \n              &#39; Add the new data set to the cache with \n              &#39; dependencies on both files in the array.\n              Cache.Insert(&quot;XMLDataSet&quot;, Source, aggDep)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_NotifyDependencyChanged_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_NotifyDependencyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyDependencyChanged(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the base <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object that the dependency represented by a derived <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void NotifyDependencyChanged (object sender, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any class that derives from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class must implement this method.  </p>\n<p> When you derive from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class, you use the base functionality of any method or property that you have not overridden. When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon. When a dependency item changes, this method notifies the base functionality of the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class that the item has changed, so that the values of the <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_HasChanged_\" data-linktype=\"relative-path\">HasChanged</a> and <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_UtcLastModified_\" data-linktype=\"relative-path\">UtcLastModified</a> properties can be updated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a class that inherits from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class. It creates a public method, <code>ResetDependency</code>, that uses the <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_SetUtcLastModified_\" data-linktype=\"relative-path\">SetUtcLastModified</a> method to change the time at which the dependency was modified, and then calls the NotifyDependencyChanged method.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency_Whidbey_Example1#1\">   &#39; Declare the class.\n   Public Class CustomCacheDependency \n      Inherits CacheDependency\n\n        &#39; Constructor with no arguments \n        &#39; provided by CacheDependency class.\n        Public Sub New()\n        End Sub &#39; New\n      \n        &#39; Declare a Boolean field named disposedValue.\n        &#39; This will be used by Disposed property.\n        Private disposedValue As Boolean                \n        \n        &#39; Create accessors for the Disposed property.\n        Public Property Disposed As Boolean\n          Get\n              Return disposedValue\n          End Get\n          Set (ByVal value As Boolean)\n              disposedValue = value\n          End Set\n        End Property\n        \n        &#39; Create a public method that sets the latest\n        &#39; changed time of the CustomCacheDependency\n        &#39; and notifies the underlying CacheDependency that the \n        &#39; dependency has changed, even though the HasChanged\n        &#39; property is false.\n        Public Sub ResetDependency()\n           If Me.HasChanged = False              \n              SetUtcLastModified(DateTime.MinValue)\n              NotifyDependencyChanged(Me, EventArgs.Empty)\n           End If\n        End Sub\n        \n        &#39; Overrides the DependencyDispose method to set the\n        &#39; Disposed proerty to true. This method automatically\n        &#39; notifies the underlying CacheDependency object to \n        &#39; release any resources associated with this class. \n        Protected Overrides Sub DependencyDispose()\n           Disposed = True\n        End Sub\n        \n        \n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Caching_CacheDependency_SetUtcLastModified_System_DateTime_\">\r\n    \r\n            <a id=\"System_Web_Caching_CacheDependency_SetUtcLastModified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetUtcLastModified(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Marks the time when a dependency last changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void SetUtcLastModified (DateTime utcLastModified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>utcLastModified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time when the dependency last changed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a class that inherits from the <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> class. It creates a public method, <code>ResetDependency</code>, that uses the SetUtcLastModified method to change the time at which the dependency was modified, and then calls the <a class=\"xref\" href=\"system.web.caching.cachedependency#System_Web_Caching_CacheDependency_NotifyDependencyChanged_\" data-linktype=\"relative-path\">NotifyDependencyChanged</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"CacheDependency_Whidbey_Example1#1\">   &#39; Declare the class.\n   Public Class CustomCacheDependency \n      Inherits CacheDependency\n\n        &#39; Constructor with no arguments \n        &#39; provided by CacheDependency class.\n        Public Sub New()\n        End Sub &#39; New\n      \n        &#39; Declare a Boolean field named disposedValue.\n        &#39; This will be used by Disposed property.\n        Private disposedValue As Boolean                \n        \n        &#39; Create accessors for the Disposed property.\n        Public Property Disposed As Boolean\n          Get\n              Return disposedValue\n          End Get\n          Set (ByVal value As Boolean)\n              disposedValue = value\n          End Set\n        End Property\n        \n        &#39; Create a public method that sets the latest\n        &#39; changed time of the CustomCacheDependency\n        &#39; and notifies the underlying CacheDependency that the \n        &#39; dependency has changed, even though the HasChanged\n        &#39; property is false.\n        Public Sub ResetDependency()\n           If Me.HasChanged = False              \n              SetUtcLastModified(DateTime.MinValue)\n              NotifyDependencyChanged(Me, EventArgs.Empty)\n           End If\n        End Sub\n        \n        &#39; Overrides the DependencyDispose method to set the\n        &#39; Disposed proerty to true. This method automatically\n        &#39; notifies the underlying CacheDependency object to \n        &#39; release any resources associated with this class. \n        Protected Overrides Sub DependencyDispose()\n           Disposed = True\n        End Sub\n        \n        \n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Caching.CacheDependency.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Caching.CacheDependency.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.DependencyDispose\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.FinishInit\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.GetFileDependencies\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.GetUniqueID\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.HasChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.NotifyDependencyChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.SetUtcLastModified\">\r\n<meta name=\"APIName\" content=\"System.Web.Caching.CacheDependency.UtcLastModified\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d3c5d8aa-6c05-1586-9dc5-b57efb775105\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Caching\\CacheDependency.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Establishes a dependency relationship between an item stored in an ASP.NET application&amp;#39;s  object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependencyâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Caching/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Caching.CacheDependency\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Caching.CacheDependency.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Caching.CacheDependency.yml","open_to_public_contributors":true,"api_name":["System.Web.Caching.CacheDependency","System.Web.Caching.CacheDependency..ctor","System.Web.Caching.CacheDependency.DependencyDispose","System.Web.Caching.CacheDependency.Dispose","System.Web.Caching.CacheDependency.FinishInit","System.Web.Caching.CacheDependency.GetFileDependencies","System.Web.Caching.CacheDependency.GetUniqueID","System.Web.Caching.CacheDependency.HasChanged","System.Web.Caching.CacheDependency.NotifyDependencyChanged","System.Web.Caching.CacheDependency.SetUtcLastModified","System.Web.Caching.CacheDependency.UtcLastModified"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Caching.CacheDependency","System::Web::Caching::CacheDependency","System.Web.Caching.CacheDependency.#ctor","System::Web::Caching::CacheDependency::#ctor","System.Web.Caching.CacheDependency.DependencyDispose","System::Web::Caching::CacheDependency::DependencyDispose","System.Web.Caching.CacheDependency.Dispose","System::Web::Caching::CacheDependency::Dispose","System.Web.Caching.CacheDependency.FinishInit","System::Web::Caching::CacheDependency::FinishInit","System.Web.Caching.CacheDependency.GetFileDependencies","System::Web::Caching::CacheDependency::GetFileDependencies","System.Web.Caching.CacheDependency.GetUniqueID","System::Web::Caching::CacheDependency::GetUniqueID","System.Web.Caching.CacheDependency.HasChanged","System::Web::Caching::CacheDependency::HasChanged","System.Web.Caching.CacheDependency.NotifyDependencyChanged","System::Web::Caching::CacheDependency::NotifyDependencyChanged","System.Web.Caching.CacheDependency.SetUtcLastModified","System::Web::Caching::CacheDependency::SetUtcLastModified","System.Web.Caching.CacheDependency.UtcLastModified","System::Web::Caching::CacheDependency::UtcLastModified"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d3c5d8aa-6c05-1586-9dc5-b57efb775105","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Caching\\CacheDependency.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Caching/CacheDependency.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CacheDependency class | Microsoft Docs","_op_ogTitle":"CacheDependency class","description":"Establishes a dependency relationship between an item stored in an ASP.NET application&#39;s  object and a file, cache key, an array of either, or another CacheDependency object. The CacheDependencyâ€¦","toc_asset_id":"_splitted/System.Web.Caching/toc.json","toc_rel":"_splitted/System.Web.Caching/toc.json","source_url":"","ms.assetid":"System.Web.Caching.CacheDependency","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.caching.cachedependency","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.caching.cachedependency","fileRelativePath":"System.Web.Caching.CacheDependency.html"},"themesRelativePathToOutputRoot":"_themes/"}