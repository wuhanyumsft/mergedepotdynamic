{"content":"    \r\n    <h1 id=\"Microsoft_VisualBasic_Financial\">\r\n      <span class=\"lang-csharp\">Financial</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The <code>Financial</code> module contains procedures used to perform financial operations.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[Microsoft.VisualBasic.CompilerServices.StandardModule]\npublic sealed class Financial</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Financial</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This module supports the Visual Basic run-time library members that perform financial calculations such as depreciation, present and future values, interest rates, rates of return, and payments.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_DDB_System_Double_System_Double_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">DDB(Double,Double,Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_FV_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">FV(Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_IPmt_System_Double_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">IPmt(Double,Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_IRR_System_Double____System_Double_\" data-linktype=\"self-bookmark\">IRR(Double[],Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_MIRR_System_Double____System_Double_System_Double_\" data-linktype=\"self-bookmark\">MIRR(Double[],Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_NPer_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">NPer(Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_NPV_System_Double_System_Double____\" data-linktype=\"self-bookmark\">NPV(Double,Double[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_Pmt_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">Pmt(Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_PPmt_System_Double_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">PPmt(Double,Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_PV_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\" data-linktype=\"self-bookmark\">PV(Double,Double,Double,Double,DueDate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_Rate_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_System_Double_\" data-linktype=\"self-bookmark\">Rate(Double,Double,Double,Double,DueDate,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the interest rate per period for an annuity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_SLN_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">SLN(Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the straight-line depreciation of an asset for a single period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Financial_SYD_System_Double_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">SYD(Double,Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> specifying the sum-of-years digits depreciation of an asset for a specified period.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_DDB_System_Double_System_Double_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_DDB_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DDB(Double,Double,Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Cost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying initial cost of the asset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Salvage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying value of the asset at the end of its useful life.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Life</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying length of useful life of the asset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Period</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying period for which asset depreciation is calculated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Factor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying rate at which the balance declines. If omitted, 2 (double-declining method) is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Factor</code> &lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt; <code>Life.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The double-declining balance method computes depreciation at an accelerated rate. Depreciation is highest in the first period and decreases in successive periods.  </p>\n<p> The <code>Life</code> and <code>Period</code> arguments must be expressed in the same units. For example, if <code>Life</code> is given in months, <code>Period</code> must also be given in months. All arguments must be positive numbers.  </p>\n<p> The <code>DDB</code> function uses the following formula to calculate depreciation for a given period:  </p>\n<p> Depreciation / Period = ((Cost â€“ Salvage) * Factor) / Life</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>DDB</code> function to return the depreciation of an asset for a specified period given the initial cost (<code>InitCost</code>), the salvage value at the end of the asset&#39;s useful life (<code>SalvageVal</code>), the total life of the asset in years (<code>LifeTime</code>), and the period in years for which the depreciation is calculated (<code>Depr</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#3\">        Dim InitCost, SalvageVal, LifeTime, DepYear As Double\n        Dim Fmt As String = &quot;###,##0.00&quot;\n\n        InitCost = CDbl(InputBox(&quot;What&#39;s the initial cost of the asset?&quot;))\n        SalvageVal = CDbl(InputBox(&quot;Enter the asset&#39;s value at end of its life.&quot;))\n        LifeTime = CDbl(InputBox(&quot;What&#39;s the asset&#39;s useful life in years?&quot;))\n\n        &#39; Use the SLN function to calculate the deprecation per year.\n        Dim SlnDepr As Double = SLN(InitCost, SalvageVal, LifeTime)\n        Dim msg As String = &quot;The depreciation per year: &quot; &amp; Format(SlnDepr, Fmt)\n        msg &amp;= vbCrLf &amp; &quot;Year&quot; &amp; vbTab &amp; &quot;Linear&quot; &amp; vbTab &amp; &quot;Doubling&quot; &amp; vbCrLf\n\n        &#39; Use the SYD and DDB functions to calculate the deprecation for each year.\n        For DepYear = 1 To LifeTime\n            msg &amp;= DepYear &amp; vbTab &amp; \n                Format(SYD(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbTab &amp; \n                Format(DDB(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbCrLf\n        Next\n        MsgBox(msg)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_FV_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_FV_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FV(Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Pmt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying payment to be made each period. Payments usually contain principal and interest that doesn&#39;t change over the life of the annuity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying present value (or lump sum) of a series of future payments. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> The <code>Rate</code> and <code>NPer</code> arguments must be calculated using payment periods expressed in the same units. For example, if <code>Rate</code> is calculated using months, <code>NPer</code> must also be calculated using months.  </p>\n<p> For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>FV</code> function to return the future value of an investment given the percentage rate that accrues per period (<code>APR / 12</code>), the total number of payments (<code>TotPmts</code>), the payment (<code>Payment</code>), the current value of the investment (<code>PVal</code>), and a number that indicates whether the payment is made at the beginning or end of the payment period (<code>PayType</code>). Note that because <code>Payment</code> represents cash paid out, it is a negative number.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#22\">    Sub TestFV()\n        Dim TotPmts As Integer\n        Dim Payment, APR, PVal, Fval As Double\n        Dim PayType As DueDate\n        Dim Response As MsgBoxResult\n\n        &#39; Define money format.\n        Dim Fmt As String = &quot;###,###,##0.00&quot;\n        Payment = CDbl(InputBox(&quot;How much do you plan to save each month?&quot;))\n        APR = CDbl(InputBox(&quot;Enter the expected interest annual percentage rate.&quot;))\n        &#39; Ensure proper form.\n        If APR &gt; 1 Then APR = APR / 100\n        TotPmts = CInt(InputBox(&quot;For how many months do you expect to save?&quot;))\n        Response = MsgBox(&quot;Do you make payments at the end of month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        PVal = CDbl(InputBox(&quot;How much is in this savings account now?&quot;))\n        Fval = FV(APR / 12, TotPmts, -Payment, -PVal, PayType)\n        MsgBox(&quot;Your savings will be worth &quot; &amp; Format(Fval, Fmt) &amp; &quot;.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_IPmt_System_Double_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_IPmt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPmt(Double,Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Per</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying payment period in the range 1 through <code>NPer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying future value or cash balance you want after you&#39;ve made the final payment. For example, the future value of a loan is $0 because that&#39;s its value after the final payment. However, if you want to save $50,000 over 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Per</code> &lt;= 0 or <code>Per</code> &gt; <code>NPer</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> The <code>Rate</code> and <code>NPer</code> arguments must be calculated using payment periods expressed in the same units. For example, if <code>Rate</code> is calculated using months, <code>NPer</code> must also be calculated using months.  </p>\n<p> For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>IPmt</code> function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (<code>APR / 12</code>), the payment period for which the interest portion is desired (<code>Period</code>), the total number of payments (<code>TotPmts</code>), the present value or principal of the loan (<code>PVal</code>), the future value of the loan (<code>FVal</code>), and a number that indicates whether the payment is due at the beginning or end of the payment period (<code>PayType</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#26\">    Sub TestIPMT()\n        Dim APR, PVal, Period, IntPmt, TotInt, TotPmts As Double\n        Dim PayType As DueDate\n        Dim Response As MsgBoxResult\n\n        &#39; Usually 0 for a loan.\n        Dim Fval As Double = 0\n        &#39; Define money format.\n        Dim Fmt As String = &quot;###,###,##0.00&quot;\n        PVal = CDbl(InputBox(&quot;How much do you want to borrow?&quot;))\n        APR = CDbl(InputBox(&quot;What is the annual percentage rate of your loan?&quot;))\n        If APR &gt; 1 Then APR = APR / 100 &#39; Ensure proper form.\n        TotPmts = CInt(InputBox(&quot;How many monthly payments?&quot;))\n        Response = MsgBox(&quot;Do you make payments at end of the month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        For Period = 1 To TotPmts   &#39; Total all interest.\n            IntPmt = IPmt(APR / 12, Period, TotPmts, -PVal, Fval, PayType)\n            TotInt = TotInt + IntPmt\n        Next Period\n\n        &#39; Display results.\n        MsgBox(&quot;You will pay a total of &quot; &amp; Format(TotInt, Fmt) &amp; \n            &quot; in interest for this loan.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_IRR_System_Double____System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_IRR_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IRR(Double[],Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double IRR (ref double[] ValueArray, double Guess = 0.1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ValueArray</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. Array of <code>Double</code> specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Guess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object specifying value you estimate will be returned by <code>IRR</code>. If omitted, <code>Guess</code> is 0.1 (10 percent).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Array argument values are invalid or <code>Guess</code> &lt;= -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The internal rate of return is the interest rate received for an investment consisting of payments and receipts that occur at regular intervals.  </p>\n<p> The <code>IRR</code> function uses the order of values within the array to interpret the order of payments and receipts. Be sure to enter your payment and receipt values in the correct sequence. The cash flow for each period does not need to be fixed, as it is for an annuity.  </p>\n<p> <code>IRR</code> is calculated by iteration. Starting with the value of <code>Guess</code>, <code>IRR</code> cycles through the calculation until the result is accurate to within 0.00001 percent. If <code>IRR</code> cannot find a result after 20 tries, it fails.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example, the <code>IRR</code> function returns the internal rate of return for a series of five cash flows contained in the array <code>Values()</code>. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. <code>Guess</code> is the estimated internal rate of return.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#20\">        &#39; Define money format.\n        Dim MoneyFmt As String = &quot;###,##0.00&quot;\n        &#39; Define percentage format.\n        Dim PercentFmt As String = &quot;#0.00&quot;\n\n        Dim values(4) As Double\n        &#39; Business start-up costs.\n        values(0) = -70000\n        &#39; Positive cash flows reflecting income for four successive years.\n        values(1) = 22000\n        values(2) = 25000\n        values(3) = 28000\n        values(4) = 31000\n\n        &#39; Use the IRR function to calculate the rate of return.\n        &#39; Guess starts at 10 percent.\n        Dim Guess As Double = 0.1\n        &#39; Calculate internal rate.\n        Dim CalcRetRate As Double = IRR(values, Guess) * 100\n        &#39; Display internal return rate.\n        MsgBox(&quot;The internal rate of return for these cash flows is &quot; &amp; \n            Format(CalcRetRate, CStr(PercentFmt)) &amp; &quot; percent.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_MIRR_System_Double____System_Double_System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_MIRR_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MIRR(Double[],Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ValueArray</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. Array of <code>Double</code> specifying cash-flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FinanceRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying interest rate paid as the cost of financing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ReinvestRate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying interest rate received on gains from cash reinvestment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.dividebyzeroexception\" data-linktype=\"relative-path\">DivideByZeroException</a></div>\r\n                  </div>\r\n                  <p>Division by zero has occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The modified internal rate of return is the internal rate of return when payments and receipts are financed at different rates. The <code>MIRR</code> function takes into account both the cost of the investment (<code>FinanceRate</code>) and the interest rate received on reinvestment of cash (<code>ReinvestRate</code>).  </p>\n<p> The <code>FinanceRate</code> and <code>ReinvestRatearguments</code> are percentages expressed as decimal values. For example, 12 percent is expressed as 0.12.  </p>\n<p> The <code>MIRR</code> function uses the order of values within the array to interpret the order of payments and receipts. Be sure to enter your payment and receipt values in the correct sequence.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>MIRR</code> function to return the modified internal rate of return for a series of cash flows contained in the array <code>Values()</code>. <code>LoanAPR</code> represents the financing interest, and <code>InvAPR</code> represents the interest rate received on reinvestment.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#29\">        &#39; Define money format.\n        Dim MoneyFmt As String = &quot;###,##0.00&quot;\n        &#39; Define percentage format.\n        Dim PercentFmt As String = &quot;#0.00&quot;\n\n        Dim values(4) As Double\n        &#39; Business start-up costs.\n        values(0) = -70000\n        &#39; Positive cash flows reflecting income for four successive years.\n        values(1) = 22000\n        values(2) = 25000\n        values(3) = 28000\n        values(4) = 31000\n\n        &#39; Use the MIRR function to calculate the internal return rate.\n        &#39; Set the loan rate.\n        Dim LoanAPR As Double = 0.1\n        &#39; Set the reinvestment rate.\n        Dim InvAPR As Double = 0.12\n        &#39; Calculate internal rate.\n        Dim RetRate As Double = MIRR(values, LoanAPR, InvAPR)\n        &#39; Display internal return rate.\n        MsgBox(&quot;The modified internal rate of return for these cash flows is &quot; &amp; \n            Format(Math.Abs(RetRate) * 100, CStr(PercentFmt)) &amp; &quot;%.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_NPer_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_NPer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NPer(Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Pmt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying payment to be made each period. Payments usually contain principal and interest that does not change over the life of the annuity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the number of periods for an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Rate</code> = 0 and <code>Pmt</code> = 0</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over a period of time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>NPer</code> function to return the number of periods during which payments must be made to pay off a loan whose value is contained in <code>PVal</code>. Also provided are the interest percentage rate per period (<code>APR / 12</code>), the payment (<code>Payment</code>), the future value of the loan (<code>FVal</code>), and a number that indicates whether the payment is due at the beginning or end of the payment period (<code>PayType</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#19\">    Sub TestNPer()\n        Dim TotPmts As Double\n        Dim PVal, APR, Payment As Double\n        Dim PayType As DueDate\n        Dim Response As MsgBoxResult\n\n        &#39; Usually 0 for a loan.\n        Dim Fval As Double = 0\n        PVal = CDbl(InputBox(&quot;How much do you want to borrow?&quot;))\n        APR = CDbl(InputBox(&quot;What is the annual percentage rate of your loan?&quot;))\n        &#39; Usually 0 for a loan.\n        If APR &gt; 1 Then APR = APR / 100\n        Payment = CDbl(InputBox(&quot;How much do you want to pay each month?&quot;))\n        Response = MsgBox(&quot;Do you make payments at the end of month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        TotPmts = NPer(APR / 12, -Payment, PVal, FVal, PayType)\n        If Int(TotPmts) &lt;&gt; TotPmts Then TotPmts = Int(TotPmts) + 1\n\n        MsgBox(&quot;It will take you &quot; &amp; TotPmts &amp; &quot; months to pay off your loan.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_NPV_System_Double_System_Double____\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_NPV_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NPV(Double,Double[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double NPV (double Rate, ref double[] ValueArray);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying discount rate over the length of the period, expressed as a decimal.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ValueArray</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. Array of <code>Double</code> specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>ValueArray</code> is <code>Nothing</code>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The net present value of an investment is the current value of a future series of payments and receipts.  </p>\n<p> The <code>NPV</code> function uses the order of values within the array to interpret the order of payments and receipts. Be sure to enter your payment and receipt values in the correct sequence.  </p>\n<p> The <code>NPV</code> investment begins one period before the date of the first cash flow value and ends with the last cash flow value in the array.  </p>\n<p> The net present value calculation is based on future cash flows. If your first cash flow occurs at the beginning of the first period, the first value must be added to the value returned by <code>NPV</code> and must not be included in the cash flow values of <code>ValueArray</code>.  </p>\n<p> The <code>NPV</code> function is similar to the <code>PV</code> function (present value) except that the <code>PV</code> function allows cash flows to begin either at the end or the beginning of a period. Unlike the variable <code>NPV</code> cash flow values, <code>PV</code> cash flows must be fixed throughout the investment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>NPV</code> function to return the net present value for a series of cash flows contained in the array <code>values()</code>. The return value, stored in <code>FixedRetRate</code>, represents the fixed internal rate of return.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#1\">        &#39; Define money format.\n        Dim MoneyFmt As String = &quot;###,##0.00&quot;\n        &#39; Define percentage format.\n        Dim PercentFmt As String = &quot;#0.00&quot;\n\n        Dim values(4) As Double\n        &#39; Business start-up costs.\n        values(0) = -70000\n        &#39; Positive cash flows reflecting income for four successive years.\n        values(1) = 22000\n        values(2) = 25000\n        values(3) = 28000\n        values(4) = 31000\n\n        &#39; Use the NPV function to calculate the net present value.\n        &#39; Set fixed internal rate.\n        Dim FixedRetRate As Double = 0.0625\n        &#39; Calculate net present value.\n        Dim NetPVal As Double = NPV(FixedRetRate, values)\n        &#39; Display net present value.\n        MsgBox(&quot;The net present value of these cash flows is &quot; &amp; \n            Format(NetPVal, MoneyFmt) &amp; &quot;.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_Pmt_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_Pmt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pmt(Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 Ã— 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the present value (or lump sum) that a series of payments to be paid in the future is worth now. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 during 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>NPer</code> = 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made during a period of time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> The <code>Rate</code> and <code>NPer</code> arguments must be calculated using payment periods expressed in the same units. For example, if <code>Rate</code> is calculated using months, <code>NPer</code> must also be calculated using months.  </p>\n<p> For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Pmt</code> function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (<code>APR / 12</code>), the total number of payments (<code>TotPmts</code>), the present value or principal of the loan (<code>PVal</code>), the future value of the loan (<code>FVal</code>), and a number that indicates whether the payment is due at the beginning or end of the payment period <code>(PayType).</code>  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#7\">    Sub TestPMT()\n        Dim PVal, APR, Payment, TotPmts As Double\n        Dim PayType As DueDate\n        Dim Response As MsgBoxResult\n\n        &#39; Define money format.\n        Dim Fmt As String = &quot;###,###,##0.00&quot;\n        &#39; Usually 0 for a loan.\n        Dim FVal As Double = 0\n        PVal = CDbl(InputBox(&quot;How much do you want to borrow?&quot;))\n        APR = CDbl(InputBox(&quot;What is the annual percentage rate of your loan?&quot;))\n        If APR &gt; 1 Then APR = APR / 100 &#39; Ensure proper form.\n        TotPmts = CDbl(InputBox(&quot;How many monthly payments will you make?&quot;))\n        Response = MsgBox(&quot;Do you make payments at the end of month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        Payment = Pmt(APR / 12, TotPmts, -PVal, FVal, PayType)\n\n        MsgBox(&quot;Your payment will be &quot; &amp; Format(Payment, Fmt) &amp; &quot; per month.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_PPmt_System_Double_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_PPmt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PPmt(Double,Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Per</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the payment period in the range 1 through <code>NPer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 x 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the current value of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying future value or cash balance you want after you have made the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the principal payment for a given period of an annuity based on periodic fixed payments and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Per</code> &lt;=0 or <code>Per</code> &gt; <code>NPer</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over a period of time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> The <code>Rate</code> and <code>NPer</code> arguments must be calculated using payment periods expressed in the same units. For example, if <code>Rate</code> is calculated using months, <code>NPer</code> must also be calculated using months.  </p>\n<p> For all arguments, cash paid (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>PPmt</code> function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (<code>APR / 12</code>), the payment period for which the principal portion is desired (<code>Period</code>), the total number of payments (<code>TotPmts</code>), the present value or principal of the loan (<code>PVal</code>), the future value of the loan (<code>FVal</code>), and a number that indicates whether the payment is due at the beginning or end of the payment period (<code>PayType</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#24\">    Sub TestPPMT()\n        Dim PVal, APR, TotPmts, Payment, Period, P, I As Double\n        Dim PayType As DueDate\n        Dim Msg As String\n        Dim Response As MsgBoxResult\n\n        &#39; Define money format.\n        Dim Fmt As String = &quot;###,###,##0.00&quot;\n        &#39; Usually 0 for a loan.\n        Dim Fval As Double = 0\n        PVal = CDbl(InputBox(&quot;How much do you want to borrow?&quot;))\n        APR = CDbl(InputBox(&quot;What is the annual percentage rate of your loan?&quot;))\n        &#39; Ensure proper form.\n        If APR &gt; 1 Then APR = APR / 100\n        TotPmts = CDbl(InputBox(&quot;How many monthly payments do you have to make?&quot;))\n        Response = MsgBox(&quot;Do you make payments at the end of month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        Payment = Math.Abs(-Pmt(APR / 12, TotPmts, PVal, FVal, PayType))\n        Msg = &quot;Your monthly payment is &quot; &amp; Format(Payment, Fmt) &amp; &quot;. &quot;\n        Msg = Msg &amp; &quot;Would you like a breakdown of your principal and &quot;\n        Msg = Msg &amp; &quot;interest per period?&quot;\n        &#39; See if chart is desired. \n        Response = MsgBox(Msg, MsgBoxStyle.YesNo)\n        If Response &lt;&gt; MsgBoxResult.No Then\n            If TotPmts &gt; 12 Then MsgBox(&quot;Only first year will be shown.&quot;)\n            Msg = &quot;Month  Payment  Principal  Interest&quot; &amp; vbNewLine\n            For Period = 1 To TotPmts\n                &#39; Show only first 12.\n                If Period &gt; 12 Then Exit For\n                P = PPmt(APR / 12, Period, TotPmts, -PVal, FVal, PayType)\n                &#39; Round principal.\n                P = (Int((P + 0.005) * 100) / 100)\n                I = Payment - P\n                &#39; Round interest.\n                I = (Int((I + 0.005) * 100) / 100)\n                Msg = Msg &amp; Period &amp; vbTab &amp; Format(Payment, Fmt)\n                Msg = Msg &amp; vbTab &amp; Format(P, Fmt) &amp; vbTab &amp; Format(I, Fmt) &amp; vbNewLine\n            Next Period\n            &#39; Display amortization table.\n            MsgBox(Msg)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_PV_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_PV_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PV(Double,Double,Double,Double,DueDate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the interest rate per period. For example, if you get a car loan at an annual percentage rate (APR) of 10 percent and make monthly payments, the rate per period is 0.1/12, or 0.0083.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has 4 x 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Pmt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the payment to be made each period. Payments usually contain principal and interest that does not change during the life of the annuity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over a period of time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> The <code>Rate</code> and <code>NPer</code> arguments must be calculated using payment periods expressed in the same units. For example, if <code>Rate</code> is calculated using months, <code>NPer</code> must also be calculated using months.  </p>\n<p> For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example, the <code>PV</code> function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (<code>APR</code>), the total number of payments (<code>TotPmts</code>), the amount of each payment (<code>YrIncome</code>), the total future value of the investment (<code>FVal</code>), and a number that indicates whether each payment is made at the beginning or end of the payment period (<code>PayType</code>). Note that <code>YrIncome</code> is a negative number because it represents cash paid out from the annuity each year.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#25\">    Sub TestPV()\n        &#39; Define money format.\n        Dim Fmt As String = &quot;###,##0.00&quot;\n        &#39; Annual percentage rate.\n        Dim APR As Double = 0.0825\n        &#39; Total number of payments.\n        Dim TotPmts As Double = 20\n        &#39; Yearly income.\n        Dim YrIncome As Double = 50000\n        &#39; Future value.\n        Dim FVal As Double = 1000000\n        &#39; Payment at beginning of month.\n        Dim PayType As DueDate = DueDate.BegOfPeriod\n        Dim PVal As Double = PV(APR, TotPmts, -YrIncome, FVal, PayType)\n        MsgBox(&quot;The present value is &quot; &amp; Format(PVal, Fmt) &amp; &quot;.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_Rate_System_Double_System_Double_System_Double_System_Double_Microsoft_VisualBasic_DueDate_System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_Rate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rate(Double,Double,Double,Double,DueDate,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the interest rate per period for an annuity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>NPer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the total number of payment periods in the annuity. For example, if you make monthly payments on a four-year car loan, your loan has a total of 4 * 12 (or 48) payment periods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Pmt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the payment to be made each period. Payments usually contain principal and interest that doesn&#39;t change over the life of the annuity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>PV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifies the present value, or value today, of a series of future payments or receipts. For example, when you borrow money to buy a car, the loan amount is the present value to the lender of the monthly car payments you will make.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FV</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifies the future value or cash balance you want after you make the final payment. For example, the future value of a loan is $0 because that is its value after the final payment. However, if you want to save $50,000 over 18 years for your child&#39;s education, then $50,000 is the future value. If omitted, 0 is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Due</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. Object of type <a class=\"xref\" href=\"microsoft.visualbasic.duedate\" data-linktype=\"relative-path\">DueDate</a> that specifies when payments are due. This argument must be either <code>DueDate.EndOfPeriod</code> if payments are due at the end of the payment period, or <code>DueDate.BegOfPeriod</code> if payments are due at the beginning of the period. If omitted, <code>DueDate.EndOfPeriod</code> is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Guess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Double</code> specifying value you estimate is returned by <code>Rate</code>. If omitted, <code>Guess</code> is 0.1 (10 percent).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the interest rate per period for an annuity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>NPer</code> &lt;= 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An annuity is a series of fixed cash payments made over a period of time. An annuity can be a loan (such as a home mortgage) or an investment (such as a monthly savings plan).  </p>\n<p> For all arguments, cash paid out (such as deposits to savings) is represented by negative numbers; cash received (such as dividend checks) is represented by positive numbers.  </p>\n<p> <code>Rate</code> is calculated by iteration. Starting with the value of <code>Guess</code>, <code>Rate</code> cycles through the calculation until the result is accurate to within 0.00001 percent. If <code>Rate</code> cannot find a result after 20 tries, it fails. If your guess is 10 percent and <code>Rate</code> fails, try a different value for <code>Guess</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Rate</code> function to calculate the interest rate of a loan given the total number of payments (<code>TotPmts</code>), the amount of the loan payment (<code>Payment</code>), the present value or principal of the loan (<code>PVal</code>), the future value of the loan (<code>FVal</code>), a number that indicates whether the payment is due at the beginning or end of the payment period (<code>PayType</code>), and an approximation of the expected interest rate (<code>Guess</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#2\">    Sub TestRate()\n        Dim PVal, Payment, TotPmts, APR As Double\n        Dim PayType As DueDate\n\n        &#39; Define percentage format.\n        Dim Fmt As String = &quot;##0.00&quot;\n        Dim Response As MsgBoxResult\n        &#39; Usually 0 for a loan.\n        Dim FVal As Double = 0\n        &#39; Guess of 10 percent.\n        Dim Guess As Double = 0.1\n        PVal = CDbl(InputBox(&quot;How much did you borrow?&quot;))\n        Payment = CDbl(InputBox(&quot;What&#39;s your monthly payment?&quot;))\n        TotPmts = CDbl(InputBox(&quot;How many monthly payments do you have to make?&quot;))\n        Response = MsgBox(&quot;Do you make payments at the end of the month?&quot;, MsgBoxStyle.YesNo)\n        If Response = MsgBoxResult.No Then\n            PayType = DueDate.BegOfPeriod\n        Else\n            PayType = DueDate.EndOfPeriod\n        End If\n        APR = (Rate(TotPmts, -Payment, PVal, FVal, PayType, Guess) * 12) * 100\n\n        MsgBox(&quot;Your interest rate is &quot; &amp; Format(CInt(APR), Fmt) &amp; &quot; percent.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_SLN_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_SLN_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SLN(Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the straight-line depreciation of an asset for a single period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double SLN (double Cost, double Salvage, double Life);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Cost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying initial cost of the asset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Salvage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying value of the asset at the end of its useful life.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Life</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying length of the useful life of the asset.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the straight-line depreciation of an asset for a single period.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Life</code> = 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The depreciation period must be expressed in the same unit as the <code>Life</code> argument. All arguments must be positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>SLN</code> function to return the straight-line depreciation of an asset for a single period given the asset&#39;s initial cost (<code>InitCost</code>), the salvage value at the end of the asset&#39;s useful life (<code>SalvageVal</code>), and the total life of the asset in years (<code>LifeTime</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#3\">        Dim InitCost, SalvageVal, LifeTime, DepYear As Double\n        Dim Fmt As String = &quot;###,##0.00&quot;\n\n        InitCost = CDbl(InputBox(&quot;What&#39;s the initial cost of the asset?&quot;))\n        SalvageVal = CDbl(InputBox(&quot;Enter the asset&#39;s value at end of its life.&quot;))\n        LifeTime = CDbl(InputBox(&quot;What&#39;s the asset&#39;s useful life in years?&quot;))\n\n        &#39; Use the SLN function to calculate the deprecation per year.\n        Dim SlnDepr As Double = SLN(InitCost, SalvageVal, LifeTime)\n        Dim msg As String = &quot;The depreciation per year: &quot; &amp; Format(SlnDepr, Fmt)\n        msg &amp;= vbCrLf &amp; &quot;Year&quot; &amp; vbTab &amp; &quot;Linear&quot; &amp; vbTab &amp; &quot;Doubling&quot; &amp; vbCrLf\n\n        &#39; Use the SYD and DDB functions to calculate the deprecation for each year.\n        For DepYear = 1 To LifeTime\n            msg &amp;= DepYear &amp; vbTab &amp; \n                Format(SYD(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbTab &amp; \n                Format(DDB(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbCrLf\n        Next\n        MsgBox(msg)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Financial_SYD_System_Double_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Financial_SYD_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SYD(Double,Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> specifying the sum-of-years digits depreciation of an asset for a specified period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double SYD (double Cost, double Salvage, double Life, double Period);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Cost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying the initial cost of the asset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Salvage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying the value of the asset at the end of its useful life.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Life</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying the length of the useful life of the asset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Period</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code> specifying the period for which asset depreciation is calculated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> specifying the sum-of-years digits depreciation of an asset for a specified period.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Salvage</code> &lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Life</code> and <code>Period</code> arguments must be expressed in the same units. For example, if <code>Life</code> is given in months, <code>Period</code> must also be given in months. All arguments must be positive numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>SYD</code> function to return the depreciation of an asset for a specified period given the asset&#39;s initial cost (<code>InitCost</code>), the salvage value at the end of the asset&#39;s useful life (<code>SalvageVal</code>), and the total life of the asset in years (<code>LifeTime</code>).  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrMath#3\">        Dim InitCost, SalvageVal, LifeTime, DepYear As Double\n        Dim Fmt As String = &quot;###,##0.00&quot;\n\n        InitCost = CDbl(InputBox(&quot;What&#39;s the initial cost of the asset?&quot;))\n        SalvageVal = CDbl(InputBox(&quot;Enter the asset&#39;s value at end of its life.&quot;))\n        LifeTime = CDbl(InputBox(&quot;What&#39;s the asset&#39;s useful life in years?&quot;))\n\n        &#39; Use the SLN function to calculate the deprecation per year.\n        Dim SlnDepr As Double = SLN(InitCost, SalvageVal, LifeTime)\n        Dim msg As String = &quot;The depreciation per year: &quot; &amp; Format(SlnDepr, Fmt)\n        msg &amp;= vbCrLf &amp; &quot;Year&quot; &amp; vbTab &amp; &quot;Linear&quot; &amp; vbTab &amp; &quot;Doubling&quot; &amp; vbCrLf\n\n        &#39; Use the SYD and DDB functions to calculate the deprecation for each year.\n        For DepYear = 1 To LifeTime\n            msg &amp;= DepYear &amp; vbTab &amp; \n                Format(SYD(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbTab &amp; \n                Format(DDB(InitCost, SalvageVal, LifeTime, DepYear), Fmt) &amp; vbCrLf\n        Next\n        MsgBox(msg)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Financial.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Financial.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.DDB\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.FV\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.IPmt\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.IRR\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.MIRR\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.NPer\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.NPV\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.Pmt\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.PPmt\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.PV\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.Rate\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.SLN\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Financial.SYD\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a9a06b36-8bac-53bc-549a-c51a4a88700a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.VisualBasic\\Financial.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The Financial module contains procedures used to perform financial operations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.Financial\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Financial.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Financial.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.Financial","Microsoft.VisualBasic.Financial.DDB","Microsoft.VisualBasic.Financial.FV","Microsoft.VisualBasic.Financial.IPmt","Microsoft.VisualBasic.Financial.IRR","Microsoft.VisualBasic.Financial.MIRR","Microsoft.VisualBasic.Financial.NPer","Microsoft.VisualBasic.Financial.NPV","Microsoft.VisualBasic.Financial.Pmt","Microsoft.VisualBasic.Financial.PPmt","Microsoft.VisualBasic.Financial.PV","Microsoft.VisualBasic.Financial.Rate","Microsoft.VisualBasic.Financial.SLN","Microsoft.VisualBasic.Financial.SYD"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.Financial","Microsoft::VisualBasic::Financial","Microsoft.VisualBasic.Financial.DDB","Microsoft::VisualBasic::Financial::DDB","Microsoft.VisualBasic.Financial.FV","Microsoft::VisualBasic::Financial::FV","Microsoft.VisualBasic.Financial.IPmt","Microsoft::VisualBasic::Financial::IPmt","Microsoft.VisualBasic.Financial.IRR","Microsoft::VisualBasic::Financial::IRR","Microsoft.VisualBasic.Financial.MIRR","Microsoft::VisualBasic::Financial::MIRR","Microsoft.VisualBasic.Financial.NPer","Microsoft::VisualBasic::Financial::NPer","Microsoft.VisualBasic.Financial.NPV","Microsoft::VisualBasic::Financial::NPV","Microsoft.VisualBasic.Financial.Pmt","Microsoft::VisualBasic::Financial::Pmt","Microsoft.VisualBasic.Financial.PPmt","Microsoft::VisualBasic::Financial::PPmt","Microsoft.VisualBasic.Financial.PV","Microsoft::VisualBasic::Financial::PV","Microsoft.VisualBasic.Financial.Rate","Microsoft::VisualBasic::Financial::Rate","Microsoft.VisualBasic.Financial.SLN","Microsoft::VisualBasic::Financial::SLN","Microsoft.VisualBasic.Financial.SYD","Microsoft::VisualBasic::Financial::SYD"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a9a06b36-8bac-53bc-549a-c51a4a88700a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.VisualBasic\\Financial.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic/Financial.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Financial class | Microsoft Docs","_op_ogTitle":"Financial class","description":"The Financial module contains procedures used to perform financial operations.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.Financial","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.financial","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.financial","fileRelativePath":"Microsoft.VisualBasic.Financial.html"},"themesRelativePathToOutputRoot":"_themes/"}