{"content":"    \r\n    <h1 id=\"System_Diagnostics_Trace\">\r\n      <span class=\"lang-csharp\">Trace</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Trace</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Trace</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can use the properties and methods in the Trace class to instrument release builds. Instrumentation allows you to monitor the health of your application running in real-life settings. Tracing helps you isolate problems and fix them without disturbing a running system.  </p>\n<p> This class provides methods to display an <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> dialog box, and to emit an assertion that will always <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Fail_\" data-linktype=\"relative-path\">Fail</a>. This class provides write methods in the following variations: <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Write_\" data-linktype=\"relative-path\">Write</a>, <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a>, <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteIf_\" data-linktype=\"relative-path\">WriteIf</a>, and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteLineIf_\" data-linktype=\"relative-path\">WriteLineIf</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.diagnostics.booleanswitch\" data-linktype=\"relative-path\">BooleanSwitch</a> and <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <a class=\"xref\" href=\"system.diagnostics.switch\" data-linktype=\"relative-path\">Switch</a> class and the <a href=\"../Topic/How%20to:%20Create,%20Initialize%20and%20Configure%20Trace%20Switches.md\" data-linktype=\"relative-path\">How to: Create, Initialize and Configure Trace Switches</a> topic.  </p>\n<p> You can customize the tracing output&#39;s target by adding <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> instances to or removing instances from the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection. The <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection is shared by both the <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> and the Trace classes; adding a trace listener to either class adds the listener to both. By default, trace output is emitted using the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Adding a trace listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the Trace methods in <code>try</code>/<code>catch</code> blocks to detect and handle any exceptions from trace listeners.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If you add trace listeners to partially trusted code, you will get a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> exception, because adding trace listeners requires <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission. To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners. Instead, view the Trace and <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> messages in the <strong>Output</strong> window.  </p>\n</div>\n<p> The Trace class provides properties to get or set the level of <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Indent_\" data-linktype=\"relative-path\">Indent</a>, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_IndentSize_\" data-linktype=\"relative-path\">IndentSize</a>, and whether to <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> after each write.  </p>\n<p> To set the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_IndentSize_\" data-linktype=\"relative-path\">IndentSize</a> for Trace, you can edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; /&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre><p> The <a class=\"xref\" href=\"system.diagnostics.conditionalattribute\" data-linktype=\"relative-path\">ConditionalAttribute</a> attribute is applied to the methods of Trace. Compilers that support <a class=\"xref\" href=\"system.diagnostics.conditionalattribute\" data-linktype=\"relative-path\">ConditionalAttribute</a> ignore calls to these methods unless &quot;TRACE&quot; is defined as a conditional compilation symbol. Refer to a compiler&#39;s documentation to determine whether <a class=\"xref\" href=\"system.diagnostics.conditionalattribute\" data-linktype=\"relative-path\">ConditionalAttribute</a> is supported and the syntax for defining a conditional compilation symbol.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Visual Studio projects, by default, the &quot;DEBUG&quot; conditional compilation symbol is defined for debug builds, and the &quot;TRACE&quot; symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation.  </p>\n</div>\n<p> To define the &quot;TRACE&quot; conditional compilation symbol in C#, add the <code>/d:TRACE</code> option to the compiler command line when you compile your code using a command line, or add <code>#define TRACE</code> to the top of your file. In Visual Basic, add the <code>/d:TRACE=True</code> option to the compiler command line or add <code>#Const TRACE=True</code> to the file.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.conditionalattribute\" data-linktype=\"relative-path\">ConditionalAttribute</a> is not supported by the C++ compiler. To provide equivalent functionality, you must enclose calls to the methods of Trace in an <code>#if defined(TRACE) ... #endif</code> block, and add the <code>/DTRACE</code> option to the compiler command line or add <code>#define TRACE</code> to the file.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_AutoFlush\" data-linktype=\"self-bookmark\">AutoFlush</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets whether <span class=\"xref\">stem.Diagnostics.Trace.Flush*</span> should be called on the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> after every write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_CorrelationManager\" data-linktype=\"self-bookmark\">CorrelationManager</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the correlation manager for the thread for this trace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_IndentLevel\" data-linktype=\"self-bookmark\">IndentLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the indent level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_IndentSize\" data-linktype=\"self-bookmark\">IndentSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of spaces in an indent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Listeners\" data-linktype=\"self-bookmark\">Listeners</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of listeners that is monitoring the trace output.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_UseGlobalLock\" data-linktype=\"self-bookmark\">UseGlobalLock</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the global lock should be used.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Assert_System_Boolean_\" data-linktype=\"self-bookmark\">Assert(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks for a condition; if the condition is <code>false</code>, displays a message box that shows the call stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Assert_System_Boolean_System_String_\" data-linktype=\"self-bookmark\">Assert(Boolean,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks for a condition; if the condition is <code>false</code>, outputs a specified message and displays a message box that shows the call stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Assert_System_Boolean_System_String_System_String_\" data-linktype=\"self-bookmark\">Assert(Boolean,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks for a condition; if the condition is <code>false</code>, outputs two specified messages and displays a message box that shows the call stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes the output buffer, and then closes the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Fail_System_String_\" data-linktype=\"self-bookmark\">Fail(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Emits the specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Fail_System_String_System_String_\" data-linktype=\"self-bookmark\">Fail(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Emits an error message, and a detailed error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes the output buffer, and causes buffered data to be written to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Indent\" data-linktype=\"self-bookmark\">Indent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increases the current <span class=\"xref\">stem.Diagnostics.Trace.IndentLevel*</span> by one.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Refresh\" data-linktype=\"self-bookmark\">Refresh()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes the trace configuration data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceError_System_String_\" data-linktype=\"self-bookmark\">TraceError(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an error message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceError_System_String_System_Object___\" data-linktype=\"self-bookmark\">TraceError(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an error message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceInformation_System_String_\" data-linktype=\"self-bookmark\">TraceInformation(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an informational message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceInformation_System_String_System_Object___\" data-linktype=\"self-bookmark\">TraceInformation(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an informational message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceWarning_System_String_\" data-linktype=\"self-bookmark\">TraceWarning(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a warning message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_TraceWarning_System_String_System_Object___\" data-linktype=\"self-bookmark\">TraceWarning(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a warning message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Unindent\" data-linktype=\"self-bookmark\">Unindent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decreases the current <span class=\"xref\">stem.Diagnostics.Trace.IndentLevel*</span> by one.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Write_System_Object_\" data-linktype=\"self-bookmark\">Write(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Write_System_Object_System_String_\" data-linktype=\"self-bookmark\">Write(Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_Write_System_String_System_String_\" data-linktype=\"self-bookmark\">Write(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteIf_System_Boolean_System_Object_\" data-linktype=\"self-bookmark\">WriteIf(Boolean,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteIf_System_Boolean_System_String_\" data-linktype=\"self-bookmark\">WriteIf(Boolean,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteIf_System_Boolean_System_Object_System_String_\" data-linktype=\"self-bookmark\">WriteIf(Boolean,Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteIf_System_Boolean_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteIf(Boolean,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLine_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLine_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLine_System_Object_System_String_\" data-linktype=\"self-bookmark\">WriteLine(Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLine_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_Object_\" data-linktype=\"self-bookmark\">WriteLineIf(Boolean,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_String_\" data-linktype=\"self-bookmark\">WriteLineIf(Boolean,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_Object_System_String_\" data-linktype=\"self-bookmark\">WriteLineIf(Boolean,Object,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteLineIf(Boolean,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_AutoFlush\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_AutoFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoFlush</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets whether <span class=\"xref\">stem.Diagnostics.Trace.Flush*</span> should be called on the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> after every write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool AutoFlush { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <span class=\"xref\">stem.Diagnostics.Trace.Flush*</span> is called on the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> after every write; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default is <code>false</code>.  </p>\n<p> Flushing the stream will not flush its underlying encoder unless you explicitly call <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Flush_\" data-linktype=\"relative-path\">Flush</a> or <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Close_\" data-linktype=\"relative-path\">Close</a>. Setting AutoFlush to <code>true</code> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  </p>\n<p> To set the AutoFlush and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_IndentSize_\" data-linktype=\"relative-path\">IndentSize</a> for <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; /&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_CorrelationManager\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_CorrelationManager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CorrelationManager</div>        \r\n          </div>\r\n    \r\n            <p>Gets the correlation manager for the thread for this trace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.CorrelationManager CorrelationManager { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.correlationmanager\" data-linktype=\"relative-path\">CorrelationManager</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.correlationmanager\" data-linktype=\"relative-path\">CorrelationManager</a> object associated with the thread for this trace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This is an advanced property that most applications should not have occasion to use.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.diagnostics.correlationmanager\" data-linktype=\"relative-path\">CorrelationManager</a> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_IndentLevel\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_IndentLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndentLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the indent level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int IndentLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The indent level. The default is zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IndentLevel property represents the number of times the indent of size <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_IndentSize_\" data-linktype=\"relative-path\">IndentSize</a> is applied. This property is stored on per-thread/per-request basis.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example increments and decrements the indent level and emits tracing messages.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.IndentLevel Example#1\">      Trace::WriteLine( &quot;List of errors:&quot; );\n      Trace::Indent();\n      Trace::WriteLine( &quot;Error 1: File not found&quot; );\n      Trace::WriteLine( &quot;Error 2: Directory not found&quot; );\n      Trace::Unindent();\n      Trace::WriteLine( &quot;End of list of errors&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.IndentLevel Example#1\">Trace.WriteLine(&quot;List of errors:&quot;);\n Trace.Indent();\n Trace.WriteLine(&quot;Error 1: File not found&quot;);\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;);\n Trace.Unindent();\n Trace.WriteLine(&quot;End of list of errors&quot;);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.IndentLevel Example#1\"> Trace.WriteLine(&quot;List of errors:&quot;)\n Trace.Indent()\n Trace.WriteLine(&quot;Error 1: File not found&quot;)\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;)\n Trace.Unindent()\n Trace.WriteLine(&quot;End of list of errors&quot;)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>\nList of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_IndentSize\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_IndentSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndentSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of spaces in an indent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int IndentSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of spaces in an indent. The default is four.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.diagnostics.textwritertracelistener\" data-linktype=\"relative-path\">TextWriterTraceListener</a> interprets this number as spaces. An <a class=\"xref\" href=\"system.diagnostics.eventlogtracelistener\" data-linktype=\"relative-path\">EventLogTraceListener</a> ignores this value.  </p>\n<p> This property is stored on per-thread/per-request basis.  </p>\n<p> To set the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> and IndentSize for <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;3&quot; /&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Listeners\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Listeners_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Listeners</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of listeners that is monitoring the trace output.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.TraceListenerCollection Listeners { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> that represents a collection of type <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> monitoring the trace output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The listeners produce formatted output from the trace output. By default, the collection contains an instance of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> class. If you want to remove the default listener, call the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method, and pass it the instance of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. To redirect output to the console window, add an instance of the <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Listeners collection is shared by both the <a class=\"xref\" href=\"system.diagnostics.debug\" data-linktype=\"relative-path\">Debug</a> and the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a> classes; adding a trace listener to either class adds the listener to both.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.consoletracelistener\" data-linktype=\"relative-path\">ConsoleTraceListener</a> that outputs to the console screen. The code then adds the new listener to the Listeners.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Listeners Example#1\">        /* Create a ConsoleTraceListener and add it to the trace listeners. */\n        ConsoleTraceListener myWriter = new\n           ConsoleTraceListener();\n        Trace.Listeners.Add(myWriter);\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Listeners Example#1\">        &#39; Create a ConsoleTraceListener and add it to the trace listeners. \n        Dim myWriter As New ConsoleTraceListener()\n        Trace.Listeners.Add(myWriter)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Listeners Example#1\">      // Create a ConsoletTraceListener and add it to the trace listeners.\n      #if defined(TRACE)\n      ConsoleTraceListener^ myWriter = gcnew ConsoleTraceListener( );\n      Trace::Listeners-&gt;Add( myWriter );\n      #endif\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_UseGlobalLock\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_UseGlobalLock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseGlobalLock</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the global lock should be used.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool UseGlobalLock { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the global lock is to be used; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The global lock is always used if the trace listener is not thread safe, regardless of the value of UseGlobalLock. The <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IsThreadSafe_\" data-linktype=\"relative-path\">IsThreadSafe</a> property is used to determine if the listener is thread safe. The global lock is not used only if the value of UseGlobalLock is <code>false</code> and the value of <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IsThreadSafe_\" data-linktype=\"relative-path\">IsThreadSafe</a> is <code>true</code>. The default behavior is to use the global lock.  </p>\n<p> To set the UseGlobalLock for <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">Trace</a>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;trace useGlobalLock=&quot;false&quot; /&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Assert_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Assert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Assert(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Checks for a condition; if the condition is <code>false</code>, displays a message box that shows the call stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Assert (bool condition);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The conditional expression to evaluate. If the condition is <code>true</code>, a failure message is not sent and the message box is not displayed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> method if you want to do assertions in release builds. The <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Assert_\" data-linktype=\"relative-path\">Assert</a> method works only in debug builds. For more information, see <a href=\"../Topic/Assertions%20in%20Managed%20Code.md\" data-linktype=\"relative-path\">Assertions in Managed Code</a>.  </p>\n<p> Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is <code>false</code>, it sends a failure message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection. You can customize this behavior by adding a <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> to, or removing one from, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<p> When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: <strong>Abort</strong>, <strong>Retry</strong>, and <strong>Ignore</strong>. Clicking the <strong>Abort</strong> button terminates the application. Clicking <strong>Retry</strong> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking <strong>Ignore</strong> continues with the next instruction in the code.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box depends on the presence of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a>, the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You can change the behavior of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_LogFileName_\" data-linktype=\"relative-path\">LogFileName</a> property. The configuration file should be formatted as follows:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;switches&gt;  \n      &lt;add name=&quot;mySwitch&quot; value=&quot;4&quot;/&gt;  \n    &lt;/switches&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;/&gt;  \n    &lt;assert assertuienabled=&quot;true&quot; logfilename=&quot;.\\TraceLog.txt&quot;/&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an index for an array. Then some action is performed that sets the value of the index. Next the code calls Assert to verify the index value is valid. If it is not valid, the Assert outputs the call stack.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Assert Example#1\">// Create an index for an array.\n protected int index;\n \n protected void Method()\n { \n // Perform some action that sets the index.\n \n // Test that the index value is valid. \n Trace.Assert(index &gt; -1);\n }  \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Assert Example#1\">protected:\n   // Create an index for an array.\n   int index;\n\n   void Method()\n   {\n      // Perform some action that sets the index.\n      // Test that the index value is valid.\n      #if defined(TRACE)\n      Trace::Assert( index &gt; -1 );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Assert Example#1\">    &#39; Create an index for an array.\n    Protected index As Integer    \n    \n    Protected Sub Method()\n        &#39; Perform some action that sets the index.\n        &#39; Test that the index value is valid. \n        Trace.Assert(index &gt; -1)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Assert_System_Boolean_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Assert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Assert(Boolean,String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks for a condition; if the condition is <code>false</code>, outputs a specified message and displays a message box that shows the call stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Assert (bool condition, string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The conditional expression to evaluate. If the condition is <code>true</code>, the specified message is not sent and the message box is not displayed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to send to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> method if you want to do assertions in release builds. The <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Assert_\" data-linktype=\"relative-path\">Assert</a> method works only in debug builds. For more information, see <a href=\"../Topic/Assertions%20in%20Managed%20Code.md\" data-linktype=\"relative-path\">Assertions in Managed Code</a>.  </p>\n<p> Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is <code>false</code>, it sends the specified diagnostic message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection. You can customize this behavior by adding a <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> to, or removing one from, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<p> When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: <strong>Abort</strong>, <strong>Retry</strong>, and <strong>Ignore</strong>. Clicking the <strong>Abort</strong> button terminates the application. Clicking <strong>Retry</strong> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking <strong>Ignore</strong> continues with the next instruction in the code.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box depends on the presence of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a>, the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You can change the behavior of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_LogFileName_\" data-linktype=\"relative-path\">LogFileName</a> property. The configuration file should be formatted as follows:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;switches&gt;  \n      &lt;add name=&quot;mySwitch&quot; value=&quot;4&quot;/&gt;  \n    &lt;/switches&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;/&gt;  \n    &lt;assert assertuienabled=&quot;true&quot; logfilename=&quot;.\\TraceLog.txt&quot;/&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks to see that the <code>type</code> parameter is valid. If the <code>type</code> passed in is <code>null</code>, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> outputs a message.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Assert1 Example#1\">public static void MyMethod(Type type, Type baseType) {\n    Trace.Assert(type != null, &quot;Type parameter is null&quot;);\n \n   // Perform some processing.\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Assert1 Example#1\">public:\n   static void MyMethod( Type^ type, Type^ baseType )\n   {\n     #if defined(TRACE)\n     Trace::Assert( type != nullptr, &quot;Type parameter is null&quot; );\n     #endif\n      \n      // Perform some processing.\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Assert1 Example#1\">    Public Shared Sub MyMethod(type As Type, baseType As Type)\n        Trace.Assert( Not (type Is Nothing), &quot;Type parameter is null&quot;)\n\n        &#39; Perform some processing.\n    End Sub\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Assert_System_Boolean_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Assert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Assert(Boolean,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks for a condition; if the condition is <code>false</code>, outputs two specified messages and displays a message box that shows the call stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Assert (bool condition, string message, string detailMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The conditional expression to evaluate. If the condition is <code>true</code>, the specified messages are not sent and the message box is not displayed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to send to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>detailMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The detailed message to send to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> method if you want to do assertions in release builds. The <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Assert_\" data-linktype=\"relative-path\">Assert</a> method works only in debug builds. For more information, see <a href=\"../Topic/Assertions%20in%20Managed%20Code.md\" data-linktype=\"relative-path\">Assertions in Managed Code</a>.  </p>\n<p> Typically, the Assert method is used to identify logic errors during program development. Assert evaluates the condition. If the result is <code>false</code>, it sends the specified diagnostic message and detailed message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection. You can customize this behavior by adding a <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> to, or removing one from, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<p> When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: <strong>Abort</strong>, <strong>Retry</strong>, and <strong>Ignore</strong>. Clicking the <strong>Abort</strong> button terminates the application. Clicking <strong>Retry</strong> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking <strong>Ignore</strong> continues with the next instruction in the code.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box depends on the presence of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a>, the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You can change the behavior of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_LogFileName_\" data-linktype=\"relative-path\">LogFileName</a> property. The configuration file should be formatted as follows:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;system.diagnostics&gt;  \n    &lt;switches&gt;  \n      &lt;add name=&quot;mySwitch&quot; value=&quot;4&quot;/&gt;  \n    &lt;/switches&gt;  \n    &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;/&gt;  \n    &lt;assert assertuienabled=&quot;true&quot; logfilename=&quot;.\\TraceLog.txt&quot;/&gt;  \n  &lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks to see that the <code>type</code> parameter is valid. If the <code>type</code> passed in is <code>null</code>, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Assert_\" data-linktype=\"relative-path\">Assert</a> outputs a message.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Assert2 Example#1\">public static void MyMethod(Type type, Type baseType) {\n    Trace.Assert(type != null, &quot;Type parameter is null&quot;, \n       &quot;Can&#39;t get object for null type&quot;);\n \n   // Perform some processing.\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Assert2 Example#1\">    Public Shared Sub MyMethod(type As Type, baseType As Type)\n        Trace.Assert( Not (type Is Nothing), &quot;Type parameter is null&quot;, _\n            &quot;Can&#39;t get object for null type&quot;)\n\n        &#39; Perform some processing.\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Assert2 Example#1\">public:\n   static void MyMethod( Type^ type, Type^ baseType )\n   {\n      #if defined(TRACE)\n      Trace::Assert( type != nullptr, &quot;Type parameter is null&quot;, &quot;Can&#39;t get object for null type&quot; );\n      #endif\n      \n      // Perform some processing.\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Close\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Flushes the output buffer, and then closes the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when the output is going to a file, such as to the <a class=\"xref\" href=\"system.diagnostics.textwritertracelistener\" data-linktype=\"relative-path\">TextWriterTraceListener</a>.  </p>\n<p> Flushing the stream will not flush its underlying encoder unless you explicitly call <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Flush_\" data-linktype=\"relative-path\">Flush</a> or Close. Setting <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> to <code>true</code> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.textwritertracelistener\" data-linktype=\"relative-path\">TextWriterTraceListener</a> named <code>myTextListener</code>. <code>myTextListener</code> uses a <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a> called <code>myOutputWriter</code> to write to a file named <code>TestFile.txt</code>. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Flush Example#1\">// Specify /d:TRACE when compiling.\n\nusing System;\nusing System.IO;\nusing System.Diagnostics;\n\nclass Test\n{\n    static void Main()\n    {\n        // Create a file for output named TestFile.txt.\n        using (FileStream myFileStream = \n            new FileStream(&quot;TestFile.txt&quot;, FileMode.Append))\n        {\n            // Create a new text writer using the output stream \n            // and add it to the trace listeners.\n            TextWriterTraceListener myTextListener = \n                new TextWriterTraceListener(myFileStream);\n            Trace.Listeners.Add(myTextListener);\n          \n            // Write output to the file.\n            Trace.WriteLine(&quot;Test output&quot;);\n         \n            // Flush and close the output stream.\n            Trace.Flush();\n            Trace.Close();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Flush Example#1\">// Specify /DTRACE when compiling.\n\n#using &lt;System.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Diagnostics;\n\nvoid main()\n{\n     #if defined(TRACE)\n    // Create a file for output named TestFile.txt.\n    FileStream^ myFileStream = \n        gcnew FileStream( &quot;TestFile.txt&quot;, FileMode::Append );\n   \n    // Create a new text writer using the output stream \n    // and add it to the trace listeners.\n    TextWriterTraceListener^ myTextListener = \n        gcnew TextWriterTraceListener( myFileStream );\n    Trace::Listeners-&gt;Add( myTextListener );\n   \n    // Write output to the file.\n    Trace::WriteLine( &quot;Test output&quot; );\n   \n    // Flush and close the output stream.\n    Trace::Flush();\n    Trace::Close();\n    #endif\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Flush Example#1\">&#39; Specify /d:TRACE=True when compiling.\n\nImports System\nImports System.IO\nImports System.Diagnostics\n\nClass Test\n    \n    Shared Sub Main()\n    \n        &#39; Create a file for output named TestFile.txt.\n        Using myFileStream As New FileStream(&quot;TestFile.txt&quot;, FileMode.Append)\n        \n            &#39; Create a new text writer using the output stream\n            &#39; and add it to the trace listeners. \n            Dim myTextListener As New TextWriterTraceListener(myFileStream)\n            Trace.Listeners.Add(myTextListener)\n            \n            &#39; Write output to the file.\n            Trace.WriteLine(&quot;Test output&quot;)\n            \n            &#39; Flush and close the output stream.\n            Trace.Flush()\n            Trace.Close()\n        \n        End Using\n        \n    End Sub &#39;Main\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Fail_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Fail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fail(String)</div>        \r\n          </div>\r\n    \r\n            <p>Emits the specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Fail (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to emit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default behavior for the default trace listener is to output the <code>message</code> parameter to a message box when the application runs in user-interface mode, and to the <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> instances in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box is dependent on the presence of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a>, the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You can customize this behavior by adding a <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> to, or by removing one from, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Fail method to print a message during exception handling.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Fail Example#1\">        catch (Exception) {\n            Trace.Fail(&quot;Unknown Option &quot; + option + &quot;, using the default.&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Fail Example#1\">      catch ( Exception^ ) \n      {\n         #if defined(TRACE)\n         Trace::Fail( &quot;Unknown Option &quot; + option + &quot;, using the default.&quot; );\n         #endif\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Fail Example#1\">        Catch\n            Trace.Fail(&quot;Unknown Option &quot; + option1 + &quot;, using the default.&quot;)\n        End Try\n</code></pre><p> You can also use the Fail method in a switch statement.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Fail Example#2\">        switch (option) {\n            case Option.First:\n               result = 1.0;\n               break;\n         \n            // Insert additional cases.\n            default:\n               Trace.Fail(&quot;Unknown Option &quot; + option);\n               result = 1.0;\n               break;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Fail Example#2\">      switch ( option )\n      {\n         case Option::First:\n            result = 1.0;\n            break;\n\n         // Insert additional cases.\n\n         default:\n            #if defined(TRACE)\n            Trace::Fail(String::Format(&quot;Unknown Option {0}&quot;, option));\n            #endif\n            result = 1.0;\n            break;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Fail Example#2\">        Select Case option1\n            Case OptionConsts.First\n                result = 1.0\n            \n            &#39; Insert additional cases.\n            Case Else\n                Trace.Fail((&quot;Unknown Option &quot; &amp; option1))\n                result = 1.0\n        End Select\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Fail_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Fail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fail(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Emits an error message, and a detailed error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Fail (string message, string detailMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to emit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>detailMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A detailed message to emit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default behavior is for the default trace listener to output the <code>message</code> parameter and the <code>detailedMessage</code> parameter to a message box when the application runs in user-interface mode, and to the <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> instances in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box is dependent on the presence of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>. If the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;clear&amp;gt;</a>, the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&amp;lt;remove&amp;gt;</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You can customize this behavior by adding a <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">TraceListener</a> to, or by removing one from, the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Fail_\" data-linktype=\"relative-path\">Fail</a> method to print a message during exception handling.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Fail1 Example#1\">        catch (Exception) {\n            Trace.Fail(&quot;Invalid value: &quot; + value.ToString(), \n               &quot;Resetting value to newValue.&quot;);\n            value = newValue;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Fail1 Example#1\">      catch ( Exception^ ) \n      {\n        #if defined(TRACE)\n        Trace::Fail( String::Format( &quot;Invalid value: {0}&quot;, value ),\n            &quot;Resetting value to newValue.&quot; );\n         #endif\n         value = newValue;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Fail1 Example#1\">        Catch\n            Trace.Fail(&quot;Invalid value: &quot; &amp; value.ToString(), _\n                &quot;Resetting value to newValue.&quot;)\n            value = newValue\n        End Try\n</code></pre><p> You can also use the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Fail_\" data-linktype=\"relative-path\">Fail</a> method in a switch statement.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Fail1 Example#2\">        switch (option) {\n            case Option.First:\n               result = 1.0;\n               break;\n         \n            // Insert additional cases.\n         \n            default:\n               Trace.Fail(&quot;Unsupported option &quot; + option, &quot;Result set to 1.0&quot;);\n               result = 1.0;\n               break;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Fail1 Example#2\">      switch ( option )\n      {\n         case Option::First:\n            result = 1.0;\n            break;\n\n         // Insert additional cases.\n\n         default:\n            #if defined(TRACE)\n            Trace::Fail( String::Format( &quot;Unsupported option {0}&quot;, option ),\n               &quot;Result set to 1.0&quot; );\n            #endif\n            result = 1.0;\n            break;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Fail1 Example#2\">        Select Case option1\n            Case OptionConsts.First\n                result = 1.0\n            \n            &#39; Insert additional cases.\n            Case Else\n                Trace.Fail(&quot;Unsupported option &quot; &amp; option1, &quot;Result set to 1.0&quot;)\n                result = 1.0\n        End Select\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Flush\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Flushes the output buffer, and causes buffered data to be written to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Flushing the stream will not flush its underlying encoder unless you explicitly call Flush or <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Close_\" data-linktype=\"relative-path\">Close</a>. Setting <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_AutoFlush_\" data-linktype=\"relative-path\">AutoFlush</a> to <code>true</code> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.textwritertracelistener\" data-linktype=\"relative-path\">TextWriterTraceListener</a> named <code>myTextListener</code>. <code>myTextListener</code> uses a <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a> called <code>myOutputWriter</code> to write to a file named <code>TestFile.txt</code>. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.Flush Example#1\">// Specify /d:TRACE when compiling.\n\nusing System;\nusing System.IO;\nusing System.Diagnostics;\n\nclass Test\n{\n    static void Main()\n    {\n        // Create a file for output named TestFile.txt.\n        using (FileStream myFileStream = \n            new FileStream(&quot;TestFile.txt&quot;, FileMode.Append))\n        {\n            // Create a new text writer using the output stream \n            // and add it to the trace listeners.\n            TextWriterTraceListener myTextListener = \n                new TextWriterTraceListener(myFileStream);\n            Trace.Listeners.Add(myTextListener);\n          \n            // Write output to the file.\n            Trace.WriteLine(&quot;Test output&quot;);\n         \n            // Flush and close the output stream.\n            Trace.Flush();\n            Trace.Close();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.Flush Example#1\">// Specify /DTRACE when compiling.\n\n#using &lt;System.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Diagnostics;\n\nvoid main()\n{\n     #if defined(TRACE)\n    // Create a file for output named TestFile.txt.\n    FileStream^ myFileStream = \n        gcnew FileStream( &quot;TestFile.txt&quot;, FileMode::Append );\n   \n    // Create a new text writer using the output stream \n    // and add it to the trace listeners.\n    TextWriterTraceListener^ myTextListener = \n        gcnew TextWriterTraceListener( myFileStream );\n    Trace::Listeners-&gt;Add( myTextListener );\n   \n    // Write output to the file.\n    Trace::WriteLine( &quot;Test output&quot; );\n   \n    // Flush and close the output stream.\n    Trace::Flush();\n    Trace::Close();\n    #endif\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Flush Example#1\">&#39; Specify /d:TRACE=True when compiling.\n\nImports System\nImports System.IO\nImports System.Diagnostics\n\nClass Test\n    \n    Shared Sub Main()\n    \n        &#39; Create a file for output named TestFile.txt.\n        Using myFileStream As New FileStream(&quot;TestFile.txt&quot;, FileMode.Append)\n        \n            &#39; Create a new text writer using the output stream\n            &#39; and add it to the trace listeners. \n            Dim myTextListener As New TextWriterTraceListener(myFileStream)\n            Trace.Listeners.Add(myTextListener)\n            \n            &#39; Write output to the file.\n            Trace.WriteLine(&quot;Test output&quot;)\n            \n            &#39; Flush and close the output stream.\n            Trace.Flush()\n            Trace.Close()\n        \n        End Using\n        \n    End Sub &#39;Main\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Indent\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Indent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Indent()</div>        \r\n          </div>\r\n    \r\n            <p>Increases the current <span class=\"xref\">stem.Diagnostics.Trace.IndentLevel*</span> by one.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Indent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example increments and decrements the indent level and emits tracing messages.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.IndentLevel Example#1\">      Trace::WriteLine( &quot;List of errors:&quot; );\n      Trace::Indent();\n      Trace::WriteLine( &quot;Error 1: File not found&quot; );\n      Trace::WriteLine( &quot;Error 2: Directory not found&quot; );\n      Trace::Unindent();\n      Trace::WriteLine( &quot;End of list of errors&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.IndentLevel Example#1\">Trace.WriteLine(&quot;List of errors:&quot;);\n Trace.Indent();\n Trace.WriteLine(&quot;Error 1: File not found&quot;);\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;);\n Trace.Unindent();\n Trace.WriteLine(&quot;End of list of errors&quot;);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.IndentLevel Example#1\"> Trace.WriteLine(&quot;List of errors:&quot;)\n Trace.Indent()\n Trace.WriteLine(&quot;Error 1: File not found&quot;)\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;)\n Trace.Unindent()\n Trace.WriteLine(&quot;End of list of errors&quot;)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>List of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Refresh\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh()</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes the trace configuration data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Refresh ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Trace configuration data is captured when the application is started. If the configuration data is changed after the application is started, call the Refresh method to update the trace configuration data.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceError_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceError(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an error message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceError (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The informative message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceError calls the <code>TraceEvent</code> method for each trace listener, with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the informative message as the message string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceError_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceError(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes an error message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceError (string format, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format string that contains zero or more format items, which correspond to objects in the <code>args</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>object</code> array containing zero or more objects to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceError calls the <code>TraceEvent</code> methods in the trace listeners with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the message content as an object array with formatting information. See the <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a> method for more information about the <code>format</code> and <code>args</code> parameters.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceInformation_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceInformation(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an informational message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceInformation (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The informative message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceInformation calls the <code>TraceEvent</code> method for each trace listener, with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the informative message as the message string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceInformation_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceInformation(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes an informational message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceInformation (string format, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format string that contains zero or more format items, which correspond to objects in the <code>args</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>object</code> array containing zero or more objects to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceInformation calls the <code>TraceEvent</code> methods in the trace listeners with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the message content as an object array with formatting information. See the <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a> method for more information about the <code>format</code> and <code>args</code> parameters.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceWarning_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceWarning_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceWarning(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a warning message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceWarning (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The informative message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceWarning calls the <code>TraceEvent</code> method for each trace listener with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the informative message as the message string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_TraceWarning_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_TraceWarning_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TraceWarning(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes a warning message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection using the specified array of objects and formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void TraceWarning (string format, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format string that contains zero or more format items, which correspond to objects in the <code>args</code> array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>object</code> array containing zero or more objects to format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TraceWarning calls the <code>TraceEvent</code> methods in the trace listeners with the trace event type <a class=\"xref\" href=\"system.diagnostics.traceeventtype\" data-linktype=\"relative-path\">TraceEventType</a>, passing the message content as an object array with formatting information. See the <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a> method for more information about the <code>format</code> and <code>args</code> parameters.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Unindent\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Unindent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unindent()</div>        \r\n          </div>\r\n    \r\n            <p>Decreases the current <span class=\"xref\">stem.Diagnostics.Trace.IndentLevel*</span> by one.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Unindent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example increments and decrements the indent level and emits tracing messages.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.IndentLevel Example#1\">      Trace::WriteLine( &quot;List of errors:&quot; );\n      Trace::Indent();\n      Trace::WriteLine( &quot;Error 1: File not found&quot; );\n      Trace::WriteLine( &quot;Error 2: Directory not found&quot; );\n      Trace::Unindent();\n      Trace::WriteLine( &quot;End of list of errors&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.IndentLevel Example#1\">Trace.WriteLine(&quot;List of errors:&quot;);\n Trace.Indent();\n Trace.WriteLine(&quot;Error 1: File not found&quot;);\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;);\n Trace.Unindent();\n Trace.WriteLine(&quot;End of list of errors&quot;);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.IndentLevel Example#1\"> Trace.WriteLine(&quot;List of errors:&quot;)\n Trace.Indent()\n Trace.WriteLine(&quot;Error 1: File not found&quot;)\n Trace.WriteLine(&quot;Error 2: Directory not found&quot;)\n Trace.Unindent()\n Trace.WriteLine(&quot;End of list of errors&quot;)\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>\nList of errors:  \n     Error 1: File not found  \n     Error 2: Directory not found  \nEnd of list of errors  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Write_System_Object_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Write (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property.  </p>\n</div>\n<p> By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(&quot;...&quot;)</code> is a call to the <a class=\"xref\" href=\"system.web.tracecontext#System_Web_TraceContext_Write_\" data-linktype=\"relative-path\">Write</a> method of the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property. To use the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">System.Diagnostics.Trace</a> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(&quot;...&quot;)</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first name of the <code>value</code> parameter to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.Write1 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level \n      // is set to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( myObject );\n      }\n      \n      // Write a second message if the TraceSwitch level\n      // is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n          Trace::WriteLine( &quot; is not a valid value for this method.&quot; );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Write1 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)    \n    \n    Public Shared Sub MyErrorMethod(myObject As Object)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(myObject)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(&quot; is not a valid value for this method.&quot;)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.Write1 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(myObject);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(&quot; is not a valid value for this method.&quot;);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Write_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Write (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property.  </p>\n</div>\n<p> By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(&quot;...&quot;)</code> is a call to the <a class=\"xref\" href=\"system.web.tracecontext#System_Web_TraceContext_Write_\" data-linktype=\"relative-path\">Write</a> method of the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property. To use the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">System.Diagnostics.Trace</a> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(&quot;...&quot;)</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.Write Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod()\n   {\n      // Write the message if the TraceSwitch level is set\n      // to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( &quot;My error message. &quot; );\n      }\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n          Trace::WriteLine( &quot;My second error message.&quot; );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.Write Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod() {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(&quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(&quot;My second error message.&quot;);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Write Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)    \n    \n    Public Shared Sub MyErrorMethod()\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(&quot;My error message. &quot;)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(&quot;My second error message.&quot;)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Write_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Write (object value, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property.  </p>\n</div>\n<p> By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(&quot;...&quot;)</code> is a call to the <a class=\"xref\" href=\"system.web.tracecontext#System_Web_TraceContext_Write_\" data-linktype=\"relative-path\">Write</a> method of the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property. To use the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">System.Diagnostics.Trace</a> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(&quot;...&quot;)</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Verbose</code>, the example outputs the name of the <code>myObject</code> and the <code>category</code> to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Error</code> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.Write3 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n         Trace::Write( myObject, category );\n      }\n      \n      // Write a second message if the TraceSwitch level is set to \n      // Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::WriteLine( &quot; Object is not valid for this category.&quot; );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.Write3 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.Write(myObject, category);\n \n    // Write a second message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.WriteLine(&quot; Object is not valid for this category.&quot;);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Write3 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.Write(myObject, category)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.WriteLine(&quot; Object is not valid for this category.&quot;)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_Write_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Write (string message, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property.  </p>\n</div>\n<p> By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(&quot;...&quot;)</code> is a call to the <a class=\"xref\" href=\"system.web.tracecontext#System_Web_TraceContext_Write_\" data-linktype=\"relative-path\">Write</a> method of the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_Trace_\" data-linktype=\"relative-path\">Trace</a> property. To use the <a class=\"xref\" href=\"system.diagnostics.trace\" data-linktype=\"relative-path\">System.Diagnostics.Trace</a> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(&quot;...&quot;)</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Verbose</code>, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Error</code> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.Write2 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n         Trace::Write( String::Concat( myObject, \n            &quot; is not a valid object for category: &quot; ), category );\n      }\n      \n      // Write a second message if the TraceSwitch level is set to\n      // Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::WriteLine( &quot; Please use a different category.&quot; );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Write2 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.Write(myObject.ToString() &amp; _\n                &quot; is not a valid object for category: &quot;, category)\n        End If\n        \n        &#39; Write a second message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.WriteLine(&quot; Please use a different category.&quot;)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.Write2 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.Write(myObject.ToString() + &quot; is not a valid object for category: &quot;, \n          category);\n \n    // Write a second message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.WriteLine(&quot; Please use a different category.&quot;);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteIf_System_Boolean_System_Object_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteIf(Boolean,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteIf (bool condition, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first name of the value parameter to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteIf1 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set \n      // to Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, myObject );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, \n         &quot; is not a valid value for this method.&quot; );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteIf1 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, myObject)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, _\n            &quot; is not a valid value for this method.&quot;)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteIf1 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, myObject);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot; is not a valid value for this method.&quot;);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteIf_System_Boolean_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteIf(Boolean,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteIf (bool condition, string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.WriteIf Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod() {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot;My second error message.&quot;);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteIf Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod()\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to\n      // Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, &quot;My error message. &quot; );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, \n         &quot;My second error message.&quot; );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteIf Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod()\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot;My second error message.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteIf_System_Boolean_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteIf(Boolean,Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteIf (bool condition, object value, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Verbose</code>, the example outputs the name of the <code>myObject</code> and the <code>category</code> to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Error</code> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.WriteIf3 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Verbose.\n    Trace.WriteIf(generalSwitch.TraceVerbose, myObject, category);\n \n    // Write a second message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteLineIf(generalSwitch.TraceError, &quot; Object is not valid for this category.&quot;);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteIf3 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)    \n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Verbose.\n        Trace.WriteIf(generalSwitch.TraceVerbose, myObject, category)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteLineIf(generalSwitch.TraceError, _\n            &quot; Object is not valid for this category.&quot;)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteIf3 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to Verbose.\n      Trace::WriteIf( generalSwitch-&gt;TraceVerbose, myObject, category );\n      \n      // Write a second message if the TraceSwitch level is set to\n      // Error or higher.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceError, \n         &quot; Object is not valid for this category.&quot; );\n      #endif\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteIf_System_Boolean_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteIf(Boolean,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteIf (bool condition, string message, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_\" data-linktype=\"relative-path\">Write</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Verbose</code>, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Error</code> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.WriteIf2 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Verbose.\n    Trace.WriteIf(generalSwitch.TraceVerbose, myObject.ToString() + \n       &quot; is not a valid object for category: &quot;, category);\n \n    // Write a second message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteLineIf(generalSwitch.TraceError, &quot; Please use a different category.&quot;);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteIf2 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to Verbose.\n      Trace::WriteIf( generalSwitch-&gt;TraceVerbose,\n         String::Concat( myObject, \n         &quot; is not a valid object for category: &quot; ), category );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Error or higher.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceError, \n         &quot; Please use a different category.&quot; );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteIf2 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Verbose.\n        Trace.WriteIf(generalSwitch.TraceVerbose, myObject.ToString() &amp; _\n            &quot; is not a valid object for category: &quot;, category)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteLineIf(generalSwitch.TraceError, _\n            &quot; Please use a different category.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLine_System_Object_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLine (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLine1 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level \n      // is set to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( &quot;Invalid object. &quot; );\n      }\n      \n      // Write a second message if the TraceSwitch level\n      // is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n         Trace::WriteLine( myObject );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLine1 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(&quot;Invalid object. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(myObject);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLine1 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(&quot;Invalid object. &quot;)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(myObject)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLine_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLine (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.Write Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod()\n   {\n      // Write the message if the TraceSwitch level is set\n      // to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( &quot;My error message. &quot; );\n      }\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n          Trace::WriteLine( &quot;My second error message.&quot; );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.Write Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod() {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(&quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(&quot;My second error message.&quot;);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.Write Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)    \n    \n    Public Shared Sub MyErrorMethod()\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(&quot;My error message. &quot;)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(&quot;My second error message.&quot;)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLine_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLine (object value, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLine3 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level \n      // is set to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( &quot;Invalid object for category. &quot; );\n      }\n      \n      // Write a second message if the TraceSwitch level\n      // is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n         Trace::WriteLine( myObject, category );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLine3 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(&quot;Invalid object for category. &quot;)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(myObject, category)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLine3 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(&quot;Invalid object for category. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(myObject, category);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLine_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLine (string message, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message and the <code>category</code> on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLine2 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level \n      // is set to Error or higher.\n      if ( generalSwitch-&gt;TraceError )\n      {\n         Trace::Write( &quot;My error message. &quot; );\n      }\n      \n      // Write a second message if the TraceSwitch level\n      // is set to Verbose.\n      if ( generalSwitch-&gt;TraceVerbose )\n      {\n         Trace::WriteLine( &quot;My second error message.&quot;, category );\n      }\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLine2 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(category As String)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        If generalSwitch.TraceError Then\n            Trace.Write(&quot;My error message. &quot;)\n        End If \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        If generalSwitch.TraceVerbose Then\n            Trace.WriteLine(&quot;My second error message.&quot;, category)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLine2 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(String category) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    if(generalSwitch.TraceError)\n       Trace.Write(&quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    if(generalSwitch.TraceVerbose)\n       Trace.WriteLine(&quot;My second error message.&quot;, category);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_Object_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLineIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineIf(Boolean,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLineIf (bool condition, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLineIf1 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level \n      // is set to Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, &quot;Invalid object. &quot; );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, myObject );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLineIf1 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    \n    Public Shared Sub MyErrorMethod(myObject As Object)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, &quot;Invalid object. &quot;)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, myObject)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLineIf1 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, &quot;Invalid object. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, myObject);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLineIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineIf(Boolean,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLineIf (bool condition, string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.WriteIf Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod() {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot;My second error message.&quot;);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteIf Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod()\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set to\n      // Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, &quot;My error message. &quot; );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, \n         &quot;My second error message.&quot; );\n      #endif\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteIf Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod()\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot;My second error message.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLineIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineIf(Boolean,Object,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and the value of the object&#39;s <span class=\"xref\">stem.Object.ToString*</span> method to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLineIf (bool condition, object value, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> whose name is sent to the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLineIf3 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(Object myObject, String category) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, &quot;Invalid object for category. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, myObject, category);\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLineIf3 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(myObject As Object, category As String)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, &quot;Invalid object for category. &quot;)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, myObject, category)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLineIf3 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( Object^ myObject, String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set\n      // to Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, \n         &quot;Invalid object for category. &quot; );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, \n         myObject, category );\n      #endif\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Trace_WriteLineIf_System_Boolean_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Trace_WriteLineIf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineIf(Boolean,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a category name and message to the trace listeners in the <span class=\"xref\">stem.Diagnostics.Trace.Listeners*</span> collection if a condition is <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void WriteLineIf (bool condition, string message, string category);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>condition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cause a message to be written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A message to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>category</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A category name used to organize the output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the output is written to an instance of <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<p> The <code>category</code> parameter can be used to group output messages.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method of the trace listener.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.diagnostics.traceswitch\" data-linktype=\"relative-path\">TraceSwitch</a> named <code>generalSwitch</code>. This switch is set outside the code sample.  </p>\n<p> If the switch is set to the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a><code>Error</code> or higher, the example outputs the first error message to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a>. For information on adding a listener to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, see the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection\" data-linktype=\"relative-path\">TraceListenerCollection</a> class.  </p>\n<p> Then, if the <a class=\"xref\" href=\"system.diagnostics.tracelevel\" data-linktype=\"relative-path\">TraceLevel</a> is set to <code>Verbose</code>, the example outputs the second error message and the <code>category</code> on the same line as the first message. The second message is followed by a line terminator.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Trace.WriteLineIf2 Example#1\">    &#39; Class-level declaration.\n    &#39; Create a TraceSwitch.\n    Private Shared generalSwitch As New TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;)\n    \n    Public Shared Sub MyErrorMethod(category As String)\n        &#39; Write the message if the TraceSwitch level is set to Error or higher.\n        Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;)\n        \n        &#39; Write a second message if the TraceSwitch level is set to Verbose.\n        Trace.WriteLineIf(generalSwitch.TraceVerbose, _\n            &quot;My second error message.&quot;, category)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Trace.WriteLineIf2 Example#1\">// Class-level declaration.\n // Create a TraceSwitch.\n static TraceSwitch generalSwitch = new TraceSwitch(&quot;General&quot;, &quot;Entire Application&quot;);\n \n static public void MyErrorMethod(String category) {\n    // Write the message if the TraceSwitch level is set to Error or higher.\n    Trace.WriteIf(generalSwitch.TraceError, &quot;My error message. &quot;);\n \n    // Write a second message if the TraceSwitch level is set to Verbose.\n    Trace.WriteLineIf(generalSwitch.TraceVerbose, &quot;My second error message.&quot;, category);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Trace.WriteLineIf2 Example#1\">// Class-level declaration.\n// Create a TraceSwitch.\nprivate:\n   static TraceSwitch^ generalSwitch = \n      gcnew TraceSwitch( &quot;General&quot;, &quot;Entire Application&quot; );\n\npublic:\n   static void MyErrorMethod( String^ category )\n   {\n      #if defined(TRACE)\n      // Write the message if the TraceSwitch level is set \n      // to Error or higher.\n      Trace::WriteIf( generalSwitch-&gt;TraceError, &quot;My error message. &quot; );\n      \n      // Write a second message if the TraceSwitch level is set\n      // to Verbose.\n      Trace::WriteLineIf( generalSwitch-&gt;TraceVerbose, \n         &quot;My second error message.&quot;, category );\n      #endif\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.Trace.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Trace.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Assert\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.AutoFlush\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Close\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.CorrelationManager\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Fail\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Flush\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Indent\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.IndentLevel\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.IndentSize\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Listeners\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Refresh\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.TraceError\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.TraceInformation\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.TraceWarning\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Unindent\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.UseGlobalLock\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.Write\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.WriteIf\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.WriteLine\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Trace.WriteLineIf\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"be32f4f4-491e-4087-11d1-45731b24d025\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.Trace\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.Trace.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Trace.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.Trace","System.Diagnostics.Trace.Assert","System.Diagnostics.Trace.AutoFlush","System.Diagnostics.Trace.Close","System.Diagnostics.Trace.CorrelationManager","System.Diagnostics.Trace.Fail","System.Diagnostics.Trace.Flush","System.Diagnostics.Trace.Indent","System.Diagnostics.Trace.IndentLevel","System.Diagnostics.Trace.IndentSize","System.Diagnostics.Trace.Listeners","System.Diagnostics.Trace.Refresh","System.Diagnostics.Trace.TraceError","System.Diagnostics.Trace.TraceInformation","System.Diagnostics.Trace.TraceWarning","System.Diagnostics.Trace.Unindent","System.Diagnostics.Trace.UseGlobalLock","System.Diagnostics.Trace.Write","System.Diagnostics.Trace.WriteIf","System.Diagnostics.Trace.WriteLine","System.Diagnostics.Trace.WriteLineIf"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.Trace","System::Diagnostics::Trace","System.Diagnostics.Trace.Assert","System::Diagnostics::Trace::Assert","System.Diagnostics.Trace.AutoFlush","System::Diagnostics::Trace::AutoFlush","System.Diagnostics.Trace.Close","System::Diagnostics::Trace::Close","System.Diagnostics.Trace.CorrelationManager","System::Diagnostics::Trace::CorrelationManager","System.Diagnostics.Trace.Fail","System::Diagnostics::Trace::Fail","System.Diagnostics.Trace.Flush","System::Diagnostics::Trace::Flush","System.Diagnostics.Trace.Indent","System::Diagnostics::Trace::Indent","System.Diagnostics.Trace.IndentLevel","System::Diagnostics::Trace::IndentLevel","System.Diagnostics.Trace.IndentSize","System::Diagnostics::Trace::IndentSize","System.Diagnostics.Trace.Listeners","System::Diagnostics::Trace::Listeners","System.Diagnostics.Trace.Refresh","System::Diagnostics::Trace::Refresh","System.Diagnostics.Trace.TraceError","System::Diagnostics::Trace::TraceError","System.Diagnostics.Trace.TraceInformation","System::Diagnostics::Trace::TraceInformation","System.Diagnostics.Trace.TraceWarning","System::Diagnostics::Trace::TraceWarning","System.Diagnostics.Trace.Unindent","System::Diagnostics::Trace::Unindent","System.Diagnostics.Trace.UseGlobalLock","System::Diagnostics::Trace::UseGlobalLock","System.Diagnostics.Trace.Write","System::Diagnostics::Trace::Write","System.Diagnostics.Trace.WriteIf","System::Diagnostics::Trace::WriteIf","System.Diagnostics.Trace.WriteLine","System::Diagnostics::Trace::WriteLine","System.Diagnostics.Trace.WriteLineIf","System::Diagnostics::Trace::WriteLineIf"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"be32f4f4-491e-4087-11d1-45731b24d025","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/Trace.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Trace class | Microsoft Docs","_op_ogTitle":"Trace class","description":"Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.Trace","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.trace","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.trace","fileRelativePath":"System.Diagnostics.Trace.html"},"themesRelativePathToOutputRoot":"_themes/"}