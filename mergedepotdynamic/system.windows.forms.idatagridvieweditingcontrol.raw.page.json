{"content":"    \r\n    <h1 id=\"System_Windows_Forms_IDataGridViewEditingControl\">\r\n      <span class=\"lang-csharp\">IDataGridViewEditingControl</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines common functionality for controls that are hosted within cells of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IDataGridViewEditingControl</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This interface is implemented by controls, such as <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxeditingcontrol\" data-linktype=\"relative-path\">DataGridViewComboBoxEditingControl</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxeditingcontrol\" data-linktype=\"relative-path\">DataGridViewTextBoxEditingControl</a>, that are hosted by corresponding <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> cells, such as <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcell\" data-linktype=\"relative-path\">DataGridViewComboBoxCell</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcell\" data-linktype=\"relative-path\">DataGridViewTextBoxCell</a>, when they are in edit mode.  </p>\n<p> Cell types that can host editing controls set their <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_EditType_\" data-linktype=\"relative-path\">EditType</a> property to a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> representing the editing control type. When the cell enters edit mode, the following steps are performed:  </p>\n<ol>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control creates an instance of the editing control type.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control calls the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InitializeEditingControl_\" data-linktype=\"relative-path\">InitializeEditingControl</a> method. You can override this method to transfer the cell value to the editing control.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control calls the editing control <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol#System_Windows_Forms_IDataGridViewEditingControl_ApplyCellStyleToEditingControl_\" data-linktype=\"relative-path\">ApplyCellStyleToEditingControl</a> method and passes in the cell&#39;s current style. You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control calls the editing control <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol#System_Windows_Forms_IDataGridViewEditingControl_PrepareEditingControlForEdit_\" data-linktype=\"relative-path\">PrepareEditingControlForEdit</a> method. You can implement this method to make final adjustments to the editing control, such as selecting the control value.  </p>\n<p>For more information about implementing IDataGridViewEditingControl, see <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<p>Cell types such as <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> that provide a user interface (UI) for specifying values without hosting an editing control implement the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcell\" data-linktype=\"relative-path\">IDataGridViewEditingCell</a> interface. The UI in this case is displayed regardless of whether the cell is in edit mode.  </p>\n<p>Other cell types, such as <a class=\"xref\" href=\"system.windows.forms.datagridviewbuttoncell\" data-linktype=\"relative-path\">DataGridViewButtonCell</a>, provide a UI but do not store user-specified values. In this case, the cell type does not implement <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcell\" data-linktype=\"relative-path\">IDataGridViewEditingCell</a> or host an editing control.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingControlDataGridView\" data-linktype=\"self-bookmark\">EditingControlDataGridView</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that contains the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingControlFormattedValue\" data-linktype=\"self-bookmark\">EditingControlFormattedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the formatted value of the cell being modified by the editor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingControlRowIndex\" data-linktype=\"self-bookmark\">EditingControlRowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the hosting cell&#39;s parent row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingControlValueChanged\" data-linktype=\"self-bookmark\">EditingControlValueChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingPanelCursor\" data-linktype=\"self-bookmark\">EditingPanelCursor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cursor used when the mouse pointer is over the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingPanel*</span> but not over the editing control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_RepositionEditingControlOnValueChange\" data-linktype=\"self-bookmark\">RepositionEditingControlOnValueChange</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_ApplyCellStyleToEditingControl_System_Windows_Forms_DataGridViewCellStyle_\" data-linktype=\"self-bookmark\">ApplyCellStyleToEditingControl(DataGridViewCellStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the control&#39;s user interface (UI) to be consistent with the specified cell style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_EditingControlWantsInputKey_System_Windows_Forms_Keys_System_Boolean_\" data-linktype=\"self-bookmark\">EditingControlWantsInputKey(Keys,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified key is a regular input key that the editing control should process or a special key that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> should process.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_GetEditingControlFormattedValue_System_Windows_Forms_DataGridViewDataErrorContexts_\" data-linktype=\"self-bookmark\">GetEditingControlFormattedValue(DataGridViewDataErrorContexts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the formatted value of the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IDataGridViewEditingControl_PrepareEditingControlForEdit_System_Boolean_\" data-linktype=\"self-bookmark\">PrepareEditingControlForEdit(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepares the currently selected cell for editing.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlDataGridView\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlDataGridView_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlDataGridView</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that contains the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that contains the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is being edited; <code>null</code> if there is no associated <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlFormattedValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlFormattedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the formatted value of the cell being modified by the editor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object EditingControlFormattedValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the formatted value of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The formatted value represents the value as it is displayed in the control&#39;s user interface. The formatted value may be different in absolute value and even data type from the actual value contained in the control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of this member. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#301\">    // Implements the IDataGridViewEditingControl.EditingControlFormattedValue \n    // property.\n    public object EditingControlFormattedValue\n    {\n        get\n        {\n            return this.Value.ToShortDateString();\n        }\n        set\n        {            \n            if (value is String)\n            {\n                try\n                {\n                    // This will throw an exception of the string is \n                    // null, empty, or not in the format of a date.\n                    this.Value = DateTime.Parse((String)value);\n                }\n                catch\n                {\n                    // In the case of an exception, just use the \n                    // default value so we&#39;re not left with a null\n                    // value.\n                    this.Value = DateTime.Now;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#301\">    Public Property EditingControlFormattedValue() As Object _\n        Implements IDataGridViewEditingControl.EditingControlFormattedValue\n\n        Get\n            Return Me.Value.ToShortDateString()\n        End Get\n\n        Set(ByVal value As Object)\n            Try\n                &#39; This will throw an exception of the string is \n                &#39; null, empty, or not in the format of a date.\n                Me.Value = DateTime.Parse(CStr(value))\n            Catch\n                &#39; In the case of an exception, just use the default\n                &#39; value so we&#39;re not left with a null value.\n                Me.Value = DateTime.Now\n            End Try\n        End Set\n\n    End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlRowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlRowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlRowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the hosting cell&#39;s parent row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int EditingControlRowIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the row that contains the cell, or â€“1 if there is no parent row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a> interface does not define a corresponding <code>ColumnIndex</code> property. You can use the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol#System_Windows_Forms_IDataGridViewEditingControl_EditingControlDataGridView_\" data-linktype=\"relative-path\">EditingControlDataGridView</a> property to retrieve the parent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellAddress_\" data-linktype=\"relative-path\">CurrentCellAddress</a> property to determine the row and column indexes of the active cell.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlValueChanged\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlValueChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlValueChanged</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EditingControlValueChanged { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of the control differs from the cell value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EditingControlValueChanged property is set to <code>true</code> to indicate that the hosting cell&#39;s state has changed and its user interface (UI) needs to be updated to reflect this change in value. The owning cell or table will reset this property to <code>false</code> after an update.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingPanelCursor\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingPanelCursor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingPanelCursor</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cursor used when the mouse pointer is over the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingPanel*</span> but not over the editing control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Cursor EditingPanelCursor { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> that represents the mouse pointer used for the editing panel.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The editing panel is the <a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a> that hosts the editing control when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is in edit mode. The actual editing control may not cover the entire area of the editing panel. In this case, the EditingPanelCursor implementation should return the cursor to use when the mouse pointer is over the panel but not over the control. Typically, you will want to return the same cursor that the control uses. If you want to change the cursor that appears when the pointer is over the control, you must set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property. You can set this in the constructor of the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a> implementation, or you can set it in the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol#System_Windows_Forms_IDataGridViewEditingControl_PrepareEditingControlForEdit_\" data-linktype=\"relative-path\">PrepareEditingControlForEdit</a> implementation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of this member. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#311\">    // Implements the IDataGridViewEditingControl\n    // .EditingPanelCursor property.\n    public Cursor EditingPanelCursor\n    {\n        get\n        {\n            return base.Cursor;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#311\">    Public ReadOnly Property EditingControlCursor() As Cursor _\n        Implements IDataGridViewEditingControl.EditingPanelCursor\n\n        Get\n            Return MyBase.Cursor\n        End Get\n\n    End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_RepositionEditingControlOnValueChange\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_RepositionEditingControlOnValueChange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RepositionEditingControlOnValueChange</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RepositionEditingControlOnValueChange { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the contents need to be repositioned; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some situations require that cell contents reposition when the value changes. For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_ApplyCellStyleToEditingControl_System_Windows_Forms_DataGridViewCellStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_ApplyCellStyleToEditingControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyCellStyleToEditingControl(DataGridViewCellStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the control&#39;s user interface (UI) to be consistent with the specified cell style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewCellStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to use as the model for the UI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the <code>dataGridViewCellStyle</code>, which is the style used for the cell hosting the control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of this member. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#303\">    // Implements the \n    // IDataGridViewEditingControl.ApplyCellStyleToEditingControl method.\n    public void ApplyCellStyleToEditingControl(\n        DataGridViewCellStyle dataGridViewCellStyle)\n    {\n        this.Font = dataGridViewCellStyle.Font;\n        this.CalendarForeColor = dataGridViewCellStyle.ForeColor;\n        this.CalendarMonthBackground = dataGridViewCellStyle.BackColor;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#303\">    Public Sub ApplyCellStyleToEditingControl(ByVal dataGridViewCellStyle As _\n        DataGridViewCellStyle) _\n        Implements IDataGridViewEditingControl.ApplyCellStyleToEditingControl\n\n        Me.Font = dataGridViewCellStyle.Font\n        Me.CalendarForeColor = dataGridViewCellStyle.ForeColor\n        Me.CalendarMonthBackground = dataGridViewCellStyle.BackColor\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlWantsInputKey_System_Windows_Forms_Keys_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_EditingControlWantsInputKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlWantsInputKey(Keys,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified key is a regular input key that the editing control should process or a special key that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> should process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> that represents the key that was pressed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewWantsInputKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> wants to process the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> in <code>keyData</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified key is a regular input key that should be handled by the editing control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<p> The EditingControlWantsInputKey method is called by the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> will pass in <code>true</code> for <code>dataGridViewWantsInputKey</code> when it can process the <code>keyData</code>. If the editing control can let the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> handle the <code>keyData</code>, EditingControlWantsInputKey should return <code>false</code> when <code>dataGridViewWantsInputKey</code> is <code>true</code>. Other implementations of EditingControlWantsInputKey may ignore a <code>dataGridViewWantsInputKey</code> value of <code>true</code> and handle the <code>keyData</code> in the editing control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of this member. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#305\">    // Implements the IDataGridViewEditingControl.EditingControlWantsInputKey \n    // method.\n    public bool EditingControlWantsInputKey(\n        Keys key, bool dataGridViewWantsInputKey)\n    {\n        // Let the DateTimePicker handle the keys listed.\n        switch (key &amp; Keys.KeyCode)\n        {\n            case Keys.Left:\n            case Keys.Up:\n            case Keys.Down:\n            case Keys.Right:\n            case Keys.Home:\n            case Keys.End:\n            case Keys.PageDown:\n            case Keys.PageUp:\n                return true;\n            default:\n                return !dataGridViewWantsInputKey;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#305\">    Public Function EditingControlWantsInputKey(ByVal key As Keys, _\n        ByVal dataGridViewWantsInputKey As Boolean) As Boolean _\n        Implements IDataGridViewEditingControl.EditingControlWantsInputKey\n\n        &#39; Let the DateTimePicker handle the keys listed.\n        Select Case key And Keys.KeyCode\n            Case Keys.Left, Keys.Up, Keys.Down, Keys.Right, _\n                Keys.Home, Keys.End, Keys.PageDown, Keys.PageUp\n\n                Return True\n\n            Case Else\n                Return Not dataGridViewWantsInputKey\n        End Select\n\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_GetEditingControlFormattedValue_System_Windows_Forms_DataGridViewDataErrorContexts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_GetEditingControlFormattedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEditingControlFormattedValue(DataGridViewDataErrorContexts)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the formatted value of the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values that specifies the context in which the data is needed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the formatted version of the cell contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The formatted value represents the value as it is displayed in the control&#39;s user interface. The formatted value may be different in absolute value and even data type from the actual value contained in the control.  </p>\n<p> To set the formatted value of the control, use the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol#System_Windows_Forms_IDataGridViewEditingControl_EditingControlFormattedValue_\" data-linktype=\"relative-path\">EditingControlFormattedValue</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IDataGridViewEditingControl_PrepareEditingControlForEdit_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_IDataGridViewEditingControl_PrepareEditingControlForEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareEditingControlForEdit(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Prepares the currently selected cell for editing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PrepareEditingControlForEdit (bool selectAll);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectAll</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select all of the cell&#39;s content; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The purpose of this method is to prepare the control and its contents for editing. For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.IDataGridViewEditingControl.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.IDataGridViewEditingControl.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5fcb77e4-4af6-6acf-d11c-21ee67580ea3\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\IDataGridViewEditingControl.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines common functionality for controls that are hosted within cells of a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.IDataGridViewEditingControl\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.IDataGridViewEditingControl.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.IDataGridViewEditingControl.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.IDataGridViewEditingControl","System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl","System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView","System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue","System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex","System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged","System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey","System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor","System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue","System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit","System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.IDataGridViewEditingControl","System::Windows::Forms::IDataGridViewEditingControl","System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl","System::Windows::Forms::IDataGridViewEditingControl::ApplyCellStyleToEditingControl","System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView","System::Windows::Forms::IDataGridViewEditingControl::EditingControlDataGridView","System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue","System::Windows::Forms::IDataGridViewEditingControl::EditingControlFormattedValue","System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex","System::Windows::Forms::IDataGridViewEditingControl::EditingControlRowIndex","System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged","System::Windows::Forms::IDataGridViewEditingControl::EditingControlValueChanged","System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey","System::Windows::Forms::IDataGridViewEditingControl::EditingControlWantsInputKey","System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor","System::Windows::Forms::IDataGridViewEditingControl::EditingPanelCursor","System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue","System::Windows::Forms::IDataGridViewEditingControl::GetEditingControlFormattedValue","System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit","System::Windows::Forms::IDataGridViewEditingControl::PrepareEditingControlForEdit","System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange","System::Windows::Forms::IDataGridViewEditingControl::RepositionEditingControlOnValueChange"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5fcb77e4-4af6-6acf-d11c-21ee67580ea3","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\IDataGridViewEditingControl.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/IDataGridViewEditingControl.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDataGridViewEditingControl interface | Microsoft Docs","_op_ogTitle":"IDataGridViewEditingControl interface","description":"Defines common functionality for controls that are hosted within cells of a .\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.IDataGridViewEditingControl","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.idatagridvieweditingcontrol","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.idatagridvieweditingcontrol","fileRelativePath":"System.Windows.Forms.IDataGridViewEditingControl.html"},"themesRelativePathToOutputRoot":"_themes/"}