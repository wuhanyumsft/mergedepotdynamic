{"content":"    \r\n    <h1 id=\"System_Xml_XmlAttributeCollection\">\r\n      <span class=\"lang-csharp\">XmlAttributeCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of attributes that can be accessed by name or index.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">System.Xml.XmlNamedNodeMap</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlAttributeCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_Count\" data-linktype=\"relative-path\">Count</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_\" data-linktype=\"relative-path\">GetNamedItem(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_System_String_\" data-linktype=\"relative-path\">GetNamedItem(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_Item_System_Int32_\" data-linktype=\"relative-path\">Item(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_\" data-linktype=\"relative-path\">RemoveNamedItem(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_System_String_\" data-linktype=\"relative-path\">RemoveNamedItem(String,String)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p><code>XmlAttributeCollection</code> extends the <a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">XmlNamedNodeMap</a> class by adding strongly typed helper methods. You can use this class to add, remove, or modify attributes in the collection. <code>XmlAttributeCollection</code> is returned by the <a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_ItemOf_System_Int32_\" data-linktype=\"self-bookmark\">ItemOf(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute with the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_ItemOf_System_String_\" data-linktype=\"self-bookmark\">ItemOf(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_ItemOf_System_String_System_String_\" data-linktype=\"self-bookmark\">ItemOf(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_Append_System_Xml_XmlAttribute_\" data-linktype=\"self-bookmark\">Append(XmlAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified attribute as the last node in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_CopyTo_System_Xml_XmlAttribute___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(XmlAttribute[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies all the <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> objects from this collection into the given array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_InsertAfter_System_Xml_XmlAttribute_System_Xml_XmlAttribute_\" data-linktype=\"self-bookmark\">InsertAfter(XmlAttribute,XmlAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified attribute immediately after the specified reference attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_InsertBefore_System_Xml_XmlAttribute_System_Xml_XmlAttribute_\" data-linktype=\"self-bookmark\">InsertBefore(XmlAttribute,XmlAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified attribute immediately before the specified reference attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_Prepend_System_Xml_XmlAttribute_\" data-linktype=\"self-bookmark\">Prepend(XmlAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified attribute as the first node in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_Remove_System_Xml_XmlAttribute_\" data-linktype=\"self-bookmark\">Remove(XmlAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified attribute from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_RemoveAll\" data-linktype=\"self-bookmark\">RemoveAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all attributes from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the attribute corresponding to the specified index from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_SetNamedItem_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">SetNamedItem(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> using its <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">ICollection.CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Xml.XmlAttributeCollection.CopyTo*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_System_Collections_ICollection_Count\" data-linktype=\"self-bookmark\">ICollection.Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see ICollection.Count.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see ICollection.IsSynchronized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttributeCollection_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see ICollection.SyncRoot.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_ItemOf_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_ItemOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemOf(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute with the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute this[int i] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The index being passed in is out of range.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_Item_\" data-linktype=\"relative-path\">Item</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays all the attributes in the collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.this Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection. \n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display all the attributes in the collection...\\r<br>&quot;);\n    for (int i=0; i &lt; attrColl.Count; i++)\n    {\n      Console.Write(&quot;{0} = &quot;, attrColl[i].Name);\n      Console.Write(&quot;{0}&quot;, attrColl[i].Value);\n      Console.WriteLine();\n    }           \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.this Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display all the attributes in the collection...&quot;)\n    Dim i as integer\n    for i=0  to attrColl.Count-1\n      Console.Write(&quot;{0} = &quot;, attrColl.ItemOf(i).Name)\n      Console.Write(&quot;{0}&quot;, attrColl.ItemOf(i).Value)\n      Console.WriteLine()\n    next\n        \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.this Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection. \n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display all the attributes in the collection...\\r<br>&quot; );\n   for ( int i = 0; i &lt; attrColl-&gt;Count; i++ )\n   {\n      Console::Write( &quot;{0} = &quot;, attrColl[ i ]-&gt;Name );\n      Console::Write( &quot;{0}&quot;, attrColl[ i ]-&gt;Value );\n      Console::WriteLine();\n\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_ItemOf_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_ItemOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemOf(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute this[string name] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The qualified name of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> with the specified name. If the attribute does not exist, this property returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_GetNamedItem_\" data-linktype=\"relative-path\">GetNamedItem</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example removes an attribute from the document.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection and remove an attribute\n   //from the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;Remove( attrColl[ &quot;genre&quot; ] );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection and remove an attribute\n    //from the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.Remove(attrColl[&quot;genre&quot;]);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection and remove an attribute\n    &#39;from the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.Remove(attrColl.ItemOf(&quot;genre&quot;))\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_ItemOf_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_ItemOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemOf(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute with the specified local name and namespace Uniform Resource Identifier (URI).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceURI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> with the specified local name and namespace URI. If the attribute does not exist, this property returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a Microsoft extension to the Document Object Model (DOM). It is equivalent to calling <a class=\"xref\" href=\"system.xml.xmlnamednodemap#System_Xml_XmlNamedNodeMap_GetNamedItem_\" data-linktype=\"relative-path\">GetNamedItem</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_Append_System_Xml_XmlAttribute_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_Append_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Append(XmlAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified attribute as the last node in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> to insert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlAttribute</code> to append to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> was created from a document different from the one that created this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and <code>node</code> is added to the end of the collection.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a new attribute to a document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.Append Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create a new attribute.\n    XmlAttribute newAttr = doc.CreateAttribute(&quot;genre&quot;);\n    newAttr.Value = &quot;novel&quot;;\n\n    //Create an attribute collection and add the new attribute\n    //to the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.Append(newAttr);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.Append Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create a new attribute.\n   XmlAttribute^ newAttr = doc-&gt;CreateAttribute( &quot;genre&quot; );\n   newAttr-&gt;Value = &quot;novel&quot;;\n   \n   //Create an attribute collection and add the new attribute\n   //to the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;Append( newAttr );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.Append Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create a new attribute.\n    Dim newAttr as XmlAttribute = doc.CreateAttribute(&quot;genre&quot;)\n    newAttr.Value = &quot;novel&quot;\n\n    &#39;Create an attribute collection and add the new attribute\n    &#39;to the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.Append(newAttr)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_CopyTo_System_Xml_XmlAttribute___System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(XmlAttribute[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies all the <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> objects from this collection into the given array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (System.Xml.XmlAttribute[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array that is the destination of the objects copied from this collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index in the array where copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <code>CopyTo</code> to copy all the attributes in the collection into an array.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.CopyTo Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    //Declare the array.\n    XmlAttribute[] array = new XmlAttribute[2];\n    int index=0;\n\n    //Copy all the attributes into the array.\n    attrColl.CopyTo(array, index);\n\n    Console.WriteLine(&quot;Display all the attributes in the array..&quot;);\n    foreach (XmlAttribute attr in array){\n      Console.WriteLine(&quot;{0} = {1}&quot;,attr.Name,attr.Value);\n    } \n  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.CopyTo Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    &#39;Declare the array.\n    Dim array(1) as XmlAttribute\n    Dim index as integer=0\n\n    &#39;Copy all the attributes into the array.\n    attrColl.CopyTo(array, index)\n\n    Console.WriteLine(&quot;Display all the attributes in the array...&quot;)\n    Dim attr as XmlAttribute\n    for each attr in array\n      Console.WriteLine(&quot;{0} = {1}&quot;,attr.Name,attr.Value)\n    next\n        \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.CopyTo Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   \n   //Declare the array.\n   array&lt;XmlAttribute^&gt;^arr = gcnew array&lt;XmlAttribute^&gt;(2);\n   int index = 0;\n   \n   //Copy all the attributes into the array.\n   attrColl-&gt;CopyTo( arr, index );\n   Console::WriteLine( &quot;Display all the attributes in the array..&quot; );\n   System::Collections::IEnumerator^ myEnum = arr-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;{0} = {1}&quot;, attr-&gt;Name, attr-&gt;Value );\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_InsertAfter_System_Xml_XmlAttribute_System_Xml_XmlAttribute_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_InsertAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertAfter(XmlAttribute,XmlAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified attribute immediately after the specified reference attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> to insert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> that is the reference attribute. <code>newNode</code> is placed after the <code>refNode</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlAttribute</code> to insert into the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newNode</code> was created from a document different from the one that created this collection. Or the <code>refNode</code> is not a member of this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and <code>newNode</code> is inserted into the collection. If <code>refNode</code> is <code>null</code>, <code>newNode</code> is inserted at the beginning of the collection.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a new attribute to a document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.InsertAfter Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create a new attribute.\n    XmlAttribute newAttr = doc.CreateAttribute(&quot;genre&quot;);\n    newAttr.Value = &quot;novel&quot;;\n\n    //Create an attribute collection and add the new attribute\n    //to the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.InsertAfter(newAttr, attrColl[0]);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.InsertAfter Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create a new attribute.\n   XmlAttribute^ newAttr = doc-&gt;CreateAttribute( &quot;genre&quot; );\n   newAttr-&gt;Value = &quot;novel&quot;;\n   \n   //Create an attribute collection and add the new attribute\n   //to the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;InsertAfter( newAttr, attrColl[ 0 ] );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.InsertAfter Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create a new attribute.\n    Dim newAttr as XmlAttribute = doc.CreateAttribute(&quot;genre&quot;)\n    newAttr.Value = &quot;novel&quot;\n\n    &#39;Create an attribute collection and add the new attribute\n    &#39;to the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.InsertAfter(newAttr, attrColl.ItemOf(0))\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_InsertBefore_System_Xml_XmlAttribute_System_Xml_XmlAttribute_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_InsertBefore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertBefore(XmlAttribute,XmlAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified attribute immediately before the specified reference attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> to insert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> that is the reference attribute. <code>newNode</code> is placed before the <code>refNode</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlAttribute</code> to insert into the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newNode</code> was created from a document different from the one that created this collection. Or the <code>refNode</code> is not a member of this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and <code>newNode</code> is inserted into the collection. If <code>refNode</code> is <code>null</code>, <code>newNode</code> is inserted at the end of the collection.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a new attribute to a document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.InsertBefore Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create a new attribute.\n    XmlAttribute newAttr = doc.CreateAttribute(&quot;genre&quot;);\n    newAttr.Value = &quot;novel&quot;;\n\n    //Create an attribute collection and add the new attribute\n    //to the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.InsertBefore(newAttr, attrColl[0]);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.InsertBefore Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create a new attribute.\n    Dim newAttr as XmlAttribute = doc.CreateAttribute(&quot;genre&quot;)\n    newAttr.Value = &quot;novel&quot;\n\n    &#39;Create an attribute collection and add the new attribute\n    &#39;to the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.InsertBefore(newAttr, attrColl.ItemOf(0))\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.InsertBefore Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create a new attribute.\n   XmlAttribute^ newAttr = doc-&gt;CreateAttribute( &quot;genre&quot; );\n   newAttr-&gt;Value = &quot;novel&quot;;\n   \n   //Create an attribute collection and add the new attribute\n   //to the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;InsertBefore( newAttr, attrColl[ 0 ] );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_Prepend_System_Xml_XmlAttribute_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_Prepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Prepend(XmlAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified attribute as the first node in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> to insert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlAttribute</code> added to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an attribute with the same name is already present in the collection, the original attribute is removed from the collection and <code>node</code> is added to the beginning of the collection.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a new attribute to a document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.Prepend Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create a new attribute.\n    XmlAttribute newAttr = doc.CreateAttribute(&quot;genre&quot;);\n    newAttr.Value = &quot;novel&quot;;\n\n    //Create an attribute collection and add the new attribute\n    //to the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.Prepend(newAttr);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.Prepend Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create a new attribute.\n   XmlAttribute^ newAttr = doc-&gt;CreateAttribute( &quot;genre&quot; );\n   newAttr-&gt;Value = &quot;novel&quot;;\n   \n   //Create an attribute collection and add the new attribute\n   //to the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;Prepend( newAttr );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.Prepend Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create a new attribute.\n    Dim newAttr as XmlAttribute = doc.CreateAttribute(&quot;genre&quot;)\n    newAttr.Value = &quot;novel&quot;\n\n    &#39;Create an attribute collection and add the new attribute\n    &#39;to the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.Prepend(newAttr)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_Remove_System_Xml_XmlAttribute_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(XmlAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified attribute from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>The node removed or <code>null</code> if it is not found in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example removes an attribute from the document.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection and remove an attribute\n   //from the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;Remove( attrColl[ &quot;genre&quot; ] );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection and remove an attribute\n    //from the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.Remove(attrColl[&quot;genre&quot;]);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.Remove Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection and remove an attribute\n    &#39;from the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.Remove(attrColl.ItemOf(&quot;genre&quot;))\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_RemoveAll\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_RemoveAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAll()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all attributes from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example removes all attributes from the document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.RemoveAll Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection and remove all attributes\n    //from the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.RemoveAll();\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);\n  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.RemoveAll Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection and remove all attributes\n   //from the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;RemoveAll();\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.RemoveAll Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection and remove an attribute\n    &#39;from the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.RemoveAll()\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the attribute corresponding to the specified index from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlAttribute RemoveAt (int i);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the node to remove. The first node has index 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a></div>\r\n                  </div>\r\n                  <p>Returns <code>null</code> if there is no attribute at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example removes an attribute from the document.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.RemoveAt Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection and remove an attribute\n    //from the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.RemoveAt(0);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.RemoveAt Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create an attribute collection and remove an attribute\n    &#39;from the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.RemoveAt(0)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.RemoveAt Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection and remove an attribute\n   //from the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;RemoveAt( 0 );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_SetNamedItem_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_SetNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetNamedItem(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> using its <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>If the <code>node</code> replaces an existing node with the same name, the old node is returned; otherwise, the added node is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> was created from a different <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> than the one that created this collection.  </p>\n<p> This <code>XmlAttributeCollection</code> is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is an <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> that is already an attribute of another <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object. To re-use attributes in other elements, you must clone the <code>XmlAttribute</code> objects you want to re-use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds a new attribute to a document.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttributeCollection.SetNamedItem Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create a new attribute.\n   XmlAttribute^ newAttr = doc-&gt;CreateAttribute( &quot;genre&quot; );\n   newAttr-&gt;Value = &quot;novel&quot;;\n   \n   //Create an attribute collection and add the new attribute\n   //to the collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   attrColl-&gt;SetNamedItem( newAttr );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttributeCollection.SetNamedItem Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create a new attribute.\n    XmlAttribute newAttr = doc.CreateAttribute(&quot;genre&quot;);\n    newAttr.Value = &quot;novel&quot;;\n\n    //Create an attribute collection and add the new attribute\n    //to the collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n    attrColl.SetNamedItem(newAttr);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    Console.WriteLine(doc.OuterXml);  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttributeCollection.SetNamedItem Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)      \n\n    &#39;Create a new attribute.\n    Dim newAttr as XmlAttribute = doc.CreateAttribute(&quot;genre&quot;)\n    newAttr.Value = &quot;novel&quot;\n\n    &#39;Create an attribute collection and add the new attribute\n    &#39;to the collection.  \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n    attrColl.SetNamedItem(newAttr)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Xml.XmlAttributeCollection.CopyTo*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection.CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array that is the destination of the objects copied from this collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index in the array where copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> instance is cast to an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_Count\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.Count</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see ICollection.Count.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int System.Collections.ICollection.Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>int</code> that contains the count of the attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> instance is cast to an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see ICollection.IsSynchronized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <code>true</code> if the collection is synchronized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> instance is cast to an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Xml_XmlAttributeCollection_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see ICollection.SyncRoot.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that is the root of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> instance is cast to an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlAttributeCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlAttributeCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.Append\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.InsertAfter\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.InsertBefore\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.ItemOf\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.Prepend\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.Remove\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.RemoveAll\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.SetNamedItem\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.ICollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.ICollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttributeCollection.ICollection.SyncRoot\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8a8b914b-6272-6cfa-2028-37d173ff5140\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of attributes that can be accessed by name or index.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlAttributeCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlAttributeCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlAttributeCollection.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlAttributeCollection","System.Xml.XmlAttributeCollection.Append","System.Xml.XmlAttributeCollection.CopyTo","System.Xml.XmlAttributeCollection.InsertAfter","System.Xml.XmlAttributeCollection.InsertBefore","System.Xml.XmlAttributeCollection.ItemOf","System.Xml.XmlAttributeCollection.Prepend","System.Xml.XmlAttributeCollection.Remove","System.Xml.XmlAttributeCollection.RemoveAll","System.Xml.XmlAttributeCollection.RemoveAt","System.Xml.XmlAttributeCollection.SetNamedItem","System.Xml.XmlAttributeCollection.ICollection.CopyTo","System.Xml.XmlAttributeCollection.ICollection.Count","System.Xml.XmlAttributeCollection.ICollection.IsSynchronized","System.Xml.XmlAttributeCollection.ICollection.SyncRoot"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlAttributeCollection","System::Xml::XmlAttributeCollection","System.Xml.XmlAttributeCollection.Append","System::Xml::XmlAttributeCollection::Append","System.Xml.XmlAttributeCollection.CopyTo","System::Xml::XmlAttributeCollection::CopyTo","System.Xml.XmlAttributeCollection.InsertAfter","System::Xml::XmlAttributeCollection::InsertAfter","System.Xml.XmlAttributeCollection.InsertBefore","System::Xml::XmlAttributeCollection::InsertBefore","System.Xml.XmlAttributeCollection.ItemOf","System::Xml::XmlAttributeCollection::ItemOf","System.Xml.XmlAttributeCollection.Prepend","System::Xml::XmlAttributeCollection::Prepend","System.Xml.XmlAttributeCollection.Remove","System::Xml::XmlAttributeCollection::Remove","System.Xml.XmlAttributeCollection.RemoveAll","System::Xml::XmlAttributeCollection::RemoveAll","System.Xml.XmlAttributeCollection.RemoveAt","System::Xml::XmlAttributeCollection::RemoveAt","System.Xml.XmlAttributeCollection.SetNamedItem","System::Xml::XmlAttributeCollection::SetNamedItem","System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo","System::Xml::XmlAttributeCollection::System#Collections#ICollection#CopyTo","System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count","System::Xml::XmlAttributeCollection::System#Collections#ICollection#Count","System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized","System::Xml::XmlAttributeCollection::System#Collections#ICollection#IsSynchronized","System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot","System::Xml::XmlAttributeCollection::System#Collections#ICollection#SyncRoot"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8a8b914b-6272-6cfa-2028-37d173ff5140","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlAttributeCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlAttributeCollection class | Microsoft Docs","_op_ogTitle":"XmlAttributeCollection class","description":"Represents a collection of attributes that can be accessed by name or index.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlAttributeCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlattributecollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlattributecollection","fileRelativePath":"System.Xml.XmlAttributeCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}