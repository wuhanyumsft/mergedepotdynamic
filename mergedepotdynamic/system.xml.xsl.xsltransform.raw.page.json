{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XslTransform</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202&quot;)]\npublic sealed class XslTransform</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">XslTransform</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<div class=\"NOTE\"><h5>Note</h5><p> The XslTransform class is obsolete in the Microsoft .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> XslTransform supports the XSLT 1.0 syntax. The XSLT style sheet must use the namespace <code>http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> Additional arguments can also be added to the style sheet using the <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> class. This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.  </p>\n<p> To transform XML data:  </p>\n<ol>\n<li><p>Create an XslTransform object.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method to load the style sheet for the transformation. This method has several overloads and can load a style sheet using an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>, <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>, <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a>, or a URL with the location of the file.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method to transform the XML data. This method has several overloads and can handle different types of input and output. You can also specify an <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing additional arguments to use as input during the transformation.  </p>\n<p><strong>Security Considerations</strong>  </p>\n<p>When creating an application that uses the XslTransform class, you should be aware of the following items and their implications:  </p>\n</li>\n</ol>\n<ul>\n<li><p>Extension objects are enabled by default. If an <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> object containing extension objects is passed to the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method, they are utilized.  </p>\n</li>\n<li><p>XSLT style sheets can include references to other files and embedded script blocks. A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.  </p>\n</li>\n<li><p>XSLT applications that run in a mixed trust environment can result in style sheet spoofing. For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method and executes the transformation.  </p>\n<p>These security issues can be mitigated by not accepting XslTransform objects, XSLT style sheets, or XML source data from untrusted sources.  </p>\n<p><strong>Scripting Support</strong>  </p>\n<p>This class supports embedded scripting using the <code>msxsl:script</code> element.  </p>\n<p>In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.  </p>\n</li>\n<li><p>If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence. This evidence includes the URI along with its site and zone.  </p>\n</li>\n<li><p>If the style sheet was loaded using another source, you can provide evidence by passing a <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">System.Security.Policy.Evidence</a> object to the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method. Otherwise, the script assembly has full trust.  </p>\n<p>Semi-trusted callers: <code>UnmanagedCode</code> permission is required to compile the embedded script. <code>ControlEvidence</code> permission is required to provide <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> to the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown if the caller does not have the necessary permissions. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.  </p>\n<p>The <code>msxsl:script</code> element has the following requirements:  </p>\n</li>\n<li><p>The <code>msxsl:script</code> element belongs to the <code>urn:schemas-microsoft-com:xslt</code> namespace. The style sheet must include the namespace declaration <code>xmlns:msxsl=urn:schemas-microsoft-com:xslt</code>.  </p>\n</li>\n<li><p>The <code>msxsl:script</code> element can include a <code>language</code> attribute that specifies the scripting language to use. The value of the <code>language</code> attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript. Because the language name is not case-sensitive, JavaScript and javascript are both valid. If a <code>language</code> attribute is not specified, it defaults to JScript.  </p>\n</li>\n<li><p>The <code>msxsl:script</code> element must include an <code>implements-prefix</code> attribute that contains the prefix representing the namespace associated with the script block. This namespace must be defined within the style sheet. A style sheet can include multiple script blocks which are grouped by namespace. You cannot have script blocks with multiple languages within the same namespace. Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace. The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the <code>language</code> attribute). For example, if you had a C# script block, comments would be prefixed by the <code>//</code> characters. The comments must be valid XML content.  </p>\n<p><code>Note</code> It is recommended that you wrap script blocks in a CDATA section.  </p>\n</li>\n</ul>\n<pre><code>&lt;msxsl:script implements-prefix=&#39;xy&#39; language=&#39;C#&#39;&gt;  \n  &lt;![CDATA[  \n  // Add code here.  \n  ]]&gt;  \n&lt;/msxsl:script&gt;  \n</code></pre><p> Functions can be declared within the <code>msxsl:script</code> element. The following table shows the namespaces that are supported by default.  </p>\n<table>\n<thead>\n<tr>\n<th>Supported Namespaces</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>System</code></td>\n<td>System classes.</td>\n</tr>\n<tr>\n<td><code>System.Collection</code></td>\n<td>Collection classes.</td>\n</tr>\n<tr>\n<td><code>System.Text</code></td>\n<td>Text handling classes.</td>\n</tr>\n<tr>\n<td><code>System.Xml</code></td>\n<td>Core XML classes.</td>\n</tr>\n<tr>\n<td><code>System.Xml.Xsl</code></td>\n<td>XSLT classes.</td>\n</tr>\n<tr>\n<td><code>System.Xml.XPath</code></td>\n<td>XML Path Language (XPath) classes.</td>\n</tr>\n</tbody>\n</table>\n<p> The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below. The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.  </p>\n<table>\n<thead>\n<tr>\n<th>W3C Type</th>\n<th>Equivalent .NET class</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String (XPath)</td>\n<td><code>System.String</code></td>\n</tr>\n<tr>\n<td>Boolean (XPath)</td>\n<td><code>System.Boolean</code></td>\n</tr>\n<tr>\n<td>Number (XPath)</td>\n<td><code>System.Double</code></td>\n</tr>\n<tr>\n<td>Result Tree Fragment (XSLT)</td>\n<td><code>System.Xml.XPath.XPathNavigator</code></td>\n</tr>\n<tr>\n<td>Node Set (XPath)</td>\n<td><code>System.Xml.XPath.XPathNodeIterator</code></td>\n</tr>\n</tbody>\n</table>\n<p> If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.  </p>\n<p> An exception is thrown when a function is called that cannot convert the argument result to one of the required types.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>msxsl:script</code> and <code>msxsl:node-list</code> are the only functions from the <code>urn:schemas-microsoft-com:xslt</code> namespace that are supported by the XslTransform class.  </p>\n</div>\n<p> XslTransform has the ability to utilize common language runtime (CLR) code as an extension mechanism. This is accomplished by passing an instance of a class to the XslTransform class and calling its public methods within an XSLT style sheet. Methods that are defined with the <code>params</code> keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario. See <a href=\"../Topic/params%20(C%23%20Reference).md\" data-linktype=\"relative-path\">params</a> for more details.  </p>\n<p> For more information see <a href=\"../Topic/XSLT%20Transformations%20with%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">XSLT Transformations with the XslTransform Class</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XslTransform()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XslTransform ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_XmlResolver\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XmlResolver</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve external resources when the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Transform*</span> method is called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlResolver XmlResolver { set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> to use during transformation. If set to <code>null</code>, the XSLT <code>document()</code> function is not resolved.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:  </p>\n<p> <code>Fully trusted code:</code> A default <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials is used to resolve the <code>document()</code> function. If authentication is required to access the external resource, use this property to specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> with the necessary credentials.  </p>\n<p> <code>Semi-trusted code:</code> The property is set to <code>null</code>, which means the <code>document()</code> function is not resolved. Because full trust is required to specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a>, this property also cannot be set.  </p>\n<p> This resolver is used when the XSLT <code>document()</code> function is invoked. It is not used to resolve <code>xsl:import</code> and <code>xsl:include</code> elements referenced in the style sheet. To specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> to use to resolve <code>xsl:import</code> and <code>xsl:include</code> elements referenced in the style sheet, use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> overload, which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> as one of its arguments.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property is obsolete in version 1.1 of the .NET Framework. Specifying an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method is the recommended practice. In this case, the <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method completes.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet specified by a URL.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (string url);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>url</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL that specifies the XSLT style sheet to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The loaded resource is not a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded script, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl=``http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. External resources are resolved using an <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials. If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> as one of its arguments and specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> with the necessary credentials.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The URI of the style sheet is used to create evidence, which is applied to the assembly. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XmlReader stylesheet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object that contains the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. External resources are resolved using an <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials. If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> as one of its arguments and specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> with the necessary credentials.  </p>\n<p> The style sheet loads from the current node of the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> through all its children. This enables you to use a portion of a document as the style sheet. After the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method returns, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned on the next node after the end of the style sheet. If the end of the document is reached, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned at the end of file (EOF).  </p>\n<p> If the style sheet contains entities, you should specify an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that can resolve entities (<a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_CanResolveEntity_\" data-linktype=\"relative-path\">CanResolveEntity</a> returns <code>true</code>). In this case, an <a class=\"xref\" href=\"system.xml.xmlvalidatingreader\" data-linktype=\"relative-path\">XmlValidatingReader</a> can be used.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XmlReader_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(XmlReader,XmlResolver,Evidence)</a> method. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_IXPathNavigable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IXPathNavigable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.IXPathNavigable stylesheet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The loaded resource is not a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. External resources are resolved using an <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials. If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> as one of its arguments and specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> with the necessary credentials.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_IXPathNavigable_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(IXPathNavigable,XmlResolver,Evidence)</a> method. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_XPathNavigator_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XPathNavigator)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.XPathNavigator stylesheet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object that contains the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. External resources are resolved using an <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials. If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> as one of its arguments and specify an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> with the necessary credentials.  </p>\n<p> The style sheet is loaded from the current position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet. After the Load method returns, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> is positioned at the beginning of the style sheet (on the <code>xsl:style sheet</code> node).  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_XPathNavigator_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(XPathNavigator,XmlResolver,Evidence)</a> method. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_String_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(String,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet specified by a URL.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (string url, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>url</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL that specifies the XSLT style sheet to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> to use to load the style sheet and any style sheet(s) referenced in <code>xsl:import</code> and <code>xsl:include</code> elements.  </p>\n<p> If this is <code>null</code>, a default <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> with no user credentials is used to open the style sheet. The default <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> is not used to resolve any external resources in the style sheet, so <code>xsl:import</code> and <code>xsl:include</code> elements are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Load method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The loaded resource is not a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded script, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The URI of the style sheet is used to create evidence, which is applied to the assembly. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XmlReader_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XmlReader,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object that contains the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Load method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. The style sheet loads from the current node of the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> through all its children. This enables you to use a portion of a document as the style sheet.  </p>\n<p> After the Load method returns, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned on the next node after the end of the style sheet. If the end of the document is reached, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned at the end of file (EOF).  </p>\n<p> If the style sheet contains entities, you should specify an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that can resolve entities (<a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_CanResolveEntity_\" data-linktype=\"relative-path\">CanResolveEntity</a> returns <code>true</code>). In this case, an <a class=\"xref\" href=\"system.xml.xmlvalidatingreader\" data-linktype=\"relative-path\">XmlValidatingReader</a> can be used.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XmlReader_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(XmlReader,XmlResolver,Evidence)</a> method. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_IXPathNavigable_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IXPathNavigable,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Load*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The loaded resource is not a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_IXPathNavigable_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(IXPathNavigable,XmlResolver,Evidence)</a> method. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_XPathNavigator_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XPathNavigator,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object that contains the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Load*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The style sheet contains embedded scripts, and the caller does not have <code>UnmanagedCode</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The style sheet is loaded from the current position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet. After the Load method returns, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> is positioned at the beginning of the style sheet (on the <code>xsl:style sheet</code> node).  </p>\n<p> If the style sheet contains embedded scripting, the script is compiled to an assembly. The assembly has full trust. The recommended practice is to provide evidence using the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_XPathNavigator_System_Xml_XmlResolver_System_Security_Policy_Evidence_\" data-linktype=\"relative-path\">Load(XPathNavigator,XmlResolver,Evidence)</a>. For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the caller does not have <code>UnmanagedCode</code> permission, the embedded script is not compiled and a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown. See <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">System.Security.Permissions.SecurityPermissionFlag</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XmlReader_System_Xml_XmlResolver_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XmlReader,XmlResolver,Evidence)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>. This method allows you to limit the permissions of the style sheet by specifying evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object containing the style sheet to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Load*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> set on the assembly generated for the script block in the XSLT style sheet.  </p>\n<p> If this is <code>null</code>, script blocks are not processed, the XSLT <code>document()</code> function is not supported, and privileged extension objects are disallowed.  </p>\n<p> The caller must have <code>ControlEvidence</code> permission in order to supply evidence for the script assembly. Semi-trusted callers can set this parameter to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The referenced style sheet requires functionality that is not allowed by the evidence provided.  </p>\n<p> The caller tries to supply evidence and does not have <code>ControlEvidence</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> This method loads the XSLT style sheet, including any style sheets referenced in <code>xsl:include</code> and <code>xsl:import</code> elements. The style sheet loads from the current node of the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> through all its children. This enables you to use a portion of a document as the style sheet.  </p>\n<p> After the Load method returns, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned on the next node after the end of the style sheet. If the end of the document is reached, the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is positioned at the end of file (EOF).  </p>\n<p> If the style sheet contains entities, you should specify an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that can resolve entities (<a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_CanResolveEntity_\" data-linktype=\"relative-path\">CanResolveEntity</a> returns <code>true</code>). In this case, an <a class=\"xref\" href=\"system.xml.xmlvalidatingreader\" data-linktype=\"relative-path\">XmlValidatingReader</a> can be used.  </p>\n<p> For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<p> There are different ways to provide evidence. The following table describes what type of evidence to provide for common user scenarios.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_IXPathNavigable_System_Xml_XmlResolver_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IXPathNavigable,XmlResolver,Evidence)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a>. This method allows you to limit the permissions of the style sheet by specifying evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the XSLT style sheet.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Load*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> set on the assembly generated for the script block in the XSLT style sheet.  </p>\n<p> If this is <code>null</code>, script blocks are not processed, the XSLT <code>document()</code> function is not supported, and privileged extension objects are disallowed.  </p>\n<p> The caller must have <code>ControlEvidence</code> permission in order to supply evidence for the script assembly. Semi-trusted callers can set this parameter to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The loaded resource is not a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The referenced style sheet requires functionality that is not allowed by the evidence provided.  </p>\n<p> The caller tries to supply evidence and does not have <code>ControlEvidence</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<p> There are different ways to provide evidence. The following table describes what type of evidence to provide for common user scenarios.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Load_System_Xml_XPath_XPathNavigator_System_Xml_XmlResolver_System_Security_Policy_Evidence_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(XPathNavigator,XmlResolver,Evidence)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Loads the XSLT style sheet contained in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. This method allows you to limit the permissions of the style sheet by specifying evidence.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stylesheet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object containing the style sheet to load.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to load any style sheets referenced in <code>xsl:import</code> and <code>xsl:include</code> elements. If this is <code>null</code>, external resources are not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Load*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>evidence</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> set on the assembly generated for the script block in the XSLT style sheet.  </p>\n<p> If this is <code>null</code>, script blocks are not processed, the XSLT <code>document()</code> function is not supported, and privileged extension objects are disallowed.  </p>\n<p> The caller must have <code>ControlEvidence</code> permission in order to supply evidence for the script assembly. Semi-trusted callers can set this parameter to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltcompileexception\" data-linktype=\"relative-path\">XsltCompileException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current node does not conform to a valid style sheet.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The referenced style sheet requires functionality that is not allowed by the evidence provided.  </p>\n<p> The caller tries to supply evidence and does not have <code>ControlEvidence</code> permission.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The style sheet is loaded from the current position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a>. To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet. After the Load method returns, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> is positioned at the beginning of the style sheet (on the <code>xsl:style sheet</code> node).  </p>\n<p> For issues with the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Load_\" data-linktype=\"relative-path\">Load</a> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.  </p>\n<p> There are different ways to provide evidence. The following table describes what type of evidence to provide for common user scenarios.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the input file and outputs the result to an output file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (string inputfile, string outputfile);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inputfile</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL of the source document to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>outputfile</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL of the output file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is obsolete in version 1.1 of the .NET Framework. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> containing the results of the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.  </p>\n</div>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> (the <code>xsl:output</code> element is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> This method enables you to do an asynchronous transformation of the source document.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> containing the results of the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation has been performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> Because <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> provides read-only output, the <code>xsl:output</code> element is ignored. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> This method enables you to do an asynchronous transformation of the source document.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT document() function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_String_System_String_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(String,String,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the input file and outputs the result to an output file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>inputfile</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL of the source document to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>outputfile</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URL of the output file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Transform*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.  </p>\n</div>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.  </p>\n</div>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet.  </p>\n<p> The encoding attribute on an <code>xsl:output</code> element is not supported when outputting to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment, and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> containing the results of the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> (the <code>xsl:output</code> element is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> This method enables you to do an asynchronous transformation of the source document.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment, and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out, null);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.  </p>\n</div>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> (<code>xsl:output</code> is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;  \n  &lt;template match=&quot;/&quot;&gt;  \n  Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation has been performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation is performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> The encoding attribute on an <code>xsl:output</code> element is not supported when outputting to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> containing the results of the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation has been performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> Because <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> provides read-only output, the <code>xsl:output</code> element is ignored. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> This method enables you to do an asynchronous transformation of the source document.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified args and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation is performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, that is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> (<code>xsl:output</code> is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is now obsolete. The setting of the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property determines how the XSLT <code>document()</code> function is resolved. The recommended practice is to use the <a class=\"xref\" href=\"system.xml.xsl.xsltransform#System_Xml_Xsl_XslTransform_Transform_\" data-linktype=\"relative-path\">Transform</a> method which takes an <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object as one of its arguments.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_IO_Stream_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the <span class=\"xref\">stem.Xml.Xsl.XslTransform.Transform*</span> method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out, null);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_IO_TextWriter_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet.  </p>\n<p> The encoding attribute on an <code>xsl:output</code> element is not supported when outputting to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out, null);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;   \n  &lt;template match=&quot;/&quot;&gt;  \n     Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_IXPathNavigable_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlWriter_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> using the specified <code>args</code> and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object implementing the <a class=\"xref\" href=\"system.xml.xpath.ixpathnavigable\" data-linktype=\"relative-path\">IXPathNavigable</a> interface. In the .NET Framework, this can be either an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> (typically an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>), or an <a class=\"xref\" href=\"system.xml.xpath.xpathdocument\" data-linktype=\"relative-path\">XPathDocument</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> (<code>xsl:output</code> is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.  </p>\n<p> Transformations apply to the document as a whole. In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. To transform a node fragment, you must create an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> containing just the node fragment and pass that <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to the Transform method.  </p>\n<p> The following example performs a transformation on a node fragment.  </p>\n<pre><code>XslTransform xslt = new XslTransform();       \nxslt.Load(&quot;print_root.xsl&quot;);  \nXmlDocument doc = new XmlDocument();  \ndoc.Load(&quot;library.xml&quot;);  \n// Create a new document containing just the node fragment.  \nXmlNode testNode = doc.DocumentElement.FirstChild;   \nXmlDocument tmpDoc = new XmlDocument();   \ntmpDoc.LoadXml(testNode.OuterXml);  \n// Pass the document containing the node fragment   \n// to the Transform method.  \nConsole.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);  \nxslt.Transform(tmpDoc, null, Console.Out, null);  \n</code></pre><p> The example uses the <code>library.xml</code> and <code>print_root.xsl</code> files as input and outputs the following to the console.  </p>\n<pre><code>Passing &lt;book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt; to print_root.xsl   \nRoot node is book.  \n</code></pre><p> <code>library.xml</code>  </p>\n<pre><code>&lt;library&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;  \n     &lt;title&gt;Pride And Prejudice&lt;/title&gt;  \n  &lt;/book&gt;  \n  &lt;book genre=&#39;novel&#39; ISBN=&#39;1-81920-21-2&#39;&gt;  \n     &lt;title&gt;Hook&lt;/title&gt;  \n  &lt;/book&gt;  \n&lt;/library&gt;  \n</code></pre><p> <code>print_root.xsl</code>  </p>\n<pre><code>&lt;style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; &gt;  \n  &lt;output method=&quot;text&quot; /&gt;  \n  &lt;template match=&quot;/&quot;&gt;  \n  Root node is  &lt;value-of select=&quot;local-name(//*[position() = 1])&quot; /&gt;   \n  &lt;/template&gt;  \n&lt;/style sheet&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_IO_Stream_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The stream to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation has been performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_IO_TextWriter_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified <code>args</code> and outputs the result to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation is performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, which is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> The encoding attribute on an <code>xsl:output</code> element is not supported when outputting to a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for specifics on which <code>xsl:output</code> attributes are supported.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xml_Xsl_XslTransform_Transform_System_Xml_XPath_XPathNavigator_System_Xml_Xsl_XsltArgumentList_System_Xml_XmlWriter_System_Xml_XmlResolver_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Transforms the XML data in the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> using the specified args and outputs the result to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>input</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> containing the data to be transformed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>args</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.xml.xsl.xsltargumentlist\" data-linktype=\"relative-path\">XsltArgumentList</a> containing the namespace-qualified arguments used as input to the transformation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>output</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to which you want to output.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resolver</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> used to resolve the XSLT <code>document()</code> function. If this is <code>null</code>, the <code>document()</code> function is not resolved.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> is not cached after the Transform method completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>There was an error processing the XSLT transformation.  </p>\n<p> Note: This is a change in behavior from earlier versions. An <a class=\"xref\" href=\"system.xml.xsl.xsltexception\" data-linktype=\"relative-path\">XsltException</a> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> class is obsolete in the .NET Framework version 2.0. The <a class=\"xref\" href=\"system.xml.xsl.xslcompiledtransform\" data-linktype=\"relative-path\">XslCompiledTransform</a> class is the new XSLT processor. For more information, see <a href=\"../Topic/Using%20the%20XslCompiledTransform%20Class.md\" data-linktype=\"relative-path\">Using the XslCompiledTransform Class</a> and <a href=\"../Topic/Migrating%20From%20the%20XslTransform%20Class.md\" data-linktype=\"relative-path\">Migrating From the XslTransform Class</a>.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.xml.xsl.xsltransform\" data-linktype=\"relative-path\">XslTransform</a> supports the XSLT 1.0 syntax. The XSLT style sheet must include the namespace declaration <code>xmlns:xsl= http://www.w3.org/1999/XSL/Transform</code>.  </p>\n<p> The <code>args</code> are matched with the <code>xsl:param</code> elements defined in the style sheet. The transformation selections apply to the document as a whole. In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document. After the transformation is performed, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains in its original state. This means that the node, that is current before the transformation process, remains the current node after the Transform method has been called.  </p>\n<p> The <code>xsl:output</code> element is not supported when outputting to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> (<code>xsl:output</code> is ignored). See <a href=\"../Topic/Outputs%20from%20an%20XslTransform.md\" data-linktype=\"relative-path\">Outputs from an XslTransform</a> for more information.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Xsl.XslTransform.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Xsl.XslTransform.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Xsl.XslTransform\">\r\n<meta name=\"APIName\" content=\"System.Xml.Xsl.XslTransform..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Xsl.XslTransform.Load\">\r\n<meta name=\"APIName\" content=\"System.Xml.Xsl.XslTransform.Transform\">\r\n<meta name=\"APIName\" content=\"System.Xml.Xsl.XslTransform.XmlResolver\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ea0a9757-2a7a-b03e-184a-5df96f801bd9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Xsl/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Xsl.XslTransform\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Xsl.XslTransform.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Xsl.XslTransform.yml","open_to_public_contributors":true,"api_name":["System.Xml.Xsl.XslTransform","System.Xml.Xsl.XslTransform..ctor","System.Xml.Xsl.XslTransform.Load","System.Xml.Xsl.XslTransform.Transform","System.Xml.Xsl.XslTransform.XmlResolver"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Xsl.XslTransform","System::Xml::Xsl::XslTransform","System.Xml.Xsl.XslTransform.#ctor","System::Xml::Xsl::XslTransform::#ctor","System.Xml.Xsl.XslTransform.Load","System::Xml::Xsl::XslTransform::Load","System.Xml.Xsl.XslTransform.Transform","System::Xml::Xsl::XslTransform::Transform","System.Xml.Xsl.XslTransform.XmlResolver","System::Xml::Xsl::XslTransform::XmlResolver"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ea0a9757-2a7a-b03e-184a-5df96f801bd9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Xsl/XslTransform.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XslTransform class | Microsoft Docs","_op_ogTitle":"XslTransform class","description":"Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.\n","toc_asset_id":"_splitted/System.Xml.Xsl/toc.json","toc_rel":"_splitted/System.Xml.Xsl/toc.json","source_url":"","ms.assetid":"System.Xml.Xsl.XslTransform","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xsl.xsltransform","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xsl.xsltransform","fileRelativePath":"System.Xml.Xsl.XslTransform.html"},"themesRelativePathToOutputRoot":"_themes/"}