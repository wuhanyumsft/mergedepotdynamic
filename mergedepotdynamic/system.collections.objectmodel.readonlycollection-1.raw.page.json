{"content":"    \r\n    <h1 id=\"System_Collections_ObjectModel_ReadOnlyCollection_1\">\r\n      <span class=\"lang-csharp\">ReadOnlyCollection&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the base class for a generic read-only collection.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;Count = {Count}&quot;)]\n[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic class ReadOnlyCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of elements in the collection.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ReadOnlyCollection&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An instance of the ReadOnlyCollection(T) generic class is always read-only.  A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  See <a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection&lt;T&gt;</a> for a modifiable version of this class.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1__ctor_System_Collections_Generic_IList__0__\" data-linktype=\"self-bookmark\">ReadOnlyCollection&lt;T&gt;(IList&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> class that is a read-only wrapper around the specified list.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of elements contained in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the element at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_Items\" data-linktype=\"self-bookmark\">Items</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <span class=\"xref\">stem.Collections.Generic.IList`1</span> that the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> wraps.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains__0_\" data-linktype=\"self-bookmark\">Contains(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether an element is in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo__0___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(T[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the entire <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> to a compatible one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index of the target array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_IndexOf__0_\" data-linktype=\"self-bookmark\">IndexOf(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Add__0_\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.Add(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an item to the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Clear\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all items from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__IsReadOnly\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Remove__0_\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.Remove(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first occurrence of a specific object from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Insert_System_Int32__0_\" data-linktype=\"self-bookmark\">IList&lt;T&gt;.Insert(Int32,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts an item to the <span class=\"xref\">stem.Collections.Generic.IList`1</span> at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Item_System_Int32_\" data-linktype=\"self-bookmark\">IList&lt;T&gt;.Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the element at the specified index. An <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> occurs if you try to set the item at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">IList&lt;T&gt;.RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the <span class=\"xref\">stem.Collections.Generic.IList`1</span> item at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">ICollection.CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Add_System_Object_\" data-linktype=\"self-bookmark\">IList.Add(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Clear\" data-linktype=\"self-bookmark\">IList.Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all items from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Contains_System_Object_\" data-linktype=\"self-bookmark\">IList.Contains(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> contains a specific value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_System_Object_\" data-linktype=\"self-bookmark\">IList.IndexOf(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Insert_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">IList.Insert(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsFixedSize\" data-linktype=\"self-bookmark\">IList.IsFixedSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> has a fixed size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsReadOnly\" data-linktype=\"self-bookmark\">IList.IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Item_System_Int32_\" data-linktype=\"self-bookmark\">IList.Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the element at the specified index. A <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> occurs if you try to set the item at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Remove_System_Object_\" data-linktype=\"self-bookmark\">IList.Remove(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first occurrence of a specific object from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">IList.RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> item at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1__ctor_System_Collections_Generic_IList__0__\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnlyCollection&lt;T&gt;(IList&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> class that is a read-only wrapper around the specified list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ReadOnlyCollection (System.Collections.Generic.IList&lt;T&gt; list);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>list</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The list to wrap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>list</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To prevent any modifications to <code>list</code>, expose <code>list</code> only through this wrapper.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  </p>\n<p> This constructor is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates this constructor and several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class.  </p>\n<p> The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> by passing it to the constructor.  </p>\n<p> After demonstrating the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\" data-linktype=\"relative-path\">Contains</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\" data-linktype=\"relative-path\">Item</a>, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Count\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of elements contained in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of elements contained in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class. The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> After demonstrating the Count, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\" data-linktype=\"relative-path\">Contains</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\" data-linktype=\"relative-path\">Item</a>, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the element at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T this[int index] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the element to get.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The element at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> is equal to or greater than <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1.Count*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property provides the ability to access a specific element in the collection by using the following C# syntax: <code>myCollection[index]</code> (<code>myCollection(index)</code> in Visual Basic).  </p>\n<p> The C# language uses the  keyword to define the indexers instead of implementing the Item property. Visual Basic implements Item as a default property, which provides the same indexing functionality.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class. The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> After demonstrating the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\" data-linktype=\"relative-path\">Contains</a>, Item, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Items\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Items_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Items</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <span class=\"xref\">stem.Collections.Generic.IList`1</span> that the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> wraps.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Collections.Generic.IList&lt;T&gt; Items { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList<t></t></a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.IList`1</span> that the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> wraps.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class. The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> After demonstrating the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\" data-linktype=\"relative-path\">Contains</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\" data-linktype=\"relative-path\">Item</a>, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Contains__0_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(T)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether an element is in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to locate in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>. The value can be <code>null</code> for reference types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>value</code> is found in the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method determines equality using the default equality comparer <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class. The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> After demonstrating the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>, Contains, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\" data-linktype=\"relative-path\">Item</a>, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo__0___System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(T[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the entire <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> to a compatible one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index of the target array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (T[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The number of elements in the source <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses <a class=\"xref\" href=\"system.array#System_Array_Copy_\" data-linktype=\"relative-path\">Copy</a> to copy the elements.  </p>\n<p> The elements are copied to the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> in the same order that the enumerator iterates through the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several members of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> class. The code example creates a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> of strings and adds four dinosaur names to it. The code example then wraps the list in a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> After demonstrating the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Contains_\" data-linktype=\"relative-path\">Contains</a>, <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Item_\" data-linktype=\"relative-path\">Item</a>, and <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\" data-linktype=\"relative-path\">System.Collections.IList.IndexOf</a> members, the code example shows that the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is just a wrapper for the original <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> by adding a new item to the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> and displaying the contents of the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a>.  </p>\n<p> Finally, the code example creates an array larger than the collection and uses the CopyTo method to insert the elements of the collection into the middle of the array.  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator<t></t></a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerator`1</span> for the <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual C++, <code>For Each</code> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. At this position, <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> is called. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. You cannot set <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again; you must create a new enumerator instance instead.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the enumerator to display the contents of a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> that wraps a <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>. The enumerator is concealed by the <code>foreach</code> statement (<code>For Each</code> in Visual Basic, <code>for each</code> in C++).  </p>\n<pre><code class=\"lang-cs\" name=\"generic.ReadOnlyCollection#1\">using System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\npublic class Example\n{\n    public static void Main()\n    {\n        List&lt;string&gt; dinosaurs = new List&lt;string&gt;();\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;);\n        dinosaurs.Add(&quot;Amargasaurus&quot;);\n        dinosaurs.Add(&quot;Deinonychus&quot;);\n        dinosaurs.Add(&quot;Compsognathus&quot;);\n\n        ReadOnlyCollection&lt;string&gt; readOnlyDinosaurs = \n            new ReadOnlyCollection&lt;string&gt;(dinosaurs);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        Console.WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs.Count);\n\n        Console.WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;));\n\n        Console.WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n            readOnlyDinosaurs[3]);\n\n        Console.WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;));\n\n        Console.WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n        Console.WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;);\n\n        Console.WriteLine();\n        foreach( string dinosaur in readOnlyDinosaurs )\n        {\n            Console.WriteLine(dinosaur);\n        }\n\n        string[] dinoArray = new string[readOnlyDinosaurs.Count + 2];\n        readOnlyDinosaurs.CopyTo(dinoArray, 1);\n\n        Console.WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n            dinoArray.Length);\n        foreach( string dinosaur in dinoArray )\n        {\n            Console.WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n        }\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-cpp\" name=\"generic.ReadOnlyCollection#1\">using namespace System;\nusing namespace System::Collections::Generic;\nusing namespace System::Collections::ObjectModel;\n\nvoid main()\n{\n    List&lt;String^&gt;^ dinosaurs = gcnew List&lt;String^&gt;();\n\n    dinosaurs-&gt;Add(&quot;Tyrannosaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Amargasaurus&quot;);\n    dinosaurs-&gt;Add(&quot;Deinonychus&quot;);\n    dinosaurs-&gt;Add(&quot;Compsognathus&quot;);\n\n    ReadOnlyCollection&lt;String^&gt;^ readOnlyDinosaurs = \n        gcnew ReadOnlyCollection&lt;String^&gt;(dinosaurs);\n\n    Console::WriteLine();\n    for each(String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    Console::WriteLine(&quot;<br>Count: {0}&quot;, readOnlyDinosaurs-&gt;Count);\n\n    Console::WriteLine(&quot;<br>Contains(\\&quot;Deinonychus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;Contains(&quot;Deinonychus&quot;));\n\n    Console::WriteLine(&quot;<br>readOnlyDinosaurs[3]: {0}&quot;, \n        readOnlyDinosaurs[3]);\n\n    Console::WriteLine(&quot;<br>IndexOf(\\&quot;Compsognathus\\&quot;): {0}&quot;, \n        readOnlyDinosaurs-&gt;IndexOf(&quot;Compsognathus&quot;));\n\n    Console::WriteLine(&quot;<br>Insert into the wrapped List:&quot;);\n    Console::WriteLine(&quot;Insert(2, \\&quot;Oviraptor\\&quot;)&quot;);\n    dinosaurs-&gt;Insert(2, &quot;Oviraptor&quot;);\n\n    Console::WriteLine();\n    for each( String^ dinosaur in readOnlyDinosaurs )\n    {\n        Console::WriteLine(dinosaur);\n    }\n\n    array&lt;String^&gt;^ dinoArray = \n        gcnew array&lt;String^&gt;(readOnlyDinosaurs-&gt;Count + 2);\n    readOnlyDinosaurs-&gt;CopyTo(dinoArray, 1);\n\n    Console::WriteLine(&quot;<br>Copied array has {0} elements:&quot;, \n        dinoArray-&gt;Length);\n    for each( String^ dinosaur in dinoArray )\n    {\n        Console::WriteLine(&quot;\\&quot;{0}\\&quot;&quot;, dinosaur);\n    }\n}\n\n/* This code example produces the following output:\n\nTyrannosaurus\nAmargasaurus\nDeinonychus\nCompsognathus\n\nCount: 4\n\nContains(&quot;Deinonychus&quot;): True\n\nreadOnlyDinosaurs[3]: Compsognathus\n\nIndexOf(&quot;Compsognathus&quot;): 3\n\nInsert into the wrapped List:\nInsert(2, &quot;Oviraptor&quot;)\n\nTyrannosaurus\nAmargasaurus\nOviraptor\nDeinonychus\nCompsognathus\n\nCopied array has 7 elements:\n&quot;&quot;\n&quot;Tyrannosaurus&quot;\n&quot;Amargasaurus&quot;\n&quot;Oviraptor&quot;\n&quot;Deinonychus&quot;\n&quot;Compsognathus&quot;\n&quot;&quot;\n */\n</code></pre><pre><code class=\"lang-vb\" name=\"generic.ReadOnlyCollection#1\">Imports System\nImports System.Collections.Generic\nImports System.Collections.ObjectModel\n\nPublic Class Example\n\n    Public Shared Sub Main()\n\n        Dim dinosaurs As New List(Of String)\n\n        dinosaurs.Add(&quot;Tyrannosaurus&quot;)\n        dinosaurs.Add(&quot;Amargasaurus&quot;)\n        dinosaurs.Add(&quot;Deinonychus&quot;)\n        dinosaurs.Add(&quot;Compsognathus&quot;)\n\n        Dim readOnlyDinosaurs As _\n            New ReadOnlyCollection(Of String)(dinosaurs)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Console.WriteLine(vbLf &amp; &quot;Count: {0}&quot;, _\n            readOnlyDinosaurs.Count)\n\n        Console.WriteLine(vbLf &amp; &quot;Contains(&quot;&quot;Deinonychus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.Contains(&quot;Deinonychus&quot;))\n\n        Console.WriteLine(vbLf &amp; _\n            &quot;readOnlyDinosaurs(3): {0}&quot;, readOnlyDinosaurs(3))\n\n        Console.WriteLine(vbLf &amp; &quot;IndexOf(&quot;&quot;Compsognathus&quot;&quot;): {0}&quot;, _\n            readOnlyDinosaurs.IndexOf(&quot;Compsognathus&quot;))\n\n        Console.WriteLine(vbLf &amp; &quot;Insert into the wrapped List:&quot;)\n        Console.WriteLine(&quot;Insert(2, &quot;&quot;Oviraptor&quot;&quot;)&quot;)\n        dinosaurs.Insert(2, &quot;Oviraptor&quot;)\n\n        Console.WriteLine()\n        For Each dinosaur As String In readOnlyDinosaurs\n            Console.WriteLine(dinosaur)\n        Next\n\n        Dim dinoArray(readOnlyDinosaurs.Count + 1) As String\n        readOnlyDinosaurs.CopyTo(dinoArray, 1)\n\n        Console.WriteLine(vbLf &amp; &quot;Copied array has {0} elements:&quot;, _\n            dinoArray.Length)\n        For Each dinosaur As String In dinoArray\n            Console.WriteLine(&quot;&quot;&quot;{0}&quot;&quot;&quot;, dinosaur)\n        Next\n\n   End Sub\nEnd Class\n\n&#39; This code example produces the following output:\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Count: 4\n&#39;\n&#39;Contains(&quot;Deinonychus&quot;): True\n&#39;\n&#39;readOnlyDinosaurs(3): Compsognathus\n&#39;\n&#39;IndexOf(&quot;Compsognathus&quot;): 3\n&#39;\n&#39;Insert into the wrapped List:\n&#39;Insert(2, &quot;Oviraptor&quot;)\n&#39;\n&#39;Tyrannosaurus\n&#39;Amargasaurus\n&#39;Oviraptor\n&#39;Deinonychus\n&#39;Compsognathus\n&#39;\n&#39;Copied array has 7 elements:\n&#39;&quot;&quot;\n&#39;&quot;Tyrannosaurus&quot;\n&#39;&quot;Amargasaurus&quot;\n&#39;&quot;Oviraptor&quot;\n&#39;&quot;Deinonychus&quot;\n&#39;&quot;Compsognathus&quot;\n&#39;&quot;&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_IndexOf__0_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(T)</div>        \r\n          </div>\r\n    \r\n            <p>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int IndexOf (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to locate in the <span class=\"xref\">stem.Collections.Generic.List`1</span>. The value can be <code>null</code> for reference types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the first occurrence of <code>item</code> within the entire <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, if found; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> is searched forward starting at the first element and ending at the last element.  </p>\n<p> This method determines equality using the default comparer <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Add__0_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.Add(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an item to the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection&lt;T&gt;.Add (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to add to the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.icollection-1\" data-linktype=\"relative-path\">ICollection&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Clear\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all items from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection&lt;T&gt;.Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.icollection-1\" data-linktype=\"relative-path\">ICollection&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__IsReadOnly\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only; otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, this property always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  </p>\n<p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Remove__0_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_ICollection_T__Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.Remove(T)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first occurrence of a specific object from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool ICollection&lt;T&gt;.Remove (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to remove from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>value</code> was successfully removed from the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.icollection-1\" data-linktype=\"relative-path\">ICollection&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Insert_System_Int32__0_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList&lt;T&gt;.Insert(Int32,T)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts an item to the <span class=\"xref\">stem.Collections.Generic.IList`1</span> at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList&lt;T&gt;.Insert (int index, T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which <code>value</code> should be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to insert into the <span class=\"xref\">stem.Collections.Generic.IList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList&lt;T&gt;.Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the element at the specified index. An <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> occurs if you try to set the item at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the element to get.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The element at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown if the property is set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the collection is read-only, you can only get this item at the specified index. An exception will occur if you try to set the item. This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_Generic_IList_T__RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList&lt;T&gt;.RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the <span class=\"xref\">stem.Collections.Generic.IList`1</span> item at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList&lt;T&gt;.RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the item to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection.CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is multidimensional.  </p>\n<p> -or-  </p>\n<p> <code>array</code> does not have zero-based indexing.  </p>\n<p> -or-  </p>\n<p> The number of elements in the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.  </p>\n<p> -or-  </p>\n<p> The type of the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> cannot be cast automatically to the type of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> If the type of the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> cannot be cast automatically to the type of the destination <code>array</code>, the non-generic implementations of <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> throw <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>, whereas the generic implementations throw <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n</div>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe); otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, this property always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> returns an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.  </p>\n<p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.  In the default implementation of <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, this property always returns the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> returns an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property for C#, Visual C++, and Visual Basic.  </p>\n<pre><code class=\"lang-c#\">ICollection ic = ...;  \nlock (ic.SyncRoot) {  \n   // Access the collection.  \n}  \n</code></pre><pre><code class=\"lang-vb#\">Dim ic As ICollection = ...  \nSyncLock ic.SyncRoot  \n   &#39; Access the collection.  \nEnd SyncLock  \n</code></pre><pre><code class=\"lang-cpp#\">ICollection^ ic = ...;  \ntry {  \n   Monitor::Enter(ic-&gt;SyncRoot);  \n   // Access the collection.  \n}  \nfinally {  \n   Monitor::Exit(ic-&gt;SyncRoot);  \n}  \n</code></pre><p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual C++, <code>For Each</code> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> also brings the enumerator back to this position.  At this position, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until either <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. To set <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again, you can call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> followed by <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a>.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> This method is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Add_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Add(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IList.Add (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to add to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The position into which the new element was inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Clear\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all items from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Contains_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Contains(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> contains a specific value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IList.Contains (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to locate in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is found in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not of the type specified for the generic type parameter <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method determines equality using the default comparer <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.IndexOf(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IList.IndexOf (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to locate in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of <code>value</code> if found in the list; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is not of the type specified for the generic type parameter <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method determines equality using the default comparer <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1#System_Collections_ObjectModel_ReadOnlyCollection_1_Count_\" data-linktype=\"relative-path\">Count</a>.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Insert_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Insert(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.Insert (int index, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which <code>value</code> should be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to insert into the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsFixedSize\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsFixedSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.IsFixedSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> has a fixed size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.IList.IsFixedSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> has a fixed size; otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, this property always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.  </p>\n<p> A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.  </p>\n<p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsReadOnly\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.IList.IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> is read-only; otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span>, this property always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  </p>\n<p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the element at the specified index. A <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> occurs if you try to set the item at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.IList.Item[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the element to get.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The element at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is not a valid index in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown if the property is set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property provides the ability to access a specific element in the collection by using the following syntax: <code>myCollection[index]</code>.  </p>\n<p> The C# language uses the <a href=\"../Topic/this%20(C%23%20Reference).md\" data-linktype=\"relative-path\">this</a> keyword to define the indexers instead of implementing the IList.Item property. Visual Basic implements IList.Item as a default property, which provides the same indexing functionality.  </p>\n<p> Retrieving the value of this property is an O(1) operation.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Remove_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Remove(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first occurrence of a specific object from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.Remove (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to remove from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_ObjectModel_ReadOnlyCollection_1_System_Collections_IList_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> item at the specified index.  This implementation always throws <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the item to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Always thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> instance is cast to an <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.ObjectModel.ReadOnlyCollection-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.ObjectModel.ReadOnlyCollection-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.Contains\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.Count\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.Item\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.Items\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection&lt;T&gt;.Add\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection&lt;T&gt;.Clear\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection&lt;T&gt;.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection&lt;T&gt;.Remove\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList&lt;T&gt;.Insert\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList&lt;T&gt;.Item\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList&lt;T&gt;.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.ICollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Add\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Clear\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Contains\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Insert\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.IsFixedSize\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Item\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.Remove\">\r\n<meta name=\"APIName\" content=\"System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;.IList.RemoveAt\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"27d19701-3c5c-4d23-f47f-8638d2e4e0bf\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base class for a generic read-only collection.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.ObjectModel/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.ObjectModel.ReadOnlyCollection`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.ObjectModel.ReadOnlyCollection-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.ObjectModel.ReadOnlyCollection-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.ObjectModel.ReadOnlyCollection<T>","System.Collections.ObjectModel.ReadOnlyCollection<T>..ctor","System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains","System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo","System.Collections.ObjectModel.ReadOnlyCollection<T>.Count","System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator","System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf","System.Collections.ObjectModel.ReadOnlyCollection<T>.Item","System.Collections.ObjectModel.ReadOnlyCollection<T>.Items","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection<T>.Add","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection<T>.Clear","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection<T>.IsReadOnly","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection<T>.Remove","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList<T>.Insert","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList<T>.Item","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList<T>.RemoveAt","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection.CopyTo","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection.IsSynchronized","System.Collections.ObjectModel.ReadOnlyCollection<T>.ICollection.SyncRoot","System.Collections.ObjectModel.ReadOnlyCollection<T>.IEnumerable.GetEnumerator","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Add","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Clear","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Contains","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.IndexOf","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Insert","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.IsFixedSize","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.IsReadOnly","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Item","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.Remove","System.Collections.ObjectModel.ReadOnlyCollection<T>.IList.RemoveAt"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.ObjectModel.ReadOnlyCollection`1","System::Collections::ObjectModel::ReadOnlyCollection`1","System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor","System::Collections::ObjectModel::ReadOnlyCollection`1::#ctor","System.Collections.ObjectModel.ReadOnlyCollection`1.Contains","System::Collections::ObjectModel::ReadOnlyCollection`1::Contains","System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo","System::Collections::ObjectModel::ReadOnlyCollection`1::CopyTo","System.Collections.ObjectModel.ReadOnlyCollection`1.Count","System::Collections::ObjectModel::ReadOnlyCollection`1::Count","System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator","System::Collections::ObjectModel::ReadOnlyCollection`1::GetEnumerator","System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf","System::Collections::ObjectModel::ReadOnlyCollection`1::IndexOf","System.Collections.ObjectModel.ReadOnlyCollection`1.Item","System::Collections::ObjectModel::ReadOnlyCollection`1::Item","System.Collections.ObjectModel.ReadOnlyCollection`1.Items","System::Collections::ObjectModel::ReadOnlyCollection`1::Items","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#ICollection{T}#Add","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#ICollection{T}#Clear","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#ICollection{T}#IsReadOnly","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#ICollection{T}#Remove","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#IList{T}#Insert","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#IList{T}#Item","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#Generic#IList{T}#RemoveAt","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#ICollection#CopyTo","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#ICollection#IsSynchronized","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#ICollection#SyncRoot","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IEnumerable#GetEnumerator","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Add","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Clear","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Contains","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#IndexOf","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Insert","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#IsFixedSize","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#IsReadOnly","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Item","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#Remove","System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt","System::Collections::ObjectModel::ReadOnlyCollection`1::System#Collections#IList#RemoveAt"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"27d19701-3c5c-4d23-f47f-8638d2e4e0bf","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.ObjectModel/ReadOnlyCollection`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ReadOnlyCollection<T> class | Microsoft Docs","_op_ogTitle":"ReadOnlyCollection<T> class","description":"Provides the base class for a generic read-only collection.\n","toc_asset_id":"_splitted/System.Collections.ObjectModel/toc.json","toc_rel":"_splitted/System.Collections.ObjectModel/toc.json","source_url":"","ms.assetid":"System.Collections.ObjectModel.ReadOnlyCollection`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.objectmodel.readonlycollection-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.objectmodel.readonlycollection-1","fileRelativePath":"System.Collections.ObjectModel.ReadOnlyCollection-1.html"},"themesRelativePathToOutputRoot":"_themes/"}