{"content":"    \r\n    <h1 id=\"System_Security_Principal_WindowsIdentity\">\r\n      <span class=\"lang-csharp\">WindowsIdentity</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a Windows user.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class WindowsIdentity : System.Security.Claims.ClaimsIdentity, IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">System.Security.Claims.ClaimsIdentity</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WindowsIdentity</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_Actor\" data-linktype=\"relative-path\">Actor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_AddClaim_System_Security_Claims_Claim_\" data-linktype=\"relative-path\">AddClaim(Claim)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_AddClaims_System_Collections_Generic_IEnumerable_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">AddClaims(IEnumerable&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_BootstrapContext\" data-linktype=\"relative-path\">BootstrapContext</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_CreateClaim_System_IO_BinaryReader_\" data-linktype=\"relative-path\">CreateClaim(BinaryReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_CustomSerializationData\" data-linktype=\"relative-path\">CustomSerializationData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_DefaultNameClaimType\" data-linktype=\"relative-path\">DefaultNameClaimType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_DefaultRoleClaimType\" data-linktype=\"relative-path\">DefaultRoleClaimType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_FindAll_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindAll(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_FindAll_System_String_\" data-linktype=\"relative-path\">FindAll(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_FindFirst_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindFirst(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_FindFirst_System_String_\" data-linktype=\"relative-path\">FindFirst(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_HasClaim_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">HasClaim(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_HasClaim_System_String_System_String_\" data-linktype=\"relative-path\">HasClaim(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_Label\" data-linktype=\"relative-path\">Label</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_NameClaimType\" data-linktype=\"relative-path\">NameClaimType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_RemoveClaim_System_Security_Claims_Claim_\" data-linktype=\"relative-path\">RemoveClaim(Claim)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_RoleClaimType\" data-linktype=\"relative-path\">RoleClaimType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_TryRemoveClaim_System_Security_Claims_Claim_\" data-linktype=\"relative-path\">TryRemoveClaim(Claim)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_WriteTo_System_IO_BinaryWriter_\" data-linktype=\"relative-path\">WriteTo(BinaryWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsidentity#System_Security_Claims_ClaimsIdentity_WriteTo_System_IO_BinaryWriter_System_Byte___\" data-linktype=\"relative-path\">WriteTo(BinaryWriter,Byte[])</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Call the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_GetCurrent_\" data-linktype=\"relative-path\">GetCurrent</a> method to create a WindowsIdentity object that represents the current user.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the â€œUsing an Object that Implements IDisposableâ€ section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_\" data-linktype=\"self-bookmark\">WindowsIdentity(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_Security_Principal_WindowsIdentity_\" data-linktype=\"self-bookmark\">WindowsIdentity(WindowsIdentity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class by using the specified <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_String_\" data-linktype=\"self-bookmark\">WindowsIdentity(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified User Principal Name (UPN).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_\" data-linktype=\"self-bookmark\">WindowsIdentity(IntPtr,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token and the specified authentication type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">WindowsIdentity(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by information in a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">WindowsIdentity(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_System_Security_Principal_WindowsAccountType_\" data-linktype=\"self-bookmark\">WindowsIdentity(IntPtr,String,WindowsAccountType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_System_Security_Principal_WindowsAccountType_System_Boolean_\" data-linktype=\"self-bookmark\">WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_DefaultIssuer\" data-linktype=\"self-bookmark\">DefaultIssuer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the name of the default <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> issuer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_AccessToken\" data-linktype=\"self-bookmark\">AccessToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets this <a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a> for this <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_AuthenticationType\" data-linktype=\"self-bookmark\">AuthenticationType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of authentication used to identify the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Claims\" data-linktype=\"self-bookmark\">Claims</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all claims for the user represented by this Windows identity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_DeviceClaims\" data-linktype=\"self-bookmark\">DeviceClaims</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsDeviceClaim\" data-linktype=\"relative-path\">WindowsDeviceClaim</a> property key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Groups\" data-linktype=\"self-bookmark\">Groups</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the groups the current Windows user belongs to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_ImpersonationLevel\" data-linktype=\"self-bookmark\">ImpersonationLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the impersonation level for the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_IsAnonymous\" data-linktype=\"self-bookmark\">IsAnonymous</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_IsAuthenticated\" data-linktype=\"self-bookmark\">IsAuthenticated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the user has been authenticated by Windows.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_IsGuest\" data-linktype=\"self-bookmark\">IsGuest</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_IsSystem\" data-linktype=\"self-bookmark\">IsSystem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the user&#39;s Windows logon name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Owner\" data-linktype=\"self-bookmark\">Owner</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the security identifier (SID) for the token owner.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Token\" data-linktype=\"self-bookmark\">Token</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Windows account token for the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_User\" data-linktype=\"self-bookmark\">User</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the security identifier (SID) for the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_UserClaims\" data-linktype=\"self-bookmark\">UserClaims</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsUserClaim\" data-linktype=\"relative-path\">WindowsUserClaim</a> property key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new  object that is a copy of the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_GetAnonymous\" data-linktype=\"self-bookmark\">GetAnonymous()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_GetCurrent\" data-linktype=\"self-bookmark\">GetCurrent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the current Windows user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_GetCurrent_System_Boolean_\" data-linktype=\"self-bookmark\">GetCurrent(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the Windows identity for either the thread or the process, depending on the value of the <code>ifImpersonating</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_GetCurrent_System_Security_Principal_TokenAccessLevels_\" data-linktype=\"self-bookmark\">GetCurrent(TokenAccessLevels)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the current Windows user, using the specified desired token access level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Impersonate\" data-linktype=\"self-bookmark\">Impersonate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Impersonates the user represented by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_Impersonate_System_IntPtr_\" data-linktype=\"self-bookmark\">Impersonate(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Impersonates the user represented by the specified user token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_RunImpersonated_Microsoft_Win32_SafeHandles_SafeAccessTokenHandle_System_Action_\" data-linktype=\"self-bookmark\">RunImpersonated(SafeAccessTokenHandle,Action)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a>, you can use RunImpersonated and provide your function directly as a parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_RunImpersonated__1_Microsoft_Win32_SafeHandles_SafeAccessTokenHandle_System_Func___0__\" data-linktype=\"self-bookmark\">RunImpersonated&lt;T&gt;(SafeAccessTokenHandle,Func&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a>, you can use <span class=\"xref\">stem.Security.Principal.WindowsIdentity.RunImpersonated*</span> and provide your function directly as a parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">IDeserializationCallback.OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of this execution context.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (IntPtr userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The account token for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>userToken</code> is 0.  </p>\n<p> -or-  </p>\n<p> <code>userToken</code> is duplicated and invalid for impersonation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a></td>\n<td><code>Negotiate</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a></td>\n<td><code>Normal</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAuthenticated_\" data-linktype=\"relative-path\">IsAuthenticated</a></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> You can retrieve the token represented by <code>userToken</code> by calling unmanaged code such as the Win32 API <code>LogonUser</code> function. Always release <code>userToken</code> by calling the Win32 API <code>CloseHandle</code> function. For more information on calling unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_Security_Principal_WindowsIdentity_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(WindowsIdentity)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class by using the specified <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WindowsIdentity (System.Security.Principal.WindowsIdentity identity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>identity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object from which to construct the new instance of <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified User Principal Name (UPN).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (string sUserPrincipalName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sUserPrincipalName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The UPN for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is insufficient memory available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> The computer is not attached to a Windows 2003 or later domain.  </p>\n<p> -or-  </p>\n<p> The computer is not running Windows 2003 or later.  </p>\n<p> -or-  </p>\n<p> The user is not a member of the domain the computer is attached to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A UPN has the format <em>username</em>@<em>domainname</em>.com, in other words, an email address. The UPN identified in <code>sUserPrincipalName</code> is used to retrieve a token for that user through the Win32 API <code>LsaLogonUser</code> function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the <a href=\"http://go.microsoft.com/fwlink/?LinkId=143533\" data-linktype=\"external\">KERB_S4U_LOGON structure</a>, which was first introduced in Windows Server 2003.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(IntPtr,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token and the specified authentication type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (IntPtr userToken, string type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The account token for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>(Informational use only.) The type of authentication used to identify the user. For more information, see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>userToken</code> is 0.  </p>\n<p> -or-  </p>\n<p> <code>userToken</code> is duplicated and invalid for impersonation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a></td>\n<td><code>Normal</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAuthenticated_\" data-linktype=\"relative-path\">IsAuthenticated</a></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<p> The value of the <code>type</code> parameter is used to set the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> parameter. If <code>type</code> is <code>null</code>, the security system sets <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> to <code>Negotiate</code> on Windows Vista and later versions of the Windows operating system, and to <code>Kerberos</code> on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can retrieve the token represented by <code>userToken</code> by calling unmanaged code such as the Win32 API <code>LogonUser</code> function. Always release <code>userToken</code> by calling the Win32 API <code>CloseHandle</code> function. For more information on calling unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity__ctor_\" data-linktype=\"relative-path\">WindowsIdentity</a> constructor to create a new instance of the  <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token and the specified authentication type. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#4\">    private static void IntPtrStringConstructor(IntPtr logonToken)\n    {\n        // Construct a WindowsIdentity object using the input account token \n        // and the specified authentication type.\n        string authenticationType = &quot;WindowsAuthentication&quot;;\n        WindowsIdentity windowsIdentity =\n\t\t\t            new WindowsIdentity(logonToken, authenticationType);\n\n        Console.WriteLine(&quot;Created a Windows identity object named &quot; +\n            windowsIdentity.Name + &quot;.&quot;);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#4\">void IntPtrStringConstructor( IntPtr logonToken )\n{\n   \n   // Construct a WindowsIdentity object using the input account token \n   // and the specified authentication type.\n   String^ authenticationType = &quot;WindowsAuthentication&quot;;\n   WindowsIdentity^ windowsIdentity = gcnew WindowsIdentity( logonToken,authenticationType );\n   \n   Console::WriteLine( &quot;Created a Windows identity object named {0}.&quot;, windowsIdentity-&gt;Name );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#4\">    Private Sub IntPtrStringConstructor(ByVal logonToken As IntPtr)\n        &#39; Construct a WindowsIdentity object using the input account token \n        &#39; and the specified authentication type\n        Dim authenticationType = &quot;WindowsAuthentication&quot;\n        Dim windowsIdentity As _\n            New WindowsIdentity(logonToken, authenticationType)\n\n        WriteLine(&quot;Created a Windows identity object named &quot; + _\n            windowsIdentity.Name + &quot;.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by information in a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object containing the account information for the user.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that indicates the stream characteristics.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> cannot be serialized across processes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=330378\" data-linktype=\"external\">Untrusted Data Security Risks</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified User Principal Name (UPN) and the specified authentication type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (string sUserPrincipalName, string type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sUserPrincipalName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The UPN for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>(Informational use only.) The type of authentication used to identify the user. For more information, see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is insufficient memory available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> The computer is not attached to a Windows 2003 or later domain.  </p>\n<p> -or-  </p>\n<p> The computer is not running Windows 2003 or later.  </p>\n<p> -or-  </p>\n<p> The user is not a member of the domain the computer is attached to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <code>type</code> parameter is used to set the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> parameter. If <code>type</code> is <code>null</code>, the security system sets <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> to <code>Negotiate</code> on Windows Vista and later versions of the Windows operating system, and to <code>Kerberos</code> on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  </p>\n<p> The UPN identified in <code>sUserPrincipalName</code> is used to retrieve a token for that user through the Win32 API <code>LsaLogonUser</code> function. In turn that token is used to identify the user. An exception might be returned due to the inability to log on using the supplied UPN.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This constructor is intended for use only on computers joined to Windows Server 2003 or later domains. An exception is thrown for earlier domain types. This restriction is due to the fact that this constructor uses the <a href=\"http://go.microsoft.com/fwlink/?LinkId=143533\" data-linktype=\"external\">KERB_S4U_LOGON structure</a>, which was first introduced in Windows Server 2003.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_System_Security_Principal_WindowsAccountType_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(IntPtr,String,WindowsAccountType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The account token for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>(Informational use only.) The type of authentication used to identify the user. For more information, see Remarks.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>acctType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>userToken</code> is 0.  </p>\n<p> -or-  </p>\n<p> <code>userToken</code> is duplicated and invalid for impersonation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAuthenticated_\" data-linktype=\"relative-path\">IsAuthenticated</a></td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<p> The value of the <code>type</code> parameter is used to set the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> parameter. If <code>type</code> is <code>null</code>, the security system sets <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> to <code>Negotiate</code> on Windows Vista and later versions of the Windows operating system, and to <code>Kerberos</code> on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can retrieve the token represented by <code>userToken</code> by calling unmanaged code such as the Win32 API <code>LogonUser</code> function. Always release <code>userToken</code> by calling the Win32 API <code>CloseHandle</code> function. For more information on calling unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the WindowsIdentity constructor to create a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#7\">    private static void IntPtrStringTypeConstructor(IntPtr logonToken)\n    {\n        // Construct a WindowsIdentity object using the input account token,\n        // and the specified authentication type, and Windows account type.\n        string authenticationType = &quot;WindowsAuthentication&quot;;\n        WindowsAccountType guestAccount = WindowsAccountType.Guest;\n        WindowsIdentity windowsIdentity =\n            new WindowsIdentity(logonToken, authenticationType, guestAccount);\n\n        Console.WriteLine(&quot;Created a Windows identity object named &quot; +\n            windowsIdentity.Name + &quot;.&quot;);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#7\">void IntPtrStringTypeConstructor( IntPtr logonToken )\n{\n   \n   // Construct a WindowsIdentity object using the input account token,\n   // and the specified authentication type and Windows account type.\n   String^ authenticationType = &quot;WindowsAuthentication&quot;;\n   WindowsAccountType guestAccount = WindowsAccountType::Guest;\n   WindowsIdentity^ windowsIdentity = gcnew WindowsIdentity( logonToken,authenticationType,guestAccount );\n   \n   Console::WriteLine( &quot;Created a Windows identity object named {0}.&quot;, windowsIdentity-&gt;Name );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#7\">    Private Sub IntPtrStringTypeConstructor(ByVal logonToken As IntPtr)\n        &#39; Construct a WindowsIdentity object using the input account token,\n        &#39; and the specified authentication type and Windows account type.\n        Dim authenticationType As String = &quot;WindowsAuthentication&quot;\n        Dim guestAccount As WindowsAccountType = WindowsAccountType.Guest\n        Dim windowsIdentity As _\n            New WindowsIdentity(logonToken, authenticationType, guestAccount)\n\n        WriteLine(&quot;Created a Windows identity object named &quot; + _\n            windowsIdentity.Name + &quot;.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity__ctor_System_IntPtr_System_String_System_Security_Principal_WindowsAccountType_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsIdentity(IntPtr,String,WindowsAccountType,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsIdentity (IntPtr userToken, string type, System.Security.Principal.WindowsAccountType acctType, bool isAuthenticated);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The account token for the user on whose behalf the code is running.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>(Informational use only.) The type of authentication used to identify the user. For more information, see Remarks.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>acctType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isAuthenticated</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the user is authenticated; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>userToken</code> is 0.  </p>\n<p> -or-  </p>\n<p> <code>userToken</code> is duplicated and invalid for impersonation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <code>type</code> parameter is used to set the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> parameter. If <code>type</code> is <code>null</code>, the security system sets <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> to <code>Negotiate</code> on Windows Vista and later versions of the Windows operating system, and to <code>Kerberos</code> on earlier versions of the Windows operating system. The security system does not use this value; it is for informational use only.  </p>\n<p> You can retrieve the token represented by <code>userToken</code> by calling unmanaged code such as the Win32 API <code>LogonUser</code> function. Always release <code>userToken</code> by calling the Win32 API <code>CloseHandle</code> function. For more information on calling unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the WindowsIdentity constructor to create a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#17\">    private static void IntPrtStringTypeBoolConstructor(IntPtr logonToken)\n    {\n        // Construct a WindowsIdentity object using the input account token,\n        // and the specified authentication type, Windows account type, and\n        // authentication flag.\n        string authenticationType = &quot;WindowsAuthentication&quot;;\n        WindowsAccountType guestAccount = WindowsAccountType.Guest;\n        bool isAuthenticated = true;\n        WindowsIdentity windowsIdentity = new WindowsIdentity(\n            logonToken, authenticationType, guestAccount, isAuthenticated);\n\n        Console.WriteLine(&quot;Created a Windows identity object named &quot; +\n            windowsIdentity.Name + &quot;.&quot;);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#17\">void IntPrtStringTypeBoolConstructor( IntPtr logonToken )\n{\n   \n   // Construct a WindowsIdentity object using the input account token,\n   // and the specified authentication type, Windows account type, and\n   // authentication flag.\n   String^ authenticationType = &quot;WindowsAuthentication&quot;;\n   WindowsAccountType guestAccount = WindowsAccountType::Guest;\n   bool isAuthenticated = true;\n   WindowsIdentity^ windowsIdentity = gcnew WindowsIdentity( logonToken,authenticationType,guestAccount,isAuthenticated );\n   \n   Console::WriteLine( &quot;Created a Windows identity object named {0}.&quot;, windowsIdentity-&gt;Name );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#17\">    Private Sub IntPrtStringTypeBoolConstructor(ByVal logonToken As IntPtr)\n        &#39; Construct a WindowsIdentity object using the input account token,\n        &#39; and the specified authentication type, Windows account type, and\n        &#39; authentication flag.\n        Dim authenticationType As String = &quot;WindowsAuthentication&quot;\n        Dim guestAccount As WindowsAccountType = WindowsAccountType.Guest\n        Dim isAuthenticated As Boolean = True\n        Dim windowsIdentity As New WindowsIdentity( _\n            logonToken, authenticationType, guestAccount, isAuthenticated)\n\n        WriteLine(&quot;Created a Windows identity object named &quot; + _\n            windowsIdentity.Name + &quot;.&quot;)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_DefaultIssuer\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultIssuer</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the name of the default <a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">ClaimsIdentity</a> issuer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string DefaultIssuer;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_AccessToken\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_AccessToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccessToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets this <a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a> for this <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.Win32.SafeHandles.SafeAccessTokenHandle AccessToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_AuthenticationType\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_AuthenticationType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticationType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of authentication used to identify the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed string AuthenticationType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The type of authentication used to identify the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is insufficient memory available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.  </p>\n<p> -or-  </p>\n<p> The computer is not attached to a Windows 2003 or later domain.  </p>\n<p> -or-  </p>\n<p> The computer is not running Windows 2003 or later.  </p>\n<p> -or-  </p>\n<p> The user is not a member of the domain the computer is attached to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is informational; it is not used by the security system. On Windows Vista and later versions of the Windows operating system, the default value for this property is <code>Negotiate</code>, which chooses the best security support provider (SSP) based on customer-configured security policy. The default property value for earlier versions of the Windows operating system is <code>Kerberos</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Claims\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Claims_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Claims</div>        \r\n          </div>\r\n    \r\n            <p>Gets all claims for the user represented by this Windows identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of claims for this <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_DeviceClaims\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_DeviceClaims_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeviceClaims</div>        \r\n          </div>\r\n    \r\n            <p>Gets claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsDeviceClaim\" data-linktype=\"relative-path\">WindowsDeviceClaim</a> property key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsDeviceClaim\" data-linktype=\"relative-path\">WindowsDeviceClaim</a> property key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Groups\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Groups_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Groups</div>        \r\n          </div>\r\n    \r\n            <p>Gets the groups the current Windows user belongs to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.IdentityReferenceCollection Groups { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.identityreferencecollection\" data-linktype=\"relative-path\">IdentityReferenceCollection</a></div>\r\n                  </div>\r\n                  <p>An object representing the groups the current Windows user belongs to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Groups property to display the identity references for the groups the current user belongs to.  This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#20\">        // Display the SIDs for the groups the current user belongs to.\n        Console.WriteLine(&quot;Display the SIDs for the groups the current user belongs to.&quot;);\n        IdentityReferenceCollection irc = windowsIdentity.Groups;\n        foreach (IdentityReference ir in irc)\n            Console.WriteLine(ir.Value);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#20\">        &#39; Display the SIDs for the groups the current user belongs to.\n        Console.WriteLine(&quot;Display the SIDs for the groups the current user belongs to.&quot;)\n        Dim irc As IdentityReferenceCollection\n        Dim ir As IdentityReference\n        irc = windowsIdentity.Groups\n        For Each ir In irc\n            Console.WriteLine(ir.Value)\n        Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_ImpersonationLevel\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_ImpersonationLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ImpersonationLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets the impersonation level for the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.tokenimpersonationlevel\" data-linktype=\"relative-path\">TokenImpersonationLevel</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that specifies the impersonation level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Describes the impersonation level to be used to connect to WMI.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the ImpersonationLevel property to display the impersonation level for the current user. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#21\">        TokenImpersonationLevel token = windowsIdentity.ImpersonationLevel;\n        Console.WriteLine(&quot;The impersonation level for the current user is : &quot; + token.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#21\">        Dim token As TokenImpersonationLevel\n        token = windowsIdentity.ImpersonationLevel\n        Console.WriteLine(&quot;The impersonation level for the current user is : &quot; + token.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_IsAnonymous\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_IsAnonymous_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAnonymous</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsAnonymous { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user account is an anonymous account; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsAnonymous property detects both the Windows anonymous identity and the anonymous identity that is returned by the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_GetAnonymous_\" data-linktype=\"relative-path\">GetAnonymous</a> method.  </p>\n<p> Anonymous accounts are typically only encountered only from within ASP.NET-based applications when anonymous access is allowed by Internet Information Services (IIS).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the IsAnonymous property to detect whether the user account is identified as an anonymous account by the system. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#9\">        if (!windowsIdentity.IsAnonymous)\n        {\n            propertyDescription += &quot; is not an Anonymous account&quot;;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#9\">   if (  !windowsIdentity-&gt;IsAnonymous )\n   {\n      propertyDescription = String::Concat( propertyDescription, &quot;, is not an Anonymous account&quot; );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#9\">        If Not windowsIdentity.IsAnonymous Then\n            propertyDescription += &quot; is not an Anonymous account&quot;\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_IsAuthenticated\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_IsAuthenticated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAuthenticated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the user has been authenticated by Windows.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsAuthenticated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user was authenticated; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_IsGuest\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_IsGuest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsGuest</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsGuest { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user account is a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the IsGuest property to return a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#12\">        if (windowsIdentity.IsGuest)\n        {\n            propertyDescription += &quot;, is a Guest account&quot;;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#12\">   if ( windowsIdentity-&gt;IsGuest )\n   {\n      propertyDescription = String::Concat( propertyDescription, &quot;, is a Guest account&quot; );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#12\">        If (windowsIdentity.IsGuest) Then\n            propertyDescription += &quot;, is a Guest account&quot;\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_IsSystem\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_IsSystem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSystem</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsSystem { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user account is a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the IsSystem property to return a value indicating whether the user account is identified as a <a class=\"xref\" href=\"system.security.principal.windowsaccounttype\" data-linktype=\"relative-path\">WindowsAccountType</a> account by the system. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#11\">        if (windowsIdentity.IsSystem)\n        {\n            propertyDescription += &quot;, is a System account&quot;;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#11\">   if ( windowsIdentity-&gt;IsSystem )\n   {\n      propertyDescription = String::Concat( propertyDescription, &quot;, is a System account&quot; );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#11\">        If (windowsIdentity.IsSystem) Then\n            propertyDescription += &quot;, is a System account&quot;\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Name\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the user&#39;s Windows logon name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The Windows logon name of the user on whose behalf the code is being run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The logon name is in the form DOMAIN\\USERNAME.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the Name property to get the user&#39;s Windows logon name. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#8\">        propertyDescription += windowsIdentity.Name;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#8\">   propertyDescription = String::Concat( propertyDescription, windowsIdentity-&gt;Name );\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#8\">        propertyDescription += windowsIdentity.Name\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Owner\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Owner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Owner</div>        \r\n          </div>\r\n    \r\n            <p>Gets the security identifier (SID) for the token owner.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.SecurityIdentifier Owner { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a></div>\r\n                  </div>\r\n                  <p>An object for the token owner.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SID uniquely identifies a user or group on all Windows NT implementations.  The returned SID identifies the default owner SID that will be applied to newly created objects.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Owner property to display the security identifier for the token owner.  This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#19\">        // Display the SID for the owner.\n        Console.Write(&quot;The SID for the owner is : &quot;);\n        SecurityIdentifier si = windowsIdentity.Owner;\n        Console.WriteLine(si.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#19\">        &#39; Display the SID for the owner.\n        Console.Write(&quot;The SID for the owner is : &quot;)\n        Dim si As SecurityIdentifier\n        si = windowsIdentity.Owner\n        Console.WriteLine(si.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Token\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Token_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Token</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Windows account token for the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IntPtr Token { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>The handle of the access token associated with the current execution thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not explicitly release the account token that is returned by the Token property. The token is released by the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method, which you can call in code. <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_Dispose_\" data-linktype=\"relative-path\">Dispose</a> is also automatically called by the garbage collector.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The account token that is returned by the Token property is a duplicate of the Windows token that is used to create the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object and is automatically released by the .NET Framework. This is different from the account token (the <code>userToken</code> parameter for the constructor), which is used to create the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object. <code>userToken</code> is a Windows account token that is created by a call to <code>LogonUser</code> and must be closed to avoid a memory leak.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsSystem_\" data-linktype=\"relative-path\">IsSystem</a> property to get the Windows account token for the user. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#14\">        IntPtr accountToken = WindowsIdentity.GetCurrent().Token;\n        Console.WriteLine( &quot;Token number is: &quot; + accountToken.ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#14\">   IntPtr accountToken = WindowsIdentity::GetCurrent()-&gt;Token;\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#14\">        Dim accountToken As IntPtr = WindowsIdentity.GetCurrent().Token\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_User\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_User_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">User</div>        \r\n          </div>\r\n    \r\n            <p>Gets the security identifier (SID) for the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.SecurityIdentifier User { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a></div>\r\n                  </div>\r\n                  <p>An object for the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SID uniquely identifies a user or group on all Windows NT implementations.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object returned by the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_GetAnonymous_\" data-linktype=\"relative-path\">GetAnonymous</a> method is not the same as the Windows anonymous user. This property gets <code>null</code> for an anonymous user represented by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object returned by the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_GetAnonymous_\" data-linktype=\"relative-path\">GetAnonymous</a> method; it does not get the SID representing an anonymous Windows user.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_UserClaims\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_UserClaims_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserClaims</div>        \r\n          </div>\r\n    \r\n            <p>Gets claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsUserClaim\" data-linktype=\"relative-path\">WindowsUserClaim</a> property key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of claims that have the <a class=\"xref\" href=\"system.security.claims.claimtypes#System_Security_Claims_ClaimTypes_WindowsUserClaim\" data-linktype=\"relative-path\">WindowsUserClaim</a> property key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Clone\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new  object that is a copy of the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.Claims.ClaimsIdentity Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.claims.claimsidentity\" data-linktype=\"relative-path\">System.Security.Claims.ClaimsIdentity</a></div>\r\n                  </div>\r\n                  <p>A copy of the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Dispose\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_GetAnonymous\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_GetAnonymous_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAnonymous()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Principal.WindowsIdentity GetAnonymous ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </div>\r\n                  <p>An object that represents an anonymous user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns an empty <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that enables you to treat operations as anonymous. The property value does not correspond to a Windows anonymous user and cannot be used for impersonation. Also, note that the identity returned by this property is not static; each call to GetAnonymous returns a different anonymous identity.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAnonymous_\" data-linktype=\"relative-path\">IsAnonymous</a> property to detect the return value from GetAnonymous. However, <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAnonymous_\" data-linktype=\"relative-path\">IsAnonymous</a> detects both the Windows anonymous identity and the anonymous identity returned by this method. To use the latter identity, cache the GetAnonymous return value instead of relying on the <a class=\"xref\" href=\"system.security.principal.windowsidentity#System_Security_Principal_WindowsIdentity_IsAnonymous_\" data-linktype=\"relative-path\">IsAnonymous</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the GetAnonymous method to return a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents an anonymous Windows user. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#15\">        WindowsIdentity windowsIdentity = WindowsIdentity.GetAnonymous();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#15\">   WindowsIdentity^ windowsIdentity = WindowsIdentity::GetAnonymous();\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#15\">        Dim windowsIdentity As WindowsIdentity\n        windowsIdentity = windowsIdentity.GetAnonymous()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_GetCurrent\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_GetCurrent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrent()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the current Windows user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Principal.WindowsIdentity GetCurrent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </div>\r\n                  <p>An object that represents the current user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows the use of the GetCurrent method to return a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the current Windows user. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#13\">        IntPtr accountToken = WindowsIdentity.GetCurrent().Token;\n        Console.WriteLine( &quot;Token number is: &quot; + accountToken.ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#13\">   IntPtr accountToken = WindowsIdentity::GetCurrent()-&gt;Token;\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsIdentity_AllMembers#13\">        Dim accountToken As IntPtr = WindowsIdentity.GetCurrent().Token\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_GetCurrent_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_GetCurrent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrent(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the Windows identity for either the thread or the process, depending on the value of the <code>ifImpersonating</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Principal.WindowsIdentity GetCurrent (bool ifImpersonating);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ifImpersonating</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to return the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> only if the thread is currently impersonating; <code>false</code> to return the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> of the thread if it is impersonating or the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> of the process if the thread is not currently impersonating.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </div>\r\n                  <p>An object that represents a Windows user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>ifImpersonating</code> is <code>true</code> and the thread is not impersonating, the returned <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object has no value.  If <code>ifImpersonating</code> is <code>false</code> and the thread is impersonating, the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> for the thread is returned.  If <code>ifImpersonating</code> is <code>false</code> and the thread is not impersonating, the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> for the process is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_GetCurrent_System_Security_Principal_TokenAccessLevels_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_GetCurrent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrent(TokenAccessLevels)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object that represents the current Windows user, using the specified desired token access level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Principal.WindowsIdentity GetCurrent (System.Security.Principal.TokenAccessLevels desiredAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>desiredAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.tokenaccesslevels\" data-linktype=\"relative-path\">TokenAccessLevels</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </div>\r\n                  <p>An object that represents the current user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>desiredAccess</code> parameter specifies an access mask that identifies the requested types of access to the access token. These requested access types are compared with the token&#39;s discretionary access control list (DACL) to determine which types of access are granted or denied.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Impersonate\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Impersonate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Impersonate()</div>        \r\n          </div>\r\n    \r\n            <p>Impersonates the user represented by the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Principal.WindowsImpersonationContext Impersonate ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a></div>\r\n                  </div>\r\n                  <p>An object that represents the Windows user prior to impersonation; this can be used to revert to the original user&#39;s context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An anonymous identity attempted to perform an impersonation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A Win32 error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 <code>LogonUser</code> function, and how to use that token to impersonate another user and then revert to the original identity.  </p>\n<pre><code class=\"lang-cpp\" name=\"WindowsIdentity Impersonation#1\">// This sample demonstrates the use of the WindowsIdentity class to impersonate a user.\n// IMPORTANT NOTES: \n// This sample requests the user to enter a password on the console screen.\n// Because the console window does not support methods allowing the password to be masked,\n// it will be visible to anyone viewing the screen.\n// On Windows Vista and later this sample must be run as an administrator. \n\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Runtime::InteropServices;\nusing namespace System::Security::Principal;\nusing namespace System::Security::Permissions;\n\n\n[DllImport(&quot;advapi32.dll&quot;,SetLastError=true)]\nbool LogonUser( String^ lpszUsername, String^ lpszDomain, String^ lpszPassword, int dwLogonType, int dwLogonProvider, IntPtr * phToken );\n\n[DllImport(&quot;kernel32.dll&quot;,CharSet=CharSet::Auto)]\nbool CloseHandle( IntPtr handle );\n\n// Test harness.\n// If you incorporate this code into a DLL, be sure to demand FullTrust.\n\n[PermissionSetAttribute(SecurityAction::Demand,Name=&quot;FullTrust&quot;)]\nint main()\n{\n   IntPtr tokenHandle = IntPtr(0);\n\n   try\n   {\n      String^ userName;\n      String^ domainName;\n      \n      // Get the user token for the specified user, domain, and password using the \n      // unmanaged LogonUser method.  \n      // The local machine name can be used for the domain name to impersonate a user on this machine.\n      Console::Write( &quot;Enter the name of the domain on which to log on: &quot; );\n      domainName = Console::ReadLine();\n      Console::Write( &quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName );\n      userName = Console::ReadLine();\n      Console::Write( &quot;Enter the password for {0}: &quot;, userName );\n      const int LOGON32_PROVIDER_DEFAULT = 0;\n      \n      //This parameter causes LogonUser to create a primary token.\n      const int LOGON32_LOGON_INTERACTIVE = 2;\n      const int SecurityImpersonation = 2;\n      tokenHandle = IntPtr::Zero;\n      \n      // Call LogonUser to obtain a handle to an access token.\n      bool returnValue = LogonUser( userName, domainName, Console::ReadLine(), LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  &amp;tokenHandle );\n      Console::WriteLine( &quot;LogonUser called.&quot; );\n      if ( false == returnValue )\n      {\n         int ret = Marshal::GetLastWin32Error();\n         Console::WriteLine( &quot;LogonUser failed with error code : {0}&quot;, ret );\n         throw gcnew System::ComponentModel::Win32Exception( ret );\n      }\n      Console::WriteLine( &quot;Did LogonUser Succeed? {0}&quot;, (returnValue ? (String^)&quot;Yes&quot; : &quot;No&quot;) );\n      Console::WriteLine( &quot;Value of Windows NT token: {0}&quot;, tokenHandle );\n      \n      // Check the identity.\n      Console::WriteLine( &quot;Before impersonation: {0}&quot;, WindowsIdentity::GetCurrent()-&gt;Name );\n      \n      // The token that is passed to the following constructor must \n      // be a primary token in order to use it for impersonation.\n      WindowsIdentity^ newId = gcnew WindowsIdentity( tokenHandle );\n      WindowsImpersonationContext^ impersonatedUser = newId-&gt;Impersonate();\n      \n      // Check the identity.\n      Console::WriteLine( &quot;After impersonation: {0}&quot;, WindowsIdentity::GetCurrent()-&gt;Name );\n      \n      // Stop impersonating the user.\n      impersonatedUser-&gt;Undo();\n      \n      // Check the identity.\n      Console::WriteLine( &quot;After Undo: {0}&quot;, WindowsIdentity::GetCurrent()-&gt;Name );\n      \n      // Free the tokens.\n      if ( tokenHandle != IntPtr::Zero )\n            CloseHandle( tokenHandle );\n   }\n   catch ( Exception^ ex ) \n   {\n      Console::WriteLine( &quot;Exception occurred. {0}&quot;, ex-&gt;Message );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WindowsIdentity Impersonation#1\">// This sample demonstrates the use of the WindowsIdentity class to impersonate a user.\n// IMPORTANT NOTES:\n// This sample requests the user to enter a password on the console screen.\n// Because the console window does not support methods allowing the password to be masked,\n// it will be visible to anyone viewing the screen.\n// On Windows Vista and later this sample must be run as an administrator. \n\n\nusing System;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\nusing System.Security.Permissions;\nusing Microsoft.Win32.SafeHandles;\nusing System.Runtime.ConstrainedExecution;\nusing System.Security;\n\n\npublic class ImpersonationDemo\n{\n    [DllImport(&quot;advapi32.dll&quot;, SetLastError = true, CharSet = CharSet.Unicode)]\n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,\n        int dwLogonType, int dwLogonProvider, out SafeTokenHandle phToken);\n\n    [DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Auto)]\n    public extern static bool CloseHandle(IntPtr handle);\n\n    // Test harness.\n    // If you incorporate this code into a DLL, be sure to demand FullTrust.\n    [PermissionSetAttribute(SecurityAction.Demand, Name = &quot;FullTrust&quot;)]\n    public static void Main(string[] args)\n    {\n        SafeTokenHandle safeTokenHandle;\n        try\n        {\n            string userName, domainName;\n            // Get the user token for the specified user, domain, and password using the\n            // unmanaged LogonUser method.\n            // The local machine name can be used for the domain name to impersonate a user on this machine.\n            Console.Write(&quot;Enter the name of the domain on which to log on: &quot;);\n            domainName = Console.ReadLine();\n\n            Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName);\n            userName = Console.ReadLine();\n\n            Console.Write(&quot;Enter the password for {0}: &quot;, userName);\n\n            const int LOGON32_PROVIDER_DEFAULT = 0;\n            //This parameter causes LogonUser to create a primary token.\n            const int LOGON32_LOGON_INTERACTIVE = 2;\n\n            // Call LogonUser to obtain a handle to an access token.\n            bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),\n                LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,\n                out safeTokenHandle);\n\n            Console.WriteLine(&quot;LogonUser called.&quot;);\n\n            if (false == returnValue)\n            {\n                int ret = Marshal.GetLastWin32Error();\n                Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret);\n                throw new System.ComponentModel.Win32Exception(ret);\n            }\n            using (safeTokenHandle)\n            {\n                Console.WriteLine(&quot;Did LogonUser Succeed? &quot; + (returnValue ? &quot;Yes&quot; : &quot;No&quot;));\n                Console.WriteLine(&quot;Value of Windows NT token: &quot; + safeTokenHandle);\n\n                // Check the identity.\n                Console.WriteLine(&quot;Before impersonation: &quot;\n                    + WindowsIdentity.GetCurrent().Name);\n                // Use the token handle returned by LogonUser.\n                using (WindowsIdentity newId = new WindowsIdentity(safeTokenHandle.DangerousGetHandle()))\n                {\n                    using (WindowsImpersonationContext impersonatedUser = newId.Impersonate())\n                    {\n\n                        // Check the identity.\n                        Console.WriteLine(&quot;After impersonation: &quot;\n                            + WindowsIdentity.GetCurrent().Name);\n                    }\n                }\n                // Releasing the context object stops the impersonation\n                // Check the identity.\n                Console.WriteLine(&quot;After closing the context: &quot; + WindowsIdentity.GetCurrent().Name);\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(&quot;Exception occurred. &quot; + ex.Message);\n        }\n\n    }\n}\npublic sealed class SafeTokenHandle : SafeHandleZeroOrMinusOneIsInvalid\n{\n    private SafeTokenHandle()\n        : base(true)\n    {\n    }\n\n    [DllImport(&quot;kernel32.dll&quot;)]\n    [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]\n    [SuppressUnmanagedCodeSecurity]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    private static extern bool CloseHandle(IntPtr handle);\n\n    protected override bool ReleaseHandle()\n    {\n        return CloseHandle(handle);\n    }\n}\n\n\n</code></pre><pre><code class=\"lang-vb\" name=\"WindowsIdentity Impersonation#1\">&#39; This sample demonstrates the use of the WindowsIdentity class to impersonate a user.\n&#39; IMPORTANT NOTES: \n&#39; This sample requests the user to enter a password on the console screen.\n&#39; Because the console window does not support methods allowing the password to be masked,\n&#39; it will be visible to anyone viewing the screen.\n&#39; On Windows Vista and later this sample must be run as an administrator. \n\nImports System\nImports System.Runtime.InteropServices\nImports System.Security.Principal\nImports System.Security.Permissions\nImports Microsoft.VisualBasic\nImports Microsoft.Win32.SafeHandles\nImports System.Runtime.ConstrainedExecution\nImports System.Security\n\nModule Module1\n\n    Public Class ImpersonationDemo\n\n        &#39;Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n        &#39;    ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n        &#39;    ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n        &#39;    ByRef phToken As IntPtr) As Boolean\n\n        Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n            ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n            ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n            &lt;Out()&gt; ByRef phToken As SafeTokenHandle) As Boolean\n\n        Public Declare Auto Function CloseHandle Lib &quot;kernel32.dll&quot; (ByVal handle As IntPtr) As Boolean\n\n        &#39; Test harness.\n        &#39; If you incorporate this code into a DLL, be sure to demand FullTrust.\n        &lt;PermissionSetAttribute(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n        Public Overloads Shared Sub Main(ByVal args() As String)\n            Dim safeTokenHandle As SafeTokenHandle = Nothing\n            Dim tokenHandle As New IntPtr(0)\n            Try\n\n\n                Dim userName, domainName As String\n\n                &#39; Get the user token for the specified user, domain, and password using the \n                &#39; unmanaged LogonUser method.  \n                &#39; The local machine name can be used for the domain name to impersonate a user on this machine.\n                Console.Write(&quot;Enter the name of a domain on which to log on: &quot;)\n                domainName = Console.ReadLine()\n\n                Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName)\n                userName = Console.ReadLine()\n\n                Console.Write(&quot;Enter the password for {0}: &quot;, userName)\n\n                Const LOGON32_PROVIDER_DEFAULT As Integer = 0\n                &#39;This parameter causes LogonUser to create a primary token.\n                Const LOGON32_LOGON_INTERACTIVE As Integer = 2\n\n                &#39; Call LogonUser to obtain a handle to an access token.\n                Dim returnValue As Boolean = LogonUser(userName, domainName, Console.ReadLine(), LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, safeTokenHandle)\n\n                Console.WriteLine(&quot;LogonUser called.&quot;)\n\n                If False = returnValue Then\n                    Dim ret As Integer = Marshal.GetLastWin32Error()\n                    Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret)\n                    Throw New System.ComponentModel.Win32Exception(ret)\n\n                    Return\n                End If\n                Using safeTokenHandle\n                    Dim success As String\n                    If returnValue Then success = &quot;Yes&quot; Else success = &quot;No&quot;\n                    Console.WriteLine((&quot;Did LogonUser succeed? &quot; + success))\n                    Console.WriteLine((&quot;Value of Windows NT token: &quot; + safeTokenHandle.DangerousGetHandle().ToString()))\n\n                    &#39; Check the identity.\n                    Console.WriteLine((&quot;Before impersonation: &quot; + WindowsIdentity.GetCurrent().Name))\n\n                    &#39; Use the token handle returned by LogonUser.\n                    Using newId As New WindowsIdentity(safeTokenHandle.DangerousGetHandle())\n                        Using impersonatedUser As WindowsImpersonationContext = newId.Impersonate()\n\n                            &#39; Check the identity.\n                            Console.WriteLine((&quot;After impersonation: &quot; + WindowsIdentity.GetCurrent().Name))\n\n                            &#39; Free the tokens.\n                        End Using\n                    End Using\n                End Using\n            Catch ex As Exception\n                Console.WriteLine((&quot;Exception occurred. &quot; + ex.Message))\n            End Try\n        End Sub &#39;Main \n    End Class &#39;Class1\nEnd Module\n\nPublic NotInheritable Class SafeTokenHandle\n    Inherits SafeHandleZeroOrMinusOneIsInvalid\n\n    Private Sub New()\n        MyBase.New(True)\n\n    End Sub &#39;New\n\n    Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n            ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n            ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n            ByRef phToken As IntPtr) As Boolean\n    &lt;DllImport(&quot;kernel32.dll&quot;), ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success), SuppressUnmanagedCodeSecurity()&gt; _\n    Private Shared Function CloseHandle(ByVal handle As IntPtr) As &lt;MarshalAs(UnmanagedType.Bool)&gt; Boolean\n\n    End Function\n    Protected Overrides Function ReleaseHandle() As Boolean\n        Return CloseHandle(handle)\n\n    End Function &#39;ReleaseHandle\nEnd Class &#39;SafeTokenHandle\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_Impersonate_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_Impersonate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Impersonate(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Impersonates the user represented by the specified user token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Principal.WindowsImpersonationContext Impersonate (IntPtr userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle of a Windows account token. This token is usually retrieved through a call to unmanaged code, such as a call to the Win32 API <code>LogonUser</code> function.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a></div>\r\n                  </div>\r\n                  <p>An object that represents the Windows user prior to impersonation; this object can be used to revert to the original user&#39;s context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is insufficient memory available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the correct permissions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>On Windows NT platforms, the current user must have sufficient rights to allow impersonation.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling the Impersonate method with a <code>userToken</code> value of <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> is equivalent to calling the Win32 <code>RevertToSelf</code> function. If another user is currently being impersonated, control reverts to the original user.  </p>\n</div>\n<p> For more information about calls to unmanaged code, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to obtain a Windows account token by calling the unmanaged Win32 <code>LogonUser</code> function, and how to use that token to impersonate another user and then revert to the original identity.  </p>\n<pre><code class=\"lang-vb\" name=\"WindowsIdentity Impersonation2#1\">&#39; This sample demonstrates the use of the WindowsIdentity class to impersonate a user.\n&#39; IMPORTANT NOTES: \n&#39; This sample requests the user to enter a password on the console screen.\n&#39; Because the console window does not support methods allowing the password to be masked,\n&#39; it will be visible to anyone viewing the screen.\n&#39; On Windows Vista and later this sample must be run as an administrator. \n\nImports System\nImports System.Runtime.InteropServices\nImports System.Security.Principal\nImports System.Security.Permissions\nImports Microsoft.VisualBasic\nImports Microsoft.Win32.SafeHandles\nImports System.Runtime.ConstrainedExecution\nImports System.Security\n\nModule Module1\n\n    Public Class ImpersonationDemo\n\n        &#39;Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n        &#39;    ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n        &#39;    ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n        &#39;    ByRef phToken As IntPtr) As Boolean\n\n        Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n            ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n            ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n            &lt;Out()&gt; ByRef phToken As SafeTokenHandle) As Boolean\n\n        Public Declare Auto Function CloseHandle Lib &quot;kernel32.dll&quot; (ByVal handle As IntPtr) As Boolean\n\n        &#39; Test harness.\n        &#39; If you incorporate this code into a DLL, be sure to demand FullTrust.\n        &lt;PermissionSetAttribute(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n        Public Overloads Shared Sub Main(ByVal args() As String)\n            Dim safeTokenHandle As SafeTokenHandle\n            Dim tokenHandle As New IntPtr(0)\n            Try\n\n\n                Dim userName, domainName As String\n\n                &#39; Get the user token for the specified user, domain, and password using the \n                &#39; unmanaged LogonUser method.  \n                &#39; The local machine name can be used for the domain name to impersonate a user on this machine.\n                Console.Write(&quot;Enter the name of a domain on which to log on: &quot;)\n                domainName = Console.ReadLine()\n\n                Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName)\n                userName = Console.ReadLine()\n\n                Console.Write(&quot;Enter the password for {0}: &quot;, userName)\n\n                Const LOGON32_PROVIDER_DEFAULT As Integer = 0\n                &#39;This parameter causes LogonUser to create a primary token.\n                Const LOGON32_LOGON_INTERACTIVE As Integer = 2\n\n                &#39; Call LogonUser to obtain a handle to an access token.\n                Dim returnValue As Boolean = LogonUser(userName, domainName, Console.ReadLine(), LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, safeTokenHandle)\n\n                Console.WriteLine(&quot;LogonUser called.&quot;)\n\n                If False = returnValue Then\n                    Dim ret As Integer = Marshal.GetLastWin32Error()\n                    Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret)\n                    Throw New System.ComponentModel.Win32Exception(ret)\n\n                    Return\n                End If\n                Using safeTokenHandle\n                    Dim success As String\n                    If returnValue Then success = &quot;Yes&quot; Else success = &quot;No&quot;\n                    Console.WriteLine((&quot;Did LogonUser succeed? &quot; + success))\n                    Console.WriteLine((&quot;Value of Windows NT token: &quot; + safeTokenHandle.DangerousGetHandle().ToString()))\n\n                    &#39; Check the identity.\n                    Console.WriteLine((&quot;Before impersonation: &quot; + WindowsIdentity.GetCurrent().Name))\n\n                    &#39; Use the token handle returned by LogonUser.\n                    Using impersonatedUser As WindowsImpersonationContext = WindowsIdentity.Impersonate(safeTokenHandle.DangerousGetHandle())\n\n                        &#39; Check the identity.\n                        Console.WriteLine((&quot;After impersonation: &quot; + WindowsIdentity.GetCurrent().Name))\n\n                        &#39; Free the tokens.\n                    End Using\n                End Using\n            Catch ex As Exception\n                Console.WriteLine((&quot;Exception occurred. &quot; + ex.Message))\n            End Try\n        End Sub &#39;Main \n    End Class &#39;Class1\nEnd Module\n\nPublic NotInheritable Class SafeTokenHandle\n    Inherits SafeHandleZeroOrMinusOneIsInvalid\n\n    Private Sub New()\n        MyBase.New(True)\n\n    End Sub &#39;New\n\n    Private Declare Auto Function LogonUser Lib &quot;advapi32.dll&quot; (ByVal lpszUsername As [String], _\n            ByVal lpszDomain As [String], ByVal lpszPassword As [String], _\n            ByVal dwLogonType As Integer, ByVal dwLogonProvider As Integer, _\n            ByRef phToken As IntPtr) As Boolean\n    &lt;DllImport(&quot;kernel32.dll&quot;), ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success), SuppressUnmanagedCodeSecurity()&gt; _\n    Private Shared Function CloseHandle(ByVal handle As IntPtr) As &lt;MarshalAs(UnmanagedType.Bool)&gt; Boolean\n\n    End Function\n    Protected Overrides Function ReleaseHandle() As Boolean\n        Return CloseHandle(handle)\n\n    End Function &#39;ReleaseHandle\nEnd Class &#39;SafeTokenHandle\n</code></pre><pre><code class=\"lang-cs\" name=\"WindowsIdentity Impersonation2#1\">// This sample demonstrates the use of the WindowsIdentity class to impersonate a user.\n// IMPORTANT NOTES:\n// This sample requests the user to enter a password on the console screen.\n// Because the console window does not support methods allowing the password to be masked,\n// it will be visible to anyone viewing the screen.\n// On Windows Vista and later this sample must be run as an administrator. \n\n\nusing System;\nusing System.Runtime.InteropServices;\nusing System.Security.Principal;\nusing System.Security.Permissions;\nusing Microsoft.Win32.SafeHandles;\nusing System.Runtime.ConstrainedExecution;\nusing System.Security;\n\n\npublic class ImpersonationDemo\n{\n    [DllImport(&quot;advapi32.dll&quot;, SetLastError = true, CharSet = CharSet.Unicode)]\n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,\n        int dwLogonType, int dwLogonProvider, out SafeTokenHandle phToken);\n\n    [DllImport(&quot;kernel32.dll&quot;, CharSet = CharSet.Auto)]\n    public extern static bool CloseHandle(IntPtr handle);\n\n    // Test harness.\n    // If you incorporate this code into a DLL, be sure to demand FullTrust.\n    [PermissionSetAttribute(SecurityAction.Demand, Name = &quot;FullTrust&quot;)]\n    public static void Main(string[] args)\n    {\n        SafeTokenHandle safeTokenHandle;\n        try\n        {\n            string userName, domainName;\n            // Get the user token for the specified user, domain, and password using the\n            // unmanaged LogonUser method.\n            // The local machine name can be used for the domain name to impersonate a user on this machine.\n            Console.Write(&quot;Enter the name of the domain on which to log on: &quot;);\n            domainName = Console.ReadLine();\n\n            Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName);\n            userName = Console.ReadLine();\n\n            Console.Write(&quot;Enter the password for {0}: &quot;, userName);\n\n            const int LOGON32_PROVIDER_DEFAULT = 0;\n            //This parameter causes LogonUser to create a primary token.\n            const int LOGON32_LOGON_INTERACTIVE = 2;\n\n            // Call LogonUser to obtain a handle to an access token.\n            bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),\n                LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,\n                out safeTokenHandle);\n\n            Console.WriteLine(&quot;LogonUser called.&quot;);\n\n            if (false == returnValue)\n            {\n                int ret = Marshal.GetLastWin32Error();\n                Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret);\n                throw new System.ComponentModel.Win32Exception(ret);\n            }\n            using (safeTokenHandle)\n            {\n                Console.WriteLine(&quot;Did LogonUser Succeed? &quot; + (returnValue ? &quot;Yes&quot; : &quot;No&quot;));\n                Console.WriteLine(&quot;Value of Windows NT token: &quot; + safeTokenHandle);\n\n                // Check the identity.\n                Console.WriteLine(&quot;Before impersonation: &quot;\n                    + WindowsIdentity.GetCurrent().Name);\n                // Use the token handle returned by LogonUser.\n                using (WindowsImpersonationContext impersonatedUser = WindowsIdentity.Impersonate(safeTokenHandle.DangerousGetHandle()))\n                {\n\n                    // Check the identity.\n                    Console.WriteLine(&quot;After impersonation: &quot;\n                        + WindowsIdentity.GetCurrent().Name);\n                }\n                // Releasing the context object stops the impersonation\n                // Check the identity.\n                Console.WriteLine(&quot;After closing the context: &quot; + WindowsIdentity.GetCurrent().Name);\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(&quot;Exception occurred. &quot; + ex.Message);\n        }\n\n    }\n}\npublic sealed class SafeTokenHandle : SafeHandleZeroOrMinusOneIsInvalid\n{\n    private SafeTokenHandle()\n        : base(true)\n    {\n    }\n\n    [DllImport(&quot;kernel32.dll&quot;)]\n    [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]\n    [SuppressUnmanagedCodeSecurity]\n    [return: MarshalAs(UnmanagedType.Bool)]\n    private static extern bool CloseHandle(IntPtr handle);\n\n    protected override bool ReleaseHandle()\n    {\n        return CloseHandle(handle);\n    }\n}\n\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_RunImpersonated_Microsoft_Win32_SafeHandles_SafeAccessTokenHandle_System_Action_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_RunImpersonated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunImpersonated(SafeAccessTokenHandle,Action)</div>        \r\n          </div>\r\n    \r\n            <p>Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a>, you can use RunImpersonated and provide your function directly as a parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RunImpersonated (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Action action);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>safeAccessTokenHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SafeAccessTokenHandle of the impersonated Windows identity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>action</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The System.Action to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class to impersonate a user.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> This sample asks the user to enter a password on the console screen. The password will be visible on the screen, because the console window does not support masked input natively.  </p>\n</div>\n<pre><code class=\"lang-c#\">// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   \n// IMPORTANT NOTE:   \n// This sample asks the user to enter a password on the console screen.   \n// The password will be visible on the screen, because the console window   \n// does not support masked input natively.  \n\nusing System;  \nusing System.Runtime.InteropServices;  \nusing System.Security;  \nusing System.Security.Principal;  \nusing Microsoft.Win32.SafeHandles;  \n\npublic class ImpersonationDemo  \n{  \n    [DllImport(&quot;advapi32.dll&quot;, SetLastError = true, CharSet = CharSet.Unicode)]  \n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  \n        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  \n\n    public static void Main()  \n    {  \n        // Get the user token for the specified user, domain, and password using the   \n        // unmanaged LogonUser method.   \n        // The local machine name can be used for the domain name to impersonate a user on this machine.  \n        Console.Write(&quot;Enter the name of the domain on which to log on: &quot;);  \n        string domainName = Console.ReadLine();  \n\n        Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName);  \n        string userName = Console.ReadLine();  \n\n        Console.Write(&quot;Enter the password for {0}: &quot;, userName);  \n\n        const int LOGON32_PROVIDER_DEFAULT = 0;  \n        //This parameter causes LogonUser to create a primary token.   \n        const int LOGON32_LOGON_INTERACTIVE = 2;  \n\n        // Call LogonUser to obtain a handle to an access token.   \n        SafeAccessTokenHandle safeAccessTokenHandle;  \n        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  \n            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  \n            out safeAccessTokenHandle);  \n\n        if (false == returnValue)  \n        {  \n            int ret = Marshal.GetLastWin32Error();  \n            Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret);  \n            throw new System.ComponentModel.Win32Exception(ret);  \n        }  \n\n        Console.WriteLine(&quot;Did LogonUser Succeed? &quot; + (returnValue ? &quot;Yes&quot; : &quot;No&quot;));  \n        // Check the identity.  \n        Console.WriteLine(&quot;Before impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n\n        // Note: if you want to run as unimpersonated, pass  \n        //       &#39;SafeAccessTokenHandle.InvalidHandle&#39; instead of variable &#39;safeAccessTokenHandle&#39;  \n        WindowsIdentity.RunImpersonated(  \n            safeAccessTokenHandle,  \n            // User action  \n            () =&gt;  \n            {  \n                // Check the identity.  \n                Console.WriteLine(&quot;During impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n            }  \n            );  \n\n        // Check the identity again.  \n        Console.WriteLine(&quot;After impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n    }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_RunImpersonated__1_Microsoft_Win32_SafeHandles_SafeAccessTokenHandle_System_Func___0__\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_RunImpersonated_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunImpersonated&lt;T&gt;(SafeAccessTokenHandle,Func&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <a class=\"xref\" href=\"system.security.principal.windowsimpersonationcontext\" data-linktype=\"relative-path\">WindowsImpersonationContext</a>, you can use <span class=\"xref\">stem.Security.Principal.WindowsIdentity.RunImpersonated*</span> and provide your function directly as a parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static T RunImpersonated&lt;T&gt; (Microsoft.Win32.SafeHandles.SafeAccessTokenHandle safeAccessTokenHandle, Func&lt;T&gt; func);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>safeAccessTokenHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safeaccesstokenhandle\" data-linktype=\"relative-path\">SafeAccessTokenHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SafeAccessTokenHandle of the impersonated Windows identity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>func</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-1\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The System.Func to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>Returns the result of the function.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the use of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class to impersonate a user.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> This sample asks the user to enter a password on the console screen. The password will be visible on the screen, because the console window does not support masked input natively.  </p>\n</div>\n<pre><code class=\"lang-c#\">// The following example demonstrates the use of the WindowsIdentity class to impersonate a user.   \n// IMPORTANT NOTE:   \n// This sample asks the user to enter a password on the console screen.   \n// The password will be visible on the screen, because the console window   \n// does not support masked input natively.  \n\nusing System;  \nusing System.Runtime.InteropServices;  \nusing System.Security;  \nusing System.Security.Principal;  \nusing Microsoft.Win32.SafeHandles;  \n\npublic class ImpersonationDemo  \n{  \n    [DllImport(&quot;advapi32.dll&quot;, SetLastError = true, CharSet = CharSet.Unicode)]  \n    public static extern bool LogonUser(String lpszUsername, String lpszDomain, String lpszPassword,  \n        int dwLogonType, int dwLogonProvider, out SafeAccessTokenHandle phToken);  \n\n    public static void Main()  \n    {  \n        // Get the user token for the specified user, domain, and password using the   \n        // unmanaged LogonUser method.   \n        // The local machine name can be used for the domain name to impersonate a user on this machine.  \n        Console.Write(&quot;Enter the name of the domain on which to log on: &quot;);  \n        string domainName = Console.ReadLine();  \n\n        Console.Write(&quot;Enter the login of a user on {0} that you wish to impersonate: &quot;, domainName);  \n        string userName = Console.ReadLine();  \n\n        Console.Write(&quot;Enter the password for {0}: &quot;, userName);  \n\n        const int LOGON32_PROVIDER_DEFAULT = 0;  \n        //This parameter causes LogonUser to create a primary token.   \n        const int LOGON32_LOGON_INTERACTIVE = 2;  \n\n        // Call LogonUser to obtain a handle to an access token.   \n        SafeAccessTokenHandle safeAccessTokenHandle;  \n        bool returnValue = LogonUser(userName, domainName, Console.ReadLine(),  \n            LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT,  \n            out safeAccessTokenHandle);  \n\n        if (false == returnValue)  \n        {  \n            int ret = Marshal.GetLastWin32Error();  \n            Console.WriteLine(&quot;LogonUser failed with error code : {0}&quot;, ret);  \n            throw new System.ComponentModel.Win32Exception(ret);  \n        }  \n\n        Console.WriteLine(&quot;Did LogonUser Succeed? &quot; + (returnValue ? &quot;Yes&quot; : &quot;No&quot;));  \n        // Check the identity.  \n        Console.WriteLine(&quot;Before impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n\n        // Note: if you want to run as unimpersonated, pass  \n        //       &#39;SafeAccessTokenHandle.InvalidHandle&#39; instead of variable &#39;safeAccessTokenHandle&#39;  \n        WindowsIdentity.RunImpersonated(  \n            safeAccessTokenHandle,  \n            // User action  \n            () =&gt;  \n            {  \n                // Check the identity.  \n                Console.WriteLine(&quot;During impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n            }  \n            );  \n\n        // Check the identity again.  \n        Console.WriteLine(&quot;After impersonation: &quot; + WindowsIdentity.GetCurrent().Name);  \n    }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDeserializationCallback.OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDeserializationCallback.OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the deserialization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsIdentity_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the logical context information needed to recreate an instance of this execution context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing the information required to serialize the <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sets a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the logical call context information. During deserialization, the execution context object is reconstituted from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> transmitted over the stream.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Principal.WindowsIdentity.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Principal.WindowsIdentity.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.AccessToken\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.AuthenticationType\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Claims\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Clone\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.DefaultIssuer\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.DeviceClaims\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.GetAnonymous\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.GetCurrent\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Groups\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Impersonate\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.ImpersonationLevel\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.IsAnonymous\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.IsAuthenticated\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.IsGuest\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.IsSystem\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Name\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Owner\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.RunImpersonated\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.RunImpersonated&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.Token\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.User\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsIdentity.UserClaims\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"84e80c7f-6060-942c-4e7a-6a0ab6201462\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Principal\\WindowsIdentity.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a Windows user.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Principal/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Principal.WindowsIdentity\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Principal.WindowsIdentity.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Principal.WindowsIdentity.yml","open_to_public_contributors":true,"api_name":["System.Security.Principal.WindowsIdentity","System.Security.Principal.WindowsIdentity..ctor","System.Security.Principal.WindowsIdentity.AccessToken","System.Security.Principal.WindowsIdentity.AuthenticationType","System.Security.Principal.WindowsIdentity.Claims","System.Security.Principal.WindowsIdentity.Clone","System.Security.Principal.WindowsIdentity.DefaultIssuer","System.Security.Principal.WindowsIdentity.DeviceClaims","System.Security.Principal.WindowsIdentity.Dispose","System.Security.Principal.WindowsIdentity.GetAnonymous","System.Security.Principal.WindowsIdentity.GetCurrent","System.Security.Principal.WindowsIdentity.Groups","System.Security.Principal.WindowsIdentity.Impersonate","System.Security.Principal.WindowsIdentity.ImpersonationLevel","System.Security.Principal.WindowsIdentity.IsAnonymous","System.Security.Principal.WindowsIdentity.IsAuthenticated","System.Security.Principal.WindowsIdentity.IsGuest","System.Security.Principal.WindowsIdentity.IsSystem","System.Security.Principal.WindowsIdentity.Name","System.Security.Principal.WindowsIdentity.Owner","System.Security.Principal.WindowsIdentity.RunImpersonated","System.Security.Principal.WindowsIdentity.RunImpersonated<T>","System.Security.Principal.WindowsIdentity.IDeserializationCallback.OnDeserialization","System.Security.Principal.WindowsIdentity.ISerializable.GetObjectData","System.Security.Principal.WindowsIdentity.Token","System.Security.Principal.WindowsIdentity.User","System.Security.Principal.WindowsIdentity.UserClaims"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Principal.WindowsIdentity","System::Security::Principal::WindowsIdentity","System.Security.Principal.WindowsIdentity.#ctor","System::Security::Principal::WindowsIdentity::#ctor","System.Security.Principal.WindowsIdentity.AccessToken","System::Security::Principal::WindowsIdentity::AccessToken","System.Security.Principal.WindowsIdentity.AuthenticationType","System::Security::Principal::WindowsIdentity::AuthenticationType","System.Security.Principal.WindowsIdentity.Claims","System::Security::Principal::WindowsIdentity::Claims","System.Security.Principal.WindowsIdentity.Clone","System::Security::Principal::WindowsIdentity::Clone","System.Security.Principal.WindowsIdentity.DefaultIssuer","System::Security::Principal::WindowsIdentity::DefaultIssuer","System.Security.Principal.WindowsIdentity.DeviceClaims","System::Security::Principal::WindowsIdentity::DeviceClaims","System.Security.Principal.WindowsIdentity.Dispose","System::Security::Principal::WindowsIdentity::Dispose","System.Security.Principal.WindowsIdentity.GetAnonymous","System::Security::Principal::WindowsIdentity::GetAnonymous","System.Security.Principal.WindowsIdentity.GetCurrent","System::Security::Principal::WindowsIdentity::GetCurrent","System.Security.Principal.WindowsIdentity.Groups","System::Security::Principal::WindowsIdentity::Groups","System.Security.Principal.WindowsIdentity.Impersonate","System::Security::Principal::WindowsIdentity::Impersonate","System.Security.Principal.WindowsIdentity.ImpersonationLevel","System::Security::Principal::WindowsIdentity::ImpersonationLevel","System.Security.Principal.WindowsIdentity.IsAnonymous","System::Security::Principal::WindowsIdentity::IsAnonymous","System.Security.Principal.WindowsIdentity.IsAuthenticated","System::Security::Principal::WindowsIdentity::IsAuthenticated","System.Security.Principal.WindowsIdentity.IsGuest","System::Security::Principal::WindowsIdentity::IsGuest","System.Security.Principal.WindowsIdentity.IsSystem","System::Security::Principal::WindowsIdentity::IsSystem","System.Security.Principal.WindowsIdentity.Name","System::Security::Principal::WindowsIdentity::Name","System.Security.Principal.WindowsIdentity.Owner","System::Security::Principal::WindowsIdentity::Owner","System.Security.Principal.WindowsIdentity.RunImpersonated","System::Security::Principal::WindowsIdentity::RunImpersonated","System.Security.Principal.WindowsIdentity.RunImpersonated``1","System::Security::Principal::WindowsIdentity::RunImpersonated``1","System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System::Security::Principal::WindowsIdentity::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData","System::Security::Principal::WindowsIdentity::System#Runtime#Serialization#ISerializable#GetObjectData","System.Security.Principal.WindowsIdentity.Token","System::Security::Principal::WindowsIdentity::Token","System.Security.Principal.WindowsIdentity.User","System::Security::Principal::WindowsIdentity::User","System.Security.Principal.WindowsIdentity.UserClaims","System::Security::Principal::WindowsIdentity::UserClaims"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"84e80c7f-6060-942c-4e7a-6a0ab6201462","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Principal\\WindowsIdentity.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Principal/WindowsIdentity.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowsIdentity class | Microsoft Docs","_op_ogTitle":"WindowsIdentity class","description":"Represents a Windows user.\n","toc_asset_id":"_splitted/System.Security.Principal/toc.json","toc_rel":"_splitted/System.Security.Principal/toc.json","source_url":"","ms.assetid":"System.Security.Principal.WindowsIdentity","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.principal.windowsidentity","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.principal.windowsidentity","fileRelativePath":"System.Security.Principal.WindowsIdentity.html"},"themesRelativePathToOutputRoot":"_themes/"}