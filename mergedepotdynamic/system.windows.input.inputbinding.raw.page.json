{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">InputBinding</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a binding between an <a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a> and a command. The command is potentially a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">InputBinding</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ClearValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"relative-path\">ClearValue(DependencyPropertyKey)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">CoerceValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"relative-path\">DependencyObjectType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"relative-path\">GetLocalValueEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">InvalidateProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_IsSealed\" data-linktype=\"relative-path\">IsSealed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ReadLocalValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetCurrentValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyPropertyKey,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ShouldSerializeProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CanFreeze\" data-linktype=\"relative-path\">CanFreeze</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Changed\" data-linktype=\"relative-path\">Changed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Clone\" data-linktype=\"relative-path\">Clone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValue\" data-linktype=\"relative-path\">CloneCurrentValue()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstance\" data-linktype=\"relative-path\">CreateInstance()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze\" data-linktype=\"relative-path\">Freeze()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze_System_Windows_Freezable_System_Boolean_\" data-linktype=\"relative-path\">Freeze(Freezable,Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_FreezeCore_System_Boolean_\" data-linktype=\"relative-path\">FreezeCore(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen\" data-linktype=\"relative-path\">GetAsFrozen()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_IsFrozen\" data-linktype=\"relative-path\">IsFrozen</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnChanged\" data-linktype=\"relative-path\">OnChanged()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_ReadPreamble\" data-linktype=\"relative-path\">ReadPreamble()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePostscript\" data-linktype=\"relative-path\">WritePostscript()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePreamble\" data-linktype=\"relative-path\">WritePreamble()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>You can specify that user input invokes a command by creating a InputBinding. When the user performs the specified input, the <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> that is set to the <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_Command_\" data-linktype=\"relative-path\">Command</a> property is executed.  </p>\n<p> You can specify that the InputBinding invokes a command that is defined on an object by creating a binding on the <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_Command_\" data-linktype=\"relative-path\">Command</a>, <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>, and <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> properties. This enables you to define a custom command and associate it with user input. For more information, see the second example in the Examples section.  </p>\n<p> An InputBinding can be defined on a specific object or at the class level by registering a <a class=\"xref\" href=\"system.windows.input.commandmanager#System_Windows_Input_CommandManager_RegisterClassInputBinding_\" data-linktype=\"relative-path\">RegisterClassInputBinding</a> with the <a class=\"xref\" href=\"system.windows.input.commandmanager\" data-linktype=\"relative-path\">CommandManager</a>.  </p>\n<p> The InputBinding class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected). However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from InputBinding with a XAML usage. Two existing InputBinding-derived classes that can be instantiated in XAML and can set properties in XAML are <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. The typical property in WPF programming that is set in XAML and takes one or more InputBinding objects as values is the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InputBindings_\" data-linktype=\"relative-path\">InputBindings</a> property.  </p>\n<p><a name=\"xamlObjectElementUsage_InputBinding\"></a>   </p>\n<h2 id=\"xaml-object-element-usage\">XAML Object Element Usage</h2>\n<p> &lt;<em>inputBindingDerivedClass…/</em>&gt;  </p>\n<p><a name=\"xamlValues_InputBinding\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>inputBindingDerivedClass</code><br> A derived class of InputBinding that supports object element syntax, such as <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. See Remarks.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputBinding()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides base initialization for classes derived from <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected InputBinding ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> is not technically an abstract class, but the default constructor is deliberately protected access. This has the effect of making <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> an &quot;abstract&quot; class for XAML. There are existing properties in WPF that have XAML usages that expect objects of type <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>, but you cannot specify an <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> instance in XAML. Instead, you can specify one of the device-specific <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> derived classes as values, for instance <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding__ctor_System_Windows_Input_ICommand_System_Windows_Input_InputGesture_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputBinding(ICommand,InputGesture)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class with the specified command and input gesture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>command</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command to associate with <code>gesture</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>gesture</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The input gesture to associate with <code>command</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>command</code> or <code>gesture</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands. Instead, you will either use constructors of derived classes (<a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>), or you will use this constructor as the base instantiation of a custom class. Although the <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class supports different input devices in principle, in practice you must choose which device the input binding will represent. You only can set only one <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_Gesture_\" data-linktype=\"relative-path\">Gesture</a> value on the input binding, and gestures are device-specific.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CommandParameterProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CommandParameterProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Input.InputBinding.CommandParameter*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty CommandParameterProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CommandProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CommandProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Input.InputBinding.Command*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty CommandProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CommandTargetProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CommandTargetProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.Input.InputBinding.CommandTarget*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty CommandTargetProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_Command\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Command</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> associated with this input binding.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Input.ICommand Command { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The associated command.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The Command value is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected). However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>. Two existing <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> derived classes that can be instantiated in XAML and can set properties with XAML usages are <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> references a type converter that enables certain preexisting <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> implementations to specify values in the form of a string. This type conversion behavior sets the attribute value form of this property. You can also bind the Command, <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_CommandParameter_\" data-linktype=\"relative-path\">CommandParameter</a>, and <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> properties to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> that is defined on an object. This enables you to define a custom command and associate it with user input. For more information, see the second example in <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>.  </p>\n<p><a name=\"xamlAttributeUsage_Command\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<code>inputBindingDerivedClass</code> <code>Command</code>=&quot;<a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a>&quot;/&gt;  </p>\n<p><a name=\"xamlPropertyElementUsage_Command\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;inputBindingDerivedClass&gt;  \n  &lt;inputBindingDerivedClass.Command&gt;  \n    &lt;iCommandImplementation/&gt;  \n  &lt;/inputBindingDerivedClass.Command&gt;  \n&lt;/inputBindingDerivedClass&gt;  \n</code></pre><p><a name=\"xamlValues_Command\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>inputBindingDerivedClass</code><br> A derived class of <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> that supports object element syntax, such as <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. See Remarks.  </p>\n<p> <code>iCommandImplementation</code><br> An object implementation of <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> that supports object element syntax (has a public default constructor).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CommandParameter\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CommandParameter</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the command-specific data for a particular command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object CommandParameter { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command-specific data. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CommandParameter property is used to pass specific information to the command when it is executed. The type of the data is defined by the command. Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.  </p>\n<p> If the command that an input binding is associated with is a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, the CommandParameter of the input binding is passed to the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> handlers through the <a class=\"xref\" href=\"system.windows.input.executedroutedeventargs\" data-linktype=\"relative-path\">ExecutedRoutedEventArgs</a> and the <a class=\"xref\" href=\"system.windows.input.canexecuteroutedeventargs\" data-linktype=\"relative-path\">CanExecuteRoutedEventArgs</a> event data when the command is processed.  </p>\n<p> The data type and purpose of the command parameter are defined differently for each command and can be <code>null</code>. You can bind the <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_Command_\" data-linktype=\"relative-path\">Command</a>, CommandParameter, and <a class=\"xref\" href=\"system.windows.input.inputbinding#System_Windows_Input_InputBinding_CommandTarget_\" data-linktype=\"relative-path\">CommandTarget</a> properties to an <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> that is defined on an object. This enables you to define a custom command and associate it with user input. For more information, see the second example in <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected). However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> with XAML usage. Two existing <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> derived classes that can be instantiated in XAML and can set properties in XAML are <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>.  </p>\n<p><a name=\"xamlAttributeUsage_CommandParameter\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;inputBindingDerivedClass CommandParameter=&quot;commandParameterString&quot;/&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_CommandParameter\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;inputBindingDerivedClass&gt;  \n  &lt;inputBindingDerivedClass.CommandParameter&gt;  \n    &lt;commandParameterObject/&gt;  \n  &lt;/inputBindingDerivedClass.CommandParameter&gt;  \n&lt;/inputBindingDerivedClass&gt;  \n</code></pre><p><a name=\"xamlValues_CommandParameter\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>inputBindingDerivedClass</code><br> A derived class of <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> that supports object element syntax, such as <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. See Remarks.  </p>\n<p> <code>commandParameterString</code><br> A string that is processed by a particular command. Strings are the common type used for command parameters because they can be easily set in XAML. For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with. Many commands do not expect parameters.  </p>\n<p> <code>commandParameterObject</code><br> An object that is processed by a particular command. All existing WPF commands use strings. Therefore, this property element syntax is only relevant for custom command scenarios. In order to support this syntax, the <code>commandParameterObject</code> object must also support object element syntax (must have a public default constructor).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CommandTarget\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CommandTarget</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the target element of the command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.IInputElement CommandTarget { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.iinputelement\" data-linktype=\"relative-path\">IInputElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The target of the command. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the Windows Presentation Foundation (WPF) commanding system, the CommandTarget property on an <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a> object is applicable only when the <a class=\"xref\" href=\"system.windows.input.icommand\" data-linktype=\"relative-path\">ICommand</a> is a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>. If the CommandTarget is set on an <a class=\"xref\" href=\"system.windows.input.icommandsource\" data-linktype=\"relative-path\">ICommandSource</a> and the corresponding command is not a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, the command target is ignored.  </p>\n<p> When used with a <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a>, the command target is the object on which the &lt;xref:System.Windows.Input.CommandManager.Executed&gt; and &lt;xref:System.Windows.Input.CommandManager.CanExecute&gt; events are raised. If the CommandTarget property is not set, the element with keyboard focus is used as the target.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected). However, derived classes can expose a public constructor and therefore can set properties that are inherited from <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> with a XAML usage. Two existing <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> derived classes that can be instantiated in XAML and can set properties in XAML are <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>.  </p>\n<p><a name=\"xamlAttributeUsage_CommandTarget\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;inputBindingDerivedClass CommandTarget=&quot;bindingToTarget&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_CommandTarget\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>inputBindingDerivedClass</code><br> A derived class of <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> that supports object element syntax, such as <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. See Remarks.  </p>\n<p> <code>bindingToTarget</code><br> A string that uses a type of binding syntax that can return an object reference to an existing named element. See Remarks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_Gesture\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Gesture</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a> associated with this input binding.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Windows.Input.InputGesture Gesture { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The associated gesture. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The input gesture is the action that invokes the command. Examples of input gestures in WPF are <a class=\"xref\" href=\"system.windows.input.keygesture\" data-linktype=\"relative-path\">KeyGesture</a> and <a class=\"xref\" href=\"system.windows.input.mousegesture\" data-linktype=\"relative-path\">MouseGesture</a>. A <a class=\"xref\" href=\"system.windows.input.keygesture\" data-linktype=\"relative-path\">KeyGesture</a> is a combination of a <a class=\"xref\" href=\"system.windows.input.key\" data-linktype=\"relative-path\">Key</a> and a set of <a class=\"xref\" href=\"system.windows.input.modifierkeys\" data-linktype=\"relative-path\">ModifierKeys</a>. A <a class=\"xref\" href=\"system.windows.input.mousegesture\" data-linktype=\"relative-path\">MouseGesture</a> is a combination of a <a class=\"xref\" href=\"system.windows.input.mouseaction\" data-linktype=\"relative-path\">MouseAction</a> and a set of <a class=\"xref\" href=\"system.windows.input.modifierkeys\" data-linktype=\"relative-path\">ModifierKeys</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected). However, derived classes can expose a public constructor and thus can set properties that are inherited from <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> with a XAML usage. Two existing <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> derived classes that can be instantiated in XAML and can set properties in XAML are <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> and <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>.  </p>\n<p><a name=\"xamlAttributeUsage_gesture\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> <code>Gesture</code>=&quot;<a class=\"xref\" href=\"system.windows.input.keygesture\" data-linktype=\"relative-path\">KeyGesture</a>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a> <code>Gesture</code>=&quot;<a class=\"xref\" href=\"system.windows.input.mousegesture\" data-linktype=\"relative-path\">MouseGesture</a>&quot;/&gt;  </p>\n<p> - or -  </p>\n<p> &lt;<code>inputBindingDerivedClass</code> <code>Gesture</code>=&quot;<a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a>&quot;/&gt;  </p>\n<p><a name=\"xamlPropertyElementUsage_gesture\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;inputBindingDerivedClass&gt;  \n  &lt;inputBindingDerivedClass.Gesture&gt;  \n    &lt;inputGestureImplementation/&gt;  \n  &lt;/inputBindingDerivedClass.Gesture&gt;  \n&lt;/inputBindingDerivedClass&gt;  \n</code></pre><p><a name=\"xamlValues_gesture\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <code>inputBindingDerivedClass</code><br> A derived class of <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a> that supports object element syntax, such as <a class=\"xref\" href=\"system.windows.input.keybinding\" data-linktype=\"relative-path\">KeyBinding</a> or <a class=\"xref\" href=\"system.windows.input.mousebinding\" data-linktype=\"relative-path\">MouseBinding</a>. See Remarks.  </p>\n<p> <code>inputGestureImplementation</code><br> A custom derived class of <a class=\"xref\" href=\"system.windows.input.inputgesture\" data-linktype=\"relative-path\">InputGesture</a> that supports object element syntax.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CloneCore_System_Windows_Freezable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CloneCore(Freezable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the base (non-animated) values of the properties of the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void CloneCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceFreezable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to clone.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CloneCurrentValueCore_System_Windows_Freezable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CloneCurrentValueCore(Freezable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the current values of the properties of the specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceFreezable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to clone.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_CreateInstanceCore\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstanceCore()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an instance of an <a class=\"xref\" href=\"system.windows.input.inputbinding\" data-linktype=\"relative-path\">InputBinding</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Windows.Freezable CreateInstanceCore ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_GetAsFrozenCore_System_Windows_Freezable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAsFrozenCore(Freezable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Makes the instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> by using base (non-animated) property values.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceFreezable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to clone.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_InputBinding_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetCurrentValueAsFrozenCore(Freezable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Makes the current instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>. If the object has animated dependency properties, their current animated values are copied.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceFreezable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">System.Windows.Freezable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to clone.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.InputBinding.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.InputBinding.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CloneCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CloneCurrentValueCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.Command\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CommandParameter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CommandParameterProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CommandProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CommandTarget\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CommandTargetProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.CreateInstanceCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.Gesture\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.GetAsFrozenCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2e546ab3-8bab-3b0d-851e-199e00449f8a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a binding between an  and a command. The command is potentially a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.InputBinding\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.InputBinding.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.InputBinding.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.InputBinding","System.Windows.Input.InputBinding..ctor","System.Windows.Input.InputBinding.CloneCore","System.Windows.Input.InputBinding.CloneCurrentValueCore","System.Windows.Input.InputBinding.Command","System.Windows.Input.InputBinding.CommandParameter","System.Windows.Input.InputBinding.CommandParameterProperty","System.Windows.Input.InputBinding.CommandProperty","System.Windows.Input.InputBinding.CommandTarget","System.Windows.Input.InputBinding.CommandTargetProperty","System.Windows.Input.InputBinding.CreateInstanceCore","System.Windows.Input.InputBinding.Gesture","System.Windows.Input.InputBinding.GetAsFrozenCore","System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.InputBinding","System::Windows::Input::InputBinding","System.Windows.Input.InputBinding.#ctor","System::Windows::Input::InputBinding::#ctor","System.Windows.Input.InputBinding.CloneCore","System::Windows::Input::InputBinding::CloneCore","System.Windows.Input.InputBinding.CloneCurrentValueCore","System::Windows::Input::InputBinding::CloneCurrentValueCore","System.Windows.Input.InputBinding.Command","System::Windows::Input::InputBinding::Command","System.Windows.Input.InputBinding.CommandParameter","System::Windows::Input::InputBinding::CommandParameter","System.Windows.Input.InputBinding.CommandParameterProperty","System::Windows::Input::InputBinding::CommandParameterProperty","System.Windows.Input.InputBinding.CommandProperty","System::Windows::Input::InputBinding::CommandProperty","System.Windows.Input.InputBinding.CommandTarget","System::Windows::Input::InputBinding::CommandTarget","System.Windows.Input.InputBinding.CommandTargetProperty","System::Windows::Input::InputBinding::CommandTargetProperty","System.Windows.Input.InputBinding.CreateInstanceCore","System::Windows::Input::InputBinding::CreateInstanceCore","System.Windows.Input.InputBinding.Gesture","System::Windows::Input::InputBinding::Gesture","System.Windows.Input.InputBinding.GetAsFrozenCore","System::Windows::Input::InputBinding::GetAsFrozenCore","System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore","System::Windows::Input::InputBinding::GetCurrentValueAsFrozenCore"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2e546ab3-8bab-3b0d-851e-199e00449f8a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/InputBinding.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InputBinding class | Microsoft Docs","_op_ogTitle":"InputBinding class","description":"Represents a binding between an  and a command. The command is potentially a .\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.InputBinding","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.inputbinding","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.inputbinding","fileRelativePath":"System.Windows.Input.InputBinding.html"},"themesRelativePathToOutputRoot":"_themes/"}