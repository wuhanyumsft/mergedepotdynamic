{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_DataGridColumnCollection\">\r\n      <span class=\"lang-csharp\">DataGridColumnCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>A collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects that represent the columns in a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class DataGridColumnCollection : System.Collections.ICollection, System.Web.UI.IStateManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridColumnCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use the DataGridColumnCollection collection to programmatically manage a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects. These objects represent the columns in a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control. You can add, remove, or insert columns in the DataGridColumnCollection collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>true,</code> the columns created by the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control are not added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control does not store the contents of its <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the view state. To add or remove a column dynamically, you must programmatically add or remove the column every time the page is refreshed. Provide a <code>Page_Init</code> function that adds or removes the column before the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control&#39;s state is reloaded and the control is rebuilt. Otherwise, the changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection are not reflected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control when it is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can programmatically add columns to or remove columns from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, it is easier to list the columns statically and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property to display or hide each column.  </p>\n</div>\n<p> The order of the columns in the collection determines the order that the columns are displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.  </p>\n<p> The following table lists the different column classes that derive from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.  </p>\n<table>\n<thead>\n<tr>\n<th>Column Class</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.boundcolumn\" data-linktype=\"relative-path\">BoundColumn</a></td>\n<td>A column that is bound to a field in a data source. It displays each item in the field as text. This is the default column type for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.buttoncolumn\" data-linktype=\"relative-path\">ButtonColumn</a></td>\n<td>A column that displays a command button for each item in the column. This allows you to create a column of custom button controls, such as Add or Remove buttons.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.editcommandcolumn\" data-linktype=\"relative-path\">EditCommandColumn</a></td>\n<td>A column that contains editing commands for each item in the column.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlinkcolumn\" data-linktype=\"relative-path\">HyperLinkColumn</a></td>\n<td>A column that displays each item in the column as a hyperlink. The contents of the column can be bound to a field in a data source, or to static text.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.templatecolumn\" data-linktype=\"relative-path\">TemplateColumn</a></td>\n<td>A column that displays each item in the column according to a specified template. This allows you to control the content of the column, for example to display images.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class is the base class for the column classes listed. It is not used directly in the DataGridColumnCollection collection.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection__ctor_System_Web_UI_WebControls_DataGrid_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">DataGridColumnCollection(DataGrid,ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection can be modified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection is synchronized (thread safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object that can be used to synchronize access to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_Add_System_Web_UI_WebControls_DataGridColumn_\" data-linktype=\"self-bookmark\">Add(DataGridColumn)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object to the end of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_AddAt_System_Int32_System_Web_UI_WebControls_DataGridColumn_\" data-linktype=\"self-bookmark\">AddAt(Int32,DataGridColumn)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the items from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection to the specified <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index in the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains all the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_IndexOf_System_Web_UI_WebControls_DataGridColumn_\" data-linktype=\"self-bookmark\">IndexOf(DataGridColumn)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the index of the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_Remove_System_Web_UI_WebControls_DataGridColumn_\" data-linktype=\"self-bookmark\">Remove(DataGridColumn)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_IsTrackingViewState\" data-linktype=\"self-bookmark\">IStateManager.IsTrackingViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the collection is tracking its view-state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">IStateManager.LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the previously saved state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_SaveViewState\" data-linktype=\"self-bookmark\">IStateManager.SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an object containing state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_TrackViewState\" data-linktype=\"self-bookmark\">IStateManager.TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts tracking state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection__ctor_System_Web_UI_WebControls_DataGrid_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridColumnCollection(DataGrid,ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridColumnCollection (System.Web.UI.WebControls.DataGrid owner, System.Collections.ArrayList columns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>owner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that corresponds with this collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> that stores the collection of columns.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create and initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create and initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.DataGridColumnCollection Example#1\">    Sub Page_Init(sender As Object, e As EventArgs)\n        Dim myList As New ArrayList()\n        Dim myColumnCollection As New DataGridColumnCollection(ItemsGrid, myList)\n    End Sub &#39;Page_Init\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.DataGridColumnCollection Example#1\">void Page_Init(Object sender, EventArgs e) \n{\n   ArrayList myList = new ArrayList();\n   DataGridColumnCollection myColumnCollection = new DataGridColumnCollection(ItemsGrid, myList); \n}\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_Count\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to determine the number of columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. The Count property is commonly used when iterating through the collection to determine the upper bound of the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Count property to determine the upper bound of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. This value is then used to iterate though the collection.  </p>\n<pre><code class=\"lang-vb\" name=\"classic datagridcolumncollection.this example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n\n    Dim Cart As New DataTable()\n    Dim CartView As DataView\n\n    Sub Page_Load(sender As Object, e As EventArgs)\n        Dim dr As DataRow\n        \n        If Session(&quot;ShoppingCart&quot;) Is Nothing Then\n            \n            Cart.Columns.Add(New DataColumn(&quot;Qty&quot;, GetType(String)))\n            Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n            Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n            Session(&quot;ShoppingCart&quot;) = Cart\n            \n            &#39; Create sample data.\n            Dim i As Integer\n            For i = 1 To 4\n                dr = Cart.NewRow()\n                If i Mod 2 &lt;&gt; 0 Then\n                    dr(0) = &quot;2&quot;\n                Else\n                    dr(0) = &quot;1&quot;\n                End If\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) =(1.23 *(i + 1)).ToString()\n                Cart.Rows.Add(dr)\n            Next i\n        Else\n            Cart = CType(Session(&quot;ShoppingCart&quot;), DataTable)\n        End If \n        CartView = New DataView(Cart)\n        CartView.Sort = &quot;Item&quot;\n        \n        If Not IsPostBack Then\n            BindGrid()\n        End If \n    End Sub &#39;Page_Load\n\n\n    Sub MyDataGrid_Edit(sender As Object, e As DataGridCommandEventArgs)\n        MyDataGrid.EditItemIndex = e.Item.ItemIndex\n        BindGrid()\n    End Sub &#39;MyDataGrid_Edit\n\n\n    Sub MyDataGrid_Cancel(sender As Object, e As DataGridCommandEventArgs)\n        MyDataGrid.EditItemIndex = - 1\n        BindGrid()\n    End Sub &#39;MyDataGrid_Cancel\n\n\n    Sub MyDataGrid_Update(sender As Object, e As DataGridCommandEventArgs)\n        &#39; For bound columns, the edited value is stored in a TextBox.\n        &#39; The TextBox is the 0th element in the column&#39;s cell.\n        Dim qtyText As TextBox = CType(e.Item.Cells(2).Controls(0), TextBox)\n        Dim priceText As TextBox = CType(e.Item.Cells(3).Controls(0), TextBox)\n        \n        Dim item As String = e.Item.Cells(1).Text\n        Dim qty As String = qtyText.Text\n        Dim price As String = priceText.Text\n        \n        Dim dr As DataRow\n        \n        &#39; With a database, use an update command to update the data. Because \n        &#39; the data source in this example is an in-memory DataTable, delete the \n        &#39; old row and replace it with a new one.        \n\n        &#39; Remove old entry.\n        CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n        If CartView.Count &gt; 0 Then\n            CartView.Delete(0)\n        End If\n        CartView.RowFilter = &quot;&quot;\n        \n        &#39; Add new entry.\n        dr = Cart.NewRow()\n        dr(0) = qty\n        dr(1) = item\n        dr(2) = price\n        Cart.Rows.Add(dr)\n        \n        MyDataGrid.EditItemIndex = - 1\n        BindGrid()\n    End Sub &#39;MyDataGrid_Update\n\n\n    Sub Button_Click(sender As Object, e As EventArgs)\n        Label1.Text = &quot;Header Text for each column: &lt;br /&gt;&lt;br /&gt;&quot;\n        \n        Dim i As Integer\n        For i = 0 To MyDataGrid.Columns.Count - 1\n            Label1.Text &amp;= &quot;&lt;br /&gt;&quot; &amp; MyDataGrid.Columns(i).HeaderText\n        Next i\n    End Sub &#39;Button_Click\n\n\n    Sub BindGrid()\n        MyDataGrid.DataSource = CartView\n        MyDataGrid.DataBind()\n    End Sub &#39;BindGrid\n\n&lt;/script&gt;\n\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;font: 10pt verdana&quot;&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:DataGrid id=&quot;MyDataGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           Font-Names=&quot;Verdana&quot;\n           Font-Size=&quot;8pt&quot;\n           HeaderStyle-BackColor=&quot;#aaaadd&quot;\n           OnEditCommand=&quot;MyDataGrid_Edit&quot;\n           OnCancelCommand=&quot;MyDataGrid_Cancel&quot;\n           OnUpdateCommand=&quot;MyDataGrid_Update&quot;\n           AutoGenerateColumns=&quot;false&quot;&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:EditCommandColumn\n                 EditText=&quot;Edit&quot;\n                 CancelText=&quot;Cancel&quot;\n                 UpdateText=&quot;Update&quot;\n                 ItemStyle-Wrap=&quot;false&quot;\n                 HeaderText=&quot;Edit Command Column&quot;\n                 HeaderStyle-Wrap=&quot;false&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Item&quot; \n                 ReadOnly=&quot;true&quot; \n                 DataField=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Quantity&quot; \n                 DataField=&quot;Qty&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Price&quot; \n                 DataField=&quot;Price&quot;/&gt;\n\n         &lt;/Columns&gt;\n\n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Header Text for Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;      \n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"classic datagridcolumncollection.this example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n\n   DataTable Cart = new DataTable();\n   DataView CartView;   \n\n   void Page_Load(Object sender, EventArgs e) \n   {\n      DataRow dr;\n\n      if (Session[&quot;ShoppingCart&quot;] == null) \n      {       \n\n         Cart.Columns.Add(new DataColumn(&quot;Qty&quot;, typeof(String)));\n         Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(String)));\n         Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(String)));\n         Session[&quot;ShoppingCart&quot;] = Cart;\n            \n         // Create sample data.\n         for (int i = 1; i &lt;= 4; i++) \n         {\n            dr = Cart.NewRow();\n            if (i % 2 != 0)\n               dr[0] = &quot;2&quot;;\n            else\n               dr[0] = &quot;1&quot;;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = (1.23 * (i + 1)).ToString();\n            Cart.Rows.Add(dr);\n         }\n      }\n      else\n         Cart = (DataTable)Session[&quot;ShoppingCart&quot;];          \n\n      CartView = new DataView(Cart);\n      CartView.Sort=&quot;Item&quot;;\n\n      if (!IsPostBack)\n         BindGrid(); \n                  \n   }\n\n   void MyDataGrid_Edit(Object sender, DataGridCommandEventArgs e) \n   {\n      MyDataGrid.EditItemIndex = e.Item.ItemIndex;\n      BindGrid();\n   }\n\n   void MyDataGrid_Cancel(Object sender, DataGridCommandEventArgs e) \n   {\n      MyDataGrid.EditItemIndex = -1;\n      BindGrid();\n   }\n\n   void MyDataGrid_Update(Object sender, DataGridCommandEventArgs e) \n   {\n      // For bound columns, the edited value is stored in a TextBox.\n      // The TextBox is the 0th element in the column&#39;s cell.\n      TextBox qtyText = (TextBox)e.Item.Cells[2].Controls[0];\n      TextBox priceText = (TextBox)e.Item.Cells[3].Controls[0];\n\n      String item = e.Item.Cells[1].Text;\n      String qty = qtyText.Text;\n      String price = priceText.Text;\n       \n      DataRow dr;\n\n      // With a database, use an update command to update the data. Because \n      // the data source in this example is an in-memory DataTable, delete the \n      // old row and replace it with a new one.\n\n      // Remove old entry.\n      CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n      if (CartView.Count &gt; 0)\n         CartView.Delete(0);\n      CartView.RowFilter = &quot;&quot;;\n\n      // Add new entry.\n      dr = Cart.NewRow();\n      dr[0] = qty;\n      dr[1] = item;\n      dr[2] = price;\n      Cart.Rows.Add(dr);\n\n      MyDataGrid.EditItemIndex = -1;\n      BindGrid();\n   }\n\n   void Button_Click(Object sender, EventArgs e) \n   {      \n      Label1.Text = &quot;Header Text for each column: &lt;br /&gt;&quot;;\n\n      for (int i = 0; i &lt; MyDataGrid.Columns.Count; i++)\n      {\n         Label1.Text += &quot;&lt;br /&gt;&quot; + MyDataGrid.Columns[i].HeaderText;\n      }\n   }\n\n   void BindGrid() \n   {\n      MyDataGrid.DataSource = CartView;\n      MyDataGrid.DataBind();\n   }\n\n&lt;/script&gt;\n\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;font: 10pt verdana&quot;&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:DataGrid id=&quot;MyDataGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           Font-Names=&quot;Verdana&quot;\n           Font-Size=&quot;8pt&quot;\n           HeaderStyle-BackColor=&quot;#aaaadd&quot;\n           OnEditCommand=&quot;MyDataGrid_Edit&quot;\n           OnCancelCommand=&quot;MyDataGrid_Cancel&quot;\n           OnUpdateCommand=&quot;MyDataGrid_Update&quot;\n           AutoGenerateColumns=&quot;false&quot;&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:EditCommandColumn\n                 EditText=&quot;Edit&quot;\n                 CancelText=&quot;Cancel&quot;\n                 UpdateText=&quot;Update&quot;\n                 ItemStyle-Wrap=&quot;false&quot;\n                 HeaderText=&quot;Edit Command Column&quot;\n                 HeaderStyle-Wrap=&quot;false&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Item&quot; \n                 ReadOnly=&quot;true&quot; \n                 DataField=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Quantity&quot; \n                 DataField=&quot;Qty&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Price&quot; \n                 DataField=&quot;Price&quot;/&gt;\n\n         &lt;/Columns&gt;\n\n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Header Text for Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;      \n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_IsReadOnly\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the columns in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection can be modified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property always returns <code>false</code> to indicate that the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection can be written to in all cases.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection is synchronized (thread safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is derived from the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">System.Collections.ICollection</a> class and is overridden to always return <code>false</code>.  </p>\n<p> For more information on the IsSynchronized property, see the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_IsSynchronized_\" data-linktype=\"relative-path\">IsSynchronized</a> property of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">System.Collections.ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.DataGridColumn this[int index] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this indexer to get a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index using array notation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the indexer to get a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. The heading text from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object is then displayed on the Web page for each item in the collection.  </p>\n<pre><code class=\"lang-vb\" name=\"classic datagridcolumncollection.this example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n\n    Dim Cart As New DataTable()\n    Dim CartView As DataView\n\n    Sub Page_Load(sender As Object, e As EventArgs)\n        Dim dr As DataRow\n        \n        If Session(&quot;ShoppingCart&quot;) Is Nothing Then\n            \n            Cart.Columns.Add(New DataColumn(&quot;Qty&quot;, GetType(String)))\n            Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n            Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n            Session(&quot;ShoppingCart&quot;) = Cart\n            \n            &#39; Create sample data.\n            Dim i As Integer\n            For i = 1 To 4\n                dr = Cart.NewRow()\n                If i Mod 2 &lt;&gt; 0 Then\n                    dr(0) = &quot;2&quot;\n                Else\n                    dr(0) = &quot;1&quot;\n                End If\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) =(1.23 *(i + 1)).ToString()\n                Cart.Rows.Add(dr)\n            Next i\n        Else\n            Cart = CType(Session(&quot;ShoppingCart&quot;), DataTable)\n        End If \n        CartView = New DataView(Cart)\n        CartView.Sort = &quot;Item&quot;\n        \n        If Not IsPostBack Then\n            BindGrid()\n        End If \n    End Sub &#39;Page_Load\n\n\n    Sub MyDataGrid_Edit(sender As Object, e As DataGridCommandEventArgs)\n        MyDataGrid.EditItemIndex = e.Item.ItemIndex\n        BindGrid()\n    End Sub &#39;MyDataGrid_Edit\n\n\n    Sub MyDataGrid_Cancel(sender As Object, e As DataGridCommandEventArgs)\n        MyDataGrid.EditItemIndex = - 1\n        BindGrid()\n    End Sub &#39;MyDataGrid_Cancel\n\n\n    Sub MyDataGrid_Update(sender As Object, e As DataGridCommandEventArgs)\n        &#39; For bound columns, the edited value is stored in a TextBox.\n        &#39; The TextBox is the 0th element in the column&#39;s cell.\n        Dim qtyText As TextBox = CType(e.Item.Cells(2).Controls(0), TextBox)\n        Dim priceText As TextBox = CType(e.Item.Cells(3).Controls(0), TextBox)\n        \n        Dim item As String = e.Item.Cells(1).Text\n        Dim qty As String = qtyText.Text\n        Dim price As String = priceText.Text\n        \n        Dim dr As DataRow\n        \n        &#39; With a database, use an update command to update the data. Because \n        &#39; the data source in this example is an in-memory DataTable, delete the \n        &#39; old row and replace it with a new one.        \n\n        &#39; Remove old entry.\n        CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n        If CartView.Count &gt; 0 Then\n            CartView.Delete(0)\n        End If\n        CartView.RowFilter = &quot;&quot;\n        \n        &#39; Add new entry.\n        dr = Cart.NewRow()\n        dr(0) = qty\n        dr(1) = item\n        dr(2) = price\n        Cart.Rows.Add(dr)\n        \n        MyDataGrid.EditItemIndex = - 1\n        BindGrid()\n    End Sub &#39;MyDataGrid_Update\n\n\n    Sub Button_Click(sender As Object, e As EventArgs)\n        Label1.Text = &quot;Header Text for each column: &lt;br /&gt;&lt;br /&gt;&quot;\n        \n        Dim i As Integer\n        For i = 0 To MyDataGrid.Columns.Count - 1\n            Label1.Text &amp;= &quot;&lt;br /&gt;&quot; &amp; MyDataGrid.Columns(i).HeaderText\n        Next i\n    End Sub &#39;Button_Click\n\n\n    Sub BindGrid()\n        MyDataGrid.DataSource = CartView\n        MyDataGrid.DataBind()\n    End Sub &#39;BindGrid\n\n&lt;/script&gt;\n\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;font: 10pt verdana&quot;&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:DataGrid id=&quot;MyDataGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           Font-Names=&quot;Verdana&quot;\n           Font-Size=&quot;8pt&quot;\n           HeaderStyle-BackColor=&quot;#aaaadd&quot;\n           OnEditCommand=&quot;MyDataGrid_Edit&quot;\n           OnCancelCommand=&quot;MyDataGrid_Cancel&quot;\n           OnUpdateCommand=&quot;MyDataGrid_Update&quot;\n           AutoGenerateColumns=&quot;false&quot;&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:EditCommandColumn\n                 EditText=&quot;Edit&quot;\n                 CancelText=&quot;Cancel&quot;\n                 UpdateText=&quot;Update&quot;\n                 ItemStyle-Wrap=&quot;false&quot;\n                 HeaderText=&quot;Edit Command Column&quot;\n                 HeaderStyle-Wrap=&quot;false&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Item&quot; \n                 ReadOnly=&quot;true&quot; \n                 DataField=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Quantity&quot; \n                 DataField=&quot;Qty&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Price&quot; \n                 DataField=&quot;Price&quot;/&gt;\n\n         &lt;/Columns&gt;\n\n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Header Text for Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;      \n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"classic datagridcolumncollection.this example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n\n   DataTable Cart = new DataTable();\n   DataView CartView;   \n\n   void Page_Load(Object sender, EventArgs e) \n   {\n      DataRow dr;\n\n      if (Session[&quot;ShoppingCart&quot;] == null) \n      {       \n\n         Cart.Columns.Add(new DataColumn(&quot;Qty&quot;, typeof(String)));\n         Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(String)));\n         Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(String)));\n         Session[&quot;ShoppingCart&quot;] = Cart;\n            \n         // Create sample data.\n         for (int i = 1; i &lt;= 4; i++) \n         {\n            dr = Cart.NewRow();\n            if (i % 2 != 0)\n               dr[0] = &quot;2&quot;;\n            else\n               dr[0] = &quot;1&quot;;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = (1.23 * (i + 1)).ToString();\n            Cart.Rows.Add(dr);\n         }\n      }\n      else\n         Cart = (DataTable)Session[&quot;ShoppingCart&quot;];          \n\n      CartView = new DataView(Cart);\n      CartView.Sort=&quot;Item&quot;;\n\n      if (!IsPostBack)\n         BindGrid(); \n                  \n   }\n\n   void MyDataGrid_Edit(Object sender, DataGridCommandEventArgs e) \n   {\n      MyDataGrid.EditItemIndex = e.Item.ItemIndex;\n      BindGrid();\n   }\n\n   void MyDataGrid_Cancel(Object sender, DataGridCommandEventArgs e) \n   {\n      MyDataGrid.EditItemIndex = -1;\n      BindGrid();\n   }\n\n   void MyDataGrid_Update(Object sender, DataGridCommandEventArgs e) \n   {\n      // For bound columns, the edited value is stored in a TextBox.\n      // The TextBox is the 0th element in the column&#39;s cell.\n      TextBox qtyText = (TextBox)e.Item.Cells[2].Controls[0];\n      TextBox priceText = (TextBox)e.Item.Cells[3].Controls[0];\n\n      String item = e.Item.Cells[1].Text;\n      String qty = qtyText.Text;\n      String price = priceText.Text;\n       \n      DataRow dr;\n\n      // With a database, use an update command to update the data. Because \n      // the data source in this example is an in-memory DataTable, delete the \n      // old row and replace it with a new one.\n\n      // Remove old entry.\n      CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n      if (CartView.Count &gt; 0)\n         CartView.Delete(0);\n      CartView.RowFilter = &quot;&quot;;\n\n      // Add new entry.\n      dr = Cart.NewRow();\n      dr[0] = qty;\n      dr[1] = item;\n      dr[2] = price;\n      Cart.Rows.Add(dr);\n\n      MyDataGrid.EditItemIndex = -1;\n      BindGrid();\n   }\n\n   void Button_Click(Object sender, EventArgs e) \n   {      \n      Label1.Text = &quot;Header Text for each column: &lt;br /&gt;&quot;;\n\n      for (int i = 0; i &lt; MyDataGrid.Columns.Count; i++)\n      {\n         Label1.Text += &quot;&lt;br /&gt;&quot; + MyDataGrid.Columns[i].HeaderText;\n      }\n   }\n\n   void BindGrid() \n   {\n      MyDataGrid.DataSource = CartView;\n      MyDataGrid.DataBind();\n   }\n\n&lt;/script&gt;\n\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=&quot;font: 10pt verdana&quot;&gt;\n\n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:DataGrid id=&quot;MyDataGrid&quot; runat=&quot;server&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           Font-Names=&quot;Verdana&quot;\n           Font-Size=&quot;8pt&quot;\n           HeaderStyle-BackColor=&quot;#aaaadd&quot;\n           OnEditCommand=&quot;MyDataGrid_Edit&quot;\n           OnCancelCommand=&quot;MyDataGrid_Cancel&quot;\n           OnUpdateCommand=&quot;MyDataGrid_Update&quot;\n           AutoGenerateColumns=&quot;false&quot;&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:EditCommandColumn\n                 EditText=&quot;Edit&quot;\n                 CancelText=&quot;Cancel&quot;\n                 UpdateText=&quot;Update&quot;\n                 ItemStyle-Wrap=&quot;false&quot;\n                 HeaderText=&quot;Edit Command Column&quot;\n                 HeaderStyle-Wrap=&quot;false&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Item&quot; \n                 ReadOnly=&quot;true&quot; \n                 DataField=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Quantity&quot; \n                 DataField=&quot;Qty&quot;/&gt;\n\n            &lt;asp:BoundColumn HeaderText=&quot;Price&quot; \n                 DataField=&quot;Price&quot;/&gt;\n\n         &lt;/Columns&gt;\n\n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Header Text for Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;      \n\n   &lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object that can be used to synchronize access to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that can be used to synchronize access to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned in this implementation is the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> object.  </p>\n<p> For more information on the SyncRoot property, see the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">System.Collections.ICollection</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_Add_System_Web_UI_WebControls_DataGridColumn_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(DataGridColumn)</div>        \r\n          </div>\r\n    \r\n            <p>Appends the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object to the end of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Add (System.Web.UI.WebControls.DataGridColumn column);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>column</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object to append to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to add a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object to the end of a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control does not store the contents of its <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the view state. To add or remove a column dynamically, you must programmatically add or remove the column each time the page is refreshed. Provide a <code>Page_Init</code> function that adds or removes the column before the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control can reload its state and rebuild itself. Otherwise, the changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection are not reflected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control when it is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can programmatically add columns to or remove columns from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, it is easier to list the columns statically and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property to display or hide each column.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Add method to dynamically add a column to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control. Note that the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is an instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridCtor#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n\n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         // Create a DataGrid control.\n         DataGrid ItemsGrid = new DataGrid();\n\n         // Set the properties of the DataGrid.\n         ItemsGrid.ID = &quot;ItemsGrid&quot;;\n         ItemsGrid.BorderColor = System.Drawing.Color.Black;\n         ItemsGrid.CellPadding = 3;\n         ItemsGrid.AutoGenerateColumns = false;\n\n         // Set the styles for the DataGrid.\n         ItemsGrid.HeaderStyle.BackColor = \n             System.Drawing.Color.FromArgb(0x0000aaaa);\n\n         // Create the columns for the DataGrid control. The DataGrid\n         // columns are dynamically generated. Therefore, the columns   \n         // must be re-created each time the page is refreshed.\n         \n         // Create and add the columns to the collection.\n         ItemsGrid.Columns.Add(CreateBoundColumn(&quot;IntegerValue&quot;, &quot;Item&quot;));\n         ItemsGrid.Columns.Add(\n             CreateBoundColumn(&quot;StringValue&quot;, &quot;Description&quot;));\n         ItemsGrid.Columns.Add(\n             CreateBoundColumn(&quot;CurrencyValue&quot;, &quot;Price&quot;, &quot;{0:c}&quot;, \n             HorizontalAlign.Right));\n         ItemsGrid.Columns.Add(\n             CreateLinkColumn(&quot;http://www.microsoft.com&quot;, &quot;_self&quot;, \n             &quot;Microsoft&quot;, &quot;Related link&quot;));\n        \n         // Specify the data source and bind it to the control.\n         ItemsGrid.DataSource = CreateDataSource();\n         ItemsGrid.DataBind();\n\n         // Add the DataGrid control to the Controls collection of \n         // the PlaceHolder control.\n         Place.Controls.Add(ItemsGrid);\n\n      }\n\n      BoundColumn CreateBoundColumn(String DataFieldValue, \n          String HeaderTextValue)\n      {\n\n         // This version of the CreateBoundColumn method sets only the\n         // DataField and HeaderText properties.\n\n         // Create a BoundColumn.\n         BoundColumn column = new BoundColumn();\n\n         // Set the properties of the BoundColumn.\n         column.DataField = DataFieldValue;\n         column.HeaderText = HeaderTextValue;\n\n         return column;\n\n      }\n\n      BoundColumn CreateBoundColumn(String DataFieldValue, \n          String HeaderTextValue, String FormatValue, \n          HorizontalAlign AlignValue)\n      {\n\n         // This version of CreateBoundColumn method sets the DataField,\n         // HeaderText, and DataFormatString properties. It also sets the \n         // HorizontalAlign property of the ItemStyle property of the column. \n\n         // Create a BoundColumn using the overloaded CreateBoundColumn method.\n         BoundColumn column = CreateBoundColumn(DataFieldValue, HeaderTextValue);\n\n         // Set the properties of the BoundColumn.\n         column.DataFormatString = FormatValue;\n         column.ItemStyle.HorizontalAlign = AlignValue;\n\n         return column;\n\n      }\n\n      HyperLinkColumn CreateLinkColumn(String NavUrlValue, \n          String TargetValue, String TextValue, String HeaderTextValue)\n      {\n\n         // Create a BoundColumn.\n         HyperLinkColumn column = new HyperLinkColumn();\n\n         // Set the properties of the ButtonColumn.\n         column.NavigateUrl = NavUrlValue;\n         column.Target = TargetValue;\n         column.Text = TextValue;\n         column.HeaderText = HeaderTextValue;\n\n         return column;\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid Constructor Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n\n      &lt;asp:PlaceHolder id=&quot;Place&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridCtor#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n\n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(string)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 to 8 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n\n         &#39; Create a DataGrid control.\n         Dim ItemsGrid As DataGrid = New DataGrid()\n\n         &#39; Set the properties of the DataGrid.\n         ItemsGrid.ID = &quot;ItemsGrid&quot;\n         ItemsGrid.BorderColor = System.Drawing.Color.Black\n         ItemsGrid.CellPadding = 3\n         ItemsGrid.AutoGenerateColumns = False\n\n         &#39; Set the styles for the DataGrid.\n         ItemsGrid.HeaderStyle.BackColor = System.Drawing.Color.FromArgb(&amp;H0000aaaa)\n\n         &#39; Create the columns for the DataGrid control. The DataGrid\n         &#39; columns are dynamically generated. Therefore, the columns   \n         &#39; must be re-created each time the page is refreshed.\n         \n         &#39; Create and add the columns to the collection.\n         ItemsGrid.Columns.Add(CreateBoundColumn(&quot;IntegerValue&quot;, &quot;Item&quot;))\n         ItemsGrid.Columns.Add( _\n             CreateBoundColumn(&quot;StringValue&quot;, &quot;Description&quot;))\n         ItemsGrid.Columns.Add( _\n             CreateBoundColumn(&quot;CurrencyValue&quot;, &quot;Price&quot;, &quot;{0:c}&quot;, _\n             HorizontalAlign.Right))\n         ItemsGrid.Columns.Add( _\n             CreateLinkColumn(&quot;http:&#39;www.microsoft.com&quot;, &quot;_self&quot;, _\n             &quot;Microsoft&quot;, &quot;Related link&quot;))\n        \n         &#39; Specify the data source and bind it to the control.     \n         ItemsGrid.DataSource = CreateDataSource()\n         ItemsGrid.DataBind()\n\n         &#39; Add the DataGrid control to the Controls collection of \n         &#39; the PlaceHolder control.\n         Place.Controls.Add(ItemsGrid)\n\n      End Sub\n\n      Function CreateBoundColumn(DataFieldValue As String, HeaderTextValue As String) As BoundColumn\n\n         &#39; This version of CreateBoundColumn method sets only the \n         &#39; DataField and HeaderText properties.\n\n         &#39; Create a BoundColumn.\n         Dim column As BoundColumn = New BoundColumn()\n\n         &#39; Set the properties of the BoundColumn.\n         column.DataField = DataFieldValue\n         column.HeaderText = HeaderTextValue\n\n         Return column\n\n      End Function\n\n      Function CreateBoundColumn(DataFieldValue As String, _\n          HeaderTextValue As String, FormatValue As String, _\n          AlignValue As HorizontalAlign) As BoundColumn\n\n         &#39; This version of CreateBoundColumn method sets the DataField,\n         &#39; HeaderText, and DataFormatString properties. It also sets the \n         &#39; HorizontalAlign property of the ItemStyle property of the column. \n\n         &#39; Create a BoundColumn using the overloaded CreateBoundColumn method.\n         Dim column As BoundColumn = CreateBoundColumn(DataFieldValue, HeaderTextValue)\n\n         &#39; Set the properties of the BoundColumn.\n         column.DataFormatString = FormatValue\n         column.ItemStyle.HorizontalAlign = AlignValue\n\n         Return column\n\n      End Function\n\n      Function CreateLinkColumn(NavUrlValue As String, TargetValue As String, _\n         TextValue As String, HeaderTextValue As String) As HyperLinkColumn \n\n         &#39; Create a BoundColumn.\n         Dim column As HyperLinkColumn = New HyperLinkColumn()\n\n         &#39; Set the properties of the ButtonColumn.\n         column.NavigateUrl = NavUrlValue\n         column.Target = TargetValue\n         column.Text = TextValue\n         column.HeaderText = HeaderTextValue\n\n         Return column\n\n      End Function\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid Constructor Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid Constructor Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n\n      &lt;asp:PlaceHolder id=&quot;Place&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_AddAt_System_Int32_System_Web_UI_WebControls_DataGridColumn_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_AddAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAt(Int32,DataGridColumn)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddAt (int index, System.Web.UI.WebControls.DataGridColumn column);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index location in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> at which to insert the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>column</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column to insert in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>column</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to insert a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object at the specified index location in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control does not store the contents of its <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the view state. To add or remove a column dynamically, you must programmatically add or remove the column each time the page is refreshed. Provide a <code>Page_Init</code> function that adds or removes the column before the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control can reload its state and rebuild itself. Otherwise, the changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection are not reflected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control when it is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can programmatically add columns to or remove columns from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, it is easier to list the columns statically and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property to display or hide each column.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AddAt method to dynamically add a column to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control. Note that the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is an instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.AddAt Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Dim Cart As DataTable\n        Dim CartView As DataView\n \n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Session(&quot;DG4_ShoppingCart&quot;) Is Nothing Then\n                Cart = New DataTable()\n                Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n                Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n                Session(&quot;DG4_ShoppingCart&quot;) = Cart\n            Else\n                Cart = CType(Session(&quot;DG4_ShoppingCart&quot;), DataTable)\n            End If\n            CartView = New DataView(Cart)\n            ShoppingCart.DataSource = CartView\n            ShoppingCart.DataBind()\n            \n            If Not IsPostBack Then\n                &#39; Load this data only once.\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n            End If\n        End Sub &#39;Page_Load\n         \n\n        Sub Page_Init(sender As Object, e As EventArgs)\n            \n            &#39; Create a dynamic column to add to Columns collection.\n            Dim NumberColumn As New BoundColumn()\n            NumberColumn.HeaderText = &quot;Item Number&quot;\n            NumberColumn.DataField = &quot;IntegerValue&quot;\n            \n            &#39; Add column to Columns collection.\n            ItemsGrid.Columns.AddAt(2, NumberColumn)\n        End Sub &#39;Page_Init\n         \n\n        Sub Grid_CartCommand(sender As Object, e As DataGridCommandEventArgs)\n            \n            Dim dr As DataRow = Cart.NewRow()\n            \n            &#39; e.Item is the table row where the command is raised.\n            &#39; For bound columns, the value is stored in the Text property of the TableCell.\n            Dim itemCell As TableCell = e.Item.Cells(2)\n            Dim priceCell As TableCell = e.Item.Cells(3)\n            Dim item As String = itemCell.Text\n            Dim price As String = priceCell.Text\n            \n            If CType(e.CommandSource, Button).CommandName = &quot;AddToCart&quot; Then\n                dr(0) = item\n                dr(1) = price\n                Cart.Rows.Add(dr)\n            Else &#39;Remove from Cart.\n                CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n                If CartView.Count &gt; 0 Then\n                    CartView.Delete(0)\n                End If\n                CartView.RowFilter = &quot;&quot;\n            End If\n            ShoppingCart.DataBind()\n        End Sub &#39;Grid_CartCommand  \n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection AddAt Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection AddAt Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.AddAt Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      DataTable Cart;\n      DataView CartView;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      } \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         if (Session[&quot;DG4_ShoppingCart&quot;] == null) \n         {\n            Cart = new DataTable();\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(string)));\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(string)));\n            Session[&quot;DG4_ShoppingCart&quot;] = Cart;\n         }\n         else \n         {\n            Cart = (DataTable)Session[&quot;DG4_ShoppingCart&quot;];\n         }    \n         CartView = new DataView(Cart);\n         ShoppingCart.DataSource = CartView;\n         ShoppingCart.DataBind();\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Page_Init(Object sender, EventArgs e) \n      {\n\n         // Create a dynamic column to add to Columns collection.\n         BoundColumn NumberColumn = new BoundColumn();\n         NumberColumn.HeaderText=&quot;Item Number&quot;; \n         NumberColumn.DataField=&quot;IntegerValue&quot;;\n\n         // Add column to Columns collection.\n         ItemsGrid.Columns.AddAt(2, NumberColumn);\n\n      }\n  \n      void Grid_CartCommand(Object sender, DataGridCommandEventArgs e) {\n     \n         DataRow dr = Cart.NewRow();\n          \n         // e.Item is the table row where the command is raised.\n         // For bound columns, the value is stored in the Text property of the TableCell.\n         TableCell itemCell = e.Item.Cells[2];\n         TableCell priceCell = e.Item.Cells[3];\n         string item = itemCell.Text;\n         string price = priceCell.Text;\n         \n         if (((Button)e.CommandSource).CommandName == &quot;AddToCart&quot;) \n         {\n            dr[0] = item;\n            dr[1] = price;\n            Cart.Rows.Add(dr);\n         }\n         else \n         { \n\n            //Remove from Cart.\n         \n            CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n            if (CartView.Count &gt; 0) \n            {    \n               CartView.Delete(0);\n            }\n            CartView.RowFilter = &quot;&quot;;\n         }\n         ShoppingCart.DataBind();\n \n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection AddAt Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection AddAt Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_Clear\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to remove all <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.tablerowcollection#System_Web_UI_WebControls_TableRowCollection_Count_\" data-linktype=\"relative-path\">Count</a> property is automatically set to <code>0</code> after this method is used.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Clear method to empty the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection before adding new columns to the collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.Clear Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n\n      void Page_Init(Object sender, EventArgs e) \n      {\n\n         // Empty DataGridColumnsCollection collection. \n         ItemsGrid.Columns.Clear();\n\n         // Create dynamic columns to add to Columns collection.\n         BoundColumn IntegerColumn = new BoundColumn();\n         BoundColumn StringColumn = new BoundColumn();\n         BoundColumn PriceColumn = new BoundColumn();\n\n         IntegerColumn.HeaderText=&quot;Item Number&quot;; \n         IntegerColumn.DataField=&quot;IntegerValue&quot;;\n\n         StringColumn.HeaderText=&quot;Item&quot;; \n         StringColumn.DataField=&quot;StringValue&quot;;\n\n         PriceColumn.HeaderText=&quot;Price&quot;; \n         PriceColumn.DataField=&quot;CurrencyValue&quot;;\n\n         // Add columns to Columns collection.\n         ItemsGrid.Columns.Add(IntegerColumn);\n         ItemsGrid.Columns.Add(StringColumn);\n         ItemsGrid.Columns.Add(PriceColumn);\n\n      } \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n   \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection Clear Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection Clear Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.Clear Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; + i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Init(sender As Object, e As EventArgs)\n            \n            &#39; Empty DataGridColumnsCollection collection. \n            ItemsGrid.Columns.Clear()\n            \n            &#39; Create dynamic columns to add to Columns collection.\n            Dim IntegerColumn As New BoundColumn()\n            Dim StringColumn As New BoundColumn()\n            Dim PriceColumn As New BoundColumn()\n            \n            IntegerColumn.HeaderText = &quot;Item Number&quot;\n            IntegerColumn.DataField = &quot;IntegerValue&quot;\n            \n            StringColumn.HeaderText = &quot;Item&quot;\n            StringColumn.DataField = &quot;StringValue&quot;\n            \n            PriceColumn.HeaderText = &quot;Price&quot;\n            PriceColumn.DataField = &quot;CurrencyValue&quot;\n            \n            &#39; Add columns to Columns collection.\n            ItemsGrid.Columns.Add(IntegerColumn)\n            ItemsGrid.Columns.Add(StringColumn)\n            ItemsGrid.Columns.Add(PriceColumn)\n\n        End Sub &#39;Page_Init\n         \n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Not IsPostBack Then\n\n                &#39; Load this data only once\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n\n            End If\n        End Sub &#39;Page_Load \n   \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection Clear Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection Clear Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the items from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection to the specified <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index in the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A zero-based <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that receives the copied items from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first position in the specified <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> to receive the copied contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to copy the contents of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection into the specified <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">System.Array</a>, starting at the specified index.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>array</code> parameter must be a zero-based <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">System.Array</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CopyTo method to copy the contents of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection to an array of <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.CopyTo Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Not IsPostBack Then\n                &#39; Load this data only once.\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n            End If\n        End Sub &#39;Page_Load\n         \n\n        Sub Button_Click(sender As Object, e As EventArgs)\n            \n            Dim myArray(3) As DataGridColumn\n            \n            ItemsGrid.Columns.CopyTo(myArray, 0)\n            \n            Label1.Text = &quot;The heading text for the items in the array are: &quot; &amp; &quot;&lt;br /&gt;&quot; &amp; &quot;&lt;br /&gt;&quot;\n            \n            Dim column As DataGridColumn\n            For Each column In  myArray\n                Label1.Text &amp;= column.HeaderText &amp; &quot;&lt;br /&gt;&quot;\n            Next column \n        End Sub &#39;Button_Click\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection CopyTo Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection CopyTo Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Copy DataGridColumnsCollection to Array&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.CopyTo Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n       void Button_Click(Object sender, EventArgs e) \n      {\n       \n         DataGridColumn[] myArray = new DataGridColumn[3];\n\n         ItemsGrid.Columns.CopyTo(myArray, 0);\n\n         Label1.Text = &quot;The heading text for the items in the array are: &lt;br /&gt;&lt;br /&gt;&quot;;\n\n         foreach (DataGridColumn column in myArray) \n         {\n          \n            Label1.Text += column.HeaderText + &quot;&lt;br /&gt;&quot;;\n \n         }\n\n      } \n   \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection CopyTo Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection CopyTo Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Copy DataGridColumnsCollection to Array&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains all the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains all <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column objects in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to create a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">System.Collections.IEnumerator</a> interface that can be iterated through easily to get each item in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<p> Use the <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> property to get the item currently pointed to in the collection.  </p>\n<p> Use the <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> method to move to the next item in the collection.  </p>\n<p> Use the <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> method to move the enumerator to the initial position.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> method must be called after creating a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">System.Collections.IEnumerator</a> object, or after using the <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> method to move the enumerator to the first item in the collection. Otherwise, the item represented by the <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> property is undefined.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetEnumerator method to create a <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">System.Collections.IEnumerator</a> interface that can be iterated though to display the contents of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.GetEnumerator Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Not IsPostBack Then\n\n                &#39; Load this data only once.\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n\n            End If\n        End Sub &#39;Page_Load\n         \n\n        Sub Button_Click(sender As Object, e As EventArgs)\n            \n            &#39; Create IEnumerator for rows.\n            Dim myEnum As IEnumerator = ItemsGrid.Columns.GetEnumerator()\n            Dim column As DataGridColumn\n            \n            Label1.Text = &quot;The header text of the items in the IEnumerator are: &lt;br /&gt;&lt;br /&gt;&quot;  \n            \n            &#39; Iterate through IEnumerator and display its contents.\n            While myEnum.MoveNext()\n                \n                column = CType(myEnum.Current, DataGridColumn)\n                Label1.Text &amp;= column.HeaderText &amp; &quot;&lt;br /&gt;&quot;\n            End While \n\n        End Sub &#39;Button_Click\n   \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection GetEnumerator Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection GetEnumerator Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Create IEnumerator&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.GetEnumerator Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n       void Button_Click(Object sender, EventArgs e) \n      {\n\n         // Create IEnumerator for rows.\n         IEnumerator myEnum = ItemsGrid.Columns.GetEnumerator();\n         DataGridColumn column;\n \n         Label1.Text = &quot;The header text of the items in the IEnumerator are: &lt;br /&gt;&lt;br /&gt;&quot;;\n \n         // Iterate through IEnumerator and display its contents.\n         while (myEnum.MoveNext()) \n         {\n\n            column = (DataGridColumn)myEnum.Current;\n            Label1.Text += column.HeaderText + &quot;&lt;br /&gt;&quot;;\n\n         }\n\n      } \n   \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection GetEnumerator Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection GetEnumerator Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;false&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n \n         &lt;Columns&gt;\n                  \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item Number&quot; \n                 DataField=&quot;IntegerValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Item&quot; \n                 DataField=&quot;StringValue&quot;/&gt;\n \n            &lt;asp:BoundColumn \n                 HeaderText=&quot;Price&quot; \n                 DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n \n         &lt;/Columns&gt;\n   \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Create IEnumerator&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;    \n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_IndexOf_System_Web_UI_WebControls_DataGridColumn_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(DataGridColumn)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the index of the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int IndexOf (System.Web.UI.WebControls.DataGridColumn column);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>column</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column to search for in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index position of the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>. The default value is <code>-1</code>, which indicates that the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived object is not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to determine the index number of the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. If the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object is not found, an index of <code>-1</code> is returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the IndexOf method to determine the index of a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived object in a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.IndexOf Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Dim Cart As DataTable\n        Dim CartView As DataView\n\n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Session(&quot;DG4_ShoppingCart&quot;) Is Nothing Then\n                Cart = New DataTable()\n                Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n                Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n                Session(&quot;DG4_ShoppingCart&quot;) = Cart\n            Else\n                Cart = CType(Session(&quot;DG4_ShoppingCart&quot;), DataTable)\n            End If\n            CartView = New DataView(Cart)\n            ShoppingCart.DataSource = CartView\n            ShoppingCart.DataBind()\n            \n            If Not IsPostBack Then\n                &#39; Load this data only once.\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n            End If\n\n        End Sub &#39;Page_Load\n         \n\n        Sub Grid_CartCommand(sender As Object, e As DataGridCommandEventArgs)\n            \n            Dim dr As DataRow = Cart.NewRow()\n            \n            &#39; e.Item is the table row where the command is raised.\n            &#39; For bound columns, the value is stored in the Text property of the TableCell.\n            Dim itemCell As TableCell = e.Item.Cells(2)\n            Dim priceCell As TableCell = e.Item.Cells(3)\n            Dim item As String = itemCell.Text\n            Dim price As String = priceCell.Text\n            \n            If CType(e.CommandSource, Button).CommandName = &quot;AddToCart&quot; Then\n                dr(0) = item\n                dr(1) = price\n                Cart.Rows.Add(dr)\n            Else \n\n                &#39;Remove from Cart.\n                CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n                If CartView.Count &gt; 0 Then\n                    CartView.Delete(0)\n                End If\n                CartView.RowFilter = &quot;&quot;\n\n            End If\n            ShoppingCart.DataBind()\n        End Sub &#39;Grid_CartCommand\n         \n\n        Sub Button_Click(sender As Object, e As EventArgs)\n            \n            Label1.Text = &quot;The indexes of the columns: &lt;br /&gt;&lt;br /&gt;&quot;\n            \n            Dim column As DataGridColumn\n            For Each column In  ItemsGrid.Columns\n                Label1.Text &amp;= &quot;&lt;br /&gt;&quot; &amp; column.HeaderText &amp; &quot; = &quot; &amp; ItemsGrid.Columns.IndexOf(column)\n            Next column\n        End Sub &#39;Button_Click\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection IndexOf Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection IndexOf Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n\n      &lt;br /&gt;\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Index of Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.IndexOf Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      DataTable Cart;\n      DataView CartView;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      } \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         if (Session[&quot;DG4_ShoppingCart&quot;] == null) \n         {\n            Cart = new DataTable();\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(string)));\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(string)));\n            Session[&quot;DG4_ShoppingCart&quot;] = Cart;\n         }\n         else \n         {\n            Cart = (DataTable)Session[&quot;DG4_ShoppingCart&quot;];\n         }    \n         CartView = new DataView(Cart);\n         ShoppingCart.DataSource = CartView;\n         ShoppingCart.DataBind();\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n  \n      void Grid_CartCommand(Object sender, DataGridCommandEventArgs e) {\n     \n         DataRow dr = Cart.NewRow();\n          \n         // e.Item is the table row where the command is raised.\n         // For bound columns, the value is stored in the Text property of the TableCell.\n         TableCell itemCell = e.Item.Cells[2];\n         TableCell priceCell = e.Item.Cells[3];\n         string item = itemCell.Text;\n         string price = priceCell.Text;\n         \n         if (((Button)e.CommandSource).CommandName == &quot;AddToCart&quot;) \n         {\n            dr[0] = item;\n            dr[1] = price;\n            Cart.Rows.Add(dr);\n         }\n         else \n         { \n\n            //Remove from Cart.\n         \n            CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n            if (CartView.Count &gt; 0) \n            {    \n               CartView.Delete(0);\n            }\n            CartView.RowFilter = &quot;&quot;;\n         }\n         ShoppingCart.DataBind();\n \n      }\n\n       void Button_Click(Object sender, EventArgs e) \n      {\n       \n         Label1.Text = &quot;The indexes of the columns: &lt;br /&gt;&lt;br /&gt;&quot;;\n\n         foreach(DataGridColumn column in ItemsGrid.Columns)\n         {\n            Label1.Text += &quot;&lt;br /&gt;&quot; + column.HeaderText + &quot; = &quot; + \n                      ItemsGrid.Columns.IndexOf(column);\n         }\n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection IndexOf Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection IndexOf Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n\n      &lt;br /&gt;\n      &lt;br /&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot;\n           Text=&quot;Display Index of Columns&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Label1&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_Remove_System_Web_UI_WebControls_DataGridColumn_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(DataGridColumn)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (System.Web.UI.WebControls.DataGridColumn column);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>column</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column to remove from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to remove the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control does not store the contents of its <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the view state. To add or remove a column dynamically, you must programmatically add or remove the column every time the page is refreshed. Provide a <code>Page_Init</code> function that adds or removes the column before the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control can reload its state and rebuild itself. Otherwise, the changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection are not reflected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control when it is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can programmatically add columns to or remove columns from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, it is easier to list the columns statically and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property to display or hide each column.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Remove method to remove a column from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. Note that the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.Remove Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      DataTable Cart;\n      DataView CartView;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      } \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         if (Session[&quot;DG4_ShoppingCart&quot;] == null) \n         {\n            Cart = new DataTable();\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(string)));\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(string)));\n            Session[&quot;DG4_ShoppingCart&quot;] = Cart;\n         }\n         else \n         {\n            Cart = (DataTable)Session[&quot;DG4_ShoppingCart&quot;];\n         }    \n         CartView = new DataView(Cart);\n         ShoppingCart.DataSource = CartView;\n         ShoppingCart.DataBind();\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n  \n      void Grid_CartCommand(Object sender, DataGridCommandEventArgs e) {\n     \n         DataRow dr = Cart.NewRow();\n          \n         // e.Item is the table row where the command is raised.\n         // For bound columns, the value is stored in the Text property of the TableCell.\n         TableCell itemCell = e.Item.Cells[2];\n         TableCell priceCell = e.Item.Cells[3];\n         string item = itemCell.Text;\n         string price = priceCell.Text;\n         \n         if (((Button)e.CommandSource).CommandName == &quot;AddToCart&quot;) \n         {\n            dr[0] = item;\n            dr[1] = price;\n            Cart.Rows.Add(dr);\n         }\n         else \n         { \n\n            //Remove from Cart.\n         \n            CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n            if (CartView.Count &gt; 0) \n            {    \n               CartView.Delete(0);\n            }\n            CartView.RowFilter = &quot;&quot;;\n         }\n         ShoppingCart.DataBind();\n \n      }\n\n       void Button_Click(Object sender, EventArgs e) \n      {\n         ItemsGrid.Columns.Remove(ItemsGrid.Columns[2]);\n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection Remove Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection Remove Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot; \n           Text=&quot;Remove Item Number Column&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.Remove Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Dim Cart As DataTable\n        Dim CartView As DataView\n\n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Session(&quot;DG4_ShoppingCart&quot;) Is Nothing Then\n                Cart = New DataTable()\n                Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n                Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n                Session(&quot;DG4_ShoppingCart&quot;) = Cart\n            Else\n                Cart = CType(Session(&quot;DG4_ShoppingCart&quot;), DataTable)\n            End If\n            CartView = New DataView(Cart)\n            ShoppingCart.DataSource = CartView\n            ShoppingCart.DataBind()\n            \n            If Not IsPostBack Then\n                &#39; Load this data only once.\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n            End If\n        End Sub &#39;Page_Load\n         \n\n        Sub Grid_CartCommand(sender As Object, e As DataGridCommandEventArgs)\n            \n            Dim dr As DataRow = Cart.NewRow()\n            \n            &#39; e.Item is the table row where the command is raised.\n            &#39; For bound columns, the value is stored in the Text property of the TableCell.\n            Dim itemCell As TableCell = e.Item.Cells(2)\n            Dim priceCell As TableCell = e.Item.Cells(3)\n            Dim item As String = itemCell.Text\n            Dim price As String = priceCell.Text\n            \n            If CType(e.CommandSource, Button).CommandName = &quot;AddToCart&quot; Then\n                dr(0) = item\n                dr(1) = price\n                Cart.Rows.Add(dr)\n            Else \n\n                &#39;Remove from Cart.\n                CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n                If CartView.Count &gt; 0 Then\n                    CartView.Delete(0)\n                End If\n                CartView.RowFilter = &quot;&quot;\n\n            End If\n            ShoppingCart.DataBind()\n        End Sub &#39;Grid_CartCommand\n         \n\n        Sub Button_Click(sender As Object, e As EventArgs)\n            ItemsGrid.Columns.Remove(ItemsGrid.Columns(2))\n        End Sub &#39;Button_Click\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection Remove Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection Remove Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n\n      &lt;asp:Button id=&quot;Button1&quot; \n           Text=&quot;Remove Item Number Column&quot;\n           OnClick=&quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than <code>0</code> or greater than <span class=\"xref\">stem.Web.UI.WebControls.DataGridColumnCollection.Count*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to remove a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>-derived column object from a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection at the specified index.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control does not store the contents of its <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection in the view state. To add or remove a column dynamically, you must programmatically add or remove the column each time the page is refreshed. Provide a <code>Page_Init</code> function that adds or removes the column before the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control can reload its state and rebuild itself. Otherwise, the changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection are not reflected in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control when it is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although you can programmatically add columns to or remove columns from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, it is easier to list the columns statically and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property to display or hide each column.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the RemoveAt method to remove a column from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection. Note that the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_Columns_\" data-linktype=\"relative-path\">Columns</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic DataGridColumnCollection.RemoveAt Example#1\">&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n \n      DataTable Cart;\n      DataView CartView;\n \n      ICollection CreateDataSource() \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         for (int i = 0; i &lt; 9; i++) \n         {\n            dr = dt.NewRow();\n   \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      } \n \n      void Page_Load(Object sender, EventArgs e) \n      {\n\n         if (Session[&quot;DG4_ShoppingCart&quot;] == null) \n         {\n            Cart = new DataTable();\n            Cart.Columns.Add(new DataColumn(&quot;Item&quot;, typeof(string)));\n            Cart.Columns.Add(new DataColumn(&quot;Price&quot;, typeof(string)));\n            Session[&quot;DG4_ShoppingCart&quot;] = Cart;\n         }\n         else \n         {\n            Cart = (DataTable)Session[&quot;DG4_ShoppingCart&quot;];\n         }    \n         CartView = new DataView(Cart);\n         ShoppingCart.DataSource = CartView;\n         ShoppingCart.DataBind();\n \n         if (!IsPostBack) \n         {\n            // Load this data only once.\n            ItemsGrid.DataSource= CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n  \n      void Grid_CartCommand(Object sender, DataGridCommandEventArgs e) {\n     \n         DataRow dr = Cart.NewRow();\n          \n         // e.Item is the table row where the command is raised.\n         // For bound columns, the value is stored in the Text property of the TableCell.\n         TableCell itemCell = e.Item.Cells[2];\n         TableCell priceCell = e.Item.Cells[3];\n         string item = itemCell.Text;\n         string price = priceCell.Text;\n         \n         if (((Button)e.CommandSource).CommandName == &quot;AddToCart&quot;) \n         {\n            dr[0] = item;\n            dr[1] = price;\n            Cart.Rows.Add(dr);\n         }\n         else \n         { \n\n            //Remove from Cart.\n         \n            CartView.RowFilter = &quot;Item=&#39;&quot; + item + &quot;&#39;&quot;;\n            if (CartView.Count &gt; 0) \n            {    \n               CartView.Delete(0);\n            }\n            CartView.RowFilter = &quot;&quot;;\n         }\n         ShoppingCart.DataBind();\n \n      }\n\n       void Page_Init(Object sender, EventArgs e) \n      {\n         ItemsGrid.Columns.RemoveAt(2);\n      }\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection RemoveAt Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection RemoveAt Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic DataGridColumnCollection.RemoveAt Example#1\">&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n \n        Dim Cart As DataTable\n        Dim CartView As DataView\n        \n        Function CreateDataSource() As ICollection\n            Dim dt As New DataTable()\n            Dim dr As DataRow\n            \n            dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n            dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(String)))\n            dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n            \n            Dim i As Integer\n            For i = 0 To 8\n                dr = dt.NewRow()\n                \n                dr(0) = i\n                dr(1) = &quot;Item &quot; &amp; i.ToString()\n                dr(2) = 1.23 *(i + 1)\n                \n                dt.Rows.Add(dr)\n            Next i\n            \n            Dim dv As New DataView(dt)\n            Return dv\n        End Function &#39;CreateDataSource\n\n\n        Sub Page_Load(sender As Object, e As EventArgs)\n            \n            If Session(&quot;DG4_ShoppingCart&quot;) Is Nothing Then\n                Cart = New DataTable()\n                Cart.Columns.Add(New DataColumn(&quot;Item&quot;, GetType(String)))\n                Cart.Columns.Add(New DataColumn(&quot;Price&quot;, GetType(String)))\n                Session(&quot;DG4_ShoppingCart&quot;) = Cart\n            Else\n                Cart = CType(Session(&quot;DG4_ShoppingCart&quot;), DataTable)\n            End If\n            CartView = New DataView(Cart)\n            ShoppingCart.DataSource = CartView\n            ShoppingCart.DataBind()\n            \n            If Not IsPostBack Then\n\n                &#39; Load this data only once\n                ItemsGrid.DataSource = CreateDataSource()\n                ItemsGrid.DataBind()\n\n            End If\n        End Sub &#39;Page_Load\n         \n\n        Sub Grid_CartCommand(sender As Object, e As DataGridCommandEventArgs)\n            \n            Dim dr As DataRow = Cart.NewRow()\n            \n            &#39; e.Item is the table row where the command is raised.\n            &#39; For bound columns, the value is stored in the Text property of the TableCell.\n            Dim itemCell As TableCell = e.Item.Cells(2)\n            Dim priceCell As TableCell = e.Item.Cells(3)\n            Dim item As String = itemCell.Text\n            Dim price As String = priceCell.Text\n            \n            If CType(e.CommandSource, Button).CommandName = &quot;AddToCart&quot; Then\n                dr(0) = item\n                dr(1) = price\n                Cart.Rows.Add(dr)\n            Else \n\n                &#39;Remove from Cart.\n                CartView.RowFilter = &quot;Item=&#39;&quot; &amp; item &amp; &quot;&#39;&quot;\n                If CartView.Count &gt; 0 Then\n                    CartView.Delete(0)\n                End If\n                CartView.RowFilter = &quot;&quot;\n\n            End If\n            ShoppingCart.DataBind()\n        End Sub &#39;Grid_CartCommand\n         \n\n        Sub Page_Init(sender As Object, e As EventArgs)\n            ItemsGrid.Columns.RemoveAt(2)\n        End Sub &#39;Page_Init\n \n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumnCollection RemoveAt Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumnCollection RemoveAt Example&lt;/h3&gt;\n \n      &lt;table cellpadding=&quot;5&quot;&gt;\n         &lt;tr valign=&quot;top&quot;&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Product List&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    CellPadding=&quot;3&quot;\n                    AutoGenerateColumns=&quot;false&quot;\n                    OnItemCommand=&quot;Grid_CartCommand&quot;\n                    runat=&quot;server&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n \n                  &lt;Columns&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Add to cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Add&quot; \n                          CommandName=&quot;AddToCart&quot;/&gt;\n \n                     &lt;asp:ButtonColumn \n                          HeaderText=&quot;Remove from cart&quot; \n                          ButtonType=&quot;PushButton&quot; \n                          Text=&quot;Remove&quot; \n                          CommandName=&quot;RemoveFromCart&quot;/&gt;\n                  \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item Number&quot; \n                          DataField=&quot;IntegerValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Item&quot; \n                          DataField=&quot;StringValue&quot;/&gt;\n \n                     &lt;asp:BoundColumn \n                          HeaderText=&quot;Price&quot; \n                          DataField=&quot;CurrencyValue&quot; \n                          DataFormatString=&quot;{0:c}&quot;&gt;\n\n                        &lt;ItemStyle HorizontalAlign=&quot;right&quot;&gt;\n                        &lt;/ItemStyle&gt;\n\n                     &lt;/asp:BoundColumn&gt;\n \n                  &lt;/Columns&gt;\n   \n               &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n            &lt;td&gt;\n \n               &lt;b&gt;Shopping Cart&lt;/b&gt;\n \n               &lt;asp:DataGrid id=&quot;ShoppingCart&quot; \n                    runat=&quot;server&quot;\n                    BorderColor=&quot;black&quot;\n                    BorderWidth=&quot;1&quot;\n                    GridLines=&quot;Both&quot;\n                    ShowFooter=&quot;false&quot;\n                    CellPadding=&quot;3&quot;\n                    CellSpacing=&quot;0&quot;&gt;\n\n                  &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n                  &lt;/HeaderStyle&gt;\n\n                &lt;/asp:DataGrid&gt;\n \n            &lt;/td&gt;\n         &lt;/tr&gt;\n \n      &lt;/table&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_IsTrackingViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_IsTrackingViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.IsTrackingViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the collection is tracking its view-state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Web.UI.IStateManager.IsTrackingViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> object is tracking its view-state changes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IStateManager.IsTrackingViewState member is an explicit interface member implementation. It can be used only when a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumncollection\" data-linktype=\"relative-path\">DataGridColumnCollection</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.istatemanager\" data-linktype=\"relative-path\">IStateManager</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the previously saved state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IStateManager.LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved view state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an object containing state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IStateManager.SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved view state values for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumnCollection_System_Web_UI_IStateManager_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Starts tracking state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IStateManager.TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataGridColumnCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataGridColumnCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.Add\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.AddAt\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.Clear\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.Remove\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.IsTrackingViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.TrackViewState\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"dd08518a-56a5-32d3-0160-a762c53c28df\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"A collection of -derived column objects that represent the columns in a  control. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataGridColumnCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataGridColumnCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataGridColumnCollection.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.DataGridColumnCollection","System.Web.UI.WebControls.DataGridColumnCollection..ctor","System.Web.UI.WebControls.DataGridColumnCollection.Add","System.Web.UI.WebControls.DataGridColumnCollection.AddAt","System.Web.UI.WebControls.DataGridColumnCollection.Clear","System.Web.UI.WebControls.DataGridColumnCollection.CopyTo","System.Web.UI.WebControls.DataGridColumnCollection.Count","System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator","System.Web.UI.WebControls.DataGridColumnCollection.IndexOf","System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly","System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized","System.Web.UI.WebControls.DataGridColumnCollection.Item","System.Web.UI.WebControls.DataGridColumnCollection.Remove","System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt","System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot","System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.IsTrackingViewState","System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.LoadViewState","System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.SaveViewState","System.Web.UI.WebControls.DataGridColumnCollection.IStateManager.TrackViewState"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataGridColumnCollection","System::Web::UI::WebControls::DataGridColumnCollection","System.Web.UI.WebControls.DataGridColumnCollection.#ctor","System::Web::UI::WebControls::DataGridColumnCollection::#ctor","System.Web.UI.WebControls.DataGridColumnCollection.Add","System::Web::UI::WebControls::DataGridColumnCollection::Add","System.Web.UI.WebControls.DataGridColumnCollection.AddAt","System::Web::UI::WebControls::DataGridColumnCollection::AddAt","System.Web.UI.WebControls.DataGridColumnCollection.Clear","System::Web::UI::WebControls::DataGridColumnCollection::Clear","System.Web.UI.WebControls.DataGridColumnCollection.CopyTo","System::Web::UI::WebControls::DataGridColumnCollection::CopyTo","System.Web.UI.WebControls.DataGridColumnCollection.Count","System::Web::UI::WebControls::DataGridColumnCollection::Count","System.Web.UI.WebControls.DataGridColumnCollection.GetEnumerator","System::Web::UI::WebControls::DataGridColumnCollection::GetEnumerator","System.Web.UI.WebControls.DataGridColumnCollection.IndexOf","System::Web::UI::WebControls::DataGridColumnCollection::IndexOf","System.Web.UI.WebControls.DataGridColumnCollection.IsReadOnly","System::Web::UI::WebControls::DataGridColumnCollection::IsReadOnly","System.Web.UI.WebControls.DataGridColumnCollection.IsSynchronized","System::Web::UI::WebControls::DataGridColumnCollection::IsSynchronized","System.Web.UI.WebControls.DataGridColumnCollection.Item","System::Web::UI::WebControls::DataGridColumnCollection::Item","System.Web.UI.WebControls.DataGridColumnCollection.Remove","System::Web::UI::WebControls::DataGridColumnCollection::Remove","System.Web.UI.WebControls.DataGridColumnCollection.RemoveAt","System::Web::UI::WebControls::DataGridColumnCollection::RemoveAt","System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot","System::Web::UI::WebControls::DataGridColumnCollection::SyncRoot","System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#IsTrackingViewState","System::Web::UI::WebControls::DataGridColumnCollection::System#Web#UI#IStateManager#IsTrackingViewState","System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#LoadViewState","System::Web::UI::WebControls::DataGridColumnCollection::System#Web#UI#IStateManager#LoadViewState","System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#SaveViewState","System::Web::UI::WebControls::DataGridColumnCollection::System#Web#UI#IStateManager#SaveViewState","System.Web.UI.WebControls.DataGridColumnCollection.System#Web#UI#IStateManager#TrackViewState","System::Web::UI::WebControls::DataGridColumnCollection::System#Web#UI#IStateManager#TrackViewState"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"dd08518a-56a5-32d3-0160-a762c53c28df","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/DataGridColumnCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridColumnCollection class | Microsoft Docs","_op_ogTitle":"DataGridColumnCollection class","description":"A collection of -derived column objects that represent the columns in a  control. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataGridColumnCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datagridcolumncollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datagridcolumncollection","fileRelativePath":"System.Web.UI.WebControls.DataGridColumnCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}