{"content":"    \r\n    <h1 id=\"System_Web_Services_Discovery_DiscoveryClientProtocol\">\r\n      <span class=\"lang-csharp\">DiscoveryClientProtocol</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides support for programmatically invoking XML Web services discovery.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DiscoveryClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol\" data-linktype=\"relative-path\">WebClientProtocol</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol\" data-linktype=\"relative-path\">System.Web.Services.Protocols.HttpWebClientProtocol</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l5\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DiscoveryClientProtocol</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_AllowAutoRedirect\" data-linktype=\"relative-path\">AllowAutoRedirect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_CancelAsync_System_Object_\" data-linktype=\"relative-path\">CancelAsync(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_ClientCertificates\" data-linktype=\"relative-path\">ClientCertificates</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_CookieContainer\" data-linktype=\"relative-path\">CookieContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_EnableDecompression\" data-linktype=\"relative-path\">EnableDecompression</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GenerateXmlMappings_System_Type_System_Collections_ArrayList_\" data-linktype=\"relative-path\">GenerateXmlMappings(Type,ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GenerateXmlMappings_System_Type___System_Collections_ArrayList_\" data-linktype=\"relative-path\">GenerateXmlMappings(Type[],ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebRequest_System_Uri_\" data-linktype=\"relative-path\">GetWebRequest(Uri)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebResponse_System_Net_WebRequest_\" data-linktype=\"relative-path\">GetWebResponse(WebRequest)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebResponse_System_Net_WebRequest_System_IAsyncResult_\" data-linktype=\"relative-path\">GetWebResponse(WebRequest,IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_Proxy\" data-linktype=\"relative-path\">Proxy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_UnsafeAuthenticatedConnectionSharing\" data-linktype=\"relative-path\">UnsafeAuthenticatedConnectionSharing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_UserAgent\" data-linktype=\"relative-path\">UserAgent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Abort\" data-linktype=\"relative-path\">Abort()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_AddToCache_System_Type_System_Object_\" data-linktype=\"relative-path\">AddToCache(Type,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_ConnectionGroupName\" data-linktype=\"relative-path\">ConnectionGroupName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Credentials\" data-linktype=\"relative-path\">Credentials</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_GetFromCache_System_Type_\" data-linktype=\"relative-path\">GetFromCache(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_PreAuthenticate\" data-linktype=\"relative-path\">PreAuthenticate</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_RequestEncoding\" data-linktype=\"relative-path\">RequestEncoding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Timeout\" data-linktype=\"relative-path\">Timeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Url\" data-linktype=\"relative-path\">Url</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_UseDefaultCredentials\" data-linktype=\"relative-path\">UseDefaultCredentials</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XML Web service discovery is the process of locating, or discovering, one or more related documents that describe available XML Web services. It is through XML Web services discovery that XML Web service clients learn about the available XML Web services at a given URL and how to use them. XML Web services discovery works from the premise that you have already obtained the URL to a discovery document, possibly through a directory service, such as <a href=\"http://uddi.microsoft.com\" data-linktype=\"external\">http://uddi.microsoft.com</a>, however, you do not have the details about the XML Web services offered. Through XML Web services discovery, you can discover the details about the XML Web services listed in a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> at a specific URL.  </p>\n<p> An XML Web service client starts XML Web services discovery by supplying a URL to either the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a> or <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> methods. Typically, this URL refers to a discovery document, which in turn refers to documents that describe one or more XML Web services, which are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property. At that point, only that document is downloaded and verified to point to valid information about XML Web services. However, the references contained in that document are not verified at this stage. Instead they are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property. To verify that the references are valid, invoke the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> or <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods, which add valid referenced documents to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property. Last, if a client wants to save the discovery results to disk, invoke the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_WriteAll_\" data-linktype=\"relative-path\">WriteAll</a> method.  </p>\n<p> If programmatic access to XML Web services discovery is not needed, the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winsdklong-md.md&quot; -->Windows Software Development Kit (SDK)<!--END INCLUDE --> ships the Web Services Discovery tool (Disco.exe) for discovering XML Web services within a command prompt. For more details, see <a href=\"http://msdn.microsoft.com/en-us/acd88078-c581-42bc-94ca-6633e2851979\" data-linktype=\"external\">Web Services Discovery Tool (Disco.exe)</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol__ctor\" data-linktype=\"self-bookmark\">DiscoveryClientProtocol()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_AdditionalInformation\" data-linktype=\"self-bookmark\">AdditionalInformation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information in addition to references found in the discovery document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents\" data-linktype=\"self-bookmark\">Documents</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of discovery documents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_Errors\" data-linktype=\"self-bookmark\">Errors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of exceptions that occurred during invocation of method from this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_References\" data-linktype=\"self-bookmark\">References</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A collection of references founds in resolved discovery documents.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_System_String_\" data-linktype=\"self-bookmark\">Discover(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Discovers the supplied URL to determine if it is a discovery document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_System_String_\" data-linktype=\"self-bookmark\">DiscoverAny(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Discovers the supplied URL to determine if it is a discovery document, service description or an XML Schema Definition (XSD) schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_Download_System_String__\" data-linktype=\"self-bookmark\">Download(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the discovery document at the supplied URL into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_Download_System_String__System_String__\" data-linktype=\"self-bookmark\">Download(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the discovery document at the supplied URL into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object, setting the <code>contentType</code> parameter to the MIME encoding of the discovery document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_LoadExternals\" data-linktype=\"self-bookmark\">LoadExternals()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Instructs the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> object to load any external references.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_ReadAll_System_String_\" data-linktype=\"self-bookmark\">ReadAll(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads in a file containing a map of saved discovery documents populating the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.Documents*</span> and <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span> properties, with discovery documents, XML Schema Definition (XSD) schemas, and service descriptions referenced in the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll\" data-linktype=\"self-bookmark\">ResolveAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas, and service descriptions in the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span> property, as well as references found in referenced discovery documents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel\" data-linktype=\"self-bookmark\">ResolveOneLevel()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas and service descriptions in <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span>, as well as references found in those discovery documents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryClientProtocol_WriteAll_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAll(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes all discovery documents, XML Schema Definition (XSD) schemas, and Service Descriptions in the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.Documents*</span> property to the supplied directory and creates a file in that directory.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol__ctor\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscoveryClientProtocol()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DiscoveryClientProtocol ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_AdditionalInformation\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_AdditionalInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdditionalInformation</div>        \r\n          </div>\r\n    \r\n            <p>Gets information in addition to references found in the discovery document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IList AdditionalInformation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> containing additional information found in the discovery document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AdditionalInformation property primarily contains SOAP bindings, represented by the <a class=\"xref\" href=\"system.web.services.discovery.soapbinding\" data-linktype=\"relative-path\">SoapBinding</a> class, defined in the discovery document.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol_AdditionalInformation#1\">using System;\nusing System.Net;\nusing System.Security.Permissions;\nusing System.Xml;\nusing System.Web.Services.Discovery;\n\nclass DiscoverySoapBindingClass\n{\n   static void Main()\n   {\n      Run();\n   }\n\n   [PermissionSetAttribute(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n   static void Run()\n   {\n        try\n        {\n\n            // dataservice.disco is a sample discovery document.\n            string myStringUrl = &quot;http://localhost/dataservice.disco&quot;;\n\n            // Call the Discover method to populate the Documents property.\n            DiscoveryClientProtocol myDiscoveryClientProtocol = \n                new DiscoveryClientProtocol();\n            myDiscoveryClientProtocol.Credentials = \n                CredentialCache.DefaultCredentials;\n            DiscoveryDocument myDiscoveryDocument = \n                myDiscoveryClientProtocol.Discover(myStringUrl);\n\n            SoapBinding mySoapBinding = new SoapBinding();\n            mySoapBinding.Address = &quot;http://schemas.xmlsoap.org/disco/scl/&quot;;\n            mySoapBinding.Binding = new XmlQualifiedName(&quot;string&quot;, \n                &quot;http://www.w3.org/2001/XMLSchema&quot;);\n            myDiscoveryClientProtocol.AdditionalInformation.Add(mySoapBinding);\n\n            // Write the information back.\n            myDiscoveryClientProtocol.WriteAll(&quot;MyDirectory&quot;,\n                &quot;results.discomap&quot;);\n\n            System.Collections.IList myIList = \n                myDiscoveryClientProtocol.AdditionalInformation;\n            mySoapBinding = null;\n            mySoapBinding = (SoapBinding)myIList[0];\n            Console.WriteLine(&quot;The address of the SoapBinding associated &quot; \n                + &quot;with AdditionalInformation is: &quot; \n                + mySoapBinding.Address);\n        }\n        catch (Exception e)\n        {\n         Console.WriteLine(e.ToString());\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol_AdditionalInformation#1\">\nImports System\nImports System.Net\nImports System.Security.Permissions\nImports System.Xml\nImports System.Web.Services.Discovery\n\nClass DiscoverySoapBindingMod\n   Shared Sub Main()\n      Run()\n   End Sub &#39;Main\n\n   &lt;PermissionSetAttribute(SecurityAction.Demand, Name := &quot;FullTrust&quot;)&gt; _\n   Shared Sub Run()\n\n        Try\n\n            &#39; dataservice.disco is a sample discovery document.\n            Dim myStringUrl As String = &quot;http://localhost/dataservice.disco&quot;\n\n            &#39; Call the Discover method to populate the Documents property.\n            Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n                New DiscoveryClientProtocol()\n            myDiscoveryClientProtocol.Credentials = _\n                CredentialCache.DefaultCredentials\n            Dim myDiscoveryDocument As DiscoveryDocument = _\n                myDiscoveryClientProtocol.Discover(myStringUrl)\n\n            Dim mySoapBinding As SoapBinding = New SoapBinding()\n            mySoapBinding.Address = &quot;http://schemas.xmlsoap.org/disco/scl/&quot;\n            mySoapBinding.Binding = New XmlQualifiedName(&quot;string&quot;, _\n                &quot;http://www.w3.org/2001/XMLSchema&quot;)\n            myDiscoveryClientProtocol.AdditionalInformation.Add(mySoapBinding)\n\n            &#39; Write the information back. \n            myDiscoveryClientProtocol.WriteAll(&quot;MyDirectory&quot;, _\n                &quot;results.discomap&quot;)\n\n            Dim myIList As System.Collections.IList = _\n                myDiscoveryClientProtocol.AdditionalInformation\n            mySoapBinding = Nothing\n            mySoapBinding = CType(myIList(0),SoapBinding)\n            Console.WriteLine(&quot;The address of the SoapBinding associated &quot; _\n                &amp; &quot;with AdditionalInformation is: &quot; &amp; mySoapBinding.Address)\n        Catch e As Exception\n            Console.WriteLine(e.ToString())\n        End Try\n\n    End Sub &#39;Run\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryClientProtocol_AdditionalInformation#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Xml;\nusing namespace System::Web::Services::Discovery;\n\nint main()\n{\n   try\n   {\n      // dataservice.disco is a sample discovery document.\n      String^ myStringUrl = &quot;http://localhost/dataservice.disco&quot;;\n      \n      // Call the Discover method to populate the Documents property.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      myDiscoveryClientProtocol-&gt;Discover( myStringUrl );\n      SoapBinding^ mySoapBinding = gcnew SoapBinding;\n      mySoapBinding-&gt;Address = &quot;http://schemas.xmlsoap.org/disco/scl/&quot;;\n      mySoapBinding-&gt;Binding = gcnew XmlQualifiedName( &quot;String*&quot;,&quot;http://www.w3.org/2001/XMLSchema&quot; );\n      myDiscoveryClientProtocol-&gt;AdditionalInformation-&gt;Add( mySoapBinding );\n      \n      // Write the information back.\n      myDiscoveryClientProtocol-&gt;WriteAll( &quot;MyDirectory&quot;, &quot;results.discomap&quot; );\n      System::Collections::IList^ myIList = myDiscoveryClientProtocol-&gt;AdditionalInformation;\n      mySoapBinding = nullptr;\n      mySoapBinding = dynamic_cast&lt;SoapBinding^&gt;(myIList[ 0 ]);\n      Console::WriteLine( &quot;The address of the SoapBinding associated with &quot;\n      &quot;AdditionalInformation is: {0}&quot;, mySoapBinding-&gt;Address );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( e );\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Documents\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Documents</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of discovery documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryClientDocumentCollection Documents { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryclientdocumentcollection\" data-linktype=\"relative-path\">DiscoveryClientDocumentCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientdocumentcollection\" data-linktype=\"relative-path\">DiscoveryClientDocumentCollection</a> representing the collection of discovery documents found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Documents collection is populated during invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods. During invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> methods, if the supplied URL is a valid discovery document, that document is added to the Documents collection. During invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods, valid discovery document references in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collection are added to the Documents collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents in the Documents property discovered during XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the results from a <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> invocation followed by a call to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.Documents#1\">&lt;%@ Page Language=&quot;C#&quot; Debug=&quot;true&quot; %&gt;\n\n&lt;%@ Import Namespace=&quot;System.Web.Services.Discovery&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;HTML&gt;\n&lt;HEAD&gt;\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\n   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents. \n\t  doc = client.DiscoverAny(sourceUrl);\n\t \n          // Resolve all possible references from the supplied URL.\n          client.ResolveAll();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If documents were discovered, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n\n      protected void PopulateGrid(DiscoveryClientProtocol client) \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;Discovery Document&quot;) );\n         dt.Columns.Add(new DataColumn(&quot;References&quot;) );\n         dt.Columns.Add(new DataColumn(&quot;Type&quot;) );\n\n\t // Iterate over the discovered documents, displaying their types and any associated references.\n         foreach (DictionaryEntry entry in client.Documents) \n         {\n                dr = dt.NewRow();\n  \t\tdr[0] = (string) entry.Key;\n\t\tdr[2] = entry.Value.GetType();\n\t\tdt.Rows.Add(dr);\n\t\t\n\t\t// If the discovered document is a discovery document, iterate over its references.\t\n\t\tif (entry.Value is DiscoveryDocument)\n\t\t{\n\t  \t  DiscoveryDocument discoDoc = (DiscoveryDocument) entry.Value;\n\t\t  foreach (DiscoveryReference discoref in discoDoc.References)\n\t\t  {\n\t\t    dr = dt.NewRow();\n\t\t    dr[1] = discoref.Url;\n\t\t    dr[2] = discoref.GetType();\n\t\t    dt.Rows.Add(dr);\n\t\t   }\n\t\t}\n\t\t\n         }\n        DataView dv = new DataView(dt);\n\tDiscoveryResultsGrid.DataSource = (ICollection) dv;\n\tDiscoveryResultsGrid.DataBind();\n      \n    }\n  &lt;/SCRIPT&gt;\n  &lt;/HEAD&gt; \n  &lt;BODY&gt;\n\t&lt;H3&gt; &lt;p align=&quot;center&quot;&gt; Discovery Class Sample &lt;/p&gt; &lt;/H3&gt;\n        &lt;FORM RUNAT=&quot;SERVER&quot;&gt;\n\t&lt;hr&gt;\t\n\t Enter the URL to discover:\n        &lt;asp:textbox id=DiscoURL Columns=60 runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n\n        Enter the directory to Read/Save the Discovery results:\n        &lt;asp:textbox id=DiscoDir runat=&quot;SERVER&quot; /&gt; &lt;p&gt;\n\n\t&lt;p align=&quot;center&quot;&gt; &lt;asp:Button id=Discover Text=&quot;Discover!&quot; onClick=&quot;Discover_Click&quot; runat=&quot;SERVER&quot;/&gt; &lt;/p&gt;&lt;p&gt;\n\n        &lt;hr&gt;\n        &lt;asp:label id=&quot;Status&quot; runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n     &lt;asp:DataGrid id=&quot;DiscoveryResultsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;true&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;DarkBlue&quot; ForeColor=&quot;White&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;LightYellow&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n     &lt;/asp:DataGrid&gt;\n        &lt;/FORM&gt;\n  &lt;/BODY&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.Documents#1\">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot; %&gt;\n\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Web.Services.Discovery&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;HTML&gt;\n&lt;HEAD&gt;\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\n\n   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n\t&#39; Resolve all possible references from the supplied URL.\n        client.ResolveAll()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If documents were discovered, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39;populate our Grid with the discovery results\n\t    PopulateGrid(client)\n       End If\n\n       &#39; Save the discovery results to disk.\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n\n      Public Sub PopulateGrid(client As DiscoveryClientProtocol) \n         Dim dt As DataTable = new DataTable()\n         Dim dr AS DataRow \n \n         dt.Columns.Add(new DataColumn(&quot;Discovery Document&quot;) )\n         dt.Columns.Add(new DataColumn(&quot;References&quot;) )\n         dt.Columns.Add(new DataColumn(&quot;Type&quot;) )\n\n\t Dim entry As DictionaryEntry\n\t \n         &#39;Iterate over the discovered documents, displaying their types and any associated references.\n         For Each entry in client.Documents\n            dr = dt.NewRow()\n \t    dr(0) = entry.Key\n \t    dr(2) = entry.Value.GetType()\n \t    dt.Rows.Add(dr)\n\n\t    &#39; If the discovered  document is a discovery document, iterate over its references.\t\n\t    If TypeOf entry.Value Is DiscoveryDocument Then\n\t       Dim discoDoc As DiscoveryDocument = entry.Value\n\t       Dim discoref As DiscoveryReference\n\t       For Each discoref in discoDoc.References\n\t\t  dr = dt.NewRow()\n\t\t  dr(1) = discoref.Url\n\t\t  dr(2) = discoref.GetType()\n\t\t  dt.Rows.Add(dr)\n\t       Next\n\t    End If   \n\tNext \t\n         \n        Dim dv As DataView = new DataView(dt)\n\tDiscoveryResultsGrid.DataSource = dv\n\tDiscoveryResultsGrid.DataBind()\n     End Sub\n  &lt;/SCRIPT&gt;\n  &lt;/HEAD&gt; \n  &lt;BODY&gt;\n\t&lt;H3&gt; &lt;p align=&quot;center&quot;&gt; Discovery Class Sample &lt;/p&gt; &lt;/H3&gt;\n        &lt;FORM RUNAT=&quot;SERVER&quot;&gt;\n\n\t&lt;hr&gt;\t\n        Enter the URL to discover:\n        &lt;asp:textbox id=DiscoURL Columns=60 runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n\n        Enter the directory to Read/Save the Discovery results:\n        &lt;asp:textbox id=DiscoDir runat=&quot;SERVER&quot; /&gt; &lt;p&gt;\n\n\t&lt;p align=&quot;center&quot;&gt; &lt;asp:Button id=Discover Text=&quot;Discover!&quot; onClick=&quot;Discover_Click&quot; runat=&quot;SERVER&quot;/&gt; &lt;/p&gt;&lt;p&gt;\n\n        &lt;hr&gt;\n        &lt;asp:label id=&quot;Status&quot; runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n     &lt;asp:DataGrid id=&quot;DiscoveryResultsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;true&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;DarkBlue&quot; ForeColor=&quot;White&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;LightYellow&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n     &lt;/asp:DataGrid&gt;\n        &lt;/FORM&gt;\n  &lt;/BODY&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Errors\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Errors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Errors</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of exceptions that occurred during invocation of method from this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryExceptionDictionary Errors { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryexceptiondictionary\" data-linktype=\"relative-path\">DiscoveryExceptionDictionary</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoveryexceptiondictionary\" data-linktype=\"relative-path\">DiscoveryExceptionDictionary</a> of exceptions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Errors collection is populated with exceptions that occurred during invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a>, and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods. The <a class=\"xref\" href=\"system.web.services.discovery.discoveryexceptiondictionary\" data-linktype=\"relative-path\">DiscoveryExceptionDictionary</a> is cleared on invocation of these methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"DiscoveryClientProtocol_Errors#1\">   String^ myDiscoFile = &quot;http://localhost/MathService_cs.vsdisco&quot;;\n   String^ myUrlKey = &quot;http://localhost/MathService_cs.asmx?wsdl&quot;;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   \n   // Get the discovery document.\n   DiscoveryDocument^ myDiscoveryDocument = myDiscoveryClientProtocol-&gt;Discover( myDiscoFile );\n   IEnumerator^ myEnumerator = myDiscoveryDocument-&gt;References-&gt;GetEnumerator();\n   while ( myEnumerator-&gt;MoveNext() )\n   {\n      ContractReference^ myContractReference = dynamic_cast&lt;ContractReference^&gt;(myEnumerator-&gt;Current);\n      \n      // Get the DiscoveryClientProtocol from the ContractReference.\n      myDiscoveryClientProtocol = myContractReference-&gt;ClientProtocol;\n      myDiscoveryClientProtocol-&gt;ResolveAll();\n      DiscoveryExceptionDictionary^ myExceptionDictionary = myDiscoveryClientProtocol-&gt;Errors;\n      if ( myExceptionDictionary-&gt;Contains( myUrlKey ) )\n      {\n         Console::WriteLine( &quot;System generated exceptions.&quot; );\n         \n         // Get the exception from the DiscoveryExceptionDictionary.\n         Exception^ myException = myExceptionDictionary[ myUrlKey ];\n         Console::WriteLine( &quot; Source : {0}&quot;, myException-&gt;Source );\n         Console::WriteLine( &quot; Exception : {0}&quot;, myException-&gt;Message );\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol_Errors#1\">      string myDiscoFile = &quot;http://localhost/MathService_cs.vsdisco&quot;;\n      string myUrlKey = &quot;http://localhost/MathService_cs.asmx?wsdl&quot;;\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n            new DiscoveryClientProtocol();\n\n      // Get the discovery document.\n      DiscoveryDocument myDiscoveryDocument = \n         myDiscoveryClientProtocol.Discover(myDiscoFile);\n      IEnumerator myEnumerator = \n            myDiscoveryDocument.References.GetEnumerator();\n      while ( myEnumerator.MoveNext() )\n      {\n         ContractReference myContractReference =\n            (ContractReference)myEnumerator.Current;\n\n         // Get the DiscoveryClientProtocol from the ContractReference.\n         myDiscoveryClientProtocol = myContractReference.ClientProtocol;\n         myDiscoveryClientProtocol.ResolveAll();\n\n         DiscoveryExceptionDictionary myExceptionDictionary \n            = myDiscoveryClientProtocol.Errors;\n\n         if (myExceptionDictionary.Contains(myUrlKey))\n         {\n            Console.WriteLine(&quot;System generated exceptions.&quot;);\n\n            // Get the exception from the DiscoveryExceptionDictionary.\n            Exception myException = myExceptionDictionary[myUrlKey];\n\n            Console.WriteLine(&quot; Source : &quot; + myException.Source);\n            Console.WriteLine(&quot; Exception : &quot; + myException.Message);\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol_Errors#1\">      Dim myDiscoFile As String = &quot;http://localhost/MathService_vb.vsdisco&quot;\n      Dim myUrlKey As String = &quot;http://localhost/MathService_vb.asmx?wsdl&quot;\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      \n      &#39; Get the discovery document.\n      Dim myDiscoveryDocument As DiscoveryDocument = myDiscoveryClientProtocol.Discover(myDiscoFile)\n      Dim myEnumerator As IEnumerator = myDiscoveryDocument.References.GetEnumerator()\n      While myEnumerator.MoveNext()\n        Dim myContractReference As ContractReference = CType(myEnumerator.Current, ContractReference)\n         \n        &#39; Get the DiscoveryClientProtocol from the ContractReference.\n         myDiscoveryClientProtocol = myContractReference.ClientProtocol\n         myDiscoveryClientProtocol.ResolveAll()\n\n         Dim myExceptionDictionary As DiscoveryExceptionDictionary = myDiscoveryClientProtocol.Errors\n\n         If myExceptionDictionary.Contains(myUrlKey) Then\n            Console.WriteLine(&quot;System generated exceptions.&quot;)\n            \n            &#39; Get the exception from the DiscoveryExceptionDictionary.\n            Dim myException As Exception = myExceptionDictionary(myUrlKey)\n            \n            Console.WriteLine(&quot; Source : &quot; &amp; myException.Source)\n            Console.WriteLine(&quot; Exception : &quot; &amp; myException.Message)\n            Console.WriteLine()\n         End If\n      End While\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_References\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_References_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">References</div>        \r\n          </div>\r\n    \r\n            <p>A collection of references founds in resolved discovery documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryClientReferenceCollection References { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryclientreferencecollection\" data-linktype=\"relative-path\">DiscoveryClientReferenceCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientreferencecollection\" data-linktype=\"relative-path\">DiscoveryClientReferenceCollection</a> of references discovered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The References collection is populated during invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a>, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods. During invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> methods, if the supplied URL is a valid discovery document, that document is added to the References collection together with references found in the discovery document. References added during invocations to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> methods are not necessarily valid discovery documents. During invocations to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> references within the References collection are verified as being valid discovery documents. If they are valid and contain references, they are also added to the References collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the references in the References property discovered during an XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the references found in an invocation to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.References#1\">&lt;%@ Page Language=&quot;C#&quot; Debug=&quot;true&quot; %&gt;\n\n&lt;%@ Import Namespace=&quot;System.Web.Services.Discovery&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;HTML&gt;\n&lt;HEAD&gt;\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\n   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents. \n\t  doc = client.DiscoverAny(sourceUrl);\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If the discovered document contained, references display them in a data grid.\n        if (client.References.Count &gt; 0)\n\t    PopulateGrid(client);\n   }\n\n      protected void PopulateGrid(DiscoveryClientProtocol client) \n      {\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         dt.Columns.Add(new DataColumn(&quot;Reference&quot;) );\n         dt.Columns.Add(new DataColumn(&quot;Type&quot;) );\n\n\t // Iterate over the references in the discovered document, displaying their type.\n         foreach (DictionaryEntry entry in client.References) \n         {\n                dr = dt.NewRow();\n  \t\tdr[0] = (string) entry.Key;\n\t\tdr[1] = entry.Value.GetType();\n\t\tdt.Rows.Add(dr);\n         }\n        DataView dv = new DataView(dt);\n\tDiscoveryResultsGrid.DataSource = (ICollection) dv;\n\tDiscoveryResultsGrid.DataBind();\n      \n    }\n  &lt;/SCRIPT&gt;\n  &lt;/HEAD&gt; \n  &lt;BODY&gt;\n\t&lt;H3&gt; &lt;p align=&quot;center&quot;&gt; Discovery Class Sample &lt;/p&gt; &lt;/H3&gt;\n        &lt;FORM RUNAT=&quot;SERVER&quot;&gt;\n\t&lt;hr&gt;\t\n\t Enter the URL to discover:\n        &lt;asp:textbox id=DiscoURL Columns=60 runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n\n\t&lt;p align=&quot;center&quot;&gt; &lt;asp:Button id=Discover Text=&quot;Discover!&quot; onClick=&quot;Discover_Click&quot; runat=&quot;SERVER&quot;/&gt; &lt;/p&gt;&lt;p&gt;\n\n        &lt;hr&gt;\n        &lt;asp:label id=&quot;Status&quot; runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n     &lt;asp:DataGrid id=&quot;DiscoveryResultsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;true&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;DarkBlue&quot; ForeColor=&quot;White&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;LightYellow&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n     &lt;/asp:DataGrid&gt;\n        &lt;/FORM&gt;\n  &lt;/BODY&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.References#1\">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot; %&gt;\n\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Web.Services.Discovery&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n\n&lt;HTML&gt;\n&lt;HEAD&gt;\n   &lt;SCRIPT RUNAT=&quot;SERVER&quot;&gt;\n\n   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If the discovered document contained references, display them in a data grid.\n       If (client.References.Count &gt; 0) Then\n            &#39;populate our Grid with the discovery results\n\t    PopulateGrid(client)\n       End If\n\n  End Sub\n\n  Public Sub PopulateGrid(client As DiscoveryClientProtocol) \n    Dim dt As DataTable = new DataTable()\n    Dim dr AS DataRow \n \n    dt.Columns.Add(new DataColumn(&quot;Reference&quot;) )\n    dt.Columns.Add(new DataColumn(&quot;Type&quot;) )\n\n    Dim entry As DictionaryEntry\n\t \n    &#39; Iterate over the references in the discovered document, displaying their type.\n    For Each entry in client.References\n       dr = dt.NewRow()\n       dr(0) = entry.Key\n       dr(1) = entry.Value.GetType()\n       dt.Rows.Add(dr)\n    Next \t\n        \n    Dim dv As DataView = new DataView(dt)\n    DiscoveryResultsGrid.DataSource = dv\n    DiscoveryResultsGrid.DataBind()\n  End Sub\n  &lt;/SCRIPT&gt;\n  &lt;/HEAD&gt; \n  &lt;BODY&gt;\n\t&lt;H3&gt; &lt;p align=&quot;center&quot;&gt; Discovery Class Sample &lt;/p&gt; &lt;/H3&gt;\n        &lt;FORM RUNAT=&quot;SERVER&quot;&gt;\n\n\t&lt;hr&gt;\t\n        Enter the URL to discover:\n        &lt;asp:textbox id=DiscoURL Columns=60 runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n\n\t&lt;p align=&quot;center&quot;&gt; &lt;asp:Button id=Discover Text=&quot;Discover!&quot; onClick=&quot;Discover_Click&quot; runat=&quot;SERVER&quot;/&gt; &lt;/p&gt;&lt;p&gt;\n\n        &lt;hr&gt;\n        &lt;asp:label id=&quot;Status&quot; runat=&quot;SERVER&quot; /&gt;&lt;p&gt;\n     &lt;asp:DataGrid id=&quot;DiscoveryResultsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           AutoGenerateColumns=&quot;true&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;DarkBlue&quot; ForeColor=&quot;White&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;AlternatingItemStyle BackColor=&quot;LightYellow&quot;&gt;\n         &lt;/AlternatingItemStyle&gt;\n\n     &lt;/asp:DataGrid&gt;\n        &lt;/FORM&gt;\n  &lt;/BODY&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Discover(String)</div>        \r\n          </div>\r\n    \r\n            <p>Discovers the supplied URL to determine if it is a discovery document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryDocument Discover (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL where XML Web services discovery begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> containing the results of XML Web services discovery at the supplied URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>Accessing the supplied URL returned an HTTP status code other than <a class=\"xref\" href=\"system.net.httpstatuscode\" data-linktype=\"relative-path\">HttpStatusCode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <code>url</code> parameteris a valid URL, but does not point to a valid discovery document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Discover method expects that the supplied URL is a discovery document. If the URL refers to a service description or an XML schema an exception is thrown. To discover an XML schema or a service description invoke the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> method.  </p>\n<p> If the supplied URL points to a valid discovery document, the discovery document at the supplied URL is added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collection. Additionally, references within the discovery document are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collection, but not verified to point to valid discovery documents. To verify the references, point to valid discovery documents to invoke the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> or <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property together with the references found in each document during XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the results from a Discover invocation followed by a call to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.Discover#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Only discover discovery documents, which might contain references to other types of discoverable documents.  \n\t  doc = client.Discover(sourceUrl);\n\t \n          // Resolve all possible references from the supplied URL.\n          client.ResolveAll();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If documents were discovered, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.Discover#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Only discover discovery documents, which might contain references to other types of discoverable documents. \n        doc = client.Discover(sourceUrl)\n\n\t&#39; Resolve all possible references from the supplied URL.\n        client.ResolveAll()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If documents were discovered, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39;populate our Grid with the discovery results\n\t    PopulateGrid(client)\n       End If\n\n       &#39; Save the discovery results to disk.\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscoverAny(String)</div>        \r\n          </div>\r\n    \r\n            <p>Discovers the supplied URL to determine if it is a discovery document, service description or an XML Schema Definition (XSD) schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryDocument DiscoverAny (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL where XML Web services discovery begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> containing the results of XML Web services discovery at the supplied URL. If the <code>url</code> parameter refers to a service description or an XSD Schema, a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> is created in memory for it.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>Accessing the supplied URL returned an HTTP status code other than <a class=\"xref\" href=\"system.net.httpstatuscode\" data-linktype=\"relative-path\">HttpStatusCode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <code>url</code> parameteris a valid URL, but does not point to a valid discovery document, service description, or XSD schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DiscoverAny method discovers whether the supplied URL is a discovery document, service description or XSD schema. If it is known that the URL only refers to a discovery document, the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Discover_\" data-linktype=\"relative-path\">Discover</a> method might be invoked.  </p>\n<p> If the supplied URL points to a valid discovery document, XSD schema, or service description, the discovery document at the supplied URL is added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collections. When the supplied URL refers to an XSD schema or Service Description a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> is created in memory and added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collections. Additionally, references within the discovery document are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> collection, but not verified to point to valid discovery documents. To verify that references point to valid discovery documents, invoke the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> or <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property together with the references found in each document during an XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the results from a DiscoverAny invocation followed by a call to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.DiscoverAny#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n\t&#39; Resolve all possible references from the supplied URL.\n        client.ResolveAll()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If documents were discovered, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39;populate the DataGrid with the discovery results.\n\t    PopulateGrid(client)\n       End If\n\n       &#39; Save the discovery results to disk\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.DiscoverAny#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents. \n\t  doc = client.DiscoverAny(sourceUrl);\n\t \n          // Resolve all possible references from the supplied URL.\n          client.ResolveAll();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If documents were discovered, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Download_System_String__\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Download_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Download(String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the discovery document at the supplied URL into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream Download (ref string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the discovery document to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing the document at the supplied URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The download from the supplied URL returned an HTTP status code other than <a class=\"xref\" href=\"system.net.httpstatuscode\" data-linktype=\"relative-path\">HttpStatusCode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol_Download#2\">      &#39; Call the constructor of the DiscoveryClientProtocol class.\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = CredentialCache.DefaultCredentials\n      &#39; &#39;dataservice.disco&#39; is a sample discovery document.\n      Dim myStringUrl As String = &quot;http://localhost:80/dataservice.disco&quot;\n\n      Dim myStream As Stream = myDiscoveryClientProtocol.Download(myStringUrl)\n      Console.WriteLine(&quot;Size of the discovery document downloaded&quot;)\n      Console.WriteLine(&quot;is : {0} bytes&quot;, myStream.Length.ToString())\n      myStream.Close()\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryClientProtocol_Download#2\">   // Call the constructor of the DiscoveryClientProtocol class.\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol =\n      gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   // &#39;dataservice.disco&#39; is a sample discovery document.\n   String^ myStringUrl = &quot;http://localhost:80/dataservice.disco&quot;;\n\n   Stream^ myStream = myDiscoveryClientProtocol-&gt;Download( myStringUrl );\n\n   Console::WriteLine( &quot;Size of the discovery document downloaded&quot; );\n   Console::WriteLine( &quot;is : {0} bytes&quot;, myStream-&gt;Length );\n   myStream-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol_Download#2\">      // Call the constructor of the DiscoveryClientProtocol class.\n      DiscoveryClientProtocol myDiscoveryClientProtocol =\n                  new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials =  CredentialCache.DefaultCredentials;\n     // &#39;dataservice.disco&#39; is a sample discovery document.\n     string myStringUrl = &quot;http://localhost:80/dataservice.disco&quot;;\n\n      Stream myStream = myDiscoveryClientProtocol.Download(ref myStringUrl);\n\n      Console.WriteLine(&quot;Size of the discovery document downloaded&quot;);\n      Console.WriteLine(&quot;is : {0} bytes&quot;, myStream.Length.ToString());\n      myStream.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Download_System_String__System_String__\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_Download_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Download(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the discovery document at the supplied URL into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object, setting the <code>contentType</code> parameter to the MIME encoding of the discovery document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream Download (ref string url, ref string contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the discovery document to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The MIME encoding of the downloaded discovery document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing the document at the supplied URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The download from the supplied URL returned an HTTP status code other than <a class=\"xref\" href=\"system.net.httpstatuscode\" data-linktype=\"relative-path\">HttpStatusCode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"DiscoveryClientProtocol_Download2#1\">   String^ myDiscoFile = &quot;http://localhost/MathService_cs.vsdisco&quot;;\n   String^ myEncoding = &quot;&quot;;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol =\n      gcnew DiscoveryClientProtocol;\n\n   Stream^ myStream = myDiscoveryClientProtocol-&gt;Download(\n      myDiscoFile, myEncoding );\n   Console::WriteLine( &quot;The length of the stream in bytes: {0}&quot;,\n      myStream-&gt;Length );\n   Console::WriteLine( &quot;The MIME encoding of the downloaded &quot; +\n      &quot;discovery document: {0}&quot;, myEncoding );\n   myStream-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol_Download2#1\">      Dim myDiscoFile As String = &quot;http://localhost/MathService_vb.vsdisco&quot;\n      Dim myEncoding As String = &quot;&quot;\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      \n      Dim myStream As Stream = myDiscoveryClientProtocol.Download(myDiscoFile, myEncoding)\n      Console.WriteLine(&quot;The length of the stream in bytes: &quot; &amp; myStream.Length)\n      Console.WriteLine _\n            (&quot;The MIME encoding of the downloaded discovery document: &quot; &amp; myEncoding)\n      myStream.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol_Download2#1\">      string myDiscoFile = &quot;http://localhost/MathService_cs.vsdisco&quot;;\n      string myEncoding = &quot;&quot;;\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n            new DiscoveryClientProtocol();\n\n      Stream myStream = myDiscoveryClientProtocol.Download\n            (ref myDiscoFile,ref myEncoding);\n      Console.WriteLine(&quot;The length of the stream in bytes: &quot;+\n            myStream.Length);\n      Console.WriteLine(&quot;The MIME encoding of the downloaded &quot;+\n            &quot;discovery document: &quot;+ myEncoding);\n      myStream.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_LoadExternals\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_LoadExternals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadExternals()</div>        \r\n          </div>\r\n    \r\n            <p>Instructs the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> object to load any external references.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void LoadExternals ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ReadAll_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ReadAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadAll(String)</div>        \r\n          </div>\r\n    \r\n            <p>Reads in a file containing a map of saved discovery documents populating the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.Documents*</span> and <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span> properties, with discovery documents, XML Schema Definition (XSD) schemas, and service descriptions referenced in the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryClientResultCollection ReadAll (string topLevelFilename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>topLevelFilename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Name of file to read in, containing the map of saved discovery documents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryclientresultcollection\" data-linktype=\"relative-path\">DiscoveryClientResultCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientresultcollection\" data-linktype=\"relative-path\">DiscoveryClientResultCollection</a> containing the results found in the file with the map of saved discovery documents. The file format is a <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol.discoveryclientresultsfile\" data-linktype=\"relative-path\">DiscoveryClientProtocol+DiscoveryClientResultsFile</a> class serialized into XML; however, one would typically create the file using only the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll*</span> method or Disco.exe.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A file containing a map of saved discovery documents can be created by the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_WriteAll_\" data-linktype=\"relative-path\">WriteAll</a> method or Disco.exe.  </p>\n<p> The <code>topLevelFilename</code> parameter must include the fully qualified path if the file does not exist in the current directory.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents and references found in an existing discovery map document using the ReadAll method.  </p>\n<pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.ReadAll#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to read the discovery results from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access files containing the previously saved discovery results.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n     \n       &#39; Read in existing discovery results.\n        Dim results As DiscoveryClientResultCollection \n        results = client.ReadAll(Path.Combine(DiscoDir.Text,&quot;results.discomap&quot;))\n\n      Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n      End Try\n\n      &#39; If disocvery documents existed in the supplied folder, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39; Populate the data grid with the discovery results.\n\t    PopulateGrid(client)\n       End If\n   End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.ReadAll#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to read the discovery results from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the files containing the discovery results.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try {\n       \t  DiscoveryDocument doc;\n\t  // Read in existing discovery results.\n          DiscoveryClientResultCollection results = client.ReadAll(Path.Combine(DiscoDir.Text,&quot;results.discomap&quot;));\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If discovery documents existed in the supplied folder, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n  }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveAll()</div>        \r\n          </div>\r\n    \r\n            <p>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas, and service descriptions in the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span> property, as well as references found in referenced discovery documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResolveAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ResolveAll resolves all valid references it finds and places them in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property. Both ResolveAll and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> download and verify XSD schemas and service descriptions in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property. However, the two methods differ in how they handle discovery documents. <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> resolves all references in discovery documents within the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property; if a discovery document contains references to other discovery documents, <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a> resolves just those discovery documents. Discovery documents found in those discovery documents nested one level deep are not resolved by <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\" data-linktype=\"relative-path\">ResolveOneLevel</a>; whereas ResolveAll resolves them all. ResolveAll continues to resolve references in nested discovery documents until there are no more references.  </p>\n<p> Errors occurring during the verification process done by ResolveAll are not thrown at the time of occurrence, but rather collected and added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Errors_\" data-linktype=\"relative-path\">Errors</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property together with the references found in each document during an XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the results from a <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> invocation followed by a call to ResolveAll.  </p>\n<pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.ResolveAll#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n\t&#39; Resolve all possible references from the supplied URL.\n        client.ResolveAll()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If documents were discovered, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39;populate our Grid with the discovery results\n\t    PopulateGrid(client)\n       End If\n\n       &#39; Save the discovery results to disk.\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.ResolveAll#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents. \n\t  doc = client.DiscoverAny(sourceUrl);\n\t \n          // Resolve all possible references from the supplied URL.\n          client.ResolveAll();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If documents were discovered, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveOneLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveOneLevel()</div>        \r\n          </div>\r\n    \r\n            <p>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas and service descriptions in <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.References*</span>, as well as references found in those discovery documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResolveOneLevel ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ResolveOneLevel resolves all valid references it finds and places them in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property. Both <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> and ResolveOneLevel download and verify XSD schemas and service descriptions in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property. However, the two methods differ in how they handle discovery documents. ResolveOneLevel resolves all references in discovery documents within the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> property. If a discovery document contains references to other discovery documents, ResolveOneLevel resolves just those discovery documents. Discovery documents found in those discovery documents nested one level deep are not resolved by ResolveOneLevel; whereas <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> resolve them all. <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a> continues to resolve references in nested discovery documents until there are no more references.  </p>\n<p> Errors occurring during the verification process done by ResolveOneLevel are not thrown at the time of occurrence, but rather collected and added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Errors_\" data-linktype=\"relative-path\">Errors</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that populates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the details about the documents in the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property together with the references found in each document during an XML Web services discovery. The <code>PopulateGrid</code> method fills the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the results from a <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> invocation followed by a call to ResolveOneLevel.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.ResolveOneLevel#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents/ \n\t  doc = client.DiscoverAny(sourceUrl);\n\t \n          // Resolve references just one level deep/\n          client.ResolveOneLevel();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\t// If documents were discovered, display the results in a data grid.\n        if (client.Documents.Count &gt; 0)\n\t    PopulateGrid(client);\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.ResolveOneLevel#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n\t&#39; Resolve references just one level deep.\n        client.ResolveOneLevel()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; If documents were discovered, display the results in a data grid.\n       If (client.Documents.Count &gt; 0) Then\n            &#39;populate our Grid with the discovery results\n\t    PopulateGrid(client)\n       End If\n\n       &#39; Save the discovery results to disk.\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_WriteAll_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryClientProtocol_WriteAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAll(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes all discovery documents, XML Schema Definition (XSD) schemas, and Service Descriptions in the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.Documents*</span> property to the supplied directory and creates a file in that directory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryClientResultCollection WriteAll (string directory, string topLevelFilename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>directory</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The directory in which to save all documents currently in the <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryClientProtocol.Documents*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>topLevelFilename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to create or overwrite containing a map of all documents saved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryclientresultcollection\" data-linktype=\"relative-path\">DiscoveryClientResultCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientresultcollection\" data-linktype=\"relative-path\">DiscoveryClientResultCollection</a> containing the results of all files saved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file created with the name of the <code>topLevelFilename</code> parameter in the directory specified by the directory parameter contains a map of saved discovery documents, XML Schema Definition (XSD) schemas and service descriptions. This file can be read in using the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ReadAll_\" data-linktype=\"relative-path\">ReadAll</a> method to populate the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> properties. The format of the file is XML containing an serialized version of the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol.discoveryclientresultsfile\" data-linktype=\"relative-path\">DiscoveryClientProtocol+DiscoveryClientResultsFile</a> class.  </p>\n<p> If a file exists with the same name as the <code>topLevelFilename</code> parameter in the <code>directory</code> parameter, that file is overwritten by the WriteAll method. The <code>topLevelFilename</code> parameter must include the fully qualified path if the file does not exist in the current directory.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is a Web Form that writes the results of a Web Services discovery to disk by invoking the WriteAll method after calls to <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_DiscoverAny_\" data-linktype=\"relative-path\">DiscoverAny</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_ResolveAll_\" data-linktype=\"relative-path\">ResolveAll</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryClientProtocol.WriteAll#1\">   protected void Discover_Click(object Source, EventArgs e)\n   {\n\t// Specify the URL to discover.\n\tstring sourceUrl = DiscoURL.Text;\n\t// Specify the URL to save discovery results to or read from.\n\tstring outputDirectory = DiscoDir.Text;\n\n        DiscoveryClientProtocol client = new DiscoveryClientProtocol();\n\t// Use default credentials to access the URL being discovered.\n        client.Credentials = CredentialCache.DefaultCredentials;\n\n        try \n        {\n       \t  DiscoveryDocument doc;\n          \n          // Discover the URL for any discoverable documents. \n\t  doc = client.DiscoverAny(sourceUrl);\n\t \n          // Resolve all possible references from the supplied URL.\n          client.ResolveAll();\n        }\n        catch ( Exception e2) \n        {\n          DiscoveryResultsGrid.Columns.Clear();\n          Status.Text = e2.Message;\n        }\n\n\t// Save the discovery results to disk.\n        DiscoveryClientResultCollection results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;);\n        Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + \n\t                                Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;;\n  }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryClientProtocol.WriteAll#1\">   Public Sub Discover_Click(Source As Object, e as EventArgs )\n      &#39; Specify the URL to discover.\n      Dim sourceUrl as String = DiscoURL.Text\n      &#39; Specify the URL to save discovery results to or read from.\n      Dim outputDirectory As String = DiscoDir.Text\n\n      Dim client as DiscoveryClientProtocol = new DiscoveryClientProtocol()\n      &#39; Use default credentials to access the URL being discovered.\n      client.Credentials = CredentialCache.DefaultCredentials\n      Try \n       \tDim doc As DiscoveryDocument\n        &#39; Discover the URL for any discoverable documents. \n        doc = client.DiscoverAny(sourceUrl)\n\n\t&#39; Resolve all possible references from the supplied URL.\n        client.ResolveAll()\n              \n       Catch e2 As Exception\n       \t  DiscoveryResultsGrid.Columns.Clear()\n          Status.Text = e2.Message\n       End Try\n\n       &#39; Save the discovery results to disk.\t    \n       Dim results As DiscoveryClientResultCollection \n       results = client.WriteAll(outputDirectory, &quot;results.discomap&quot;)\n       Status.Text = &quot;The following file holds the links to each of the discovery results: &lt;b&gt;&quot; + _ \n\t                                 Path.Combine(outputDirectory,&quot;results.discomap&quot;) + &quot;&lt;/b&gt;&quot;\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryClientProtocol.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryClientProtocol.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.Discover\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.Documents\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.Download\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.Errors\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.References\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0bd63ea6-4dc6-a28b-7a55-0ed8bf8a0a52\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Services.Discovery\\DiscoveryClientProtocol.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides support for programmatically invoking XML Web services discovery.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Discovery/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Discovery.DiscoveryClientProtocol\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryClientProtocol.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryClientProtocol.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Discovery.DiscoveryClientProtocol","System.Web.Services.Discovery.DiscoveryClientProtocol..ctor","System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation","System.Web.Services.Discovery.DiscoveryClientProtocol.Discover","System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny","System.Web.Services.Discovery.DiscoveryClientProtocol.Documents","System.Web.Services.Discovery.DiscoveryClientProtocol.Download","System.Web.Services.Discovery.DiscoveryClientProtocol.Errors","System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals","System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll","System.Web.Services.Discovery.DiscoveryClientProtocol.References","System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll","System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel","System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Discovery.DiscoveryClientProtocol","System::Web::Services::Discovery::DiscoveryClientProtocol","System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor","System::Web::Services::Discovery::DiscoveryClientProtocol::#ctor","System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation","System::Web::Services::Discovery::DiscoveryClientProtocol::AdditionalInformation","System.Web.Services.Discovery.DiscoveryClientProtocol.Discover","System::Web::Services::Discovery::DiscoveryClientProtocol::Discover","System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny","System::Web::Services::Discovery::DiscoveryClientProtocol::DiscoverAny","System.Web.Services.Discovery.DiscoveryClientProtocol.Documents","System::Web::Services::Discovery::DiscoveryClientProtocol::Documents","System.Web.Services.Discovery.DiscoveryClientProtocol.Download","System::Web::Services::Discovery::DiscoveryClientProtocol::Download","System.Web.Services.Discovery.DiscoveryClientProtocol.Errors","System::Web::Services::Discovery::DiscoveryClientProtocol::Errors","System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals","System::Web::Services::Discovery::DiscoveryClientProtocol::LoadExternals","System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll","System::Web::Services::Discovery::DiscoveryClientProtocol::ReadAll","System.Web.Services.Discovery.DiscoveryClientProtocol.References","System::Web::Services::Discovery::DiscoveryClientProtocol::References","System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll","System::Web::Services::Discovery::DiscoveryClientProtocol::ResolveAll","System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel","System::Web::Services::Discovery::DiscoveryClientProtocol::ResolveOneLevel","System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll","System::Web::Services::Discovery::DiscoveryClientProtocol::WriteAll"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0bd63ea6-4dc6-a28b-7a55-0ed8bf8a0a52","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Services.Discovery\\DiscoveryClientProtocol.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Discovery/DiscoveryClientProtocol.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DiscoveryClientProtocol class | Microsoft Docs","_op_ogTitle":"DiscoveryClientProtocol class","description":"Provides support for programmatically invoking XML Web services discovery.\n","toc_asset_id":"_splitted/System.Web.Services.Discovery/toc.json","toc_rel":"_splitted/System.Web.Services.Discovery/toc.json","source_url":"","ms.assetid":"System.Web.Services.Discovery.DiscoveryClientProtocol","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoveryclientprotocol","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoveryclientprotocol","fileRelativePath":"System.Web.Services.Discovery.DiscoveryClientProtocol.html"},"themesRelativePathToOutputRoot":"_themes/"}