{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_AsnEncodedData\">\r\n      <span class=\"lang-csharp\">AsnEncodedData</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class AsnEncodedData</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AsnEncodedData</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Abstract Syntax Notation One (ASN.1), which is defined in CCITT Recommendation X.208, is a way to specify abstract objects that will be serially transmitted. The set of ASN.1 rules for representing such objects as strings of ones and zeros is called the Distinguished Encoding Rules (DER), and is defined in CCITT Recommendation X.509, Section 8.7. These encoding methods are currently used by the cryptography namespace in the .NET Framework.  </p>\n<p> Note that if an unknown data type is encountered while accessing an instance of this class, data is returned as a hexadecimal string.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData__ctor\" data-linktype=\"self-bookmark\">AsnEncodedData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData__ctor_System_Byte___\" data-linktype=\"self-bookmark\">AsnEncodedData(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using a byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData__ctor_System_Security_Cryptography_AsnEncodedData_\" data-linktype=\"self-bookmark\">AsnEncodedData(AsnEncodedData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using an instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData__ctor_System_Security_Cryptography_Oid_System_Byte___\" data-linktype=\"self-bookmark\">AsnEncodedData(Oid,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using an <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object and a byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData__ctor_System_String_System_Byte___\" data-linktype=\"self-bookmark\">AsnEncodedData(String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using a byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData_Oid\" data-linktype=\"self-bookmark\">Oid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> value for an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData_RawData\" data-linktype=\"self-bookmark\">RawData</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the Abstract Syntax Notation One (ASN.1)-encoded data represented in a byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData_CopyFrom_System_Security_Cryptography_AsnEncodedData_\" data-linktype=\"self-bookmark\">CopyFrom(AsnEncodedData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies information from an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedData_Format_System_Boolean_\" data-linktype=\"self-bookmark\">Format(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a formatted version of the Abstract Syntax Notation One (ASN.1)-encoded data as a string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsnEncodedData()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected AsnEncodedData ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData__ctor_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsnEncodedData(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using a byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AsnEncodedData (byte[] rawData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData__ctor_System_Security_Cryptography_AsnEncodedData_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsnEncodedData(AsnEncodedData)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using an instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AsnEncodedData (System.Security.Cryptography.AsnEncodedData asnEncodedData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asnEncodedData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asnEncodedData</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor makes a copy of the specified <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData__ctor_System_Security_Cryptography_Oid_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsnEncodedData(Oid,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using an <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object and a byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AsnEncodedData (System.Security.Cryptography.Oid oid, byte[] rawData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>oid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData__ctor_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsnEncodedData(String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class using a byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AsnEncodedData (string oid, byte[] rawData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>oid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData_Oid\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData_Oid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Oid</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> value for an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Oid Oid { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be used to provide information about the Abstract Syntax Notation One (ASN.1)-encoded data, such as the algorithm used to encrypt the data.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData_RawData\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData_RawData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RawData</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the Abstract Syntax Notation One (ASN.1)-encoded data represented in a byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] RawData { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is the easiest way to access the information in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData_CopyFrom_System_Security_Cryptography_AsnEncodedData_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData_CopyFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyFrom(AsnEncodedData)</div>        \r\n          </div>\r\n    \r\n            <p>Copies information from an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void CopyFrom (System.Security.Cryptography.AsnEncodedData asnEncodedData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asnEncodedData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object to base the new object on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asnEncodedData </code>is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method copies information to an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object based on the specified <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedData_Format_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedData_Format_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Format(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a formatted version of the Abstract Syntax Notation One (ASN.1)-encoded data as a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Format (bool multiLine);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>multiLine</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the return string should contain carriage returns; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A formatted string that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method if you need to print Abstract Syntax Notation One (ASN.1)-encoded data or output the information to a text box. Use the <code>multiLine</code> parameter to control the layout of the output.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.AsnEncodedData.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.AsnEncodedData.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData.CopyFrom\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData.Format\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData.Oid\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedData.RawData\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9435f310-b674-2a6c-2df7-000cd7e8c6d8\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Cryptography\\AsnEncodedData.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents Abstract Syntax Notation One (ASN.1)-encoded data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.AsnEncodedData\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.AsnEncodedData.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.AsnEncodedData.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.AsnEncodedData","System.Security.Cryptography.AsnEncodedData..ctor","System.Security.Cryptography.AsnEncodedData.CopyFrom","System.Security.Cryptography.AsnEncodedData.Format","System.Security.Cryptography.AsnEncodedData.Oid","System.Security.Cryptography.AsnEncodedData.RawData"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.AsnEncodedData","System::Security::Cryptography::AsnEncodedData","System.Security.Cryptography.AsnEncodedData.#ctor","System::Security::Cryptography::AsnEncodedData::#ctor","System.Security.Cryptography.AsnEncodedData.CopyFrom","System::Security::Cryptography::AsnEncodedData::CopyFrom","System.Security.Cryptography.AsnEncodedData.Format","System::Security::Cryptography::AsnEncodedData::Format","System.Security.Cryptography.AsnEncodedData.Oid","System::Security::Cryptography::AsnEncodedData::Oid","System.Security.Cryptography.AsnEncodedData.RawData","System::Security::Cryptography::AsnEncodedData::RawData"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9435f310-b674-2a6c-2df7-000cd7e8c6d8","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Cryptography\\AsnEncodedData.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/AsnEncodedData.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AsnEncodedData class | Microsoft Docs","_op_ogTitle":"AsnEncodedData class","description":"Represents Abstract Syntax Notation One (ASN.1)-encoded data.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.AsnEncodedData","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.asnencodeddata","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.asnencodeddata","fileRelativePath":"System.Security.Cryptography.AsnEncodedData.html"},"themesRelativePathToOutputRoot":"_themes/"}