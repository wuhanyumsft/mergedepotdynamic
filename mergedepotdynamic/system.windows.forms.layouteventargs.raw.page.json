{"content":"    \r\n    <h1 id=\"System_Windows_Forms_LayoutEventArgs\">\r\n      <span class=\"lang-csharp\">LayoutEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class LayoutEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LayoutEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Changes to a control such as resizing, showing or hiding child controls, and adding or removing child controls make it necessary for a control to layout its child controls. A LayoutEventArgs specifies the child control that has been changed and its affected property. For example, if a control has been made visible since the last layout operation, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is affected.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedControl_\" data-linktype=\"relative-path\">AffectedControl</a> and <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedProperty_\" data-linktype=\"relative-path\">AffectedProperty</a> properties are set to <code>null</code> if no values were provided when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_\" data-linktype=\"relative-path\">PerformLayout</a> method was called.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_LayoutEventArgs__ctor_System_ComponentModel_IComponent_System_String_\" data-linktype=\"self-bookmark\">LayoutEventArgs(IComponent,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> class with the specified component and property affected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_LayoutEventArgs__ctor_System_Windows_Forms_Control_System_String_\" data-linktype=\"self-bookmark\">LayoutEventArgs(Control,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> class with the specified control and property affected.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_LayoutEventArgs_AffectedComponent\" data-linktype=\"self-bookmark\">AffectedComponent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> affected by the layout change.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_LayoutEventArgs_AffectedControl\" data-linktype=\"self-bookmark\">AffectedControl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the child control affected by the change.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_LayoutEventArgs_AffectedProperty\" data-linktype=\"self-bookmark\">AffectedProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the property affected by the change.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_LayoutEventArgs__ctor_System_ComponentModel_IComponent_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_LayoutEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LayoutEventArgs(IComponent,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> class with the specified component and property affected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LayoutEventArgs (System.ComponentModel.IComponent affectedComponent, string affectedProperty);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>affectedComponent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> affected by the layout change.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>affectedProperty</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property affected by the layout change.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_LayoutEventArgs__ctor_System_Windows_Forms_Control_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_LayoutEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LayoutEventArgs(Control,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> class with the specified control and property affected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LayoutEventArgs (System.Windows.Forms.Control affectedControl, string affectedProperty);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>affectedControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> affected by the layout change.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>affectedProperty</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property affected by the layout change.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_LayoutEventArgs_AffectedComponent\">\r\n    \r\n            <a id=\"System_Windows_Forms_LayoutEventArgs_AffectedComponent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AffectedComponent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> affected by the layout change.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.IComponent AffectedComponent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.icomponent\" data-linktype=\"relative-path\">IComponent</a> representing the <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> affected by the layout change.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Layout</a> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, such as a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> or <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a>. Then name the instance <code>Control1</code> and ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Layout</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#51\">private void Control1_Layout(Object sender, LayoutEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedComponent&quot;, e.AffectedComponent );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedControl&quot;, e.AffectedControl );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedProperty&quot;, e.AffectedProperty );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Layout Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#51\">Private Sub Control1_Layout(sender as Object, e as LayoutEventArgs) _ \n     Handles Control1.Layout\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedComponent&quot;, e.AffectedComponent)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedControl&quot;, e.AffectedControl)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;AffectedProperty&quot;, e.AffectedProperty)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Layout Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_LayoutEventArgs_AffectedControl\">\r\n    \r\n            <a id=\"System_Windows_Forms_LayoutEventArgs_AffectedControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AffectedControl</div>        \r\n          </div>\r\n    \r\n            <p>Gets the child control affected by the change.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Control AffectedControl { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a></div>\r\n                  </div>\r\n                  <p>The child <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> affected by the change.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AffectedControl property is set to <code>null</code> if no value was provided when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_\" data-linktype=\"relative-path\">PerformLayout</a> method was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedProperty_\" data-linktype=\"relative-path\">AffectedProperty</a> and AffectedControl properties as <a class=\"xref\" href=\"system.windows.forms.layouteventhandler\" data-linktype=\"relative-path\">LayoutEventHandler</a> arguments to coordinate the size of a Windows form and its controls with various property changes to both the Windows form and the controls.  </p>\n<pre><code class=\"lang-vb\" name=\"LayoutEventArgs#1\">Public Class Form1\n    Inherits System.Windows.Forms.Form\n    Private WithEvents textBox1 As System.Windows.Forms.TextBox\n    Private label1 As System.Windows.Forms.Label\n    Private layoutButton As System.Windows.Forms.Button\n    Private components As System.ComponentModel.Container = Nothing\n\n\n    Public Sub New()\n        InitializeComponent()\n    End Sub\n\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    Private Sub InitializeComponent()\n        Me.layoutButton = New System.Windows.Forms.Button()\n        Me.textBox1 = New System.Windows.Forms.TextBox()\n        Me.label1 = New System.Windows.Forms.Label()\n        Me.SuspendLayout()\n        &#39; \n        &#39; layoutButton\n        &#39; \n        Me.layoutButton.Anchor = System.Windows.Forms.AnchorStyles.Bottom\n        Me.layoutButton.Location = New System.Drawing.Point(72, 88)\n        Me.layoutButton.Name = &quot;layoutButton&quot;\n        Me.layoutButton.Size = New System.Drawing.Size(150, 23)\n        Me.layoutButton.TabIndex = 0\n        Me.layoutButton.Text = &quot;Hello&quot;\n        &#39; \n        &#39; textBox1\n        &#39; \n        Me.textBox1.Anchor = System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right\n        Me.textBox1.Location = New System.Drawing.Point(24, 40)\n        Me.textBox1.Name = &quot;textBox1&quot;\n        Me.textBox1.Size = New System.Drawing.Size(248, 20)\n        Me.textBox1.TabIndex = 1\n        Me.textBox1.Text = &quot;Hello&quot;\n        &#39; \n        &#39; label1\n        &#39; \n        Me.label1.Location = New System.Drawing.Point(24, 16)\n        Me.label1.Name = &quot;label1&quot;\n        Me.label1.TabIndex = 2\n        Me.label1.Text = &quot;Button&#39;s Text:&quot;\n        &#39; \n        &#39; Form1\n        &#39; \n        Me.ClientSize = New System.Drawing.Size(292, 129)\n        Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.label1, Me.textBox1, Me.layoutButton})\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Layout Sample&quot;\n        Me.ResumeLayout(False)\n    End Sub\n\n   &#39; This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   &#39; or the size of the button plus 50 pixels, whichever amount is less.\n    Private Sub Form1_Layout(ByVal sender As Object, ByVal e As System.Windows.Forms.LayoutEventArgs) Handles MyBase.Layout\n      &#39; This event is raised once at startup with the AffectedControl\n      &#39; and AffectedProperty properties on the LayoutEventArgs as null. \n      &#39; The event provides size preferences for that case.\n        If (e.AffectedControl IsNot Nothing) And (e.AffectedProperty IsNot Nothing) Then\n            &#39; Ensure that the affected property is the Bounds property\n            &#39; of the form.\n            If e.AffectedProperty.ToString() = &quot;Bounds&quot; Then\n             &#39; If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n             &#39; size of 300 pixels, increase the form&#39;s width.\n                If Me.layoutButton.Width + 50 &gt; 300 Then\n                    Me.Width = Me.layoutButton.Width + 50\n                    &#39; If not, keep the form&#39;s width at 300 pixels.\n                Else\n                    Me.Width = 300\n                End If\n\n                &#39; Center layoutButton on the form.\n                Me.layoutButton.Left = (Me.ClientSize.Width - Me.layoutButton.Width) / 2\n            End If\n        End If\n    End Sub\n\n    &#39; This method sets the Text property of layoutButton to the Text property\n    &#39; of textBox1.  If the new text plus a padding of 20 pixels is larger than \n    &#39; the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n    Private Sub textBox1_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles textBox1.TextChanged\n        &#39; Set the Text property of layoutButton.\n        Me.layoutButton.Text = Me.textBox1.Text\n        &#39; Get the width of the text using the proper font.\n        Dim textWidth As Integer = CInt(Me.CreateGraphics().MeasureString(layoutButton.Text, layoutButton.Font).Width)\n\n        &#39; If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n        &#39; 150 pixels, increase layoutButton&#39;s width.\n        If textWidth + 20 &gt; 150 Then\n            &#39; Setting the size property on any control raises \n            &#39; the Layout event for its container.\n            Me.layoutButton.Width = textWidth + 20\n            &#39; If not, keep layoutButton&#39;s width at 150 pixels.\n        Else\n            Me.layoutButton.Width = 150\n        End If\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"LayoutEventArgs#1\">public class Form1 : System.Windows.Forms.Form\n{\n   private System.Windows.Forms.TextBox textBox1;\n   private System.Windows.Forms.Label label1;\n   private System.Windows.Forms.Button layoutButton;\n   private System.ComponentModel.Container components = null;\n\n   public Form1()\n   {\n      InitializeComponent();\n   }\n\n   protected override void Dispose( bool disposing )\n   {\n      if( disposing )\n      {\n         if (components != null) \n         {\n            components.Dispose();\n         }\n      }\n      base.Dispose( disposing );\n   }\n\n   private void InitializeComponent()\n   {\n      this.layoutButton = new System.Windows.Forms.Button();\n      this.textBox1 = new System.Windows.Forms.TextBox();\n      this.label1 = new System.Windows.Forms.Label();\n      this.SuspendLayout();\n      // \n      // layoutButton\n      // \n      this.layoutButton.Anchor = System.Windows.Forms.AnchorStyles.Bottom;\n      this.layoutButton.Location = new System.Drawing.Point(72, 88);\n      this.layoutButton.Name = &quot;layoutButton&quot;;\n      this.layoutButton.Size = new System.Drawing.Size(150, 23);\n      this.layoutButton.TabIndex = 0;\n      this.layoutButton.Text = &quot;Hello&quot;;\n      // \n      // textBox1\n      // \n      this.textBox1.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n         | System.Windows.Forms.AnchorStyles.Right);\n      this.textBox1.Location = new System.Drawing.Point(24, 40);\n      this.textBox1.Name = &quot;textBox1&quot;;\n      this.textBox1.Size = new System.Drawing.Size(248, 20);\n      this.textBox1.TabIndex = 1;\n      this.textBox1.Text = &quot;Hello&quot;;\n      this.textBox1.TextChanged += new System.EventHandler(this.textBox1_TextChanged);\n      // \n      // label1\n      // \n      this.label1.Location = new System.Drawing.Point(24, 16);\n      this.label1.Name = &quot;label1&quot;;\n      this.label1.TabIndex = 2;\n      this.label1.Text = &quot;Button\\&#39;s Text:&quot;;\n      // \n      // Form1\n      // \n      this.ClientSize = new System.Drawing.Size(292, 129);\n      this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                                                   this.label1,\n                                                                   this.textBox1,\n                                                                   this.layoutButton});\n      this.Name = &quot;Form1&quot;;\n      this.Text = &quot;Layout Sample&quot;;\n      this.Layout += new System.Windows.Forms.LayoutEventHandler(this.Form1_Layout);\n      this.ResumeLayout(false);\n\n   }\n\n   [STAThread]\n   static void Main() \n   {\n      Application.Run(new Form1());\n   }\n   \n   // This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   // or the size of the button plus 50 pixels, whichever amount is less.\n   private void Form1_Layout(object sender, System.Windows.Forms.LayoutEventArgs e)\n   {\n      // This event is raised once at startup with the AffectedControl\n      // and AffectedProperty properties on the LayoutEventArgs as null. \n      // The event provides size preferences for that case.\n      if ((e.AffectedControl != null) &amp;&amp; (e.AffectedProperty != null))\n      {\n         // Ensure that the affected property is the Bounds property\n         // of the form.\n         if (e.AffectedProperty.ToString() == &quot;Bounds&quot;) \n         {\n            // If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n            // size of 300 pixels, increase the form&#39;s width.\n            if ((this.layoutButton.Width + 50) &gt; 300) \n            {\n               this.Width = this.layoutButton.Width + 50;\n            }\n               // If not, keep the form&#39;s width at 300 pixels.\n            else \n            {\n               this.Width = 300;\n            }\n\n            // Center layoutButton on the form.\n            this.layoutButton.Left = (this.ClientSize.Width - this.layoutButton.Width) / 2;\n         }\n      }\n   }\n\n   // This method sets the Text property of layoutButton to the Text property\n   // of textBox1.  If the new text plus a padding of 20 pixels is larger than \n   // the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n   private void textBox1_TextChanged(object sender, System.EventArgs e)\n   {\n      // Set the Text property of layoutButton.\n      this.layoutButton.Text = this.textBox1.Text;\n      // Get the width of the text using the proper font.\n      int textWidth = (int)this.CreateGraphics().MeasureString(layoutButton.Text, layoutButton.Font).Width;\n\n      // If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n      // 150 pixels, increase layoutButton&#39;s width.\n      if ((textWidth + 20) &gt; 150)\n      {\n         // Setting the size property on any control raises \n         // the Layout event for its container.\n         this.layoutButton.Width = textWidth + 20;\n      }\n         // If not, keep layoutButton&#39;s width at 150 pixels.\n      else \n      {\n         this.layoutButton.Width = 150;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"LayoutEventArgs#1\">public ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::TextBox^ textBox1;\n   System::Windows::Forms::Label ^ label1;\n   System::Windows::Forms::Button^ layoutButton;\n   System::ComponentModel::Container^ components;\n\npublic:\n   Form1()\n   {\n      InitializeComponent();\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void InitializeComponent()\n   {\n      this-&gt;layoutButton = gcnew System::Windows::Forms::Button;\n      this-&gt;textBox1 = gcnew System::Windows::Forms::TextBox;\n      this-&gt;label1 = gcnew System::Windows::Forms::Label;\n      this-&gt;SuspendLayout();\n\n      // \n      // layoutButton\n      // \n      this-&gt;layoutButton-&gt;Anchor = System::Windows::Forms::AnchorStyles::Bottom;\n      this-&gt;layoutButton-&gt;Location = System::Drawing::Point( 72, 88 );\n      this-&gt;layoutButton-&gt;Name = &quot;layoutButton&quot;;\n      this-&gt;layoutButton-&gt;Size = System::Drawing::Size( 150, 23 );\n      this-&gt;layoutButton-&gt;TabIndex = 0;\n      this-&gt;layoutButton-&gt;Text = &quot;Hello&quot;;\n\n      // \n      // textBox1\n      // \n      this-&gt;textBox1-&gt;Anchor = static_cast&lt;System::Windows::Forms::AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n      this-&gt;textBox1-&gt;Location = System::Drawing::Point( 24, 40 );\n      this-&gt;textBox1-&gt;Name = &quot;textBox1&quot;;\n      this-&gt;textBox1-&gt;Size = System::Drawing::Size( 248, 20 );\n      this-&gt;textBox1-&gt;TabIndex = 1;\n      this-&gt;textBox1-&gt;Text = &quot;Hello&quot;;\n      this-&gt;textBox1-&gt;TextChanged += gcnew System::EventHandler( this, &amp;Form1::textBox1_TextChanged );\n\n      // \n      // label1\n      // \n      this-&gt;label1-&gt;Location = System::Drawing::Point( 24, 16 );\n      this-&gt;label1-&gt;Name = &quot;label1&quot;;\n      this-&gt;label1-&gt;TabIndex = 2;\n      this-&gt;label1-&gt;Text = &quot;Button&#39;s Text:&quot;;\n\n      // \n      // Form1\n      // \n      this-&gt;ClientSize = System::Drawing::Size( 292, 129 );\n      array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;label1,this-&gt;textBox1,this-&gt;layoutButton};\n      this-&gt;Controls-&gt;AddRange( temp0 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Layout Sample&quot;;\n      this-&gt;Layout += gcnew System::Windows::Forms::LayoutEventHandler( this, &amp;Form1::Form1_Layout );\n      this-&gt;ResumeLayout( false );\n   }\n\n   // This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   // or the size of the button plus 50 pixels, whichever amount is less.\n   void Form1_Layout( Object^ /*sender*/, System::Windows::Forms::LayoutEventArgs^ e )\n   {\n      // This event is raised once at startup with the AffectedControl\n      // and AffectedProperty properties on the LayoutEventArgs as null. \n      // The event provides size preferences for that case.\n      if ( (e-&gt;AffectedControl != nullptr) &amp;&amp; (e-&gt;AffectedProperty != nullptr) )\n      {\n         // Ensure that the affected property is the Bounds property\n         // of the form.\n         if ( e-&gt;AffectedProperty-&gt;ToString()-&gt;Equals( &quot;Bounds&quot; ) )\n         {\n            // If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n            // size of 300 pixels, increase the form&#39;s width.\n            if ( (this-&gt;layoutButton-&gt;Width + 50) &gt; 300 )\n            {\n               this-&gt;Width = this-&gt;layoutButton-&gt;Width + 50;\n            }\n            // If not, keep the form&#39;s width at 300 pixels.\n            else\n            {\n               this-&gt;Width = 300;\n            }\n\n            // Center layoutButton on the form.\n            this-&gt;layoutButton-&gt;Left = (this-&gt;ClientSize.Width - this-&gt;layoutButton-&gt;Width) / 2;\n         }\n      }\n   }\n\n   // This method sets the Text property of layoutButton to the Text property\n   // of textBox1.  If the new text plus a padding of 20 pixels is larger than \n   // the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n   void textBox1_TextChanged( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Set the Text property of layoutButton.\n      this-&gt;layoutButton-&gt;Text = this-&gt;textBox1-&gt;Text;\n\n      // Get the width of the text using the proper font.\n      int textWidth = (int)this-&gt;CreateGraphics()-&gt;MeasureString( layoutButton-&gt;Text, layoutButton-&gt;Font ).Width;\n\n      // If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n      // 150 pixels, increase layoutButton&#39;s width.\n      if ( (textWidth + 20) &gt; 150 )\n      {\n         // Setting the size property on any control raises \n         // the Layout event for its container.\n         this-&gt;layoutButton-&gt;Width = textWidth + 20;\n      }\n      // If not, keep layoutButton&#39;s width at 150 pixels.\n      else\n      {\n         this-&gt;layoutButton-&gt;Width = 150;\n      }\n   }\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_LayoutEventArgs_AffectedProperty\">\r\n    \r\n            <a id=\"System_Windows_Forms_LayoutEventArgs_AffectedProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AffectedProperty</div>        \r\n          </div>\r\n    \r\n            <p>Gets the property affected by the change.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AffectedProperty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The property affected by the change.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a child control has been made visible since the last layout operation, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property is affected. The AffectedProperty property is set to <code>null</code> if no value was provided when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_\" data-linktype=\"relative-path\">PerformLayout</a> method was called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the AffectedProperty and <a class=\"xref\" href=\"system.windows.forms.layouteventargs#System_Windows_Forms_LayoutEventArgs_AffectedControl_\" data-linktype=\"relative-path\">AffectedControl</a> properties as <a class=\"xref\" href=\"system.windows.forms.layouteventhandler\" data-linktype=\"relative-path\">LayoutEventHandler</a> arguments to coordinate the size of a Windows form and its controls with various property changes to both the Windows form and the controls.  </p>\n<pre><code class=\"lang-vb\" name=\"LayoutEventArgs#1\">Public Class Form1\n    Inherits System.Windows.Forms.Form\n    Private WithEvents textBox1 As System.Windows.Forms.TextBox\n    Private label1 As System.Windows.Forms.Label\n    Private layoutButton As System.Windows.Forms.Button\n    Private components As System.ComponentModel.Container = Nothing\n\n\n    Public Sub New()\n        InitializeComponent()\n    End Sub\n\n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    Private Sub InitializeComponent()\n        Me.layoutButton = New System.Windows.Forms.Button()\n        Me.textBox1 = New System.Windows.Forms.TextBox()\n        Me.label1 = New System.Windows.Forms.Label()\n        Me.SuspendLayout()\n        &#39; \n        &#39; layoutButton\n        &#39; \n        Me.layoutButton.Anchor = System.Windows.Forms.AnchorStyles.Bottom\n        Me.layoutButton.Location = New System.Drawing.Point(72, 88)\n        Me.layoutButton.Name = &quot;layoutButton&quot;\n        Me.layoutButton.Size = New System.Drawing.Size(150, 23)\n        Me.layoutButton.TabIndex = 0\n        Me.layoutButton.Text = &quot;Hello&quot;\n        &#39; \n        &#39; textBox1\n        &#39; \n        Me.textBox1.Anchor = System.Windows.Forms.AnchorStyles.Top Or System.Windows.Forms.AnchorStyles.Left Or System.Windows.Forms.AnchorStyles.Right\n        Me.textBox1.Location = New System.Drawing.Point(24, 40)\n        Me.textBox1.Name = &quot;textBox1&quot;\n        Me.textBox1.Size = New System.Drawing.Size(248, 20)\n        Me.textBox1.TabIndex = 1\n        Me.textBox1.Text = &quot;Hello&quot;\n        &#39; \n        &#39; label1\n        &#39; \n        Me.label1.Location = New System.Drawing.Point(24, 16)\n        Me.label1.Name = &quot;label1&quot;\n        Me.label1.TabIndex = 2\n        Me.label1.Text = &quot;Button&#39;s Text:&quot;\n        &#39; \n        &#39; Form1\n        &#39; \n        Me.ClientSize = New System.Drawing.Size(292, 129)\n        Me.Controls.AddRange(New System.Windows.Forms.Control() {Me.label1, Me.textBox1, Me.layoutButton})\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Layout Sample&quot;\n        Me.ResumeLayout(False)\n    End Sub\n\n   &#39; This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   &#39; or the size of the button plus 50 pixels, whichever amount is less.\n    Private Sub Form1_Layout(ByVal sender As Object, ByVal e As System.Windows.Forms.LayoutEventArgs) Handles MyBase.Layout\n      &#39; This event is raised once at startup with the AffectedControl\n      &#39; and AffectedProperty properties on the LayoutEventArgs as null. \n      &#39; The event provides size preferences for that case.\n        If (e.AffectedControl IsNot Nothing) And (e.AffectedProperty IsNot Nothing) Then\n            &#39; Ensure that the affected property is the Bounds property\n            &#39; of the form.\n            If e.AffectedProperty.ToString() = &quot;Bounds&quot; Then\n             &#39; If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n             &#39; size of 300 pixels, increase the form&#39;s width.\n                If Me.layoutButton.Width + 50 &gt; 300 Then\n                    Me.Width = Me.layoutButton.Width + 50\n                    &#39; If not, keep the form&#39;s width at 300 pixels.\n                Else\n                    Me.Width = 300\n                End If\n\n                &#39; Center layoutButton on the form.\n                Me.layoutButton.Left = (Me.ClientSize.Width - Me.layoutButton.Width) / 2\n            End If\n        End If\n    End Sub\n\n    &#39; This method sets the Text property of layoutButton to the Text property\n    &#39; of textBox1.  If the new text plus a padding of 20 pixels is larger than \n    &#39; the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n    Private Sub textBox1_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles textBox1.TextChanged\n        &#39; Set the Text property of layoutButton.\n        Me.layoutButton.Text = Me.textBox1.Text\n        &#39; Get the width of the text using the proper font.\n        Dim textWidth As Integer = CInt(Me.CreateGraphics().MeasureString(layoutButton.Text, layoutButton.Font).Width)\n\n        &#39; If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n        &#39; 150 pixels, increase layoutButton&#39;s width.\n        If textWidth + 20 &gt; 150 Then\n            &#39; Setting the size property on any control raises \n            &#39; the Layout event for its container.\n            Me.layoutButton.Width = textWidth + 20\n            &#39; If not, keep layoutButton&#39;s width at 150 pixels.\n        Else\n            Me.layoutButton.Width = 150\n        End If\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"LayoutEventArgs#1\">public class Form1 : System.Windows.Forms.Form\n{\n   private System.Windows.Forms.TextBox textBox1;\n   private System.Windows.Forms.Label label1;\n   private System.Windows.Forms.Button layoutButton;\n   private System.ComponentModel.Container components = null;\n\n   public Form1()\n   {\n      InitializeComponent();\n   }\n\n   protected override void Dispose( bool disposing )\n   {\n      if( disposing )\n      {\n         if (components != null) \n         {\n            components.Dispose();\n         }\n      }\n      base.Dispose( disposing );\n   }\n\n   private void InitializeComponent()\n   {\n      this.layoutButton = new System.Windows.Forms.Button();\n      this.textBox1 = new System.Windows.Forms.TextBox();\n      this.label1 = new System.Windows.Forms.Label();\n      this.SuspendLayout();\n      // \n      // layoutButton\n      // \n      this.layoutButton.Anchor = System.Windows.Forms.AnchorStyles.Bottom;\n      this.layoutButton.Location = new System.Drawing.Point(72, 88);\n      this.layoutButton.Name = &quot;layoutButton&quot;;\n      this.layoutButton.Size = new System.Drawing.Size(150, 23);\n      this.layoutButton.TabIndex = 0;\n      this.layoutButton.Text = &quot;Hello&quot;;\n      // \n      // textBox1\n      // \n      this.textBox1.Anchor = ((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) \n         | System.Windows.Forms.AnchorStyles.Right);\n      this.textBox1.Location = new System.Drawing.Point(24, 40);\n      this.textBox1.Name = &quot;textBox1&quot;;\n      this.textBox1.Size = new System.Drawing.Size(248, 20);\n      this.textBox1.TabIndex = 1;\n      this.textBox1.Text = &quot;Hello&quot;;\n      this.textBox1.TextChanged += new System.EventHandler(this.textBox1_TextChanged);\n      // \n      // label1\n      // \n      this.label1.Location = new System.Drawing.Point(24, 16);\n      this.label1.Name = &quot;label1&quot;;\n      this.label1.TabIndex = 2;\n      this.label1.Text = &quot;Button\\&#39;s Text:&quot;;\n      // \n      // Form1\n      // \n      this.ClientSize = new System.Drawing.Size(292, 129);\n      this.Controls.AddRange(new System.Windows.Forms.Control[] {\n                                                                   this.label1,\n                                                                   this.textBox1,\n                                                                   this.layoutButton});\n      this.Name = &quot;Form1&quot;;\n      this.Text = &quot;Layout Sample&quot;;\n      this.Layout += new System.Windows.Forms.LayoutEventHandler(this.Form1_Layout);\n      this.ResumeLayout(false);\n\n   }\n\n   [STAThread]\n   static void Main() \n   {\n      Application.Run(new Form1());\n   }\n   \n   // This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   // or the size of the button plus 50 pixels, whichever amount is less.\n   private void Form1_Layout(object sender, System.Windows.Forms.LayoutEventArgs e)\n   {\n      // This event is raised once at startup with the AffectedControl\n      // and AffectedProperty properties on the LayoutEventArgs as null. \n      // The event provides size preferences for that case.\n      if ((e.AffectedControl != null) &amp;&amp; (e.AffectedProperty != null))\n      {\n         // Ensure that the affected property is the Bounds property\n         // of the form.\n         if (e.AffectedProperty.ToString() == &quot;Bounds&quot;) \n         {\n            // If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n            // size of 300 pixels, increase the form&#39;s width.\n            if ((this.layoutButton.Width + 50) &gt; 300) \n            {\n               this.Width = this.layoutButton.Width + 50;\n            }\n               // If not, keep the form&#39;s width at 300 pixels.\n            else \n            {\n               this.Width = 300;\n            }\n\n            // Center layoutButton on the form.\n            this.layoutButton.Left = (this.ClientSize.Width - this.layoutButton.Width) / 2;\n         }\n      }\n   }\n\n   // This method sets the Text property of layoutButton to the Text property\n   // of textBox1.  If the new text plus a padding of 20 pixels is larger than \n   // the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n   private void textBox1_TextChanged(object sender, System.EventArgs e)\n   {\n      // Set the Text property of layoutButton.\n      this.layoutButton.Text = this.textBox1.Text;\n      // Get the width of the text using the proper font.\n      int textWidth = (int)this.CreateGraphics().MeasureString(layoutButton.Text, layoutButton.Font).Width;\n\n      // If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n      // 150 pixels, increase layoutButton&#39;s width.\n      if ((textWidth + 20) &gt; 150)\n      {\n         // Setting the size property on any control raises \n         // the Layout event for its container.\n         this.layoutButton.Width = textWidth + 20;\n      }\n         // If not, keep layoutButton&#39;s width at 150 pixels.\n      else \n      {\n         this.layoutButton.Width = 150;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"LayoutEventArgs#1\">public ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::TextBox^ textBox1;\n   System::Windows::Forms::Label ^ label1;\n   System::Windows::Forms::Button^ layoutButton;\n   System::ComponentModel::Container^ components;\n\npublic:\n   Form1()\n   {\n      InitializeComponent();\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void InitializeComponent()\n   {\n      this-&gt;layoutButton = gcnew System::Windows::Forms::Button;\n      this-&gt;textBox1 = gcnew System::Windows::Forms::TextBox;\n      this-&gt;label1 = gcnew System::Windows::Forms::Label;\n      this-&gt;SuspendLayout();\n\n      // \n      // layoutButton\n      // \n      this-&gt;layoutButton-&gt;Anchor = System::Windows::Forms::AnchorStyles::Bottom;\n      this-&gt;layoutButton-&gt;Location = System::Drawing::Point( 72, 88 );\n      this-&gt;layoutButton-&gt;Name = &quot;layoutButton&quot;;\n      this-&gt;layoutButton-&gt;Size = System::Drawing::Size( 150, 23 );\n      this-&gt;layoutButton-&gt;TabIndex = 0;\n      this-&gt;layoutButton-&gt;Text = &quot;Hello&quot;;\n\n      // \n      // textBox1\n      // \n      this-&gt;textBox1-&gt;Anchor = static_cast&lt;System::Windows::Forms::AnchorStyles&gt;(System::Windows::Forms::AnchorStyles::Top | System::Windows::Forms::AnchorStyles::Left | System::Windows::Forms::AnchorStyles::Right);\n      this-&gt;textBox1-&gt;Location = System::Drawing::Point( 24, 40 );\n      this-&gt;textBox1-&gt;Name = &quot;textBox1&quot;;\n      this-&gt;textBox1-&gt;Size = System::Drawing::Size( 248, 20 );\n      this-&gt;textBox1-&gt;TabIndex = 1;\n      this-&gt;textBox1-&gt;Text = &quot;Hello&quot;;\n      this-&gt;textBox1-&gt;TextChanged += gcnew System::EventHandler( this, &amp;Form1::textBox1_TextChanged );\n\n      // \n      // label1\n      // \n      this-&gt;label1-&gt;Location = System::Drawing::Point( 24, 16 );\n      this-&gt;label1-&gt;Name = &quot;label1&quot;;\n      this-&gt;label1-&gt;TabIndex = 2;\n      this-&gt;label1-&gt;Text = &quot;Button&#39;s Text:&quot;;\n\n      // \n      // Form1\n      // \n      this-&gt;ClientSize = System::Drawing::Size( 292, 129 );\n      array&lt;System::Windows::Forms::Control^&gt;^temp0 = {this-&gt;label1,this-&gt;textBox1,this-&gt;layoutButton};\n      this-&gt;Controls-&gt;AddRange( temp0 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Layout Sample&quot;;\n      this-&gt;Layout += gcnew System::Windows::Forms::LayoutEventHandler( this, &amp;Form1::Form1_Layout );\n      this-&gt;ResumeLayout( false );\n   }\n\n   // This method ensures that the form&#39;s width is the preferred size of 300 pixels\n   // or the size of the button plus 50 pixels, whichever amount is less.\n   void Form1_Layout( Object^ /*sender*/, System::Windows::Forms::LayoutEventArgs^ e )\n   {\n      // This event is raised once at startup with the AffectedControl\n      // and AffectedProperty properties on the LayoutEventArgs as null. \n      // The event provides size preferences for that case.\n      if ( (e-&gt;AffectedControl != nullptr) &amp;&amp; (e-&gt;AffectedProperty != nullptr) )\n      {\n         // Ensure that the affected property is the Bounds property\n         // of the form.\n         if ( e-&gt;AffectedProperty-&gt;ToString()-&gt;Equals( &quot;Bounds&quot; ) )\n         {\n            // If layoutButton&#39;s width plus a padding of 50 pixels is greater than the preferred \n            // size of 300 pixels, increase the form&#39;s width.\n            if ( (this-&gt;layoutButton-&gt;Width + 50) &gt; 300 )\n            {\n               this-&gt;Width = this-&gt;layoutButton-&gt;Width + 50;\n            }\n            // If not, keep the form&#39;s width at 300 pixels.\n            else\n            {\n               this-&gt;Width = 300;\n            }\n\n            // Center layoutButton on the form.\n            this-&gt;layoutButton-&gt;Left = (this-&gt;ClientSize.Width - this-&gt;layoutButton-&gt;Width) / 2;\n         }\n      }\n   }\n\n   // This method sets the Text property of layoutButton to the Text property\n   // of textBox1.  If the new text plus a padding of 20 pixels is larger than \n   // the preferred size of 150 pixels, increase layoutButton&#39;s Width property.\n   void textBox1_TextChanged( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Set the Text property of layoutButton.\n      this-&gt;layoutButton-&gt;Text = this-&gt;textBox1-&gt;Text;\n\n      // Get the width of the text using the proper font.\n      int textWidth = (int)this-&gt;CreateGraphics()-&gt;MeasureString( layoutButton-&gt;Text, layoutButton-&gt;Font ).Width;\n\n      // If the width of the text plus a padding of 20 pixels is greater than the preferred size of\n      // 150 pixels, increase layoutButton&#39;s width.\n      if ( (textWidth + 20) &gt; 150 )\n      {\n         // Setting the size property on any control raises \n         // the Layout event for its container.\n         this-&gt;layoutButton-&gt;Width = textWidth + 20;\n      }\n      // If not, keep layoutButton&#39;s width at 150 pixels.\n      else\n      {\n         this-&gt;layoutButton-&gt;Width = 150;\n      }\n   }\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.LayoutEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.LayoutEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.LayoutEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.LayoutEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.LayoutEventArgs.AffectedComponent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.LayoutEventArgs.AffectedControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.LayoutEventArgs.AffectedProperty\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2f490180-30f7-051c-2990-8aacbf9010fa\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.LayoutEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.LayoutEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.LayoutEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.LayoutEventArgs","System.Windows.Forms.LayoutEventArgs..ctor","System.Windows.Forms.LayoutEventArgs.AffectedComponent","System.Windows.Forms.LayoutEventArgs.AffectedControl","System.Windows.Forms.LayoutEventArgs.AffectedProperty"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.LayoutEventArgs","System::Windows::Forms::LayoutEventArgs","System.Windows.Forms.LayoutEventArgs.#ctor","System::Windows::Forms::LayoutEventArgs::#ctor","System.Windows.Forms.LayoutEventArgs.AffectedComponent","System::Windows::Forms::LayoutEventArgs::AffectedComponent","System.Windows.Forms.LayoutEventArgs.AffectedControl","System::Windows::Forms::LayoutEventArgs::AffectedControl","System.Windows.Forms.LayoutEventArgs.AffectedProperty","System::Windows::Forms::LayoutEventArgs::AffectedProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2f490180-30f7-051c-2990-8aacbf9010fa","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/LayoutEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LayoutEventArgs class | Microsoft Docs","_op_ogTitle":"LayoutEventArgs class","description":"Provides data for the  event. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.LayoutEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.layouteventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.layouteventargs","fileRelativePath":"System.Windows.Forms.LayoutEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}