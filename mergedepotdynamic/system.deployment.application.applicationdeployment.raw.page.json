{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ApplicationDeployment</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public sealed class ApplicationDeployment</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ApplicationDeployment</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>You can configure your ClickOnce application to check for updates and install them automatically through the <code>subscription</code> element of the deployment manifest. Some applications, however, need finer control over their updates. You may want to install required updates programmatically, and prompt users to install optional updates at their convenience. By turning off subscription updates in the deployment manifest, you can take complete control of your application&#39;s update policies. Alternatively, you can use automatic subscription in conjunction with ApplicationDeployment, which enables ClickOnce to update the application periodically, but uses ApplicationDeployment to download critical updates shortly after they are released.  </p>\n<p> You can test whether your deployment has an available update by using either the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdate_\" data-linktype=\"relative-path\">CheckForUpdate</a> or the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsync_\" data-linktype=\"relative-path\">CheckForUpdateAsync</a> method; the latter method raises the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event on successful completion. <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForDetailedUpdate_\" data-linktype=\"relative-path\">CheckForDetailedUpdate</a> returns important information about the update, such as its version number and whether it is a required update for current users. If an update is available, you can install it by using <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_Update_\" data-linktype=\"relative-path\">Update</a> or <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateAsync_\" data-linktype=\"relative-path\">UpdateAsync</a>; the latter method raises the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateCompleted\" data-linktype=\"relative-path\">UpdateCompleted</a> event after installation of the update is complete. For large updates, you can receive progress notifications through the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateProgressChanged\" data-linktype=\"relative-path\">CheckForUpdateProgressChanged</a> and <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateProgressChanged\" data-linktype=\"relative-path\">UpdateProgressChanged</a> events, and use the information in <a class=\"xref\" href=\"system.componentmodel.progresschangedeventargs\" data-linktype=\"relative-path\">ProgressChangedEventArgs</a> to notify the user of the download status.  </p>\n<p> You can also use ApplicationDeployment to download large files and assemblies on demand. These files must be marked as &quot;optional&quot; within the deployment&#39;s application manifest so that they are not downloaded during installation. You can download the files at any point during the application&#39;s duration by using the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_\" data-linktype=\"relative-path\">DownloadFileGroup</a> or the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> method. You can download assemblies before they are loaded into memory by supplying an event handler for the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event on the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> class. For more information, see <a href=\"../Topic/Walkthrough:%20Downloading%20Assemblies%20on%20Demand%20with%20the%20ClickOnce%20Deployment%20API%20Using%20the%20Designer.md\" data-linktype=\"relative-path\">Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API Using the Designer</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you update a ClickOnce application while the application is running, the user will not see the updates until you call the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Restart_\" data-linktype=\"relative-path\">Restart</a> method of the <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a>, which will close the current running instance of the application and immediately restart it.  </p>\n</div>\n<p> ApplicationDeployment has no public constructor; you obtain instances of the class within a ClickOnce application through the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CurrentDeployment_\" data-linktype=\"relative-path\">CurrentDeployment</a> property. You use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_IsNetworkDeployed_\" data-linktype=\"relative-path\">IsNetworkDeployed</a> property to verify that the current application is a ClickOnce application.  </p>\n<p> ApplicationDeployment supports checking for updates and downloading updated files asynchronously by using the new <a href=\"../Topic/Event-based%20Asynchronous%20Pattern%20Overview.md\" data-linktype=\"relative-path\">Event-based Asynchronous Pattern Overview</a>, which exposes completion callbacks as class events. ApplicationDeployment starts and manages the threads for you, and calls your application back on the correct UI thread. Through this class, you can update without locking up the application, so that the user can continue working while the update installs. If the user must stop all work while an update takes place, consider using the synchronous methods instead.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Performing asynchronous updates requires that your application import both the <a class=\"xref\" href=\"system.deployment.application\" data-linktype=\"relative-path\">System.Deployment.Application</a> and <a class=\"xref\" href=\"system.componentmodel\" data-linktype=\"relative-path\">System.ComponentModel</a> namespaces.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_ActivationUri\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActivationUri</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the URL used to launch the deployment manifest of the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Uri ActivationUri { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A zero-length string if the <code>TrustUrlParameters</code> property in the deployment manifest is <code>false</code>, or if the user has supplied a UNC to open the deployment or has opened it locally. Otherwise, the return value is the full URL used to launch the application, including any parameters.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property will work in both fully trusted and partially trusted applications.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CurrentDeployment\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrentDeployment</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the current <a class=\"xref\" href=\"system.deployment.application.applicationdeployment\" data-linktype=\"relative-path\">ApplicationDeployment</a> for this deployment.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.applicationdeployment\" data-linktype=\"relative-path\">ApplicationDeployment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current deployment.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>You attempted to call this static property from a non-ClickOnce application.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You cannot create instances of <a class=\"xref\" href=\"system.deployment.application.applicationdeployment\" data-linktype=\"relative-path\">ApplicationDeployment</a> directly in your application; you must retrieve a valid instance through the CurrentDeployment property.  </p>\n<p> The CurrentDeployment static property is valid only from within an application that was deployed using ClickOnce. Attempts to call this property from non-ClickOnce applications will throw an exception. If you are developing an application that may or may not be deployed using ClickOnce, use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_IsNetworkDeployed_\" data-linktype=\"relative-path\">IsNetworkDeployed</a> property to test whether the current program is a ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CurrentVersion\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CurrentVersion</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the version of the deployment for the current running instance of the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Version CurrentVersion { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current deployment version.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>CurrentVersion will differ from <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdatedVersion_\" data-linktype=\"relative-path\">UpdatedVersion</a> if a new update has been installed but you have not yet called <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Restart_\" data-linktype=\"relative-path\">Restart</a>. If the deployment manifest is configured to perform automatic updates, you can compare these two values to determine if you should restart the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DataDirectory\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataDirectory</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the path to the ClickOnce data directory.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DataDirectory { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing the path to the application&#39;s data directory on the local disk.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_IsFirstRun\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsFirstRun</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether this is the first time this application has run on the client computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsFirstRun { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this version of the application has never run on the client computer before; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use IsFirstRun to determine whether you need to perform any one-time initialization operations the first time your application runs.  </p>\n<p> Do not assume that a IsFirstRun setting of <code>true</code> indicates that this instance of an application is the first one to show its user interface to the user. Due to the way the system schedules processes, one instance of the application may have its IsFirstRun property set to <code>true</code>, but another instance may be the first to render on the screen. The value of this property is reset whenever the user upgrades from one version to the next. If you want to perform an operation only the very first time any version of the application is run, you will need to perform an additional test, such as checking for the existence of a file you created the first time, or storing a flag using <strong>Application Settings</strong>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_IsNetworkDeployed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsNetworkDeployed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the current application is a ClickOnce application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool IsNetworkDeployed { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this is a ClickOnce application; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you want your application to run both inside and outside of a ClickOnce deployment (for example, if you need to debug your application on the local computer before deploying it), test IsNetworkDeployed before accessing the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CurrentDeployment_\" data-linktype=\"relative-path\">CurrentDeployment</a> property.  </p>\n<p> IsNetworkDeployed will return <code>true</code> regardless of whether the application is installed or hosted online, and regardless of whether it was installed from a Web site, file share, or CD-ROM.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_TimeOfLastUpdateCheck\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TimeOfLastUpdateCheck</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the date and the time ClickOnce last checked for an application update.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime TimeOfLastUpdateCheck { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> of the last update check.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A ClickOnce application can be configured for subscription updates. In this scenario, ClickOnce polls an application&#39;s deployment location automatically at intervals defined in the deployment manifest, and determines whether there is an update available. TimeOfLastUpdateCheck returns the time of the last update check regardless of whether it was initiated by a subscription or by an explicit check using the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdate_\" data-linktype=\"relative-path\">CheckForUpdate</a>, <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsync_\" data-linktype=\"relative-path\">CheckForUpdateAsync</a>, <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForDetailedUpdate_\" data-linktype=\"relative-path\">CheckForDetailedUpdate</a>, <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_Update_\" data-linktype=\"relative-path\">Update</a>, or <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateAsync_\" data-linktype=\"relative-path\">UpdateAsync</a> method.  </p>\n<p> If no update check has been performed since the application was installed, TimeOfLastUpdateCheck returns the installation time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdatedApplicationFullName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdatedApplicationFullName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the full name of the application after it has been updated.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string UpdatedApplicationFullName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the full name of the application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdatedVersion\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdatedVersion</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the version of the update that was recently downloaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Version UpdatedVersion { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> describing the version of the update.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>UpdatedVersion differs from <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CurrentVersion_\" data-linktype=\"relative-path\">CurrentVersion</a> if a new update has been installed but you have not yet called <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Restart_\" data-linktype=\"relative-path\">Restart</a> on the <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a>. If the application&#39;s deployment manifest is configured to perform automatic updates, you can compare these two values to determine whether you should restart the application.  </p>\n<p> If the application has not been updated, UpdatedVersion returns the same value as <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CurrentVersion_\" data-linktype=\"relative-path\">CurrentVersion</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdateLocation\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateLocation</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the Web site or file share from which this application updates itself.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public Uri UpdateLocation { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The update path, expressed as an HTTP, HTTPS, or file URL; or as a Windows network file path (UNC).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>UpdateLocation may be different from the Web site used to download the application initially if the application&#39;s deployment is configured to use update redirection.  </p>\n<p> This value can be changed only in the application&#39;s deployment manifest.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForDetailedUpdate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForDetailedUpdate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the same operation as <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.CheckForUpdate*</span>, but returns extended information about the available update.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.updatecheckinfo\" data-linktype=\"relative-path\">UpdateCheckInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo\" data-linktype=\"relative-path\">UpdateCheckInfo</a> for the available update.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The current application is either not configured to support updates, or there is another update check operation already in progress.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentdownloadexception\" data-linktype=\"relative-path\">DeploymentDownloadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest cannot be downloaded. This exception will appear in the <span class=\"xref\">stem.ComponentModel.AsyncCompletedEventArgs.Error*</span> property of the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest is corrupted. Regenerate the application&#39;s manifest before you attempt to deploy this application to users. This exception will appear in the <span class=\"xref\">stem.ComponentModel.AsyncCompletedEventArgs.Error*</span> property of the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CheckForDetailedUpdate method lets synchronous callers get the same extended information that asynchronous callers get using the <a class=\"xref\" href=\"system.deployment.application.checkforupdatecompletedeventargs\" data-linktype=\"relative-path\">CheckForUpdateCompletedEventArgs</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForDetailedUpdate_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForDetailedUpdate(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Performs the same operation as <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.CheckForUpdate*</span>, but returns extended information about the available update.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>persistUpdateCheckResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>false</code>, the update will be applied silently and no dialog box will be displayed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.updatecheckinfo\" data-linktype=\"relative-path\">UpdateCheckInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.deployment.application.updatecheckinfo\" data-linktype=\"relative-path\">UpdateCheckInfo</a> for the available update.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateLocation*</span> to determine whether a new update is available.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckForUpdate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a new update is available; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>ClickOnce throws this exception immediately if you call the CheckForUpdate method while an update is already in progress.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentdownloadexception\" data-linktype=\"relative-path\">DeploymentDownloadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest cannot be downloaded.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CheckForUpdate method compares the version of the currently installed deployment with the version specified in the deployment manifest found at <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateLocation_\" data-linktype=\"relative-path\">UpdateLocation</a>. If the version on the server is different from the installed version, it returns <code>true</code>.  </p>\n<p> This method will block until the check has completed. To check for an update asynchronously, use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsync_\" data-linktype=\"relative-path\">CheckForUpdateAsync</a> method instead.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If CheckForUpdate discovers that an update is available, and the user chooses not to install it, ClickOnce will prompt the user that an update is available the next time the application is run. There is no way to disable this prompting. (If the application is a required update, ClickOnce will install it without prompting.)</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdate_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdate(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateLocation*</span> to determine whether a new update is available.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CheckForUpdate (bool persistUpdateCheckResult);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>persistUpdateCheckResult</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>If <code>false</code>, the update will be applied silently and no dialog box will be displayed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if a new update is available; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdateAsync()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateLocation*</span> asynchronously to determine whether a new update is available.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CheckForUpdateAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>ClickOnce throws this exception immediately if you call the CheckForUpdateAsync method while an update is already in progress.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentdownloadexception\" data-linktype=\"relative-path\">DeploymentDownloadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest cannot be downloaded. This exception appears in the <span class=\"xref\">stem.ComponentModel.AsyncCompletedEventArgs.Error*</span> property of the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem. This exception appears in the <span class=\"xref\">stem.ComponentModel.AsyncCompletedEventArgs.Error*</span> property of the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>CheckForUpdateAsync returns immediately and starts a separate thread for downloading the updated application. When the method completes or is canceled, it raises the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\" data-linktype=\"relative-path\">CheckForUpdateCompleted</a> event. You can use <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> in this event handler to determine whether the operation was canceled, or if an exception was raised during update.  </p>\n<p> You can cancel an asynchronous update by calling <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsyncCancel_\" data-linktype=\"relative-path\">CheckForUpdateAsyncCancel</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdate_\" data-linktype=\"relative-path\">CheckForUpdate</a> discovers that an update is available, and the user chooses not to install it, ClickOnce will prompt the user that an update is available the next time the application is run. There is no way to disable this prompting. (If the application is a required update, ClickOnce will install it without prompting.)</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsyncCancel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdateAsyncCancel()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Cancels the asynchronous update check.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CheckForUpdateAsyncCancel ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to cancel an update check initiated with the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_CheckForUpdateAsync_\" data-linktype=\"relative-path\">CheckForUpdateAsync</a> method.  </p>\n<p> This method will not cancel any background update that may already be in progress, such as an update started as part of a subscription. For more information about subscriptions, see <a href=\"../Topic/Choosing%20a%20ClickOnce%20Update%20Strategy.md\" data-linktype=\"relative-path\">Choosing a ClickOnce Update Strategy</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroup(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads a set of optional files on demand.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileGroup (string groupName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>groupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The named group of files to download. All files marked &quot;optional&quot; in a ClickOnce application require a group name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>groupName</code> parameter is null or zero-length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In a ClickOnce application, the files marked &quot;optional&quot; in the application manifest are not downloaded during initialization or update. You can use the DownloadFileGroup method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them. For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it.  </p>\n<p> To use an assembly you have downloaded with DownloadFileGroup, you attach an event listener to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event on the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CurrentDomain_\" data-linktype=\"relative-path\">CurrentDomain</a>. For an example, see =<a href=\"../Topic/Walkthrough:%20Downloading%20Assemblies%20on%20Demand%20with%20the%20ClickOnce%20Deployment%20API%20Using%20the%20Designer.md\" data-linktype=\"relative-path\">Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API Using the Designer</a>.  </p>\n<p> All files are downloaded to the ClickOnce application cache and are therefore isolated to the current version of the application. Let&#39;s say that after an application downloads a file group, the user installs a new version of the application, but later reverts to the previous version of the application. In this case, the previous version will still have the copies of the files it originally downloaded. For more information about accessing data files, see <a href=\"../Topic/Accessing%20Local%20and%20Remote%20Data%20in%20ClickOnce%20Applications.md\" data-linktype=\"relative-path\">Accessing Local and Remote Data in ClickOnce Applications</a>.  </p>\n<p> DownloadFileGroup works in partially trusted applications, that is, in any ClickOnce application running with restricted permission. However, if you attempt to load assemblies dynamically, your application will require full trust.  </p>\n<p> On-demand downloading of data files is currently not supported.  </p>\n<p> Your application will not be responsive to user input until the DownloadFileGroup method returns. If you need to download files without interrupting the user&#39;s workflow, use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> method instead.  </p>\n<p> You cannot download a single file by its file name alone. To download a single file, assign it a group name in your ClickOnce deployment and download the group using this method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroupAsync(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads, on demand, a set of optional files in the background.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileGroupAsync (string groupName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>groupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The named group of files to download. All files marked &quot;optional&quot; in a ClickOnce application require a group name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>groupName</code> parameter is null or zero-length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>You cannot initiate more than one download of <code>groupName</code> at a time.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In a ClickOnce application, the files marked &quot;optional&quot; in the application manifest are not downloaded during initialization or update. You can use the DownloadFileGroupAsync method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them. This approach works not only for static files, but also for assemblies that an application may or may not require. For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it.  </p>\n<p> To download assemblies on demand, attach an event listener to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event on the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CurrentDomain_\" data-linktype=\"relative-path\">CurrentDomain</a>. For an example, see <a href=\"../Topic/Walkthrough:%20Downloading%20Assemblies%20on%20Demand%20with%20the%20ClickOnce%20Deployment%20API.md\" data-linktype=\"relative-path\">Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API</a>.  </p>\n<p> All assemblies are downloaded to the ClickOnce application cache.  </p>\n<p> All static files are downloaded to the ClickOnce application&#39;s data directory and are therefore isolated to the current version of the application. Let&#39;s say that after an application downloads a file group, the user installs a new version of the application, but later reverts to the previous version of the application. In this case, the previous version will still have the copies of the files it originally downloaded. For more information about accessing static files, see <a href=\"../Topic/Accessing%20Local%20and%20Remote%20Data%20in%20ClickOnce%20Applications.md\" data-linktype=\"relative-path\">Accessing Local and Remote Data in ClickOnce Applications</a>.  </p>\n<p> You can download multiple file groups simultaneously using <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a>. You can distinguish among them by using the <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs#System_Deployment_Application_DeploymentProgressChangedEventArgs_Group_\" data-linktype=\"relative-path\">Group</a> property of the <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs\" data-linktype=\"relative-path\">DeploymentProgressChangedEventArgs</a> class, which is passed to the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupProgressChanged\" data-linktype=\"relative-path\">DownloadFileGroupProgressChanged</a> event. If you need to pass more complex state, you can use <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> to pass in a <code>state</code> object.  </p>\n<p> <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_\" data-linktype=\"relative-path\">DownloadFileGroup</a> works in partially trusted applications, that is, in any ClickOnce application running with restricted permission. However, if you are attempting to load assemblies dynamically, your application will require full trust.  </p>\n<p> On-demand downloading of data files is currently not supported.  </p>\n<p> You cannot download a single file by its file name alone. To download a single file, assign it a group name in your ClickOnce deployment and download the group using this method.  </p>\n<p> To cancel an asynchronous download, call the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsyncCancel_\" data-linktype=\"relative-path\">DownloadFileGroupAsyncCancel</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroupAsync(String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads, on demand, a set of optional files in the background, and passes a piece of application state to the event callbacks.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileGroupAsync (string groupName, object userState);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>groupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The named group of files to download. All files marked &quot;optional&quot; in a ClickOnce application require a group name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userState</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An arbitrary object containing state information for the asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>groupName</code> parameter is null or zero-length.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>You cannot initiate more than one download of <code>groupName</code> at a time.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In a ClickOnce application, the files marked &quot;optional&quot; in the application manifest are not downloaded during initialization or update. You can use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them. This approach works not only for static files, but also for assemblies that an application may or may not require. For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it. To download assemblies on demand, attach an event listener to the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_AssemblyResolve\" data-linktype=\"relative-path\">AssemblyResolve</a> event on the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CurrentDomain_\" data-linktype=\"relative-path\">CurrentDomain</a>.  </p>\n<p> You can download multiple file groups simultaneously by using the DownloadFileGroupAsync method. You can distinguish among them by using the <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs#System_Deployment_Application_DeploymentProgressChangedEventArgs_Group_\" data-linktype=\"relative-path\">Group</a> property of the <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs\" data-linktype=\"relative-path\">DeploymentProgressChangedEventArgs</a> class, which is passed to the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupProgressChanged\" data-linktype=\"relative-path\">DownloadFileGroupProgressChanged</a> event. If you need to pass a more complex state, you can use  </p>\n<p> DownloadFileGroupAsync to pass in a <code>state</code> object.  </p>\n<p> All static files are downloaded to the ClickOnce application&#39;s data directory and are therefore isolated to the current version of the application. For more information about accessing static files, see <a href=\"../Topic/Accessing%20Local%20and%20Remote%20Data%20in%20ClickOnce%20Applications.md\" data-linktype=\"relative-path\">Accessing Local and Remote Data in ClickOnce Applications</a>. . Let&#39;s say that after an application downloads a file group, the user installs a new version of the application, but later  user reverts to the previous version of the application. In this case, the previous version will still have the copies of the files it originally downloaded.  </p>\n<p> <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_\" data-linktype=\"relative-path\">DownloadFileGroup</a> works in partially trusted applications, that is, in any ClickOnce application running with restricted permission. However, if you are attempting to load assemblies dynamically, your application will require full trust.  </p>\n<p> On-demand downloading of data files is currently not supported.  </p>\n<p> To cancel an asynchronous download, call the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsyncCancel_\" data-linktype=\"relative-path\">DownloadFileGroupAsyncCancel</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsyncCancel_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroupAsyncCancel(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Cancels an asynchronous file download.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileGroupAsyncCancel (string groupName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>groupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The named group of files to download. All files marked &quot;optional&quot; in a ClickOnce application require a group name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>groupName</code> cannot be <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_IsFileGroupDownloaded_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsFileGroupDownloaded(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Checks whether the named file group has already been downloaded to the client computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsFileGroupDownloaded (string groupName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>groupName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The named group of files to download. All files marked &quot;optional&quot; in a ClickOnce application require a group name.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the file group has already been downloaded for the current version of this application; otherwise, <code>false</code>. If a new version of the application has been installed, and the new version has not added, removed, or altered files in the file group, IsFileGroupDownloaded returns <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>groupName</code> is not a file group defined in the application manifest.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>IsFileGroupDownloaded works in a partially trusted application without any security demands.  </p>\n<p> When you update an application, ClickOnce copies any on-demand data files from the previous version into the new version&#39;s data directory. If you download a new version of these files, you should remove any data you want to keep from the old version and move it into the new version.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_Update\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Update()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts a synchronous download and installation of the latest version of this application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Update ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if an application has been updated; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.trustnotgrantedexception\" data-linktype=\"relative-path\">TrustNotGrantedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local computer did not grant the application the permission level it requested to execute.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Your ClickOnce deployment is corrupted. For tips on how to diagnose and correct the problem, see <a href=\"../Topic/Troubleshooting%20ClickOnce%20Deployments.md\" data-linktype=\"relative-path\">Troubleshooting ClickOnce Deployments</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentdownloadexception\" data-linktype=\"relative-path\">DeploymentDownloadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The new deployment could not be downloaded from its location on the network.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The application is currently being updated.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An application is considered updated when you publish a new version of the application to the location specified by <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateLocation_\" data-linktype=\"relative-path\">UpdateLocation</a>, and the version number in the application&#39;s deployment manifest is greater than the version number of the application currently installed on the user&#39;s computer.  </p>\n<p> The Update call will block until the update has been downloaded to the client computer and installed into the ClickOnce cache; during this time, the application will not be responsive to the user. If you want to maintain application responsiveness or display a progress report during download, use the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateAsync_\" data-linktype=\"relative-path\">UpdateAsync</a> method instead.  </p>\n<p> Update downloads all of the files that are not marked as &quot;optional&quot; in the application manifest. You can download optional files on demand by using the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_\" data-linktype=\"relative-path\">DownloadFileGroup</a> or the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> method.  </p>\n<p> ClickOnce may already be updating the application automatically when you call the Update method; if that happens, calls to this method will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> If you have updated one or more files in your deployment, but you have not refreshed your application manifest, you will receive an <a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a>. Most of the time, redeploying your ClickOnce application solves this problem. You will also receive this exception if a public-key signature on a deployment manifest or application manifest is invalid or missing.  </p>\n<p> An update may request a higher level of trust on the local computer than the previous version of the application. If the application uses Trusted Application Deployment, the common language runtime (CLR) trust manager examines the deployment manifest to determine whether it contains a valid trust license. If the deployment manifest does not contain a valid trust license, ClickOnce stops the installation and throws a <a class=\"xref\" href=\"system.deployment.application.trustnotgrantedexception\" data-linktype=\"relative-path\">TrustNotGrantedException</a>. The Update method will never display a prompt asking the user whether they want to grant the application permission to run.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdateAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateAsync()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts an asynchronous download and installation of the latest version of this application.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UpdateAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.trustnotgrantedexception\" data-linktype=\"relative-path\">TrustNotGrantedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local computer did not grant this application the permission level it requested to execute.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Your ClickOnce deployment is corrupted. For tips on how to diagnose and correct the problem, see <a href=\"../Topic/Troubleshooting%20ClickOnce%20Deployments.md\" data-linktype=\"relative-path\">Troubleshooting ClickOnce Deployments</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.deployment.application.deploymentdownloadexception\" data-linktype=\"relative-path\">DeploymentDownloadException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The new deployment could not be downloaded from its location on the network.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An application is considered updated when you publish a new version of the application to the location specified by <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateLocation_\" data-linktype=\"relative-path\">UpdateLocation</a>, and the version number in the application&#39;s deployment manifest is greater than the version number of the application currently installed on the user&#39;s computer.  </p>\n<p> While downloading the update, ClickOnce will raise the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateProgressChanged\" data-linktype=\"relative-path\">UpdateProgressChanged</a> event handler on the main application thread to inform you of the status of the download. When the asynchronous update finishes or encounters an exception, ClickOnce will raise the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateCompleted\" data-linktype=\"relative-path\">UpdateCompleted</a> event on the main application thread. Examine the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> supplied to this event to determine whether the update succeeded.  </p>\n<p> If UpdateAsync throws an exception, ClickOnce calls <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateCompleted\" data-linktype=\"relative-path\">UpdateCompleted</a> and sets the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property of <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> to the exception that was thrown.  </p>\n<p> UpdateAsync will download all files in a deployment not marked as &quot;optional&quot; in the application manifest. You can download optional files on demand by using the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroup_\" data-linktype=\"relative-path\">DownloadFileGroup</a> or the <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_DownloadFileGroupAsync_\" data-linktype=\"relative-path\">DownloadFileGroupAsync</a> method.  </p>\n<p> ClickOnce may already be updating the application automatically when you call the UpdateAsync method; if that happens, calls to this method will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.  </p>\n<p> If you have updated one or more files in your deployment, but you have not refreshed your application manifest, you will receive an <a class=\"xref\" href=\"system.deployment.application.invaliddeploymentexception\" data-linktype=\"relative-path\">InvalidDeploymentException</a>. Most of the time, rebuilding your application manifest solves this problem. You will also receive this exception if a public-key signature on a deployment manifest or application manifest is invalid or missing.  </p>\n<p> An update may request a higher level of trust on the local computer than the previous version of the application. If the application uses Trusted Application Deployment, the common language runtime (CLR) trust manager examines the deployment manifest to determine whether it contains a valid trust license. If the deployment manifest does not contain a valid trust license, ClickOnce stops the installation and throws a <a class=\"xref\" href=\"system.deployment.application.trustnotgrantedexception\" data-linktype=\"relative-path\">TrustNotGrantedException</a>. UpdateAsync will never display a prompt asking the user if they want to grant the application permission to run.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdateAsyncCancel\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateAsyncCancel()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Cancels an asynchronous update initiated by <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateAsync*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UpdateAsyncCancel ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>UpdateAsyncCancel only cancels an update initiated by a call to <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateAsync_\" data-linktype=\"relative-path\">UpdateAsync</a>; it does not cancel an update started as part of a subscription.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdateCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdateCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*</span> has completed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.deployment.application.checkforupdatecompletedeventargs\" data-linktype=\"relative-path\">CheckForUpdateCompletedEventArgs</a> class will tell you, among other things, the version of the update, how large the update is, and whether the available update is required or optional.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_CheckForUpdateProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CheckForUpdateProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a progress update is available on a <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*</span> call.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>CheckForUpdateProgressChanged reports on the download status of the application&#39;s deployment manifest. This can be important information for users who are downloading the deployment over slow network connections.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroupCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroupCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs on the main application thread when a file download is complete.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DownloadFileGroupCompleted event is called on the main application thread. It is thread safe to call your application&#39;s Windows Forms controls directly within this callback.  </p>\n<p> Check the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property of the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> supplied to this callback. If this property is <code>null</code>, the download was successful; if it is not <code>null</code>, the installation did not succeed, and you can find more information about the installation failure through the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_DownloadFileGroupProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileGroupProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when status information is available on a file download operation initiated by a call to <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DownloadFileGroupProgressChanged event is called on the main application thread. It is thread safe to call your application&#39;s Windows Forms controls directly within this callback.  </p>\n<p> Use the information supplied in <a class=\"xref\" href=\"system.deployment.application.deploymentprogresschangedeventargs\" data-linktype=\"relative-path\">DeploymentProgressChangedEventArgs</a> to communicate progress information to your users.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdateCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when ClickOnce has finished upgrading the application as the result of a call to <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateAsync*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UpdateCompleted event is called on the main application thread. You may call your application&#39;s Windows Forms controls directly within this callback without triggering an exception.  </p>\n<p> Check the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property of the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> supplied to this callback. If this property is <code>null</code>, the installation was successful; if it is not <code>null</code>, the installation did not succeed, and you can find more information about this installation failure through the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Error_\" data-linktype=\"relative-path\">Error</a> property. Once the update has been downloaded, you will need to call the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Restart_\" data-linktype=\"relative-path\">Restart</a> method on the <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> to use the newer version of the application.  </p>\n<p> If the installation of the update was canceled by a call to <a class=\"xref\" href=\"system.deployment.application.applicationdeployment#System_Deployment_Application_ApplicationDeployment_UpdateAsyncCancel_\" data-linktype=\"relative-path\">UpdateAsyncCancel</a>, the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> property of the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> class will be <code>true</code>.  </p>\n<p> To use this event handler, your application must import both the <a class=\"xref\" href=\"system.deployment.application\" data-linktype=\"relative-path\">System.Deployment.Application</a> and <a class=\"xref\" href=\"system.componentmodel\" data-linktype=\"relative-path\">System.ComponentModel</a> namespaces.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Deployment_Application_ApplicationDeployment_UpdateProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when ClickOnce has new status information for an update operation initiated by calling the <span class=\"xref\">stem.Deployment.Application.ApplicationDeployment.UpdateAsync*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UpdateProgressChanged event is called on the main application thread. You may call your application&#39;s Windows Forms controls directly within this callback without triggering an exception.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Deployment.Application.ApplicationDeployment.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Deployment.Application.ApplicationDeployment.yml\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.ActivationUri\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForUpdate\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_CheckForUpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_CheckForUpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_CheckForUpdateProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_CheckForUpdateProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CurrentDeployment\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.CurrentVersion\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DataDirectory\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DownloadFileGroup\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_DownloadFileGroupCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_DownloadFileGroupCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_DownloadFileGroupProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_DownloadFileGroupProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.IsFirstRun\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.Update\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdateAsync\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_UpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_UpdateCompleted\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdatedVersion\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdateLocation\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.add_UpdateProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Deployment.Application.ApplicationDeployment.remove_UpdateProgressChanged\">\r\n<meta name=\"APILocation\" content=\"System.Deployment.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a0259fe1-f49c-5d27-12e8-30e0100a52a3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Deployment.Application/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Deployment.Application.ApplicationDeployment\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Deployment.Application.ApplicationDeployment.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Deployment.Application.ApplicationDeployment.yml","open_to_public_contributors":true,"api_name":["System.Deployment.Application.ApplicationDeployment","System.Deployment.Application.ApplicationDeployment.ActivationUri","System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate","System.Deployment.Application.ApplicationDeployment.CheckForUpdate","System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync","System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel","System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted","System.Deployment.Application.ApplicationDeployment.add_CheckForUpdateCompleted","System.Deployment.Application.ApplicationDeployment.remove_CheckForUpdateCompleted","System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.add_CheckForUpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.remove_CheckForUpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.CurrentDeployment","System.Deployment.Application.ApplicationDeployment.CurrentVersion","System.Deployment.Application.ApplicationDeployment.DataDirectory","System.Deployment.Application.ApplicationDeployment.DownloadFileGroup","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted","System.Deployment.Application.ApplicationDeployment.add_DownloadFileGroupCompleted","System.Deployment.Application.ApplicationDeployment.remove_DownloadFileGroupCompleted","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged","System.Deployment.Application.ApplicationDeployment.add_DownloadFileGroupProgressChanged","System.Deployment.Application.ApplicationDeployment.remove_DownloadFileGroupProgressChanged","System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded","System.Deployment.Application.ApplicationDeployment.IsFirstRun","System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed","System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck","System.Deployment.Application.ApplicationDeployment.Update","System.Deployment.Application.ApplicationDeployment.UpdateAsync","System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel","System.Deployment.Application.ApplicationDeployment.UpdateCompleted","System.Deployment.Application.ApplicationDeployment.add_UpdateCompleted","System.Deployment.Application.ApplicationDeployment.remove_UpdateCompleted","System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName","System.Deployment.Application.ApplicationDeployment.UpdatedVersion","System.Deployment.Application.ApplicationDeployment.UpdateLocation","System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.add_UpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.remove_UpdateProgressChanged"],"api_location":["System.Deployment.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Deployment.Application.ApplicationDeployment","System::Deployment::Application::ApplicationDeployment","System.Deployment.Application.ApplicationDeployment.ActivationUri","System::Deployment::Application::ApplicationDeployment::ActivationUri","System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate","System::Deployment::Application::ApplicationDeployment::CheckForDetailedUpdate","System.Deployment.Application.ApplicationDeployment.CheckForUpdate","System::Deployment::Application::ApplicationDeployment::CheckForUpdate","System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync","System::Deployment::Application::ApplicationDeployment::CheckForUpdateAsync","System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel","System::Deployment::Application::ApplicationDeployment::CheckForUpdateAsyncCancel","System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted","System::Deployment::Application::ApplicationDeployment::CheckForUpdateCompleted","System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged","System::Deployment::Application::ApplicationDeployment::CheckForUpdateProgressChanged","System.Deployment.Application.ApplicationDeployment.CurrentDeployment","System::Deployment::Application::ApplicationDeployment::CurrentDeployment","System.Deployment.Application.ApplicationDeployment.CurrentVersion","System::Deployment::Application::ApplicationDeployment::CurrentVersion","System.Deployment.Application.ApplicationDeployment.DataDirectory","System::Deployment::Application::ApplicationDeployment::DataDirectory","System.Deployment.Application.ApplicationDeployment.DownloadFileGroup","System::Deployment::Application::ApplicationDeployment::DownloadFileGroup","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync","System::Deployment::Application::ApplicationDeployment::DownloadFileGroupAsync","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel","System::Deployment::Application::ApplicationDeployment::DownloadFileGroupAsyncCancel","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted","System::Deployment::Application::ApplicationDeployment::DownloadFileGroupCompleted","System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged","System::Deployment::Application::ApplicationDeployment::DownloadFileGroupProgressChanged","System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded","System::Deployment::Application::ApplicationDeployment::IsFileGroupDownloaded","System.Deployment.Application.ApplicationDeployment.IsFirstRun","System::Deployment::Application::ApplicationDeployment::IsFirstRun","System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed","System::Deployment::Application::ApplicationDeployment::IsNetworkDeployed","System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck","System::Deployment::Application::ApplicationDeployment::TimeOfLastUpdateCheck","System.Deployment.Application.ApplicationDeployment.Update","System::Deployment::Application::ApplicationDeployment::Update","System.Deployment.Application.ApplicationDeployment.UpdateAsync","System::Deployment::Application::ApplicationDeployment::UpdateAsync","System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel","System::Deployment::Application::ApplicationDeployment::UpdateAsyncCancel","System.Deployment.Application.ApplicationDeployment.UpdateCompleted","System::Deployment::Application::ApplicationDeployment::UpdateCompleted","System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName","System::Deployment::Application::ApplicationDeployment::UpdatedApplicationFullName","System.Deployment.Application.ApplicationDeployment.UpdatedVersion","System::Deployment::Application::ApplicationDeployment::UpdatedVersion","System.Deployment.Application.ApplicationDeployment.UpdateLocation","System::Deployment::Application::ApplicationDeployment::UpdateLocation","System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged","System::Deployment::Application::ApplicationDeployment::UpdateProgressChanged"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a0259fe1-f49c-5d27-12e8-30e0100a52a3","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Deployment.Application/ApplicationDeployment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ApplicationDeployment class | Microsoft Docs","_op_ogTitle":"ApplicationDeployment class","description":"Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Deployment.Application/toc.json","toc_rel":"_splitted/System.Deployment.Application/toc.json","source_url":"","ms.assetid":"System.Deployment.Application.ApplicationDeployment","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.deployment.application.applicationdeployment","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.deployment.application.applicationdeployment","fileRelativePath":"System.Deployment.Application.ApplicationDeployment.html"},"themesRelativePathToOutputRoot":"_themes/"}