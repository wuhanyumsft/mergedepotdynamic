{"content":"    \r\n    <h1 id=\"System_Diagnostics_PerformanceCounter\">\r\n      <span class=\"lang-csharp\">PerformanceCounter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a Windows NT performance counter component.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.InstallerType(&quot;System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\npublic sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PerformanceCounter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The PerformanceCounter component can be used for both reading existing predefined or custom counters and publishing (writing) performance data to custom counters.  </p>\n<p> There are numerous predefined counters listed in the Windows Performance Monitor&#39;s <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=257854\" data-linktype=\"external\">Add Counters dialog box</a>. To learn about the .NET Framework performance counters, see <a href=\"../Topic/Performance%20Counters%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Performance Counters</a>.  </p>\n<p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the â€œUsing an Object that Implements IDisposableâ€ section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> In versions 1.0 and 1.1 of the .NET Framework, this class requires immediate callers to be fully trusted. Starting with the .NET Framework version 2.0, this class requires <a class=\"xref\" href=\"system.diagnostics.performancecounterpermission\" data-linktype=\"relative-path\">PerformanceCounterPermission</a> for specific actions. It is strongly recommended that <a class=\"xref\" href=\"system.diagnostics.performancecounterpermission\" data-linktype=\"relative-path\">PerformanceCounterPermission</a> not be granted to semi-trusted code.  The ability to read and write performance counters allows code to perform actions such as enumerating executing processes and obtaining information about them.  </p>\n<p> In addition, passing a PerformanceCounter object to less-trusted code can create a security issue. Never pass performance counter objects, such as a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> or PerformanceCounter, to less trusted code.  </p>\n</div>\n<p> To read from a performance counter, create an instance of the PerformanceCounter class, set the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and, optionally, the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> or <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties, and then call the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextValue_\" data-linktype=\"relative-path\">NextValue</a> method to take a performance counter reading.  </p>\n<p> To publish performance counter data, create one or more custom counters using the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_Create_\" data-linktype=\"relative-path\">Create</a> method, create an instance of the PerformanceCounter class, set the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a> and, optionally, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> or <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties, and then call the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_IncrementBy_\" data-linktype=\"relative-path\">IncrementBy</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Increment_\" data-linktype=\"relative-path\">Increment</a>, or <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Decrement_\" data-linktype=\"relative-path\">Decrement</a> methods, or set the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RawValue_\" data-linktype=\"relative-path\">RawValue</a> property to change the value of your custom counter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Increment_\" data-linktype=\"relative-path\">Increment</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_IncrementBy_\" data-linktype=\"relative-path\">IncrementBy</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Decrement_\" data-linktype=\"relative-path\">Decrement</a> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RawValue_\" data-linktype=\"relative-path\">RawValue</a> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  </p>\n</div>\n<p> The counter is the mechanism by which performance data is collected. The registry stores the names of all the counters, each of which is related to a specific area of system functionality. Examples include a processor&#39;s busy time, memory usage, or the number of bytes received over a network connection.  </p>\n<p> Each counter is uniquely identified through its name and its location. In the same way that a file path includes a drive, a directory, one or more subdirectories, and a file name, counter information consists of four elements: the computer, the category, the category instance, and the counter name.  </p>\n<p> The counter information must include the category, or performance object, that the counter measures data for. A computer&#39;s categories include physical components, such as processors, disks, and memory. There are also system categories, such as processes and threads. Each category is related to a functional element within the computer and has a set of standard counters assigned to it. These objects are listed in the Performance object drop-down list of the Add Counters dialog box within the Windows 2000 System Monitor, and you must include them in the counter path. Performance data is grouped by the category to which is it related.  </p>\n<p> In certain cases, several copies of the same category can exist. For example, several processes and threads run simultaneously, and some computers contain more than one processor. The category copies are called category instances, and each instance has a set of standard counters assigned to it. If a category can have more than one instance, an instance specification must be included in the counter information.  </p>\n<p> To obtain performance data for counters that required an initial or previous value for performing the necessary calculation, call the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextValue_\" data-linktype=\"relative-path\">NextValue</a> method twice and use the information returned as your application requires.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Performance counter categories installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnlong-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE --> use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<em>&lt;category name&gt;</em>\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the <code>fileMappingSize</code> attribute value for the <code>performanceCounters</code> element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see <a href=\"../Topic/%3CperformanceCounters%3E%20Element.md\" data-linktype=\"relative-path\">&amp;lt;performanceCounters&amp;gt;</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor\" data-linktype=\"self-bookmark\">PerformanceCounter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class, without associating the instance with any system or custom performance counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">PerformanceCounter(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">PerformanceCounter(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only or read/write instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">PerformanceCounter(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">PerformanceCounter(String,String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only or read/write instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">PerformanceCounter(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance, on the specified computer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_DefaultFileMappingSize\" data-linktype=\"self-bookmark\">DefaultFileMappingSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_CategoryName\" data-linktype=\"self-bookmark\">CategoryName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the performance counter category for this performance counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_CounterHelp\" data-linktype=\"self-bookmark\">CounterHelp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the description for this performance counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_CounterName\" data-linktype=\"self-bookmark\">CounterName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the performance counter that is associated with this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_CounterType\" data-linktype=\"self-bookmark\">CounterType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the counter type of the associated performance counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_InstanceLifetime\" data-linktype=\"self-bookmark\">InstanceLifetime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the lifetime of a process.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_InstanceName\" data-linktype=\"self-bookmark\">InstanceName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an instance name for this performance counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_MachineName\" data-linktype=\"self-bookmark\">MachineName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the computer name for this performance counter</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_RawValue\" data-linktype=\"self-bookmark\">RawValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the raw, or uncalculated, value of this counter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance is in read-only mode.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_BeginInit\" data-linktype=\"self-bookmark\">BeginInit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins the initialization of a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance used on a form or by another component. The initialization occurs at runtime.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the performance counter and frees all the resources allocated by this performance counter instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_CloseSharedResources\" data-linktype=\"self-bookmark\">CloseSharedResources()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees the performance counter library shared state allocated by the counters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_Decrement\" data-linktype=\"self-bookmark\">Decrement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrements the associated performance counter by one through an efficient atomic operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_EndInit\" data-linktype=\"self-bookmark\">EndInit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends the initialization of a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance that is used on a form or by another component. The initialization occurs at runtime.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_Increment\" data-linktype=\"self-bookmark\">Increment()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increments the associated performance counter by one through an efficient atomic operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_IncrementBy_System_Int64_\" data-linktype=\"self-bookmark\">IncrementBy(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_NextSample\" data-linktype=\"self-bookmark\">NextSample()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains a counter sample, and returns the raw, or uncalculated, value for it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_NextValue\" data-linktype=\"self-bookmark\">NextValue()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains a counter sample and returns the calculated value for it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounter_RemoveInstance\" data-linktype=\"self-bookmark\">RemoveInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the category instance specified by the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> object <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceName*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class, without associating the instance with any system or custom performance counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> properties to empty strings (&quot;&quot;), and sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the local computer, (&quot;.&quot;).  </p>\n<p> This constructor does not initialize the performance counter, so it does not associate the instance with an existing counter on the local computer. To point to a specific performance counter, set the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and, optionally, the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties before reading any other properties or attempting to read from a counter. To write to a performance counter, set the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> attribute applied to this member has the following <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute#System_Security_Permissions_HostProtectionAttribute_Resources_\" data-linktype=\"relative-path\">Resources</a> property value: <a class=\"xref\" href=\"system.security.permissions.hostprotectionresource\" data-linktype=\"relative-path\">HostProtectionResource</a> &#124; <a class=\"xref\" href=\"system.security.permissions.hostprotectionresource\" data-linktype=\"relative-path\">HostProtectionResource</a>. The <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <a class=\"xref\" href=\"system.security.permissions.hostprotectionattribute\" data-linktype=\"relative-path\">HostProtectionAttribute</a> class or <a href=\"../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md\" data-linktype=\"relative-path\">SQL Server Programming and Host Protection Attributes</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a default instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class. After the instance is created, the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> property values are set, and the results of a call to the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextValue_\" data-linktype=\"relative-path\">NextValue</a> method are displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"PerfCounter#1\">\t\t\tPerformanceCounter PC=new PerformanceCounter();\n\t\t\tPC.CategoryName=&quot;Process&quot;;\n\t\t\tPC.CounterName=&quot;Private Bytes&quot;;\n\t\t\tPC.InstanceName=&quot;Explorer&quot;;\n\t\t\tMessageBox.Show(PC.NextValue().ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"PerfCounter#1\">      PerformanceCounter^ PC = gcnew PerformanceCounter;\n      PC-&gt;CategoryName = &quot;Process&quot;;\n      PC-&gt;CounterName = &quot;Private Bytes&quot;;\n      PC-&gt;InstanceName = &quot;Explorer&quot;;\n      MessageBox::Show( PC-&gt;NextValue().ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter#1\">        Dim PC As New PerformanceCounter()\n        PC.CategoryName = &quot;Process&quot;\n        PC.CounterName = &quot;Private Bytes&quot;\n        PC.InstanceName = &quot;Explorer&quot;\n        MessageBox.Show(PC.NextValue().ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter (string categoryName, string counterName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The category specified does not exist.  </p>\n<p> -or-  </p>\n<p> The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  </p>\n<p> -or-  </p>\n<p> <code>categoryName</code> and <code>counterName</code> have been localized into different languages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> or <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parameter strings are not case-sensitive.  </p>\n<p> Use this overload to access a counter on the local computer that belongs to a category containing a single performance counter category instance. If you attempt to use this constructor to point this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance to a category that contains multiple instances, the constructor throws an exception. This overload can access any read-only or read/write counter, but does so in a read-only mode. A <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance created using this overload cannot write to the counter, even if the counter itself is read/write.  </p>\n<p> This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a> properties to the values you pass in, sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the local computer, &quot;.&quot;, and sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> property to an empty string (&quot;&quot;).  </p>\n<p> This constructor initializes the performance counter and associates the instance with an existing counter (either a system or a custom counter) on the local computer. The values that you pass in for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a> properties must point to an existing performance counter on the local computer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only or read/write instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter (string categoryName, string counterName, bool readOnly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>readOnly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to access the counter in read-only mode (although the counter itself could be read/write); <code>false</code> to access the counter in read/write mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>counterName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The category specified does not exist. (if <code>readOnly</code> is <code>true</code>).  </p>\n<p> -or-  </p>\n<p> The category specified is not a .NET Framework custom category (if <code>readOnly</code> is <code>false</code>).  </p>\n<p> -or-  </p>\n<p> The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  </p>\n<p> -or-  </p>\n<p> <code>categoryName</code> and <code>counterName</code> have been localized into different languages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> or <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parameter strings are not case-sensitive.  </p>\n<p> Use this overload to access a read-only or read/write counter on the local computer that belongs to a category containing a single performance counter category instance. If you attempt to use this constructor to point this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance to a category that contains multiple instances, the constructor throws an exception.  </p>\n<p> This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> properties to the values you pass in, sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the local computer, &quot;.&quot;, and sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> property to an empty string (&quot;&quot;).  </p>\n<p> This constructor initializes the performance counter and associates the instance with an existing counter (either a system or a custom counter) on the local computer. The values that you pass in for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a> properties must point to an existing performance counter on the local computer. If the performance counter instance that you point to is not valid, calling the constructor throws an exception.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use this overload to connect to a system counter, but you cannot write to a system counter. Therefore, setting <code>readOnly</code> to <code>false</code> when connecting to a system counter causes the constructor to throw an exception.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class. The example passes in category names, counter names, and a flag value indicating that the counter is not read-only. This code example is part of a larger example for the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.AverageCounter64#2\">   PC = gcnew PerformanceCounter( &quot;AverageCounter64SampleCategory&quot;,&quot;AverageCounter64Sample&quot;,false );\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformanceCounterType.AverageCounter64#2\">        avgCounter64Sample = new PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, \n            &quot;AverageCounter64Sample&quot;, \n            false);\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.AverageCounter64#2\">        avgCounter64Sample = New PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, &quot;AverageCounter64Sample&quot;, False)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter (string categoryName, string counterName, string instanceName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The category specified is not valid.  </p>\n<p> -or-  </p>\n<p> The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  </p>\n<p> -or-  </p>\n<p> <code>instanceName</code> is longer than 127 characters.  </p>\n<p> -or-  </p>\n<p> <code>categoryName</code> and <code>counterName</code> have been localized into different languages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> or <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parameter strings are not case-sensitive.  </p>\n<p> This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> properties to the values you pass in, and sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the local computer, &quot;.&quot;.  </p>\n<p> This constructor initializes the performance counter and associates the instance with an existing counter (either a system or a custom counter) on the local computer. The values that you pass in for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> properties must point to an existing performance counter on the local computer. If the performance counter instance you point to is not valid, calling the constructor throws an exception.  </p>\n<p> This overload can access any read-only or read/write counter, but does so in a read-only mode. A <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance created using this overload cannot write to the counter, even if the counter itself is read/write.  </p>\n<p> To create a performance category instance, specify an <code>instanceName</code> on the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter__ctor_\" data-linktype=\"relative-path\">PerformanceCounter</a> constructor. If the category instance specified by <code>instanceName</code> already exists the new object will reference the existing category instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter(String,String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only or read/write instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>readOnly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to access a counter in read-only mode; <code>false</code> to access a counter in read/write mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The read/write permission setting requested is invalid for this counter.  </p>\n<p> -or-  </p>\n<p> The category specified does not exist (if <code>readOnly</code> is <code>true</code>).  </p>\n<p> -or-  </p>\n<p> The category specified is not a .NET Framework custom category (if <code>readOnly</code> is <code>false</code>).  </p>\n<p> -or-  </p>\n<p> The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  </p>\n<p> -or-  </p>\n<p> <code>instanceName</code> is longer than 127 characters.  </p>\n<p> -or-  </p>\n<p> <code>categoryName</code> and <code>counterName</code> have been localized into different languages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> or <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parameter strings are not case-sensitive.  </p>\n<p> Use this overload to access a performance counter in either read-only or read/write mode.  </p>\n<p> This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> properties to the values you pass in, it and sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the local computer, &quot;.&quot;.  </p>\n<p> This constructor initializes the performance counter and associates the instance with an existing counter (either a system or a custom counter) on the local computer. The values that you pass in for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> properties must point to an existing performance counter on the local computer. If the performance counter instance that you point to is not valid, calling the constructor throws an exception.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use this overload to connect to a system counter, but you cannot write to a system counter. Therefore, setting <code>readOnly</code> to <code>false</code> when connecting to a system counter causes the constructor to throw an exception.  </p>\n</div>\n<p> To create a performance category instance, specify an <code>instanceName</code> on the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter__ctor_\" data-linktype=\"relative-path\">PerformanceCounter</a> constructor. If the category instance specified by <code>instanceName</code> already exists the new object will reference the existing category instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter__ctor_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounter(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, read-only instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class and associates it with the specified system or custom performance counter and category instance, on the specified computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer on which the performance counter and its associated category exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The read/write permission setting requested is invalid for this counter.  </p>\n<p> -or-  </p>\n<p> The counter does not exist on the specified computer.  </p>\n<p> -or-  </p>\n<p> The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  </p>\n<p> -or-  </p>\n<p> <code>instanceName</code> is longer than 127 characters.  </p>\n<p> -or-  </p>\n<p> <code>categoryName</code> and <code>counterName</code> have been localized into different languages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>machineName</code> parameter is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> or <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The parameter strings are not case-sensitive.  </p>\n<p> This overload of the constructor sets the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties to the values you pass in.  </p>\n<p> This constructor initializes the performance counter and associates the instance with an existing counter (either a system or a custom counter) on the specified computer. The values that you pass in for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties must point to an existing performance counter. If the performance counter instance you point to is not valid, calling the constructor throws an exception. This overload can access any read-only or read/write counter, but does so in a read-only mode. A <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance created using this overload cannot write to the counter, even if the counter itself is read/write.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot write to remote performance counters. There is no overload that allows you to specify a read/write instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class that connects to a remote computer.  </p>\n</div>\n<p> To create a performance category instance, specify an <code>instanceName</code> on the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter__ctor_\" data-linktype=\"relative-path\">PerformanceCounter</a> constructor. If the category instance specified by <code>instanceName</code> already exists the new object will reference the existing category instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, when the remote computer is a member of a workgroup, you may need to disable UAC so that the local user account is not filtered and can be elevated to an administrator account. For security reasons, disabling UAC should be a last resort. For information on disabling UAC, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=91617\" data-linktype=\"external\">User Account Control and WMI</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_DefaultFileMappingSize\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultFileMappingSize</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int DefaultFileMappingSize;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_CategoryName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_CategoryName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CategoryName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the performance counter category for this performance counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CategoryName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the performance counter category (performance object) with which this performance counter is associated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The CategoryName is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CategoryName is displayed in the <code>Performance Object</code> field of Performance Counter Manager MMC snap in&#39;s <code>Add Counter</code> dialog box.  </p>\n<p> A performance counter monitors the behavior of a category, or performance object, on a computer. Categories include physical components (such as processors, disks, and memory) and system objects (such as processes and threads). System counters that are related to the same performance object are grouped into a category that indicates their common focus. When you create an instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class, you first indicate the category with which the component will interact, and then you choose a counter from that category.  </p>\n<p> For example, one Windows counter category is the Memory category. System counters within this category track memory data such as the number of bytes available and the number of bytes cached. If you wanted to work with the bytes cached in your application, you would create an instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> component, connect it to the Memory category, and then pick the appropriate counter (in this case, Cached Bytes) from that category.  </p>\n<p> Although your system makes many more counter categories available, the categories that you will probably interact with most frequently are the Cache, Memory, Objects, PhysicalDisk, Process, Processor, Server, System, and Thread categories.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a default instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class. After the instance is created, the CategoryName, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceName_\" data-linktype=\"relative-path\">InstanceName</a> property values are set, and the results of a call to the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextValue_\" data-linktype=\"relative-path\">NextValue</a> method are displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"PerfCounter#1\">\t\t\tPerformanceCounter PC=new PerformanceCounter();\n\t\t\tPC.CategoryName=&quot;Process&quot;;\n\t\t\tPC.CounterName=&quot;Private Bytes&quot;;\n\t\t\tPC.InstanceName=&quot;Explorer&quot;;\n\t\t\tMessageBox.Show(PC.NextValue().ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"PerfCounter#1\">      PerformanceCounter^ PC = gcnew PerformanceCounter;\n      PC-&gt;CategoryName = &quot;Process&quot;;\n      PC-&gt;CounterName = &quot;Private Bytes&quot;;\n      PC-&gt;InstanceName = &quot;Explorer&quot;;\n      MessageBox::Show( PC-&gt;NextValue().ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter#1\">        Dim PC As New PerformanceCounter()\n        PC.CategoryName = &quot;Process&quot;\n        PC.CounterName = &quot;Private Bytes&quot;\n        PC.InstanceName = &quot;Explorer&quot;\n        MessageBox.Show(PC.NextValue().ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_CounterHelp\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_CounterHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterHelp</div>        \r\n          </div>\r\n    \r\n            <p>Gets the description for this performance counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CounterHelp { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A description of the item or quantity that this performance counter measures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance is not associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Add Counters dialog box of the Performance Counter Manager MMC snap in displays the CounterHelp text when a user selects a counter from the counters list and clicks the Explain button.  </p>\n<p> When you create a new counter, use the CounterHelp text to describe what the counter monitors do so the user can determine whether to add the counter to the System Monitor&#39;s display.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_CounterName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_CounterName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the performance counter that is associated with this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CounterName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the counter, which generally describes the quantity being counted. This name is displayed in the list of counters of the Performance Counter Manager MMC snap in&#39;s Add Counters dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The CounterName is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can get a list of available pre-existing counters from the Windows Performance Managerâ€™s <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=257854\" data-linktype=\"external\">Add Counters dialog box</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to set the CounterName property to a typical counter name.  </p>\n<pre><code class=\"lang-cs\" name=\"PerfCounter#1\">\t\t\tPerformanceCounter PC=new PerformanceCounter();\n\t\t\tPC.CategoryName=&quot;Process&quot;;\n\t\t\tPC.CounterName=&quot;Private Bytes&quot;;\n\t\t\tPC.InstanceName=&quot;Explorer&quot;;\n\t\t\tMessageBox.Show(PC.NextValue().ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"PerfCounter#1\">      PerformanceCounter^ PC = gcnew PerformanceCounter;\n      PC-&gt;CategoryName = &quot;Process&quot;;\n      PC-&gt;CounterName = &quot;Private Bytes&quot;;\n      PC-&gt;InstanceName = &quot;Explorer&quot;;\n      MessageBox::Show( PC-&gt;NextValue().ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter#1\">        Dim PC As New PerformanceCounter()\n        PC.CategoryName = &quot;Process&quot;\n        PC.CounterName = &quot;Private Bytes&quot;\n        PC.InstanceName = &quot;Explorer&quot;\n        MessageBox.Show(PC.NextValue().ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_CounterType\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_CounterType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the counter type of the associated performance counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounterType CounterType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> that describes both how the counter interacts with a monitoring application and the nature of the values it contains (for example, calculated or uncalculated).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> enumeration contains the types of performance counters that you can interact with. Some of the counter types represent calculated values, such as the average of the counter measurements the system has taken. Other types represent raw, or uncalculated, values. The following table shows the counter types that you will interact with most frequently.  </p>\n<table>\n<thead>\n<tr>\n<th>Counter&#39;s Responsibility</th>\n<th>PerformanceCounterType Value</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Maintain a simple count of items or operations.</td>\n<td><code>NumberOfItems32</code></td>\n<td>Tracking the number of orders received as a 32-bit integer.</td>\n</tr>\n<tr>\n<td>Maintain a higher-capacity simple count.</td>\n<td><code>NumberOfItems64</code></td>\n<td>Tracking the number of orders for a site with very high volume, stored as a 64-bit integer.</td>\n</tr>\n<tr>\n<td>Track the number of items or operations per second.</td>\n<td><code>RateOfCountsPerSecond32</code></td>\n<td>Tracking orders received per second on a site.</td>\n</tr>\n<tr>\n<td>Track a higher-capacity number of items or operations per second.</td>\n<td><code>RateOfCountsPerSecond64</code></td>\n<td>Tracking orders received per second on a site with very high volume.</td>\n</tr>\n<tr>\n<td>Calculate the average time to perform a process or to process an item</td>\n<td><code>AverageTimer32</code></td>\n<td>Calculate the average time an order takes to be processed.</td>\n</tr>\n</tbody>\n</table>\n<p> When you create a counter whose type requires the use of a corresponding base counter, you must declare the counter and the base in the <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> you pass into the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_Create_\" data-linktype=\"relative-path\">Create</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_InstanceLifetime\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_InstanceLifetime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceLifetime</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the lifetime of a process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> values. The default is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value set is not a member of the <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> enumeration.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>InstanceLifetime is set after the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> has been initialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the performance counter category is created with the .NET Framework version 1.0 or 1.1, it uses global shared memory, and the value for InstanceLifetime must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value of the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterType_\" data-linktype=\"relative-path\">CounterType</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>, the InstanceLifetime value for the performance counter must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_InstanceName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_InstanceName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an instance name for this performance counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InstanceName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the performance counter category instance, or an empty string (&quot;&quot;), if the counter is a single-instance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> Instance names must be shorter than 128 characters in length.  </p>\n</div>\n<p> In some situations, categories are subdivided into instances, which track data about multiple occurrences of the object that a category relates to. Instances apply to the category as whole, rather than to individual counters. Every counter within a category has each instance defined for the category. For example, the Process category contains instances named Idle and System. Every counter within the Process category thus contains data for each instance, showing information about either idle processes or system processes.  </p>\n<p> Many categories do not contain multiple instances, so you can leave this property empty to indicate that no instance is associated with the category.  </p>\n<p> If this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance points to a noncustom category, you can choose from only the existing category instances. You can create new category instances only in custom categories, which allow you to define as many counters and category instances as you need.  </p>\n<p> To create a performance category instance, specify an <code>instanceName</code> on the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter__ctor_\" data-linktype=\"relative-path\">PerformanceCounter</a> constructor. If the category instance specified by <code>instanceName</code> already exists the new object will reference the existing category instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Do not use the characters &quot;(&quot;, &quot;)&quot;, &quot;#&quot;, &quot;\\&quot;, or &quot;/&quot; in the instance name. If any of these characters are used, the Performance Console (see <a href=\"../Topic/Runtime%20Profiling.md\" data-linktype=\"relative-path\">Runtime Profiling</a>) may not correctly display the instance values.  </p>\n</div>\n<p> If the instance name is automatically generated and might contain the characters &quot;(&quot;, &quot;)&quot;, &quot;#&quot;, &quot;\\&quot;, or &quot;/&quot;, use the character mapping in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Character</th>\n<th>Mapped character</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>(</td>\n<td>[</td>\n</tr>\n<tr>\n<td>)</td>\n<td>]</td>\n</tr>\n<tr>\n<td>#</td>\n<td>_</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>_</td>\n</tr>\n<tr>\n<td>/</td>\n<td>_</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.appdomain#System_AppDomain_FriendlyName_\" data-linktype=\"relative-path\">FriendlyName</a> property of the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> object obtained from the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_CurrentDomain_\" data-linktype=\"relative-path\">CurrentDomain</a> property is a common source of instance names that can contain invalid characters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a default instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class. After the instance is created, the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_CounterName_\" data-linktype=\"relative-path\">CounterName</a>, and InstanceName property values are set, and the results of a call to the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextValue_\" data-linktype=\"relative-path\">NextValue</a> method are displayed.  </p>\n<pre><code class=\"lang-cs\" name=\"PerfCounter#1\">\t\t\tPerformanceCounter PC=new PerformanceCounter();\n\t\t\tPC.CategoryName=&quot;Process&quot;;\n\t\t\tPC.CounterName=&quot;Private Bytes&quot;;\n\t\t\tPC.InstanceName=&quot;Explorer&quot;;\n\t\t\tMessageBox.Show(PC.NextValue().ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"PerfCounter#1\">      PerformanceCounter^ PC = gcnew PerformanceCounter;\n      PC-&gt;CategoryName = &quot;Process&quot;;\n      PC-&gt;CounterName = &quot;Private Bytes&quot;;\n      PC-&gt;InstanceName = &quot;Explorer&quot;;\n      MessageBox::Show( PC-&gt;NextValue().ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter#1\">        Dim PC As New PerformanceCounter()\n        PC.CategoryName = &quot;Process&quot;\n        PC.CounterName = &quot;Private Bytes&quot;\n        PC.InstanceName = &quot;Explorer&quot;\n        MessageBox.Show(PC.NextValue().ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_MachineName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_MachineName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MachineName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the computer name for this performance counter</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MachineName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The server on which the performance counter and its associated category reside.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The MachineName format is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can write values only to counters that reside on the local computer. However, you can read counter values from any computer in the enterprise for which you have access privileges.  </p>\n<p> When you set the MachineName property to point to a remote computer, the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance attempts to open the counter on that computer. If the counter does not exist, setting this property throws an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_RawValue\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_RawValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RawValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the raw, or uncalculated, value of this counter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long RawValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The raw value of the counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>You are trying to set the counter&#39;s raw value, but the counter is read-only.  </p>\n<p> -or-  </p>\n<p> The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the counter type is a 32-bit size and you attempt to set this property to a value that is too large to fit, the property truncates the value to 32 bits. When reading custom counters on the local computer, using the RawValue property rather than a calculated value can produce significantly better performance in scenarios where the raw value is sufficient.  </p>\n<p> If the counter that you are reading is read-only, getting the RawValue property samples the counter at the time that the property is called. This action is equivalent to making an initial call to the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextSample_\" data-linktype=\"relative-path\">NextSample</a> method. If you subsequently call <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_NextSample_\" data-linktype=\"relative-path\">NextSample</a>, you can perform calculations on the values that both calls returned.  </p>\n<p> Because system counters are read-only, you can get but not set their raw values.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Increment_\" data-linktype=\"relative-path\">Increment</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_IncrementBy_\" data-linktype=\"relative-path\">IncrementBy</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Decrement_\" data-linktype=\"relative-path\">Decrement</a> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the RawValue property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a> class to display the value of the RawValue property for a counter.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.AverageCounter64#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Collections::Specialized;\nusing namespace System::Diagnostics;\n\n// Output information about the counter sample.\nvoid OutputSample( CounterSample s )\n{\n   Console::WriteLine( &quot;\\r<br>+++++++++++&quot; );\n   Console::WriteLine( &quot;Sample values - \\r<br>&quot; );\n   Console::WriteLine( &quot;   BaseValue        = {0}&quot;, s.BaseValue );\n   Console::WriteLine( &quot;   CounterFrequency = {0}&quot;, s.CounterFrequency );\n   Console::WriteLine( &quot;   CounterTimeStamp = {0}&quot;, s.CounterTimeStamp );\n   Console::WriteLine( &quot;   CounterType      = {0}&quot;, s.CounterType );\n   Console::WriteLine( &quot;   RawValue         = {0}&quot;, s.RawValue );\n   Console::WriteLine( &quot;   SystemFrequency  = {0}&quot;, s.SystemFrequency );\n   Console::WriteLine( &quot;   TimeStamp        = {0}&quot;, s.TimeStamp );\n   Console::WriteLine( &quot;   TimeStamp100nSec = {0}&quot;, s.TimeStamp100nSec );\n   Console::WriteLine( &quot;++++++++++++++++++++++&quot; );\n}\n\n//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n//    Description - This counter type shows how many items are processed, on average,\n//        during an operation. Counters of this type display a ratio of the items \n//        processed (such as bytes sent) to the number of operations completed. The  \n//        ratio is calculated by comparing the number of items processed during the \n//        last interval to the number of operations completed during the last interval. \n// Generic type - Average\n//      Formula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n//        of items processed during the last sample interval and the denominator (D) \n//        represents the number of operations completed during the last two sample \n//        intervals. \n//    Average (Nx - N0) / (Dx - D0)  \n//    Example PhysicalDisk\\ Avg. Disk Bytes/Transfer \n//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\nfloat MyComputeCounterValue( CounterSample s0, CounterSample s1 )\n{\n   float numerator = (float)s1.RawValue - (float)s0.RawValue;\n   float denomenator = (float)s1.BaseValue - (float)s0.BaseValue;\n   float counterValue = numerator / denomenator;\n   return counterValue;\n}\n\nbool SetupCategory()\n{\n   if (  !PerformanceCounterCategory::Exists( &quot;AverageCounter64SampleCategory&quot; ) )\n   {\n      CounterCreationDataCollection^ CCDC = gcnew CounterCreationDataCollection;\n      \n      // Add the counter.\n      CounterCreationData^ averageCount64 = gcnew CounterCreationData;\n      averageCount64-&gt;CounterType = PerformanceCounterType::AverageCount64;\n      averageCount64-&gt;CounterName = &quot;AverageCounter64Sample&quot;;\n      CCDC-&gt;Add( averageCount64 );\n      \n      // Add the base counter.\n      CounterCreationData^ averageCount64Base = gcnew CounterCreationData;\n      averageCount64Base-&gt;CounterType = PerformanceCounterType::AverageBase;\n      averageCount64Base-&gt;CounterName = &quot;AverageCounter64SampleBase&quot;;\n      CCDC-&gt;Add( averageCount64Base );\n      \n      // Create the category.\n      PerformanceCounterCategory::Create( &quot;AverageCounter64SampleCategory&quot;, &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;, CCDC );\n      return (true);\n   }\n   else\n   {\n      Console::WriteLine( &quot;Category exists - AverageCounter64SampleCategory&quot; );\n      return (false);\n   }\n}\n\nvoid CreateCounters( PerformanceCounter^% PC, PerformanceCounter^% BPC )\n{\n   \n   // Create the counters.\n   PC = gcnew PerformanceCounter( &quot;AverageCounter64SampleCategory&quot;,&quot;AverageCounter64Sample&quot;,false );\n\n   BPC = gcnew PerformanceCounter( &quot;AverageCounter64SampleCategory&quot;,&quot;AverageCounter64SampleBase&quot;,false );\n   PC-&gt;RawValue = 0;\n   BPC-&gt;RawValue = 0;\n}\nvoid CollectSamples( ArrayList^ samplesList, PerformanceCounter^ PC, PerformanceCounter^ BPC )\n{\n   Random^ r = gcnew Random( DateTime::Now.Millisecond );\n\n   // Loop for the samples.\n   for ( int j = 0; j &lt; 100; j++ )\n   {\n      int value = r-&gt;Next( 1, 10 );\n      Console::Write( &quot;{0} = {1}&quot;, j, value );\n      PC-&gt;IncrementBy( value );\n      BPC-&gt;Increment();\n      if ( (j % 10) == 9 )\n      {\n         OutputSample( PC-&gt;NextSample() );\n         samplesList-&gt;Add( PC-&gt;NextSample() );\n      }\n      else\n            Console::WriteLine();\n      System::Threading::Thread::Sleep( 50 );\n   }\n}\n\nvoid CalculateResults( ArrayList^ samplesList )\n{\n   for ( int i = 0; i &lt; (samplesList-&gt;Count - 1); i++ )\n   {\n      // Output the sample.\n      OutputSample(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]) );\n      OutputSample(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) );\n      \n      // Use .NET to calculate the counter value.\n      Console::WriteLine( &quot;.NET computed counter value = {0}&quot;, CounterSampleCalculator::ComputeCounterValue(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]),  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) ) );\n      \n      // Calculate the counter value manually.\n      Console::WriteLine( &quot;My computed counter value = {0}&quot;, MyComputeCounterValue(  *safe_cast&lt;CounterSample^&gt;(samplesList[ i ]),  *safe_cast&lt;CounterSample^&gt;(samplesList[ i + 1 ]) ) );\n   }\n}\n\nint main()\n{\n   ArrayList^ samplesList = gcnew ArrayList;\n   PerformanceCounter^ PC;\n   PerformanceCounter^ BPC;\n   SetupCategory();\n   CreateCounters( PC, BPC );\n   CollectSamples( samplesList, PC, BPC );\n   CalculateResults( samplesList );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformanceCounterType.AverageCounter64#1\">\nusing System;\nusing System.Collections;\nusing System.Collections.Specialized;\nusing System.Diagnostics;\n\npublic class App {\n\n    private static PerformanceCounter avgCounter64Sample;\n    private static PerformanceCounter avgCounter64SampleBase;\n\n    public static void Main()\n    {\n    \n        ArrayList samplesList = new ArrayList();\n\n        // If the category does not exist, create the category and exit.\n        // Performance counters should not be created and immediately used.\n        // There is a latency time to enable the counters, they should be created\n        // prior to executing the application that uses the counters.\n        // Execute this sample a second time to use the category.\n        if (SetupCategory())\n            return;\n        CreateCounters();\n        CollectSamples(samplesList);\n        CalculateResults(samplesList);\n\n    }\n\n    private static bool SetupCategory()\n    {\n        if ( !PerformanceCounterCategory.Exists(&quot;AverageCounter64SampleCategory&quot;) ) \n        {\n\n            CounterCreationDataCollection counterDataCollection = new CounterCreationDataCollection();\n\n            // Add the counter.\n            CounterCreationData averageCount64 = new CounterCreationData();\n            averageCount64.CounterType = PerformanceCounterType.AverageCount64;\n            averageCount64.CounterName = &quot;AverageCounter64Sample&quot;;\n            counterDataCollection.Add(averageCount64);\n\n            // Add the base counter.\n            CounterCreationData averageCount64Base = new CounterCreationData();\n            averageCount64Base.CounterType = PerformanceCounterType.AverageBase;\n            averageCount64Base.CounterName = &quot;AverageCounter64SampleBase&quot;;\n            counterDataCollection.Add(averageCount64Base);\n\n            // Create the category.\n            PerformanceCounterCategory.Create(&quot;AverageCounter64SampleCategory&quot;,\n                &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;,\n                PerformanceCounterCategoryType.SingleInstance, counterDataCollection);\n\n            return(true);\n        }\n        else\n        {\n            Console.WriteLine(&quot;Category exists - AverageCounter64SampleCategory&quot;);\n            return(false);\n        }\n    }\n\n    private static void CreateCounters()\n    {\n        // Create the counters.\n\n        avgCounter64Sample = new PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, \n            &quot;AverageCounter64Sample&quot;, \n            false);\n\n\n        avgCounter64SampleBase = new PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, \n            &quot;AverageCounter64SampleBase&quot;, \n            false);\n\n        avgCounter64Sample.RawValue=0;\n        avgCounter64SampleBase.RawValue=0;\n    }\n    private static void CollectSamples(ArrayList samplesList)\n    {\n\n        Random r = new Random( DateTime.Now.Millisecond );\n\n        // Loop for the samples.\n        for (int j = 0; j &lt; 100; j++) \n        {\n\n            int value = r.Next(1, 10);\n            Console.Write(j + &quot; = &quot; + value);\n\n            avgCounter64Sample.IncrementBy(value);\n\n            avgCounter64SampleBase.Increment();\n\n            if ((j % 10) == 9) \n            {\n                OutputSample(avgCounter64Sample.NextSample());\n                samplesList.Add( avgCounter64Sample.NextSample() );\n            }\n            else\n                Console.WriteLine();\n\n            System.Threading.Thread.Sleep(50);\n        }\n\n    }\n\n    private static void CalculateResults(ArrayList samplesList)\n    {\n        for(int i = 0; i &lt; (samplesList.Count - 1); i++)\n        {\n            // Output the sample.\n            OutputSample( (CounterSample)samplesList[i] );\n            OutputSample( (CounterSample)samplesList[i+1] );\n\n            // Use .NET to calculate the counter value.\n            Console.WriteLine(&quot;.NET computed counter value = &quot; +\n                CounterSampleCalculator.ComputeCounterValue((CounterSample)samplesList[i],\n                (CounterSample)samplesList[i+1]) );\n\n            // Calculate the counter value manually.\n            Console.WriteLine(&quot;My computed counter value = &quot; + \n                MyComputeCounterValue((CounterSample)samplesList[i],\n                (CounterSample)samplesList[i+1]) );\n\n        }\n    }\n\n    //++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    //    Description - This counter type shows how many items are processed, on average,\n    //        during an operation. Counters of this type display a ratio of the items \n    //        processed (such as bytes sent) to the number of operations completed. The  \n    //        ratio is calculated by comparing the number of items processed during the \n    //        last interval to the number of operations completed during the last interval. \n    // Generic type - Average\n    //      Formula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n    //        of items processed during the last sample interval and the denominator (D) \n    //        represents the number of operations completed during the last two sample \n    //        intervals. \n    //    Average (Nx - N0) / (Dx - D0)  \n    //    Example PhysicalDisk\\ Avg. Disk Bytes/Transfer \n    //++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    private static Single MyComputeCounterValue(CounterSample s0, CounterSample s1)\n    {\n        Single numerator = (Single)s1.RawValue - (Single)s0.RawValue;\n        Single denomenator = (Single)s1.BaseValue - (Single)s0.BaseValue;\n        Single counterValue = numerator / denomenator;\n        return(counterValue);\n    }\n\n    // Output information about the counter sample.\n    private static void OutputSample(CounterSample s)\n    {\n        Console.WriteLine(&quot;\\r<br>+++++++++++&quot;);\n        Console.WriteLine(&quot;Sample values - \\r<br>&quot;);\n        Console.WriteLine(&quot;   BaseValue        = &quot; + s.BaseValue);\n        Console.WriteLine(&quot;   CounterFrequency = &quot; + s.CounterFrequency);\n        Console.WriteLine(&quot;   CounterTimeStamp = &quot; + s.CounterTimeStamp);\n        Console.WriteLine(&quot;   CounterType      = &quot; + s.CounterType);\n        Console.WriteLine(&quot;   RawValue         = &quot; + s.RawValue);\n        Console.WriteLine(&quot;   SystemFrequency  = &quot; + s.SystemFrequency);\n        Console.WriteLine(&quot;   TimeStamp        = &quot; + s.TimeStamp);\n        Console.WriteLine(&quot;   TimeStamp100nSec = &quot; + s.TimeStamp100nSec);\n        Console.WriteLine(&quot;++++++++++++++++++++++&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.AverageCounter64#1\">Imports System\nImports System.Collections\nImports System.Collections.Specialized\nImports System.Diagnostics\n\n _\n\nPublic Class App\n\n    Private Shared avgCounter64Sample As PerformanceCounter\n    Private Shared avgCounter64SampleBase As PerformanceCounter\n\n\n    Public Shared Sub Main()\n\n        Dim samplesList As New ArrayList()\n        &#39;If the category does not exist, create the category and exit.\n        &#39;Performance counters should not be created and immediately used.\n        &#39;There is a latency time to enable the counters, they should be created\n        &#39;prior to executing the application that uses the counters.\n        &#39;Execute this sample a second time to use the counters.\n        If Not (SetupCategory()) Then\n            CreateCounters()\n            CollectSamples(samplesList)\n            CalculateResults(samplesList)\n        End If\n\n    End Sub &#39;Main\n\n    Private Shared Function SetupCategory() As Boolean\n        If Not PerformanceCounterCategory.Exists(&quot;AverageCounter64SampleCategory&quot;) Then\n\n            Dim counterDataCollection As New CounterCreationDataCollection()\n\n            &#39; Add the counter.\n            Dim averageCount64 As New CounterCreationData()\n            averageCount64.CounterType = PerformanceCounterType.AverageCount64\n            averageCount64.CounterName = &quot;AverageCounter64Sample&quot;\n            counterDataCollection.Add(averageCount64)\n\n            &#39; Add the base counter.\n            Dim averageCount64Base As New CounterCreationData()\n            averageCount64Base.CounterType = PerformanceCounterType.AverageBase\n            averageCount64Base.CounterName = &quot;AverageCounter64SampleBase&quot;\n            counterDataCollection.Add(averageCount64Base)\n\n            &#39; Create the category.\n            PerformanceCounterCategory.Create(&quot;AverageCounter64SampleCategory&quot;, _\n               &quot;Demonstrates usage of the AverageCounter64 performance counter type.&quot;, _\n                      PerformanceCounterCategoryType.SingleInstance, counterDataCollection)\n\n            Return True\n        Else\n            Console.WriteLine(&quot;Category exists - AverageCounter64SampleCategory&quot;)\n            Return False\n        End If\n    End Function &#39;SetupCategory\n\n    Private Shared Sub CreateCounters()\n        &#39; Create the counters.\n\n        avgCounter64Sample = New PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, &quot;AverageCounter64Sample&quot;, False)\n\n        avgCounter64SampleBase = New PerformanceCounter(&quot;AverageCounter64SampleCategory&quot;, &quot;AverageCounter64SampleBase&quot;, False)\n\n        avgCounter64Sample.RawValue = 0\n        avgCounter64SampleBase.RawValue = 0\n    End Sub &#39;CreateCounters\n\n    Private Shared Sub CollectSamples(ByVal samplesList As ArrayList)\n\n        Dim r As New Random(DateTime.Now.Millisecond)\n\n        &#39; Loop for the samples.\n        Dim j As Integer\n        For j = 0 To 99\n\n            Dim value As Integer = r.Next(1, 10)\n            Console.Write(j.ToString() + &quot; = &quot; + value.ToString())\n\n            avgCounter64Sample.IncrementBy(value)\n\n            avgCounter64SampleBase.Increment()\n\n            If j Mod 10 = 9 Then\n                OutputSample(avgCounter64Sample.NextSample())\n                samplesList.Add(avgCounter64Sample.NextSample())\n            Else\n                Console.WriteLine()\n            End If\n            System.Threading.Thread.Sleep(50)\n        Next j\n    End Sub &#39;CollectSamples\n\n    Private Shared Sub CalculateResults(ByVal samplesList As ArrayList)\n        Dim i As Integer\n        For i = 0 To (samplesList.Count - 1) - 1\n            &#39; Output the sample.\n            OutputSample(CType(samplesList(i), CounterSample))\n            OutputSample(CType(samplesList((i + 1)), CounterSample))\n\n            &#39; Use .NET to calculate the counter value.\n            Console.WriteLine(&quot;.NET computed counter value = &quot; + CounterSampleCalculator.ComputeCounterValue(CType(samplesList(i), CounterSample), CType(samplesList((i + 1)), CounterSample)).ToString())\n\n            &#39; Calculate the counter value manually.\n            Console.WriteLine(&quot;My computed counter value = &quot; + MyComputeCounterValue(CType(samplesList(i), CounterSample), CType(samplesList((i + 1)), CounterSample)).ToString())\n        Next i\n    End Sub &#39;CalculateResults\n\n    &#39;++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    &#39;\tDescription - This counter type shows how many items are processed, on average,\n    &#39;\t\tduring an operation. Counters of this type display a ratio of the items \n    &#39;\t\tprocessed (such as bytes sent) to the number of operations completed. The  \n    &#39;\t\tratio is calculated by comparing the number of items processed during the \n    &#39;\t\tlast interval to the number of operations completed during the last interval. \n    &#39; Generic type - Average\n    &#39;  \tFormula - (N1 - N0) / (D1 - D0), where the numerator (N) represents the number \n    &#39;\t\tof items processed during the last sample interval and the denominator (D) \n    &#39;\t\trepresents the number of operations completed during the last two sample \n    &#39;\t\tintervals. \n    &#39;\tAverage (Nx - N0) / (Dx - D0)  \n    &#39;\tExample PhysicalDisk\\ Avg. Disk Bytes/Transfer \n    &#39;++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++//++++++++\n    Private Shared Function MyComputeCounterValue(ByVal s0 As CounterSample, ByVal s1 As CounterSample) As [Single]\n        Dim numerator As [Single] = CType(s1.RawValue, [Single]) - CType(s0.RawValue, [Single])\n        Dim denomenator As [Single] = CType(s1.BaseValue, [Single]) - CType(s0.BaseValue, [Single])\n        Dim counterValue As [Single] = numerator / denomenator\n        Return counterValue\n    End Function &#39;MyComputeCounterValue\n\n    &#39; Output information about the counter sample.\n    Private Shared Sub OutputSample(ByVal s As CounterSample)\n        Console.WriteLine(ControlChars.Lf + ControlChars.Cr + &quot;+++++++++++&quot;)\n        Console.WriteLine(&quot;Sample values - &quot; + ControlChars.Lf + ControlChars.Cr)\n        Console.WriteLine((&quot;   BaseValue        = &quot; + s.BaseValue.ToString()))\n        Console.WriteLine((&quot;   CounterFrequency = &quot; + s.CounterFrequency.ToString()))\n        Console.WriteLine((&quot;   CounterTimeStamp = &quot; + s.CounterTimeStamp.ToString()))\n        Console.WriteLine((&quot;   CounterType      = &quot; + s.CounterType.ToString()))\n        Console.WriteLine((&quot;   RawValue         = &quot; + s.RawValue.ToString()))\n        Console.WriteLine((&quot;   SystemFrequency  = &quot; + s.SystemFrequency.ToString()))\n        Console.WriteLine((&quot;   TimeStamp        = &quot; + s.TimeStamp.ToString()))\n        Console.WriteLine((&quot;   TimeStamp100nSec = &quot; + s.TimeStamp100nSec.ToString()))\n        Console.WriteLine(&quot;++++++++++++++++++++++&quot;)\n    End Sub &#39;OutputSample\nEnd Class &#39;App\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_ReadOnly\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance is in read-only mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance is in read-only mode (even if the counter itself is a custom .NET Framework counter); <code>false</code> if it is in read/write mode. The default is the value set by the constructor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a system counter, ReadOnly should always <code>true</code>. You cannot write to a system counter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_BeginInit\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_BeginInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInit()</div>        \r\n          </div>\r\n    \r\n            <p>Begins the initialization of a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance used on a form or by another component. The initialization occurs at runtime.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void BeginInit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvslong-md.md&quot; -->Visual Studio 2005<!--END INCLUDE --> design environment uses this method to start the initialization of a component that is used on a form or by another component. The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method ends the initialization. Using the BeginInit and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_EndInit_\" data-linktype=\"relative-path\">EndInit</a> methods prevents the component from being used before it is fully initialized.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_Close\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the performance counter and frees all the resources allocated by this performance counter instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you associate this <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance with a performance counter that resides on the server, the system initializes the instance and allocates memory to contain counter sample information. The Close method frees the resources allocated by the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_CloseSharedResources\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_CloseSharedResources_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloseSharedResources()</div>        \r\n          </div>\r\n    \r\n            <p>Frees the performance counter library shared state allocated by the counters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void CloseSharedResources ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_Decrement\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_Decrement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Decrement()</div>        \r\n          </div>\r\n    \r\n            <p>Decrements the associated performance counter by one through an efficient atomic operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long Decrement ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The decremented counter value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The counter is read-only, so the application cannot decrement it.  </p>\n<p> -or-  </p>\n<p> The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can write only to custom counters. All system counters are read-only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Increment_\" data-linktype=\"relative-path\">Increment</a>, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_IncrementBy_\" data-linktype=\"relative-path\">IncrementBy</a>, and Decrement methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RawValue_\" data-linktype=\"relative-path\">RawValue</a> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_EndInit\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_EndInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndInit()</div>        \r\n          </div>\r\n    \r\n            <p>Ends the initialization of a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance that is used on a form or by another component. The initialization occurs at runtime.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndInit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvslong-md.md&quot; -->Visual Studio 2005<!--END INCLUDE --> design environment uses this method to end the initialization of a component that is used on a form or by another component. The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method starts the initialization. Using the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and EndInit methods prevents the component from being used before it is fully initialized.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_Increment\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_Increment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Increment()</div>        \r\n          </div>\r\n    \r\n            <p>Increments the associated performance counter by one through an efficient atomic operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long Increment ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The incremented counter value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The counter is read-only, so the application cannot increment it.  </p>\n<p> -or-  </p>\n<p> The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can write only to custom counters. All system counters are read-only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Increment, <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_IncrementBy_\" data-linktype=\"relative-path\">IncrementBy</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Decrement_\" data-linktype=\"relative-path\">Decrement</a> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RawValue_\" data-linktype=\"relative-path\">RawValue</a> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_IncrementBy_System_Int64_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_IncrementBy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IncrementBy(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long IncrementBy (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to increment by. (A negative value decrements the counter.)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The new counter value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The counter is read-only, so the application cannot increment it.  </p>\n<p> -or-  </p>\n<p> The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can write only to custom counters. All system counters are read-only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Increment_\" data-linktype=\"relative-path\">Increment</a>, IncrementBy, and <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_Decrement_\" data-linktype=\"relative-path\">Decrement</a> methods use interlocks to update the counter value. This helps keep the counter value accurate in multithreaded or multiprocess scenarios, but also results in a performance penalty. If you do not need the accuracy that interlocked operations provide, you can update the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RawValue_\" data-linktype=\"relative-path\">RawValue</a> property directly for up to a 5 times performance improvement.  However, in multithreaded scenarios, some updates to the counter value might be ignored, resulting in inaccurate data.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value forthe <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the IncrementBy method to add increments to a counter. This code example is part of a larger example for the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.AverageCounter64#3\">void CollectSamples( ArrayList^ samplesList, PerformanceCounter^ PC, PerformanceCounter^ BPC )\n{\n   Random^ r = gcnew Random( DateTime::Now.Millisecond );\n\n   // Loop for the samples.\n   for ( int j = 0; j &lt; 100; j++ )\n   {\n      int value = r-&gt;Next( 1, 10 );\n      Console::Write( &quot;{0} = {1}&quot;, j, value );\n      PC-&gt;IncrementBy( value );\n      BPC-&gt;Increment();\n      if ( (j % 10) == 9 )\n      {\n         OutputSample( PC-&gt;NextSample() );\n         samplesList-&gt;Add( PC-&gt;NextSample() );\n      }\n      else\n            Console::WriteLine();\n      System::Threading::Thread::Sleep( 50 );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformanceCounterType.AverageCounter64#3\">    private static void CollectSamples(ArrayList samplesList)\n    {\n\n        Random r = new Random( DateTime.Now.Millisecond );\n\n        // Loop for the samples.\n        for (int j = 0; j &lt; 100; j++) \n        {\n\n            int value = r.Next(1, 10);\n            Console.Write(j + &quot; = &quot; + value);\n\n            avgCounter64Sample.IncrementBy(value);\n\n            avgCounter64SampleBase.Increment();\n\n            if ((j % 10) == 9) \n            {\n                OutputSample(avgCounter64Sample.NextSample());\n                samplesList.Add( avgCounter64Sample.NextSample() );\n            }\n            else\n                Console.WriteLine();\n\n            System.Threading.Thread.Sleep(50);\n        }\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.AverageCounter64#3\">    Private Shared Sub CollectSamples(ByVal samplesList As ArrayList)\n\n        Dim r As New Random(DateTime.Now.Millisecond)\n\n        &#39; Loop for the samples.\n        Dim j As Integer\n        For j = 0 To 99\n\n            Dim value As Integer = r.Next(1, 10)\n            Console.Write(j.ToString() + &quot; = &quot; + value.ToString())\n\n            avgCounter64Sample.IncrementBy(value)\n\n            avgCounter64SampleBase.Increment()\n\n            If j Mod 10 = 9 Then\n                OutputSample(avgCounter64Sample.NextSample())\n                samplesList.Add(avgCounter64Sample.NextSample())\n            Else\n                Console.WriteLine()\n            End If\n            System.Threading.Thread.Sleep(50)\n        Next j\n    End Sub &#39;CollectSamples\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_NextSample\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_NextSample_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NextSample()</div>        \r\n          </div>\r\n    \r\n            <p>Obtains a counter sample, and returns the raw, or uncalculated, value for it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.CounterSample NextSample ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.countersample\" data-linktype=\"relative-path\">CounterSample</a> that represents the next raw value that the system obtains for this counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is generally used for counters that contain uncalculated values.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the NextSample method to obtain the next uncalculated value of a counter. This code example is part of a larger example for the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.AverageCounter64#3\">void CollectSamples( ArrayList^ samplesList, PerformanceCounter^ PC, PerformanceCounter^ BPC )\n{\n   Random^ r = gcnew Random( DateTime::Now.Millisecond );\n\n   // Loop for the samples.\n   for ( int j = 0; j &lt; 100; j++ )\n   {\n      int value = r-&gt;Next( 1, 10 );\n      Console::Write( &quot;{0} = {1}&quot;, j, value );\n      PC-&gt;IncrementBy( value );\n      BPC-&gt;Increment();\n      if ( (j % 10) == 9 )\n      {\n         OutputSample( PC-&gt;NextSample() );\n         samplesList-&gt;Add( PC-&gt;NextSample() );\n      }\n      else\n            Console::WriteLine();\n      System::Threading::Thread::Sleep( 50 );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformanceCounterType.AverageCounter64#3\">    private static void CollectSamples(ArrayList samplesList)\n    {\n\n        Random r = new Random( DateTime.Now.Millisecond );\n\n        // Loop for the samples.\n        for (int j = 0; j &lt; 100; j++) \n        {\n\n            int value = r.Next(1, 10);\n            Console.Write(j + &quot; = &quot; + value);\n\n            avgCounter64Sample.IncrementBy(value);\n\n            avgCounter64SampleBase.Increment();\n\n            if ((j % 10) == 9) \n            {\n                OutputSample(avgCounter64Sample.NextSample());\n                samplesList.Add( avgCounter64Sample.NextSample() );\n            }\n            else\n                Console.WriteLine();\n\n            System.Threading.Thread.Sleep(50);\n        }\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.AverageCounter64#3\">    Private Shared Sub CollectSamples(ByVal samplesList As ArrayList)\n\n        Dim r As New Random(DateTime.Now.Millisecond)\n\n        &#39; Loop for the samples.\n        Dim j As Integer\n        For j = 0 To 99\n\n            Dim value As Integer = r.Next(1, 10)\n            Console.Write(j.ToString() + &quot; = &quot; + value.ToString())\n\n            avgCounter64Sample.IncrementBy(value)\n\n            avgCounter64SampleBase.Increment()\n\n            If j Mod 10 = 9 Then\n                OutputSample(avgCounter64Sample.NextSample())\n                samplesList.Add(avgCounter64Sample.NextSample())\n            Else\n                Console.WriteLine()\n            End If\n            System.Threading.Thread.Sleep(50)\n        Next j\n    End Sub &#39;CollectSamples\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_NextValue\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_NextValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NextValue()</div>        \r\n          </div>\r\n    \r\n            <p>Obtains a counter sample and returns the calculated value for it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float NextValue ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The next calculated value that the system obtains for this counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The instance is not correctly associated with a performance counter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> If the calculated value of a counter depends on two counter reads, the first read operation returns 0.0. Resetting the performance counter properties to specify a different counter is equivalent to creating a new performance counter, and the first read operation using the new properties returns 0.0. The recommended delay time between calls to the NextValue method is one second, to allow the counter to perform the next incremental read.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters, you must have administrative privileges. In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> counter and uses the NextValue method to display the counter&#39;s values over a time period.  </p>\n<pre><code class=\"lang-cs\" name=\"PerformanceCounterType.ElapsedTime#2\">\nusing System;\nusing System.Collections;\nusing System.Collections.Specialized;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\npublic class App \n{\n\n    public static void Main()\n    {\t\n        CollectSamples();\n    }\n\n   \n    public static void CollectSamples()\n    {\n        const String categoryName = &quot;ElapsedTimeSampleCategory&quot;;\n        const String counterName = &quot;ElapsedTimeSample&quot;;\n\n        // If the category does not exist, create the category and exit.\n        // Performance counters should not be created and immediately used.\n        // There is a latency time to enable the counters, they should be created\n        // prior to executing the application that uses the counters.\n        // Execute this sample a second time to use the category.\n        if ( !PerformanceCounterCategory.Exists(categoryName) ) \n        {\n\n            CounterCreationDataCollection CCDC = new CounterCreationDataCollection();\n\n            // Add the counter.\n            CounterCreationData ETimeData = new CounterCreationData();\n            ETimeData.CounterType = PerformanceCounterType.ElapsedTime;\n            ETimeData.CounterName = counterName;\n            CCDC.Add(ETimeData);\t   \n\t\t\n            // Create the category.\n            PerformanceCounterCategory.Create(categoryName,\n                    &quot;Demonstrates ElapsedTime performance counter usage.&quot;,\n                PerformanceCounterCategoryType.SingleInstance, CCDC);\n            // Return, rerun the application to make use of the new counters.\n            return;\n\n        }\n        else\n        {\n            Console.WriteLine(&quot;Category exists - {0}&quot;, categoryName);\n        }        \n\n        // Create the performance counter.\n        PerformanceCounter PC = new PerformanceCounter(categoryName, \n                                                       counterName, \n                                                       false);\n        // Initialize the counter.\n        PC.RawValue = Stopwatch.GetTimestamp();\n\n        DateTime Start = DateTime.Now;\n\n        // Loop for the samples.\n        for (int j = 0; j &lt; 100; j++) \n        {\n            // Output the values.\n            if ((j % 10) == 9) \n            {\n                Console.WriteLine(&quot;NextValue() = &quot; + PC.NextValue().ToString());\n                Console.WriteLine(&quot;Actual elapsed time = &quot; + DateTime.Now.Subtract(Start).ToString());\n                OutputSample(PC.NextSample());\n            }\n\n            // Reset the counter on every 20th iteration.\n            if (j % 20 == 0)\n            {\n                PC.RawValue = Stopwatch.GetTimestamp();\n                Start = DateTime.Now;\n            }\n            System.Threading.Thread.Sleep(50);\n        }\n\n        Console.WriteLine(&quot;Elapsed time = &quot; + DateTime.Now.Subtract(Start).ToString());\n    }\n\n\t\n    private static void OutputSample(CounterSample s)\n    {\n        Console.WriteLine(&quot;\\r<br>+++++++++++&quot;);\n        Console.WriteLine(&quot;Sample values - \\r<br>&quot;);\n        Console.WriteLine(&quot;   BaseValue        = &quot; + s.BaseValue);\n        Console.WriteLine(&quot;   CounterFrequency = &quot; + s.CounterFrequency);\n        Console.WriteLine(&quot;   CounterTimeStamp = &quot; + s.CounterTimeStamp);\n        Console.WriteLine(&quot;   CounterType      = &quot; + s.CounterType);\n        Console.WriteLine(&quot;   RawValue         = &quot; + s.RawValue);\n        Console.WriteLine(&quot;   SystemFrequency  = &quot; + s.SystemFrequency);\n        Console.WriteLine(&quot;   TimeStamp        = &quot; + s.TimeStamp);\n        Console.WriteLine(&quot;   TimeStamp100nSec = &quot; + s.TimeStamp100nSec);\n        Console.WriteLine(&quot;++++++++++++++++++++++&quot;);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"PerformanceCounterType.ElapsedTime#2\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Collections::Specialized;\nusing namespace System::Diagnostics;\nusing namespace System::Runtime::InteropServices;\n\nvoid OutputSample( CounterSample s )\n{\n   Console::WriteLine( &quot;\\r<br>+++++++++++&quot; );\n   Console::WriteLine( &quot;Sample values - \\r<br>&quot; );\n   Console::WriteLine( &quot;   BaseValue        = {0}&quot;, s.BaseValue );\n   Console::WriteLine( &quot;   CounterFrequency = {0}&quot;, s.CounterFrequency );\n   Console::WriteLine( &quot;   CounterTimeStamp = {0}&quot;, s.CounterTimeStamp );\n   Console::WriteLine( &quot;   CounterType      = {0}&quot;, s.CounterType );\n   Console::WriteLine( &quot;   RawValue         = {0}&quot;, s.RawValue );\n   Console::WriteLine( &quot;   SystemFrequency  = {0}&quot;, s.SystemFrequency );\n   Console::WriteLine( &quot;   TimeStamp        = {0}&quot;, s.TimeStamp );\n   Console::WriteLine( &quot;   TimeStamp100nSec = {0}&quot;, s.TimeStamp100nSec );\n   Console::WriteLine( &quot;++++++++++++++++++++++&quot; );\n}\n\nvoid CollectSamples()\n{\n   String^ categoryName = &quot;ElapsedTimeSampleCategory&quot;;\n   String^ counterName = &quot;ElapsedTimeSample&quot;;\n   \n   // Create the performance counter category.\n   if (  !PerformanceCounterCategory::Exists( categoryName ) )\n   {\n      CounterCreationDataCollection^ CCDC = gcnew CounterCreationDataCollection;\n      \n      // Add the counter.\n      CounterCreationData^ ETimeData = gcnew CounterCreationData;\n      ETimeData-&gt;CounterType = PerformanceCounterType::ElapsedTime;\n      ETimeData-&gt;CounterName = counterName;\n      CCDC-&gt;Add( ETimeData );\n      \n      // Create the category.\n      PerformanceCounterCategory::Create( categoryName,\n         &quot;Demonstrates ElapsedTime performance counter usage.&quot;,\n         CCDC );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Category exists - {0}&quot;, categoryName );\n   }\n\n   \n   // Create the performance counter.\n   PerformanceCounter^ PC = gcnew PerformanceCounter( categoryName,\n                                                      counterName,\n                                                      false );\n   // Initialize the counter.\n   PC-&gt;RawValue = Stopwatch::GetTimestamp();\n\n   DateTime Start = DateTime::Now;\n   \n   // Loop for the samples.\n   for ( int j = 0; j &lt; 100; j++ )\n   {\n      // Output the values.\n      if ( (j % 10) == 9 )\n      {\n         Console::WriteLine( &quot;NextValue() = {0}&quot;, PC-&gt;NextValue() );\n         Console::WriteLine( &quot;Actual elapsed time = {0}&quot;, DateTime::Now.Subtract( Start ) );\n         OutputSample( PC-&gt;NextSample() );\n      }\n      \n      // Reset the counter on every 20th iteration.\n      if ( j % 20 == 0 )\n      {\n         PC-&gt;RawValue = Stopwatch::GetTimestamp();\n         Start = DateTime::Now;\n      }\n      System::Threading::Thread::Sleep( 50 );\n   }\n\n   Console::WriteLine( &quot;Elapsed time = {0}&quot;, DateTime::Now.Subtract( Start ) );\n}\n\nint main()\n{\n   CollectSamples();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformanceCounterType.ElapsedTime#2\">\nImports System\nImports System.Collections\nImports System.Collections.Specialized\nImports System.Diagnostics\nImports System.Runtime.InteropServices\nImports Microsoft.VisualBasic\n\nPublic Class App\n\n    Public Shared Sub Main()\n        CollectSamples()\n    End Sub\n\n    Private Shared Sub CollectSamples()\n\n        Dim categoryName As String = &quot;ElapsedTimeSampleCategory&quot;\n        Dim counterName As String = &quot;ElapsedTimeSample&quot;\n\n        If Not PerformanceCounterCategory.Exists(categoryName) Then\n\n            Dim CCDC As New CounterCreationDataCollection()\n\n            &#39; Add the counter.\n            Dim ETimeData As New CounterCreationData()\n            ETimeData.CounterType = PerformanceCounterType.ElapsedTime\n            ETimeData.CounterName = counterName\n            CCDC.Add(ETimeData)\n\n            &#39; Create the category.\n            PerformanceCounterCategory.Create(categoryName, _\n               &quot;Demonstrates ElapsedTime performance counter usage.&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, CCDC)\n\n        Else\n            Console.WriteLine(&quot;Category exists - {0}&quot;, categoryName)\n        End If\n\n        &#39; Create the counter.\n        Dim PC As PerformanceCounter\n        PC = New PerformanceCounter(categoryName, counterName, False)\n\n        &#39; Initialize the counter.\n        PC.RawValue = Stopwatch.GetTimestamp()\n\n        Dim Start As DateTime = DateTime.Now\n\n        &#39; Loop for the samples.\n        Dim j As Integer\n        For j = 0 To 99\n            &#39; Output the values.\n            If j Mod 10 = 9 Then\n                Console.WriteLine((&quot;NextValue() = &quot; _\n                    + PC.NextValue().ToString()))\n                Console.WriteLine((&quot;Actual elapsed time = &quot; _\n                    + DateTime.Now.Subtract(Start).ToString()))\n                OutputSample(PC.NextSample())\n            End If\n\n            &#39; Reset the counter every 20th iteration.\n            If j Mod 20 = 0 Then\n                PC.RawValue = Stopwatch.GetTimestamp()\n                Start = DateTime.Now\n            End If\n            System.Threading.Thread.Sleep(50)\n        Next j\n\n        Console.WriteLine((&quot;Elapsed time = &quot; + _\n              DateTime.Now.Subtract(Start).ToString()))\n    End Sub\n\n\n    Private Shared Sub OutputSample(ByVal s As CounterSample)\n        Console.WriteLine(ControlChars.Lf + ControlChars.Cr + &quot;+++++++&quot;)\n\n        Console.WriteLine(&quot;Sample values - &quot; + ControlChars.Cr _\n              + ControlChars.Lf)\n        Console.WriteLine((&quot;   BaseValue        = &quot; _\n              + s.BaseValue.ToString()))\n        Console.WriteLine((&quot;   CounterFrequency = &quot; + _\n              s.CounterFrequency.ToString()))\n        Console.WriteLine((&quot;   CounterTimeStamp = &quot; + _\n              s.CounterTimeStamp.ToString()))\n        Console.WriteLine((&quot;   CounterType      = &quot; + _\n              s.CounterType.ToString()))\n        Console.WriteLine((&quot;   RawValue         = &quot; + _\n              s.RawValue.ToString()))\n        Console.WriteLine((&quot;   SystemFrequency  = &quot; + _\n              s.SystemFrequency.ToString()))\n        Console.WriteLine((&quot;   TimeStamp        = &quot; + _\n              s.TimeStamp.ToString()))\n        Console.WriteLine((&quot;   TimeStamp100nSec = &quot; + _\n              s.TimeStamp100nSec.ToString()))\n\n        Console.WriteLine(&quot;+++++++&quot;)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounter_RemoveInstance\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounter_RemoveInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the category instance specified by the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> object <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceName*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This counter is read-only, so any instance that is associated with the category cannot be removed.  </p>\n<p> -or-  </p>\n<p> The instance is not correctly associated with a performance counter.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Diagnostics.PerformanceCounter.InstanceLifetime*</span> property is set to <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> when using global shared memory.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing a system API.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The platform is Windows 98 or Windows Millennium Edition (Me), which does not support performance counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can remove an instance only for a custom counter. All system counters are read-only, so attempting to remove one of them throws an exception.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid a possible race condition when the performance counter shared memory is released, it is recommended that the RemoveInstance method be called from the <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainUnload\" data-linktype=\"relative-path\">DomainUnload</a> event handler.  </p>\n</div>\n<p> To create a performance category instance, specify an <code>instanceName</code> on the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter__ctor_\" data-linktype=\"relative-path\">PerformanceCounter</a> constructor. If the category instance specified by <code>instanceName</code> already exists the new object will reference the existing category instance.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the value for the <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> property is <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a> and the performance counter category was created with .NET Framework version 1.0 or 1.1, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown. Performance counter categories created with earlier versions use global shared memory, and the value for <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_InstanceLifetime_\" data-linktype=\"relative-path\">InstanceLifetime</a> must be <a class=\"xref\" href=\"system.diagnostics.performancecounterinstancelifetime\" data-linktype=\"relative-path\">PerformanceCounterInstanceLifetime</a>. If the category is not used by applications running on versions 1.0 or 1.1 of the .NET Framework, delete and recreate the category.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.PerformanceCounter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.PerformanceCounter.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.CategoryName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.Close\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.CloseSharedResources\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.CounterHelp\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.CounterName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.CounterType\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.Decrement\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.DefaultFileMappingSize\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.Increment\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.IncrementBy\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.InstanceLifetime\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.InstanceName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.MachineName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.NextSample\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.NextValue\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.RawValue\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounter.RemoveInstance\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"1fac5489-eb96-2014-b1bb-7dbb861696d6\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\PerformanceCounter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a Windows NT performance counter component.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.PerformanceCounter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.PerformanceCounter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.PerformanceCounter.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.PerformanceCounter","System.Diagnostics.PerformanceCounter..ctor","System.Diagnostics.PerformanceCounter.BeginInit","System.Diagnostics.PerformanceCounter.CategoryName","System.Diagnostics.PerformanceCounter.Close","System.Diagnostics.PerformanceCounter.CloseSharedResources","System.Diagnostics.PerformanceCounter.CounterHelp","System.Diagnostics.PerformanceCounter.CounterName","System.Diagnostics.PerformanceCounter.CounterType","System.Diagnostics.PerformanceCounter.Decrement","System.Diagnostics.PerformanceCounter.DefaultFileMappingSize","System.Diagnostics.PerformanceCounter.Dispose","System.Diagnostics.PerformanceCounter.EndInit","System.Diagnostics.PerformanceCounter.Increment","System.Diagnostics.PerformanceCounter.IncrementBy","System.Diagnostics.PerformanceCounter.InstanceLifetime","System.Diagnostics.PerformanceCounter.InstanceName","System.Diagnostics.PerformanceCounter.MachineName","System.Diagnostics.PerformanceCounter.NextSample","System.Diagnostics.PerformanceCounter.NextValue","System.Diagnostics.PerformanceCounter.RawValue","System.Diagnostics.PerformanceCounter.ReadOnly","System.Diagnostics.PerformanceCounter.RemoveInstance"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.PerformanceCounter","System::Diagnostics::PerformanceCounter","System.Diagnostics.PerformanceCounter.#ctor","System::Diagnostics::PerformanceCounter::#ctor","System.Diagnostics.PerformanceCounter.BeginInit","System::Diagnostics::PerformanceCounter::BeginInit","System.Diagnostics.PerformanceCounter.CategoryName","System::Diagnostics::PerformanceCounter::CategoryName","System.Diagnostics.PerformanceCounter.Close","System::Diagnostics::PerformanceCounter::Close","System.Diagnostics.PerformanceCounter.CloseSharedResources","System::Diagnostics::PerformanceCounter::CloseSharedResources","System.Diagnostics.PerformanceCounter.CounterHelp","System::Diagnostics::PerformanceCounter::CounterHelp","System.Diagnostics.PerformanceCounter.CounterName","System::Diagnostics::PerformanceCounter::CounterName","System.Diagnostics.PerformanceCounter.CounterType","System::Diagnostics::PerformanceCounter::CounterType","System.Diagnostics.PerformanceCounter.Decrement","System::Diagnostics::PerformanceCounter::Decrement","System.Diagnostics.PerformanceCounter.DefaultFileMappingSize","System::Diagnostics::PerformanceCounter::DefaultFileMappingSize","System.Diagnostics.PerformanceCounter.Dispose","System::Diagnostics::PerformanceCounter::Dispose","System.Diagnostics.PerformanceCounter.EndInit","System::Diagnostics::PerformanceCounter::EndInit","System.Diagnostics.PerformanceCounter.Increment","System::Diagnostics::PerformanceCounter::Increment","System.Diagnostics.PerformanceCounter.IncrementBy","System::Diagnostics::PerformanceCounter::IncrementBy","System.Diagnostics.PerformanceCounter.InstanceLifetime","System::Diagnostics::PerformanceCounter::InstanceLifetime","System.Diagnostics.PerformanceCounter.InstanceName","System::Diagnostics::PerformanceCounter::InstanceName","System.Diagnostics.PerformanceCounter.MachineName","System::Diagnostics::PerformanceCounter::MachineName","System.Diagnostics.PerformanceCounter.NextSample","System::Diagnostics::PerformanceCounter::NextSample","System.Diagnostics.PerformanceCounter.NextValue","System::Diagnostics::PerformanceCounter::NextValue","System.Diagnostics.PerformanceCounter.RawValue","System::Diagnostics::PerformanceCounter::RawValue","System.Diagnostics.PerformanceCounter.ReadOnly","System::Diagnostics::PerformanceCounter::ReadOnly","System.Diagnostics.PerformanceCounter.RemoveInstance","System::Diagnostics::PerformanceCounter::RemoveInstance"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"1fac5489-eb96-2014-b1bb-7dbb861696d6","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\PerformanceCounter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/PerformanceCounter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PerformanceCounter class | Microsoft Docs","_op_ogTitle":"PerformanceCounter class","description":"Represents a Windows NT performance counter component.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.PerformanceCounter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.performancecounter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.performancecounter","fileRelativePath":"System.Diagnostics.PerformanceCounter.html"},"themesRelativePathToOutputRoot":"_themes/"}