{"content":"    \r\n    <h1 id=\"System_Net_Security_SslStream\">\r\n      <span class=\"lang-csharp\">SslStream</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class SslStream : System.Net.Security.AuthenticatedStream</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.security.authenticatedstream\" data-linktype=\"relative-path\">System.Net.Security.AuthenticatedStream</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SslStream</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_\" data-linktype=\"relative-path\">CopyTo(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_\" data-linktype=\"relative-path\">CopyToAsync(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CreateWaitHandle\" data-linktype=\"relative-path\">CreateWaitHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">FlushAsync(CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ObjectInvariant\" data-linktype=\"relative-path\">ObjectInvariant()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadByte\" data-linktype=\"relative-path\">ReadByte()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Synchronized_System_IO_Stream_\" data-linktype=\"relative-path\">Synchronized(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteByte_System_Byte_\" data-linktype=\"relative-path\">WriteByte(Byte)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.security.authenticatedstream#System_Net_Security_AuthenticatedStream_InnerStream\" data-linktype=\"relative-path\">InnerStream</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.security.authenticatedstream#System_Net_Security_AuthenticatedStream_LeaveInnerStreamOpen\" data-linktype=\"relative-path\">LeaveInnerStreamOpen</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an SslStream. An SSL connection, such as that provided by SslStream, should be used when communicating sensitive information between a client and a server. Using an SslStream helps to prevent anyone from reading and tampering with information while it is in transit on the network.  </p>\n<p> An SslStream instance transmits data using a stream that you supply when creating the SslStream. When you supply this underlying stream, you have the option to specify whether closing the SslStream also closes the underlying stream. Typically, the SslStream class is used with the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and <a class=\"xref\" href=\"system.net.sockets.tcplistener\" data-linktype=\"relative-path\">TcpListener</a> classes. The <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method provides a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> suitable for use with the SslStream class.  </p>\n<p> After creating an SslStream, the server and optionally, the client must be authenticated. The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so. Authentication must be performed before transmitting information using an SslStream. Clients initiate authentication using the synchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> methods, which block until the authentication completes, or the asynchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a> methods, which do not block waiting for the authentication to complete. Servers initiate authentication using the synchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a> or asynchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods. Both client and server must initiate the authentication.  </p>\n<p> The authentication is handled by the Security Support Provider (SSPI) channel provider. The client is given an opportunity to control validation of the server&#39;s certificate by specifying a <a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a> delegate when creating an SslStream. The server can also control validation by supplying a <a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a> delegate. The method referenced by the delegate includes the remote party&#39;s certificate and any errors SSPI encountered while validating the certificate. Note that if the server specifies a delegate, the delegate&#39;s method is invoked regardless of whether the server requested client authentication. If the server did not request client authentication, the server&#39;s delegate method receives a null certificate and an empty array of certificate errors.  </p>\n<p> If the server requires client authentication, the client must specify one or more certificates for authentication. If the client has more than one certificate, the client can provide a <a class=\"xref\" href=\"system.net.security.localcertificateselectioncallback\" data-linktype=\"relative-path\">LocalCertificateSelectionCallback</a> delegate to select the correct certificate for the server. The client&#39;s certificates must be located in the current user&#39;s &quot;My&quot; certificate store. Client authentication via certificates is not supported for the <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> (SSL version 2) protocol.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and the SslStream is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<p> When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the SslStream can be used by the client and server to exchange messages. Before sending or receiving information, the client and server should check the security services and levels provided by the SslStream to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality. If the current settings are not sufficient, the stream should be closed. You can check the security services provided by the SslStream using the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties. The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Members</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The security protocol used to authenticate the server and, optionally, the client.</td>\n<td>The <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_SslProtocol_\" data-linktype=\"relative-path\">SslProtocol</a> property and the associated <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> enumeration.</td>\n</tr>\n<tr>\n<td>The key exchange algorithm.</td>\n<td>The <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_KeyExchangeAlgorithm_\" data-linktype=\"relative-path\">KeyExchangeAlgorithm</a> property and the associated <a class=\"xref\" href=\"system.security.authentication.exchangealgorithmtype\" data-linktype=\"relative-path\">ExchangeAlgorithmType</a> enumeration.</td>\n</tr>\n<tr>\n<td>The message integrity algorithm.</td>\n<td>The <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_HashAlgorithm_\" data-linktype=\"relative-path\">HashAlgorithm</a> property and the associated <a class=\"xref\" href=\"system.security.authentication.hashalgorithmtype\" data-linktype=\"relative-path\">HashAlgorithmType</a> enumeration.</td>\n</tr>\n<tr>\n<td>The message confidentiality algorithm.</td>\n<td>The <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_CipherAlgorithm_\" data-linktype=\"relative-path\">CipherAlgorithm</a> property and the associated <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> enumeration.</td>\n</tr>\n<tr>\n<td>The strengths of the selected algorithms.</td>\n<td>The <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_KeyExchangeStrength_\" data-linktype=\"relative-path\">KeyExchangeStrength</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_HashStrength_\" data-linktype=\"relative-path\">HashStrength</a>, and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_CipherStrength_\" data-linktype=\"relative-path\">CipherStrength</a> properties.</td>\n</tr>\n</tbody>\n</table>\n<p> After a successful authentication, you can send data using the synchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_Write_\" data-linktype=\"relative-path\">Write</a> or asynchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> methods. You can receive data using the synchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_Read_\" data-linktype=\"relative-path\">Read</a> or asynchronous <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> methods.  </p>\n<p> If you specified to the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream__ctor_\" data-linktype=\"relative-path\">SslStream</a> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the application that creates the SslStream object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.  </p>\n</div>\n<p> SslStream assumes that a timeout along with any other <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a> when one is thrown from the inner stream will be treated as fatal by its caller. Reusing a SslStream instance after a timeout will return garbage. An application should <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> the SslStream and throw an exception in these cases.  </p>\n<p> The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  </p>\n<p> Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. <a href=\"https://support.microsoft.com/kb/3069494\" data-linktype=\"external\">This article</a> explains how to modify your code so that the new behavior is disabled.  </p>\n<p> The .NET Framework 4.6.3 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in <a href=\"https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx\" data-linktype=\"external\">SCHANNEL</a>. Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream__ctor_System_IO_Stream_\" data-linktype=\"self-bookmark\">SslStream(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_\" data-linktype=\"self-bookmark\">SslStream(Stream,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and stream closure behavior.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_\" data-linktype=\"self-bookmark\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, stream closure behavior and certificate validation delegate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_System_Net_Security_LocalCertificateSelectionCallback_\" data-linktype=\"self-bookmark\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, stream closure behavior, certificate validation delegate and certificate selection delegate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_System_Net_Security_LocalCertificateSelectionCallback_System_Net_Security_EncryptionPolicy_\" data-linktype=\"self-bookmark\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CanRead\" data-linktype=\"self-bookmark\">CanRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is readable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CanSeek\" data-linktype=\"self-bookmark\">CanSeek</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is seekable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CanTimeout\" data-linktype=\"self-bookmark\">CanTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream supports time-outs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CanWrite\" data-linktype=\"self-bookmark\">CanWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is writable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CheckCertRevocationStatus\" data-linktype=\"self-bookmark\">CheckCertRevocationStatus</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the certificate revocation list is checked during the certificate validation process.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CipherAlgorithm\" data-linktype=\"self-bookmark\">CipherAlgorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that identifies the bulk encryption algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_CipherStrength\" data-linktype=\"self-bookmark\">CipherStrength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that identifies the strength of the cipher algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_HashAlgorithm\" data-linktype=\"self-bookmark\">HashAlgorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the algorithm used for generating message authentication codes (MACs).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_HashStrength\" data-linktype=\"self-bookmark\">HashStrength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that identifies the strength of the hash algorithm used by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_IsAuthenticated\" data-linktype=\"self-bookmark\">IsAuthenticated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether authentication was successful.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_IsEncrypted\" data-linktype=\"self-bookmark\">IsEncrypted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> uses data encryption.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_IsMutuallyAuthenticated\" data-linktype=\"self-bookmark\">IsMutuallyAuthenticated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether both server and client have been authenticated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_IsServer\" data-linktype=\"self-bookmark\">IsServer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the local side of the connection used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was authenticated as the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_IsSigned\" data-linktype=\"self-bookmark\">IsSigned</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the data sent using this stream is signed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_KeyExchangeAlgorithm\" data-linktype=\"self-bookmark\">KeyExchangeAlgorithm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the key exchange algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_KeyExchangeStrength\" data-linktype=\"self-bookmark\">KeyExchangeStrength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Length\" data-linktype=\"self-bookmark\">Length</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the length of the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_LocalCertificate\" data-linktype=\"self-bookmark\">LocalCertificate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the certificate used to authenticate the local endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current position in the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_ReadTimeout\" data-linktype=\"self-bookmark\">ReadTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time a read operation blocks waiting for data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_RemoteCertificate\" data-linktype=\"self-bookmark\">RemoteCertificate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the certificate used to authenticate the remote endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_SslProtocol\" data-linktype=\"self-bookmark\">SslProtocol</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates the security protocol used to authenticate this connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_TransportContext\" data-linktype=\"self-bookmark\">TransportContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a> used for authentication using extended protection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_WriteTimeout\" data-linktype=\"self-bookmark\">WriteTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time a write operation blocks waiting for data.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsClient_System_String_\" data-linktype=\"self-bookmark\">AuthenticateAsClient(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsClient_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_\" data-linktype=\"self-bookmark\">AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsClientAsync_System_String_\" data-linktype=\"self-bookmark\">AuthenticateAsClientAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsClientAsync_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_\" data-linktype=\"self-bookmark\">AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">AuthenticateAsServer(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_\" data-linktype=\"self-bookmark\">AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsServerAsync_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">AuthenticateAsServerAsync(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_AuthenticateAsServerAsync_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_\" data-linktype=\"self-bookmark\">AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginAuthenticateAsClient_System_String_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginAuthenticateAsClient(String,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginAuthenticateAsClient_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginAuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginAuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous write operation that writes <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>s from the specified buffer to the stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_EndAuthenticateAsClient_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndAuthenticateAsClient(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends a pending asynchronous server authentication operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_EndAuthenticateAsServer_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndAuthenticateAsServer(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends a pending asynchronous client authentication operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsClient*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_EndRead_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndRead(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous read operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginRead*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_EndWrite_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndWrite(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous write operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginWrite*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes any buffered data to be written to the underlying device.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Read_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads data from this stream and stores it in the specified array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Seek_System_Int64_System_IO_SeekOrigin_\" data-linktype=\"self-bookmark\">Seek(Int64,SeekOrigin)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_SetLength_System_Int64_\" data-linktype=\"self-bookmark\">SetLength(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the length of the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Write_System_Byte___\" data-linktype=\"self-bookmark\">Write(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified data to this stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Security_SslStream_Write_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Write the specified number of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>s to the underlying stream using the specified buffer and offset.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream__ctor_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslStream(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SslStream (System.IO.Stream innerStream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is not readable.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is not writable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is equal to <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a value is not specified in the configuration file for encryptionpolicy, the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> defaults to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a> for the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance that is constructed.  </p>\n<p> The use of the Null cipher is required when the encryption policy is set to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslStream(Stream,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and stream closure behavior.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveInnerStreamOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that indicates the closure behavior of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data. This parameter indicates if the inner stream is left open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is not readable.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is not writable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is equal to <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify <code>true</code> for the <code>leaveStreamOpen</code> parameter, closing the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> has no effect on the <code>innerStream</code> stream; you must explicitly close <code>innerStream</code> when you no longer need it.  </p>\n<p> If a value is not specified in the configuration file for encryptionpolicy, the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> defaults to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a> for the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance that is constructed.  </p>\n<p> The use of the Null cipher is required when the encryption policy is set to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#1\">   static void ProcessClient( TcpClient^ client )\n   {\n      \n      // A client has connected. Create the \n      // SslStream using the client&#39;s network stream.\n      SslStream^ sslStream = gcnew SslStream( client-&gt;GetStream(),false );\n      \n      // Authenticate the server but don&#39;t require the client to authenticate.\n      try\n      {\n         sslStream-&gt;AuthenticateAsServer( serverCertificate, false, \n             SslProtocols::Tls, true );\n         \n         // Display the properties and settings for the authenticated stream.\n         DisplaySecurityLevel( sslStream );\n         DisplaySecurityServices( sslStream );\n         DisplayCertificateInformation( sslStream );\n         DisplayStreamProperties( sslStream );\n         \n         // Set timeouts for the read and write to 5 seconds.\n         sslStream-&gt;ReadTimeout = 5000;\n         sslStream-&gt;WriteTimeout = 5000;\n         \n         // Read a message from the client.   \n         Console::WriteLine( L&quot;Waiting for client message...&quot; );\n         String^ messageData = ReadMessage( sslStream );\n         Console::WriteLine( L&quot;Received: {0}&quot;, messageData );\n         \n         // Write a message to the client.\n         array&lt;Byte&gt;^message = Encoding::UTF8-&gt;GetBytes( L&quot;Hello from the server.&lt;EOF&gt;&quot; );\n         Console::WriteLine( L&quot;Sending hello message.&quot; );\n         sslStream-&gt;Write( message );\n      }\n      catch ( AuthenticationException^ e ) \n      {\n         Console::WriteLine( L&quot;Exception: {0}&quot;, e-&gt;Message );\n         if ( e-&gt;InnerException != nullptr )\n         {\n            Console::WriteLine( L&quot;Inner exception: {0}&quot;, e-&gt;InnerException-&gt;Message );\n         }\n         Console::WriteLine( L&quot;Authentication failed - closing the connection.&quot; );\n         sslStream-&gt;Close();\n         client-&gt;Close();\n         return;\n      }\n      finally\n      {\n         \n         // The client stream will be closed with the sslStream\n         // because we specified this behavior when creating\n         // the sslStream.\n         sslStream-&gt;Close();\n         client-&gt;Close();\n      }\n\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#1\">        static void ProcessClient (TcpClient client)\n        {\n            // A client has connected. Create the \n            // SslStream using the client&#39;s network stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), false);\n            // Authenticate the server but don&#39;t require the client to authenticate.\n            try \n            {\n                sslStream.AuthenticateAsServer(serverCertificate, \n                    false, SslProtocols.Tls, true);\n                // Display the properties and settings for the authenticated stream.\n                DisplaySecurityLevel(sslStream);\n                DisplaySecurityServices(sslStream);\n                DisplayCertificateInformation(sslStream);\n                DisplayStreamProperties(sslStream);\n\n                // Set timeouts for the read and write to 5 seconds.\n                sslStream.ReadTimeout = 5000;\n                sslStream.WriteTimeout = 5000;\n                // Read a message from the client.   \n                Console.WriteLine(&quot;Waiting for client message...&quot;);\n                string messageData = ReadMessage(sslStream);\n                Console.WriteLine(&quot;Received: {0}&quot;, messageData);\n                \n                // Write a message to the client.\n                byte[] message = Encoding.UTF8.GetBytes(&quot;Hello from the server.&lt;EOF&gt;&quot;);\n                Console.WriteLine(&quot;Sending hello message.&quot;);\n                sslStream.Write(message);\n            }\n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                sslStream.Close();\n                client.Close();\n                return;\n            }\n            finally\n            {\n                // The client stream will be closed with the sslStream\n                // because we specified this behavior when creating\n                // the sslStream.\n                sslStream.Close();\n                client.Close();\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, stream closure behavior and certificate validation delegate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveInnerStreamOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that indicates the closure behavior of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data. This parameter indicates if the inner stream is left open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userCertificateValidationCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a> delegate responsible for validating the certificate supplied by the remote party.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is not readable.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is not writable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is equal to <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify <code>true</code> for the <code>leaveStreamOpen</code> parameter, closing the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> has no effect on the <code>innerStream</code> stream; you must explicitly close <code>innerStream</code> when you no longer need it.  </p>\n<p> The <code>userCertificateValidationCallback</code> delegate&#39;s <code>certificateErrors</code> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the <code>userCertificateValidationCallback</code> delegate determines whether authentication succeeds.  </p>\n<p> The security protocol and cryptographic algorithms are already selected when the <code>userCertificateValidationCallback</code> delegate&#39;s method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return <code>false</code> to prevent the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> from being created.  </p>\n<p> If a value is not specified in the configuration file for encryptionpolicy, the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> defaults to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a> for the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance that is constructed.  </p>\n<p> The use of the Null cipher is required when the encryption policy is set to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_ClientCertificates_\" data-linktype=\"relative-path\">ClientCertificates</a> (if there is one), or tries to reuse an anonymous sessions if <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_ClientCertificates_\" data-linktype=\"relative-path\">ClientCertificates</a> is empty.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Client certificates are not supported in the SSL version 2 protocol.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> and initiates the client portion of the authentication.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientSync#4\">            // Create a TCP/IP client socket.\n            // machineName is the host running the server application.\n            TcpClient^ client = gcnew TcpClient(machineName, 8080);\n            Console::WriteLine(&quot;Client connected.&quot;);\n              \n            // Create an SSL stream that will close \n            // the client&#39;s stream.\n            SslStream^ sslStream = gcnew SslStream(\n                client-&gt;GetStream(), false,\n                gcnew RemoteCertificateValidationCallback(ValidateServerCertificate),\n                nullptr);\n              \n            // The server name must match the name\n            // on the server certificate.\n            try\n            {\n                sslStream-&gt;AuthenticateAsClient(serverName);\n            }\n            catch (AuthenticationException^ ex) \n            {\n                Console::WriteLine(&quot;Exception: {0}&quot;, ex-&gt;Message);\n                if (ex-&gt;InnerException != nullptr)\n                {\n                    Console::WriteLine(&quot;Inner exception: {0}&quot;, \n                        ex-&gt;InnerException-&gt;Message);\n                }\n\n                Console::WriteLine(&quot;Authentication failed - &quot;\n                    &quot;closing the connection.&quot;);\n                sslStream-&gt;Close();\n                client-&gt;Close();\n                return;\n            }\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientSync#4\">            // Create a TCP/IP client socket.\n            // machineName is the host running the server application.\n            TcpClient client = new TcpClient(machineName,443);\n            Console.WriteLine(&quot;Client connected.&quot;);\n            // Create an SSL stream that will close the client&#39;s stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), \n                false, \n                new RemoteCertificateValidationCallback (ValidateServerCertificate), \n                null\n                );\n            // The server name must match the name on the server certificate.\n            try \n            {\n                sslStream.AuthenticateAsClient(serverName);\n            } \n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                client.Close();\n                return;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_System_Net_Security_LocalCertificateSelectionCallback_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, stream closure behavior, certificate validation delegate and certificate selection delegate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveInnerStreamOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that indicates the closure behavior of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data. This parameter indicates if the inner stream is left open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userCertificateValidationCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a> delegate responsible for validating the certificate supplied by the remote party.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userCertificateSelectionCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.localcertificateselectioncallback\" data-linktype=\"relative-path\">LocalCertificateSelectionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.security.localcertificateselectioncallback\" data-linktype=\"relative-path\">LocalCertificateSelectionCallback</a> delegate responsible for selecting the certificate used for authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is not readable.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is not writable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is equal to <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify <code>true</code> for the <code>leaveStreamOpen</code> parameter, closing the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> has no effect on the <code>innerStream</code> stream; you must explicitly close <code>innerStream</code> when you no longer need it.  </p>\n<p> The <code>userCertificateValidationCallback</code> delegate&#39;s <code>certificateErrors</code> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the <code>userCertificateValidationCallback</code> delegate determines whether authentication succeeds.  </p>\n<p> The security protocol and cryptographic algorithms are already selected when the <code>userCertificateValidationCallback</code> delegate&#39;s method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return <code>false</code> to prevent the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> from being created.  </p>\n<p> The <code>userCertificateSelectionCallback</code> delegate is useful when your application has multiple certificates and must dynamically choose a certificate. Certificates in the &quot;MY&quot; store are passed to the method invoked by the delegate.  </p>\n<p> If a value is not specified in the configuration file for encryptionpolicy, the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> defaults to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a> for the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance that is constructed.  </p>\n<p> The use of the Null cipher is required when the encryption policy is set to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#6\">      // Server name must match the host name and the name on the host&#39;s certificate. \n      serverName = args[ 1 ];\n      \n      // Create a TCP/IP client socket.\n      TcpClient^ client = gcnew TcpClient( serverName,80 );\n      Console::WriteLine( L&quot;Client connected.&quot; );\n      \n      // Create an SSL stream that will close the client&#39;s stream.\n      SslStream^ sslStream = gcnew SslStream( \n          client-&gt;GetStream(),\n          false,\n          gcnew RemoteCertificateValidationCallback( ValidateServerCertificate ),\n          gcnew LocalCertificateSelectionCallback( SelectLocalCertificate ) );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#6\">            // Server name must match the host name and the name on the host&#39;s certificate. \n            serverName = args[0];\n            // Create a TCP/IP client socket.\n            TcpClient client = new TcpClient(serverName,80);\n            Console.WriteLine(&quot;Client connected.&quot;);\n            // Create an SSL stream that will close the client&#39;s stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), \n                false, \n                new RemoteCertificateValidationCallback (ValidateServerCertificate), \n                new LocalCertificateSelectionCallback(SelectLocalCertificate)\n                );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream__ctor_System_IO_Stream_System_Boolean_System_Net_Security_RemoteCertificateValidationCallback_System_Net_Security_LocalCertificateSelectionCallback_System_Net_Security_EncryptionPolicy_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveInnerStreamOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that indicates the closure behavior of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> for sending and receiving data. This parameter indicates if the inner stream is left open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userCertificateValidationCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.security.remotecertificatevalidationcallback\" data-linktype=\"relative-path\">RemoteCertificateValidationCallback</a> delegate responsible for validating the certificate supplied by the remote party.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userCertificateSelectionCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.localcertificateselectioncallback\" data-linktype=\"relative-path\">LocalCertificateSelectionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.security.localcertificateselectioncallback\" data-linktype=\"relative-path\">LocalCertificateSelectionCallback</a> delegate responsible for selecting the certificate used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>encryptionPolicy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is not readable.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is not writable.  </p>\n<p> -or-  </p>\n<p> <code>encryptionPolicy</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>innerStream</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>innerStream</code> is equal to <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The use of the Null cipher is required when the <code>encryptionPolicy</code> parameter is set to <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">System.Net.Security.EncryptionPolicy</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CanRead\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is readable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if authentication has occurred and the underlying stream is readable; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If successful authentication has occurred, this property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> on the underlying stream.  </p>\n<p> The underlying stream is specified when you create an instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#5\">   static void DisplayStreamProperties( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Can read: {0}, write {1}&quot;, stream-&gt;CanRead, stream-&gt;CanWrite );\n      Console::WriteLine( L&quot;Can timeout: {0}&quot;, stream-&gt;CanTimeout );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#5\">         static void DisplayStreamProperties(SslStream stream)\n         {\n            Console.WriteLine(&quot;Can read: {0}, write {1}&quot;, stream.CanRead, stream.CanWrite);\n            Console.WriteLine(&quot;Can timeout: {0}&quot;, stream.CanTimeout);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CanSeek\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CanSeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanSeek</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is seekable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanSeek { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This property always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not attempt to set the position of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> object or its underlying stream.  </p>\n<p> The underlying stream is specified when you create an instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CanTimeout\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CanTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream supports time-outs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanTimeout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the underlying stream supports time-outs; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanTimeout_\" data-linktype=\"relative-path\">CanTimeout</a> on the underlying stream.  </p>\n<p> The underlying stream is specified when you create an instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#5\">   static void DisplayStreamProperties( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Can read: {0}, write {1}&quot;, stream-&gt;CanRead, stream-&gt;CanWrite );\n      Console::WriteLine( L&quot;Can timeout: {0}&quot;, stream-&gt;CanTimeout );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#5\">         static void DisplayStreamProperties(SslStream stream)\n         {\n            Console.WriteLine(&quot;Can read: {0}, write {1}&quot;, stream.CanRead, stream.CanWrite);\n            Console.WriteLine(&quot;Can timeout: {0}&quot;, stream.CanTimeout);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CanWrite\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CanWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the underlying stream is writable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if authentication has occurred and the underlying stream is writable; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If successful authentication has occurred, this property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> on the underlying stream.  </p>\n<p> The underlying stream is specified when you create an instance of the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#5\">   static void DisplayStreamProperties( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Can read: {0}, write {1}&quot;, stream-&gt;CanRead, stream-&gt;CanWrite );\n      Console::WriteLine( L&quot;Can timeout: {0}&quot;, stream-&gt;CanTimeout );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#5\">         static void DisplayStreamProperties(SslStream stream)\n         {\n            Console.WriteLine(&quot;Can read: {0}, write {1}&quot;, stream.CanRead, stream.CanWrite);\n            Console.WriteLine(&quot;Can timeout: {0}&quot;, stream.CanTimeout);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CheckCertRevocationStatus\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CheckCertRevocationStatus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckCertRevocationStatus</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the certificate revocation list is checked during the certificate validation process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CheckCertRevocationStatus { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the certificate revocation list is checked; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The certificate revocation list contains certificates that have been revoked by the issuer. Checking the list negatively impacts performance but improves application security.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#5\">   static void DisplayStreamProperties( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Can read: {0}, write {1}&quot;, stream-&gt;CanRead, stream-&gt;CanWrite );\n      Console::WriteLine( L&quot;Can timeout: {0}&quot;, stream-&gt;CanTimeout );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#5\">         static void DisplayStreamProperties(SslStream stream)\n         {\n            Console.WriteLine(&quot;Can read: {0}, write {1}&quot;, stream.CanRead, stream.CanWrite);\n            Console.WriteLine(&quot;Can timeout: {0}&quot;, stream.CanTimeout);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CipherAlgorithm\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CipherAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CipherAlgorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that identifies the bulk encryption algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The CipherAlgorithm property was accessed before the completion of the authentication process or the authentication process failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> is required for the CipherAlgorithm property when the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> enumeration value is used to construct a <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance.  </p>\n<p> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winxpsvr-md.md&quot; -->Windows Server 2003<!--END INCLUDE --> and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/winxp-md.md&quot; -->Windows XP<!--END INCLUDE --> do not support the <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> value. So even if the <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> value is used to construct the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> instance, the <a class=\"xref\" href=\"system.net.security.encryptionpolicy\" data-linktype=\"relative-path\">EncryptionPolicy</a> property will be <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a>. The <a class=\"xref\" href=\"system.security.authentication.cipheralgorithmtype\" data-linktype=\"relative-path\">CipherAlgorithmType</a> value is only returned on Windows Vista and later.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_CipherStrength\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_CipherStrength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CipherStrength</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that identifies the strength of the cipher algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CipherStrength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the strength of the algorithm, in bits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this property is zero until the authentication occurs.  </p>\n<p> This property returns one of the following values:  </p>\n<ul>\n<li><p>0  </p>\n</li>\n<li><p>40  </p>\n</li>\n<li><p>56  </p>\n</li>\n<li><p>80  </p>\n</li>\n<li><p>128  </p>\n</li>\n<li><p>168  </p>\n</li>\n<li><p>192  </p>\n</li>\n<li><p>256</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_HashAlgorithm\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_HashAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HashAlgorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets the algorithm used for generating message authentication codes (MACs).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.hashalgorithmtype\" data-linktype=\"relative-path\">HashAlgorithmType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.authentication.hashalgorithmtype\" data-linktype=\"relative-path\">HashAlgorithmType</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The HashAlgorithm property was accessed before the completion of the authentication process or the authentication process failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_HashStrength\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_HashStrength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HashStrength</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that identifies the strength of the hash algorithm used by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int HashStrength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the strength of the <a class=\"xref\" href=\"system.security.authentication.hashalgorithmtype\" data-linktype=\"relative-path\">HashAlgorithmType</a> algorithm, in bits. Valid values are 128 or 160.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this property is zero until the authentication occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_IsAuthenticated\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_IsAuthenticated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAuthenticated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether authentication was successful.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsAuthenticated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if successful authentication occurred; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clients authenticate by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a> methods. Servers authenticate by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a> or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#4\">   static void DisplaySecurityServices( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Is authenticated: {0} as server? {1}&quot;, stream-&gt;IsAuthenticated, stream-&gt;IsServer );\n      Console::WriteLine( L&quot;IsSigned: {0}&quot;, stream-&gt;IsSigned );\n      Console::WriteLine( L&quot;Is Encrypted: {0}&quot;, stream-&gt;IsEncrypted );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#4\">         static void DisplaySecurityServices(SslStream stream)\n         {\n            Console.WriteLine(&quot;Is authenticated: {0} as server? {1}&quot;, stream.IsAuthenticated, stream.IsServer);\n            Console.WriteLine(&quot;IsSigned: {0}&quot;, stream.IsSigned);\n            Console.WriteLine(&quot;Is Encrypted: {0}&quot;, stream.IsEncrypted);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_IsEncrypted\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_IsEncrypted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEncrypted</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> uses data encryption.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsEncrypted { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#4\">   static void DisplaySecurityServices( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Is authenticated: {0} as server? {1}&quot;, stream-&gt;IsAuthenticated, stream-&gt;IsServer );\n      Console::WriteLine( L&quot;IsSigned: {0}&quot;, stream-&gt;IsSigned );\n      Console::WriteLine( L&quot;Is Encrypted: {0}&quot;, stream-&gt;IsEncrypted );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#4\">         static void DisplaySecurityServices(SslStream stream)\n         {\n            Console.WriteLine(&quot;Is authenticated: {0} as server? {1}&quot;, stream.IsAuthenticated, stream.IsServer);\n            Console.WriteLine(&quot;IsSigned: {0}&quot;, stream.IsSigned);\n            Console.WriteLine(&quot;Is Encrypted: {0}&quot;, stream.IsEncrypted);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_IsMutuallyAuthenticated\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_IsMutuallyAuthenticated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsMutuallyAuthenticated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether both server and client have been authenticated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsMutuallyAuthenticated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the server has been authenticated; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#4\">   static void DisplaySecurityServices( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Is authenticated: {0} as server? {1}&quot;, stream-&gt;IsAuthenticated, stream-&gt;IsServer );\n      Console::WriteLine( L&quot;IsSigned: {0}&quot;, stream-&gt;IsSigned );\n      Console::WriteLine( L&quot;Is Encrypted: {0}&quot;, stream-&gt;IsEncrypted );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#4\">         static void DisplaySecurityServices(SslStream stream)\n         {\n            Console.WriteLine(&quot;Is authenticated: {0} as server? {1}&quot;, stream.IsAuthenticated, stream.IsServer);\n            Console.WriteLine(&quot;IsSigned: {0}&quot;, stream.IsSigned);\n            Console.WriteLine(&quot;Is Encrypted: {0}&quot;, stream.IsEncrypted);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_IsServer\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_IsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsServer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the local side of the connection used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was authenticated as the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsServer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If authentication failed or did not occur, this property returns <code>false</code>.  </p>\n<p> To authenticate as the server, call the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a> or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#4\">   static void DisplaySecurityServices( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Is authenticated: {0} as server? {1}&quot;, stream-&gt;IsAuthenticated, stream-&gt;IsServer );\n      Console::WriteLine( L&quot;IsSigned: {0}&quot;, stream-&gt;IsSigned );\n      Console::WriteLine( L&quot;Is Encrypted: {0}&quot;, stream-&gt;IsEncrypted );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#4\">         static void DisplaySecurityServices(SslStream stream)\n         {\n            Console.WriteLine(&quot;Is authenticated: {0} as server? {1}&quot;, stream.IsAuthenticated, stream.IsServer);\n            Console.WriteLine(&quot;IsSigned: {0}&quot;, stream.IsSigned);\n            Console.WriteLine(&quot;Is Encrypted: {0}&quot;, stream.IsEncrypted);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_IsSigned\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_IsSigned_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSigned</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the data sent using this stream is signed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsSigned { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the data is signed before being transmitted; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#4\">   static void DisplaySecurityServices( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Is authenticated: {0} as server? {1}&quot;, stream-&gt;IsAuthenticated, stream-&gt;IsServer );\n      Console::WriteLine( L&quot;IsSigned: {0}&quot;, stream-&gt;IsSigned );\n      Console::WriteLine( L&quot;Is Encrypted: {0}&quot;, stream-&gt;IsEncrypted );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#4\">         static void DisplaySecurityServices(SslStream stream)\n         {\n            Console.WriteLine(&quot;Is authenticated: {0} as server? {1}&quot;, stream.IsAuthenticated, stream.IsServer);\n            Console.WriteLine(&quot;IsSigned: {0}&quot;, stream.IsSigned);\n            Console.WriteLine(&quot;Is Encrypted: {0}&quot;, stream.IsEncrypted);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_KeyExchangeAlgorithm\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_KeyExchangeAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyExchangeAlgorithm</div>        \r\n          </div>\r\n    \r\n            <p>Gets the key exchange algorithm used by this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.exchangealgorithmtype\" data-linktype=\"relative-path\">ExchangeAlgorithmType</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.authentication.exchangealgorithmtype\" data-linktype=\"relative-path\">ExchangeAlgorithmType</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this property is <a class=\"xref\" href=\"system.security.authentication.exchangealgorithmtype\" data-linktype=\"relative-path\">ExchangeAlgorithmType</a> until the authentication occurs.  </p>\n<p> The key exchange algorithm protects information used to generate shared keys.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_KeyExchangeStrength\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_KeyExchangeStrength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyExchangeStrength</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that identifies the strength of the key exchange algorithm used by this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int KeyExchangeStrength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the strength of the <a class=\"xref\" href=\"system.security.authentication.exchangealgorithmtype\" data-linktype=\"relative-path\">ExchangeAlgorithmType</a> algorithm, in bits.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this property is zero until the authentication occurs.  </p>\n<p> In common scenarios, the value of this property is one of the following:  </p>\n<ul>\n<li><p>512  </p>\n</li>\n<li><p>768  </p>\n</li>\n<li><p>1024  </p>\n</li>\n<li><p>2048</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the cryptography settings for the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Length\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Length_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Length</div>        \r\n          </div>\r\n    \r\n            <p>Gets the length of the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Length { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.  </p>\n<p> The length of the underlying stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Getting the value of this property is not supported when the underlying stream is a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Length_\" data-linktype=\"relative-path\">Length</a> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_LocalCertificate\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_LocalCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalCertificate</div>        \r\n          </div>\r\n    \r\n            <p>Gets the certificate used to authenticate the local endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </div>\r\n                  <p>An X509Certificate object that represents the certificate supplied for authentication or <code>null</code> if no certificate was supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication failed or has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the certificate returned by this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#6\">   static void DisplayCertificateInformation( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Certificate revocation list checked: {0}&quot;, stream-&gt;CheckCertRevocationStatus );\n      X509Certificate^ localCertificate = stream-&gt;LocalCertificate;\n      if ( stream-&gt;LocalCertificate != nullptr )\n      {\n         Console::WriteLine( L&quot;Local cert was issued to {0} and is valid from {1} until {2}.&quot;, \n             localCertificate-&gt;Subject, \n             localCertificate-&gt;GetEffectiveDateString(), \n             localCertificate-&gt;GetExpirationDateString() );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;Local certificate is null.&quot; );\n      }\n\n      X509Certificate^ remoteCertificate = stream-&gt;RemoteCertificate;\n      if ( stream-&gt;RemoteCertificate != nullptr )\n      {\n         Console::WriteLine( L&quot;Remote cert was issued to {0} and is valid from {1} until {2}.&quot;, \n            remoteCertificate-&gt;Subject, \n            remoteCertificate-&gt;GetEffectiveDateString(), \n            remoteCertificate-&gt;GetExpirationDateString() );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;Remote certificate is null.&quot; );\n      }\n   }\n\n\nprivate:\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#6\">        static void DisplayCertificateInformation(SslStream stream)\n        {\n            Console.WriteLine(&quot;Certificate revocation list checked: {0}&quot;, stream.CheckCertRevocationStatus);\n                \n            X509Certificate localCertificate = stream.LocalCertificate;\n            if (stream.LocalCertificate != null)\n            {\n                Console.WriteLine(&quot;Local cert was issued to {0} and is valid from {1} until {2}.&quot;,\n                    localCertificate.Subject,\n                    localCertificate.GetEffectiveDateString(),\n                    localCertificate.GetExpirationDateString());\n             } else\n            {\n                Console.WriteLine(&quot;Local certificate is null.&quot;);\n            }\n            // Display the properties of the client&#39;s certificate.\n            X509Certificate remoteCertificate = stream.RemoteCertificate;\n            if (stream.RemoteCertificate != null)\n            {\n            Console.WriteLine(&quot;Remote cert was issued to {0} and is valid from {1} until {2}.&quot;,\n                remoteCertificate.Subject,\n                remoteCertificate.GetEffectiveDateString(),\n                remoteCertificate.GetExpirationDateString());\n            } else\n            {\n                Console.WriteLine(&quot;Remote certificate is null.&quot;);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Position\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current position in the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.  </p>\n<p> The current position in the underlying stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Setting this property is not supported.  </p>\n<p> -or-  </p>\n<p> Getting the value of this property is not supported when the underlying stream is a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Position_\" data-linktype=\"relative-path\">Position</a> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_ReadTimeout\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_ReadTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time a read operation blocks waiting for data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int ReadTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that specifies the amount of time that elapses before a synchronous read operation fails.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadTimeout_\" data-linktype=\"relative-path\">ReadTimeout</a> on the underlying stream. When you set this property, the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadTimeout_\" data-linktype=\"relative-path\">ReadTimeout</a> value on the underlying stream is set to the specified value.  </p>\n<p> If the underlying stream is a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, ReadTimeout is in milliseconds and is set to <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> by default so that read operations do not timeout.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#1\">   static void ProcessClient( TcpClient^ client )\n   {\n      \n      // A client has connected. Create the \n      // SslStream using the client&#39;s network stream.\n      SslStream^ sslStream = gcnew SslStream( client-&gt;GetStream(),false );\n      \n      // Authenticate the server but don&#39;t require the client to authenticate.\n      try\n      {\n         sslStream-&gt;AuthenticateAsServer( serverCertificate, false, \n             SslProtocols::Tls, true );\n         \n         // Display the properties and settings for the authenticated stream.\n         DisplaySecurityLevel( sslStream );\n         DisplaySecurityServices( sslStream );\n         DisplayCertificateInformation( sslStream );\n         DisplayStreamProperties( sslStream );\n         \n         // Set timeouts for the read and write to 5 seconds.\n         sslStream-&gt;ReadTimeout = 5000;\n         sslStream-&gt;WriteTimeout = 5000;\n         \n         // Read a message from the client.   \n         Console::WriteLine( L&quot;Waiting for client message...&quot; );\n         String^ messageData = ReadMessage( sslStream );\n         Console::WriteLine( L&quot;Received: {0}&quot;, messageData );\n         \n         // Write a message to the client.\n         array&lt;Byte&gt;^message = Encoding::UTF8-&gt;GetBytes( L&quot;Hello from the server.&lt;EOF&gt;&quot; );\n         Console::WriteLine( L&quot;Sending hello message.&quot; );\n         sslStream-&gt;Write( message );\n      }\n      catch ( AuthenticationException^ e ) \n      {\n         Console::WriteLine( L&quot;Exception: {0}&quot;, e-&gt;Message );\n         if ( e-&gt;InnerException != nullptr )\n         {\n            Console::WriteLine( L&quot;Inner exception: {0}&quot;, e-&gt;InnerException-&gt;Message );\n         }\n         Console::WriteLine( L&quot;Authentication failed - closing the connection.&quot; );\n         sslStream-&gt;Close();\n         client-&gt;Close();\n         return;\n      }\n      finally\n      {\n         \n         // The client stream will be closed with the sslStream\n         // because we specified this behavior when creating\n         // the sslStream.\n         sslStream-&gt;Close();\n         client-&gt;Close();\n      }\n\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#1\">        static void ProcessClient (TcpClient client)\n        {\n            // A client has connected. Create the \n            // SslStream using the client&#39;s network stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), false);\n            // Authenticate the server but don&#39;t require the client to authenticate.\n            try \n            {\n                sslStream.AuthenticateAsServer(serverCertificate, \n                    false, SslProtocols.Tls, true);\n                // Display the properties and settings for the authenticated stream.\n                DisplaySecurityLevel(sslStream);\n                DisplaySecurityServices(sslStream);\n                DisplayCertificateInformation(sslStream);\n                DisplayStreamProperties(sslStream);\n\n                // Set timeouts for the read and write to 5 seconds.\n                sslStream.ReadTimeout = 5000;\n                sslStream.WriteTimeout = 5000;\n                // Read a message from the client.   \n                Console.WriteLine(&quot;Waiting for client message...&quot;);\n                string messageData = ReadMessage(sslStream);\n                Console.WriteLine(&quot;Received: {0}&quot;, messageData);\n                \n                // Write a message to the client.\n                byte[] message = Encoding.UTF8.GetBytes(&quot;Hello from the server.&lt;EOF&gt;&quot;);\n                Console.WriteLine(&quot;Sending hello message.&quot;);\n                sslStream.Write(message);\n            }\n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                sslStream.Close();\n                client.Close();\n                return;\n            }\n            finally\n            {\n                // The client stream will be closed with the sslStream\n                // because we specified this behavior when creating\n                // the sslStream.\n                sslStream.Close();\n                client.Close();\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_RemoteCertificate\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_RemoteCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoteCertificate</div>        \r\n          </div>\r\n    \r\n            <p>Gets the certificate used to authenticate the remote endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </div>\r\n                  <p>An X509Certificate object that represents the certificate supplied for authentication or <code>null</code> if no certificate was supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication failed or has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the certificate returned by this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#6\">   static void DisplayCertificateInformation( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Certificate revocation list checked: {0}&quot;, stream-&gt;CheckCertRevocationStatus );\n      X509Certificate^ localCertificate = stream-&gt;LocalCertificate;\n      if ( stream-&gt;LocalCertificate != nullptr )\n      {\n         Console::WriteLine( L&quot;Local cert was issued to {0} and is valid from {1} until {2}.&quot;, \n             localCertificate-&gt;Subject, \n             localCertificate-&gt;GetEffectiveDateString(), \n             localCertificate-&gt;GetExpirationDateString() );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;Local certificate is null.&quot; );\n      }\n\n      X509Certificate^ remoteCertificate = stream-&gt;RemoteCertificate;\n      if ( stream-&gt;RemoteCertificate != nullptr )\n      {\n         Console::WriteLine( L&quot;Remote cert was issued to {0} and is valid from {1} until {2}.&quot;, \n            remoteCertificate-&gt;Subject, \n            remoteCertificate-&gt;GetEffectiveDateString(), \n            remoteCertificate-&gt;GetExpirationDateString() );\n      }\n      else\n      {\n         Console::WriteLine( L&quot;Remote certificate is null.&quot; );\n      }\n   }\n\n\nprivate:\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#6\">        static void DisplayCertificateInformation(SslStream stream)\n        {\n            Console.WriteLine(&quot;Certificate revocation list checked: {0}&quot;, stream.CheckCertRevocationStatus);\n                \n            X509Certificate localCertificate = stream.LocalCertificate;\n            if (stream.LocalCertificate != null)\n            {\n                Console.WriteLine(&quot;Local cert was issued to {0} and is valid from {1} until {2}.&quot;,\n                    localCertificate.Subject,\n                    localCertificate.GetEffectiveDateString(),\n                    localCertificate.GetExpirationDateString());\n             } else\n            {\n                Console.WriteLine(&quot;Local certificate is null.&quot;);\n            }\n            // Display the properties of the client&#39;s certificate.\n            X509Certificate remoteCertificate = stream.RemoteCertificate;\n            if (stream.RemoteCertificate != null)\n            {\n            Console.WriteLine(&quot;Remote cert was issued to {0} and is valid from {1} until {2}.&quot;,\n                remoteCertificate.Subject,\n                remoteCertificate.GetEffectiveDateString(),\n                remoteCertificate.GetExpirationDateString());\n            } else\n            {\n                Console.WriteLine(&quot;Remote certificate is null.&quot;);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_SslProtocol\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_SslProtocol_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SslProtocol</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates the security protocol used to authenticate this connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The supported security protocols are specified when the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is created. If no security protocol was passed to the constructor, the instance is created using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. The actual protocol used for authentication is selected based on the protocols supported by the client and server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the security properties of the specified stream.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#3\">   static void DisplaySecurityLevel( SslStream^ stream )\n   {\n      Console::WriteLine( L&quot;Cipher: {0} strength {1}&quot;, stream-&gt;CipherAlgorithm, stream-&gt;CipherStrength );\n      Console::WriteLine( L&quot;Hash: {0} strength {1}&quot;, stream-&gt;HashAlgorithm, stream-&gt;HashStrength );\n      Console::WriteLine( L&quot;Key exchange: {0} strength {1}&quot;, stream-&gt;KeyExchangeAlgorithm, stream-&gt;KeyExchangeStrength );\n      Console::WriteLine( L&quot;Protocol: {0}&quot;, stream-&gt;SslProtocol );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#3\">         static void DisplaySecurityLevel(SslStream stream)\n         {\n            Console.WriteLine(&quot;Cipher: {0} strength {1}&quot;, stream.CipherAlgorithm, stream.CipherStrength);\n            Console.WriteLine(&quot;Hash: {0} strength {1}&quot;, stream.HashAlgorithm, stream.HashStrength);\n            Console.WriteLine(&quot;Key exchange: {0} strength {1}&quot;, stream.KeyExchangeAlgorithm, stream.KeyExchangeStrength);\n            Console.WriteLine(&quot;Protocol: {0}&quot;, stream.SslProtocol);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_TransportContext\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_TransportContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransportContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a> used for authentication using extended protection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.TransportContext TransportContext { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.transportcontext\" data-linktype=\"relative-path\">TransportContext</a> object that contains the channel binding token (CBT) used for extended protection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_WriteTimeout\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_WriteTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time a write operation blocks waiting for data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int WriteTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that specifies the amount of time that elapses before a synchronous write operation fails.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value returned by invoking <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteTimeout_\" data-linktype=\"relative-path\">WriteTimeout</a> on the underlying stream. For set operations, the specified value sets the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteTimeout_\" data-linktype=\"relative-path\">WriteTimeout</a> value on the underlying stream.  </p>\n<p> If the underlying stream is a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, WriteTimeout is in milliseconds and is set to <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_Infinite\" data-linktype=\"relative-path\">Infinite</a> by default so that write operations do not timeout.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#1\">   static void ProcessClient( TcpClient^ client )\n   {\n      \n      // A client has connected. Create the \n      // SslStream using the client&#39;s network stream.\n      SslStream^ sslStream = gcnew SslStream( client-&gt;GetStream(),false );\n      \n      // Authenticate the server but don&#39;t require the client to authenticate.\n      try\n      {\n         sslStream-&gt;AuthenticateAsServer( serverCertificate, false, \n             SslProtocols::Tls, true );\n         \n         // Display the properties and settings for the authenticated stream.\n         DisplaySecurityLevel( sslStream );\n         DisplaySecurityServices( sslStream );\n         DisplayCertificateInformation( sslStream );\n         DisplayStreamProperties( sslStream );\n         \n         // Set timeouts for the read and write to 5 seconds.\n         sslStream-&gt;ReadTimeout = 5000;\n         sslStream-&gt;WriteTimeout = 5000;\n         \n         // Read a message from the client.   \n         Console::WriteLine( L&quot;Waiting for client message...&quot; );\n         String^ messageData = ReadMessage( sslStream );\n         Console::WriteLine( L&quot;Received: {0}&quot;, messageData );\n         \n         // Write a message to the client.\n         array&lt;Byte&gt;^message = Encoding::UTF8-&gt;GetBytes( L&quot;Hello from the server.&lt;EOF&gt;&quot; );\n         Console::WriteLine( L&quot;Sending hello message.&quot; );\n         sslStream-&gt;Write( message );\n      }\n      catch ( AuthenticationException^ e ) \n      {\n         Console::WriteLine( L&quot;Exception: {0}&quot;, e-&gt;Message );\n         if ( e-&gt;InnerException != nullptr )\n         {\n            Console::WriteLine( L&quot;Inner exception: {0}&quot;, e-&gt;InnerException-&gt;Message );\n         }\n         Console::WriteLine( L&quot;Authentication failed - closing the connection.&quot; );\n         sslStream-&gt;Close();\n         client-&gt;Close();\n         return;\n      }\n      finally\n      {\n         \n         // The client stream will be closed with the sslStream\n         // because we specified this behavior when creating\n         // the sslStream.\n         sslStream-&gt;Close();\n         client-&gt;Close();\n      }\n\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#1\">        static void ProcessClient (TcpClient client)\n        {\n            // A client has connected. Create the \n            // SslStream using the client&#39;s network stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), false);\n            // Authenticate the server but don&#39;t require the client to authenticate.\n            try \n            {\n                sslStream.AuthenticateAsServer(serverCertificate, \n                    false, SslProtocols.Tls, true);\n                // Display the properties and settings for the authenticated stream.\n                DisplaySecurityLevel(sslStream);\n                DisplaySecurityServices(sslStream);\n                DisplayCertificateInformation(sslStream);\n                DisplayStreamProperties(sslStream);\n\n                // Set timeouts for the read and write to 5 seconds.\n                sslStream.ReadTimeout = 5000;\n                sslStream.WriteTimeout = 5000;\n                // Read a message from the client.   \n                Console.WriteLine(&quot;Waiting for client message...&quot;);\n                string messageData = ReadMessage(sslStream);\n                Console.WriteLine(&quot;Received: {0}&quot;, messageData);\n                \n                // Write a message to the client.\n                byte[] message = Encoding.UTF8.GetBytes(&quot;Hello from the server.&lt;EOF&gt;&quot;);\n                Console.WriteLine(&quot;Sending hello message.&quot;);\n                sslStream.Write(message);\n            }\n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                sslStream.Close();\n                client.Close();\n                return;\n            }\n            finally\n            {\n                // The client stream will be closed with the sslStream\n                // because we specified this behavior when creating\n                // the sslStream.\n                sslStream.Close();\n                client.Close();\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsClient_System_String_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsClient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsClient(String)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AuthenticateAsClient (string targetHost);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that shares this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetHost</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Server authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for <code>targetHost</code> must match the name on the server&#39;s certificate.  </p>\n<p> When authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsClient_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsClient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that will share this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a> that contains client certificates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Client certificates are not supported in the SSL version 2 protocol.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsClientAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsClientAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsClientAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that shares this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetHost</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Server authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for <code>targetHost</code> must match the name on the server&#39;s certificate.  </p>\n<p> When authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsClientAsync_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsClientAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that will share this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a> that contains client certificates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Client certificates are not supported in the SSL version 2 protocol.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsServer(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The certificate used to authenticate the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>serverCertificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Client authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.Security.SslStream.AuthenticateAsServer*</span> method is not supported on Windows 95, Windows 98, or Windows Millennium.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  </p>\n<p> This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> method overloads.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X509Certificate used to authenticate the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificateRequired</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>serverCertificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>enabledSslProtocols</code> is not a valid <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Client authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.Security.SslStream.AuthenticateAsServer*</span> method is not supported on Windows 95, Windows 98, or Windows Millennium.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> method overloads.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsServerAsync_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsServerAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsServerAsync(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The certificate used to authenticate the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>serverCertificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Client authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.Security.SslStream.AuthenticateAsServerAsync*</span> method is not supported on Windows 95, Windows 98, or Windows Millennium.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_AuthenticateAsServerAsync_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_AuthenticateAsServerAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X509Certificate used to authenticate the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificateRequired</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginAuthenticateAsClient_System_String_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginAuthenticateAsClient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginAuthenticateAsClient(String,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that shares this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the authentication is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that indicates the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetHost</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Server authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication.  </p>\n<p> The value specified for <code>targetHost</code> must match the name on the server&#39;s certificate.  </p>\n<p> The asynchronous authentication operation must be completed by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_EndAuthenticateAsClient_\" data-linktype=\"relative-path\">EndAuthenticateAsClient</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block while the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>  </p>\n<p> If you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginAuthenticateAsClient_System_String_System_Security_Cryptography_X509Certificates_X509CertificateCollection_System_Security_Authentication_SslProtocols_System_Boolean_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginAuthenticateAsClient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetHost</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the server that shares this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificatecollection\" data-linktype=\"relative-path\">X509CertificateCollection</a> containing client certificates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the authentication is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that indicates the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>targetHost</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>enabledSslProtocols</code> is not a valid <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Server authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value specified for <code>targetHost</code> must match the name on the server&#39;s certificate.  </p>\n<p> The asynchronous authentication operation must be completed by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_EndAuthenticateAsClient_\" data-linktype=\"relative-path\">EndAuthenticateAsClient</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block while the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>  </p>\n<p> If you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Client certificates are not supported in the SSL version 2 protocol.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginAuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginAuthenticateAsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X509Certificate used to authenticate the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the authentication is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object indicating the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>serverCertificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Client authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span> method is not supported on Windows 95, Windows 98, or Windows Millennium.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method authenticates using <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  </p>\n<p> The asynchronous authentication operation must be completed by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_EndAuthenticateAsClient_\" data-linktype=\"relative-path\">EndAuthenticateAsClient</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block while the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>  </p>\n<p> If you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginAuthenticateAsServer_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Security_Authentication_SslProtocols_System_Boolean_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginAuthenticateAsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serverCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X509Certificate used to authenticate the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clientCertificateRequired</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enabledSslProtocols</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value that represents the protocol used for authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>checkCertificateRevocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the certificate revocation list is checked during authentication.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the authentication is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that indicates the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>serverCertificate</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>enabledSslProtocols</code> is not a valid <a class=\"xref\" href=\"system.security.authentication.sslprotocols\" data-linktype=\"relative-path\">SslProtocols</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has already occurred.  </p>\n<p> -or-  </p>\n<p> Server authentication using this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was tried previously.  </p>\n<p> -or-  </p>\n<p> Authentication is already in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span> method is not supported on Windows 95, Windows 98, or Windows Millennium.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The asynchronous authentication operation must be completed by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_EndAuthenticateAsServer_\" data-linktype=\"relative-path\">EndAuthenticateAsServer</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block while the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>  </p>\n<p> If you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that receives the bytes read from the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to read from the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the read operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the read operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that indicates the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code>\n    <code>&lt;</code>\n    <code>0</code>.  </p>\n<p> <code>-or-</code><code>offset</code> &gt; the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> + count &gt; the length of <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The read operation failed.  </p>\n<p> -or-  </p>\n<p> Encryption is in use, but the data could not be decrypted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>There is already a read operation in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it. The asynchronous read operation must be completed by calling the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block while the operation completes. To block until the operation completes, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_Read_\" data-linktype=\"relative-path\">Read</a> method.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>  </p>\n<p> The <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class does not support multiple simultaneous read operations.  </p>\n<p> You cannot call this method until you have successfully authenticated. To authenticate call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates starting an asynchronous read operation.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#8\">   // readData and buffer holds the data read from the server.\n   // They is used by the ReadCallback method.\n   static StringBuilder^ readData = gcnew StringBuilder;\n   static array&lt;Byte&gt;^buffer = gcnew array&lt;Byte&gt;(2048);\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#8\">        // readData and buffer holds the data read from the server.\n        // They is used by the ReadCallback method.\n        static StringBuilder readData = new StringBuilder();\n        static byte [] buffer = new byte[2048];\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#4\">   static void WriteCallback( IAsyncResult^ ar )\n   {\n      SslStream^ stream = dynamic_cast&lt;SslStream^&gt;(ar-&gt;AsyncState);\n      try\n      {\n         Console::WriteLine( L&quot;Writing data to the server.&quot; );\n         stream-&gt;EndWrite( ar );\n         \n         // Asynchronously read a message from the server.\n         stream-&gt;BeginRead( buffer, 0, buffer-&gt;Length, gcnew AsyncCallback( ReadCallback ), stream );\n      }\n      catch ( Exception^ writeException ) \n      {\n         e = writeException;\n         complete = true;\n         return;\n      }\n\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#4\">        static void WriteCallback(IAsyncResult ar)\n        {\n            SslStream stream = (SslStream) ar.AsyncState;\n            try \n            {\n                Console.WriteLine(&quot;Writing data to the server.&quot;);\n                stream.EndWrite(ar);\n                // Asynchronously read a message from the server.\n                stream.BeginRead(buffer, 0, buffer.Length, \n                    new AsyncCallback(ReadCallback),\n                    stream);\n            }\n            catch (Exception writeException)\n            {\n                e = writeException;\n                complete = true;\n                return;\n            }\n        }\n</code></pre><p> The following method is called when the read completes.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#5\">   static void ReadCallback( IAsyncResult^ ar )\n   {\n      \n      // Read the  message sent by the server.\n      // The end of the message is signaled using the\n      // &quot;&lt;EOF&gt;&quot; marker.\n      SslStream^ stream = dynamic_cast&lt;SslStream^&gt;(ar-&gt;AsyncState);\n      int byteCount = -1;\n      try\n      {\n         Console::WriteLine( L&quot;Reading data from the server.&quot; );\n         byteCount = stream-&gt;EndRead( ar );\n         \n         // Use Decoder class to convert from bytes to UTF8\n         // in case a character spans two buffers.\n         Decoder^ decoder = Encoding::UTF8-&gt;GetDecoder();\n         array&lt;Char&gt;^chars = gcnew array&lt;Char&gt;(decoder-&gt;GetCharCount( buffer, 0, byteCount ));\n         decoder-&gt;GetChars( buffer, 0, byteCount, chars, 0 );\n         readData-&gt;Append( chars );\n         \n         // Check for EOF or an empty message.\n         if ( readData-&gt;ToString()-&gt;IndexOf( L&quot;&lt;EOF&gt;&quot; ) == -1 &amp;&amp; byteCount != 0 )\n         {\n            \n            // We are not finished reading.\n            // Asynchronously read more message data from  the server.\n            stream-&gt;BeginRead( buffer, 0, buffer-&gt;Length, gcnew AsyncCallback( ReadCallback ), stream );\n         }\n         else\n         {\n            Console::WriteLine( L&quot;Message from the server: {0}&quot;, readData );\n         }\n      }\n      catch ( Exception^ readException ) \n      {\n         e = readException;\n         complete = true;\n         return;\n      }\n\n      complete = true;\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#5\">\n        static void ReadCallback(IAsyncResult ar)\n        {\n            // Read the  message sent by the server.\n            // The end of the message is signaled using the\n            // &quot;&lt;EOF&gt;&quot; marker.\n            SslStream stream = (SslStream) ar.AsyncState;\n            int byteCount = -1;\n            try \n            {\n                Console.WriteLine(&quot;Reading data from the server.&quot;);\n                byteCount = stream.EndRead(ar);\n                // Use Decoder class to convert from bytes to UTF8\n                // in case a character spans two buffers.\n                Decoder decoder = Encoding.UTF8.GetDecoder();\n                char[] chars = new char[decoder.GetCharCount(buffer,0, byteCount)];\n                decoder.GetChars(buffer, 0, byteCount, chars,0);\n                readData.Append (chars);\n                // Check for EOF or an empty message.\n                if (readData.ToString().IndexOf(&quot;&lt;EOF&gt;&quot;) == -1 &amp;&amp; byteCount != 0)\n                {\n                    // We are not finished reading.\n                    // Asynchronously read more message data from  the server.\n                    stream.BeginRead(buffer, 0, buffer.Length, \n                        new AsyncCallback(ReadCallback),\n                        stream);\n                } \n                else\n                {\n                    Console.WriteLine(&quot;Message from the server: {0}&quot;, readData.ToString());\n                }\n            }\n            catch (Exception readException)\n            {\n                e = readException;\n                complete = true;\n                return;\n            }\n            complete = true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_BeginWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous write operation that writes <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>s from the specified buffer to the stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that supplies the bytes to be written to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the number of bytes to read from <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the write operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the write operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object indicating the status of the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code>\n    <code>&lt;</code>\n    <code>0</code>.  </p>\n<p> <code>-or-</code><code>offset</code> &gt; the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> + count &gt; the length of <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The write operation failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>There is already a write operation in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NclSslServerAsync#5\">        void ReadCallback(IAsyncResult ar)\n        {\n            ClientState state = (ClientState) ar.AsyncState;\n            SslStream stream = state.stream;\n            // Read the  message sent by the client.\n            // The end of the message is signaled using the\n            // &quot;&lt;EOF&gt;&quot; marker.\n            int byteCount = -1;\n            try \n            {\n                Console.WriteLine(&quot;Reading data from the client.&quot;);\n                byteCount = stream.EndRead(ar);\n                // Use Decoder class to convert from bytes to UTF8\n                // in case a character spans two buffers.\n                Decoder decoder = Encoding.UTF8.GetDecoder();\n                char[] chars = new char[decoder.GetCharCount(state.buffer,0, byteCount)];\n                decoder.GetChars(state.buffer, 0, byteCount, chars,0);\n                state.readData.Append (chars);\n                // Check for EOF or an empty message.\n                if (state.readData.ToString().IndexOf(&quot;&lt;EOF&gt;&quot;) == -1 &amp;&amp; byteCount != 0)\n                {\n                    // We are not finished reading.\n                    // Asynchronously read more message data from  the client.\n                    stream.BeginRead(state.buffer, 0, state.buffer.Length, \n                        new AsyncCallback(ReadCallback),\n                        state);\n                } \n                else\n                {\n                    Console.WriteLine(&quot;Message from the client: {0}&quot;, state.readData.ToString());\n                }\n                              \n                // Encode a test message into a byte array.\n                // Signal the end of the message using &quot;&lt;EOF&gt;&quot;.\n                byte[] message = Encoding.UTF8.GetBytes(&quot;Hello from the server.&lt;EOF&gt;&quot;);\n                // Asynchronously send the message to the client.\n                stream.BeginWrite(message, 0, message.Length, \n                    new AsyncCallback(WriteCallback),\n                    state);\n            }\n            catch (Exception readException)\n            {\n                Console.WriteLine(&quot;Read error: {0}&quot;, readException.Message);\n                state.Close();\n                return;\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclSslServerAsync#5\">   void ReadCallback( IAsyncResult^ ar )\n   {\n      ClientState^ state = dynamic_cast&lt;ClientState^&gt;(ar-&gt;AsyncState);\n      SslStream^ stream = state-&gt;stream;\n      \n      // Read the  message sent by the client.\n      // The end of the message is signaled using the\n      // &quot;&lt;EOF&gt;&quot; marker.\n      int byteCount = -1;\n      try\n      {\n         Console::WriteLine( L&quot;Reading data from the client.&quot; );\n         byteCount = stream-&gt;EndRead( ar );\n         \n         // Use Decoder class to convert from bytes to UTF8\n         // in case a character spans two buffers.\n         Decoder^ decoder = Encoding::UTF8-&gt;GetDecoder();\n         array&lt;Char&gt;^chars = gcnew array&lt;Char&gt;(decoder-&gt;GetCharCount( state-&gt;buffer, 0, byteCount ));\n         decoder-&gt;GetChars( state-&gt;buffer, 0, byteCount, chars, 0 );\n         state-&gt;readData-&gt;Append( chars );\n         \n         // Check for EOF or an empty message.\n         if ( state-&gt;readData-&gt;ToString()-&gt;IndexOf( L&quot;&lt;EOF&gt;&quot; ) == -1 &amp;&amp; byteCount != 0 )\n         {\n            \n            // We are not finished reading.\n            // Asynchronously read more message data from  the client.\n            stream-&gt;BeginRead( state-&gt;buffer, 0, state-&gt;buffer-&gt;Length, gcnew AsyncCallback( this, &amp;SslTcpListener::ReadCallback ), state );\n         }\n         else\n         {\n            Console::WriteLine( L&quot;Message from the client: {0}&quot;, state-&gt;readData );\n         }\n         \n         // Encode a test message into a byte array.\n         // Signal the end of the message using &quot;&lt;EOF&gt;&quot;.\n         array&lt;Byte&gt;^message = Encoding::UTF8-&gt;GetBytes( L&quot;Hello from the server.&lt;EOF&gt;&quot; );\n         \n         // Asynchronously send the message to the client.\n         stream-&gt;BeginWrite( message, 0, message-&gt;Length, gcnew AsyncCallback( this, &amp;SslTcpListener::WriteCallback ), state );\n      }\n      catch ( Exception^ readException ) \n      {\n         Console::WriteLine( L&quot;Read error: {0}&quot;, readException-&gt;Message );\n         state-&gt;Close();\n         return;\n      }\n\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_EndAuthenticateAsClient_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_EndAuthenticateAsClient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndAuthenticateAsClient(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends a pending asynchronous server authentication operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> instance returned by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> was not created by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsServer*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no pending server authentication to complete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<p> To perform this operation synchronously, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_EndAuthenticateAsServer_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_EndAuthenticateAsServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndAuthenticateAsServer(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends a pending asynchronous client authentication operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsClient*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> instance returned by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsClient*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> was not created by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginAuthenticateAsClient*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a></div>\r\n                  </div>\r\n                  <p>The authentication failed and left this object in an unusable state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>There is no pending client authentication to complete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsEncrypted_\" data-linktype=\"relative-path\">IsEncrypted</a> and <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsSigned_\" data-linktype=\"relative-path\">IsSigned</a> properties to determine what security services are used by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>. Check the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_IsMutuallyAuthenticated_\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a> property to determine whether mutual authentication occurred.  </p>\n<p> If the authentication fails, you receive a <a class=\"xref\" href=\"system.security.authentication.authenticationexception\" data-linktype=\"relative-path\">AuthenticationException</a>, and this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  </p>\n<p> To perform this operation synchronously, use one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_EndRead_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_EndRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRead(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous read operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginRead*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int EndRead (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> instance returned by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginRead*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the number of bytes read from the underlying stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> was not created by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginRead*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The read operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the operation has not completed, this method blocks until it does.  </p>\n<p> To perform this operation synchronously, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_Read_\" data-linktype=\"relative-path\">Read</a> method.  </p>\n<p> You cannot call this method until you have successfully authenticated. To authenticate call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates ending an asynchronous read operation.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientAsync#5\">   static void ReadCallback( IAsyncResult^ ar )\n   {\n      \n      // Read the  message sent by the server.\n      // The end of the message is signaled using the\n      // &quot;&lt;EOF&gt;&quot; marker.\n      SslStream^ stream = dynamic_cast&lt;SslStream^&gt;(ar-&gt;AsyncState);\n      int byteCount = -1;\n      try\n      {\n         Console::WriteLine( L&quot;Reading data from the server.&quot; );\n         byteCount = stream-&gt;EndRead( ar );\n         \n         // Use Decoder class to convert from bytes to UTF8\n         // in case a character spans two buffers.\n         Decoder^ decoder = Encoding::UTF8-&gt;GetDecoder();\n         array&lt;Char&gt;^chars = gcnew array&lt;Char&gt;(decoder-&gt;GetCharCount( buffer, 0, byteCount ));\n         decoder-&gt;GetChars( buffer, 0, byteCount, chars, 0 );\n         readData-&gt;Append( chars );\n         \n         // Check for EOF or an empty message.\n         if ( readData-&gt;ToString()-&gt;IndexOf( L&quot;&lt;EOF&gt;&quot; ) == -1 &amp;&amp; byteCount != 0 )\n         {\n            \n            // We are not finished reading.\n            // Asynchronously read more message data from  the server.\n            stream-&gt;BeginRead( buffer, 0, buffer-&gt;Length, gcnew AsyncCallback( ReadCallback ), stream );\n         }\n         else\n         {\n            Console::WriteLine( L&quot;Message from the server: {0}&quot;, readData );\n         }\n      }\n      catch ( Exception^ readException ) \n      {\n         e = readException;\n         complete = true;\n         return;\n      }\n\n      complete = true;\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientAsync#5\">\n        static void ReadCallback(IAsyncResult ar)\n        {\n            // Read the  message sent by the server.\n            // The end of the message is signaled using the\n            // &quot;&lt;EOF&gt;&quot; marker.\n            SslStream stream = (SslStream) ar.AsyncState;\n            int byteCount = -1;\n            try \n            {\n                Console.WriteLine(&quot;Reading data from the server.&quot;);\n                byteCount = stream.EndRead(ar);\n                // Use Decoder class to convert from bytes to UTF8\n                // in case a character spans two buffers.\n                Decoder decoder = Encoding.UTF8.GetDecoder();\n                char[] chars = new char[decoder.GetCharCount(buffer,0, byteCount)];\n                decoder.GetChars(buffer, 0, byteCount, chars,0);\n                readData.Append (chars);\n                // Check for EOF or an empty message.\n                if (readData.ToString().IndexOf(&quot;&lt;EOF&gt;&quot;) == -1 &amp;&amp; byteCount != 0)\n                {\n                    // We are not finished reading.\n                    // Asynchronously read more message data from  the server.\n                    stream.BeginRead(buffer, 0, buffer.Length, \n                        new AsyncCallback(ReadCallback),\n                        stream);\n                } \n                else\n                {\n                    Console.WriteLine(&quot;Message from the server: {0}&quot;, readData.ToString());\n                }\n            }\n            catch (Exception readException)\n            {\n                e = readException;\n                complete = true;\n                return;\n            }\n            complete = true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_EndWrite_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_EndWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndWrite(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous write operation started with a previous call to <span class=\"xref\">stem.Net.Security.SslStream.BeginWrite*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EndWrite (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> instance returned by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginWrite*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> was not created by a call to <span class=\"xref\">stem.Net.Security.SslStream.BeginWrite*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The write operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the operation has not completed, this method blocks until it does.  </p>\n<p> An application cannot call this method until you have successfully authenticated. To authenticate, call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.  </p>\n<p> To perform this operation synchronously, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_Write_\" data-linktype=\"relative-path\">Write</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates ending an asynchronous write operation.  </p>\n<pre><code class=\"lang-cs\" name=\"NclSslServerAsync#4\">        void WriteCallback(IAsyncResult ar)\n        {\n            ClientState state = (ClientState) ar.AsyncState;\n            SslStream stream = state.stream;\n            try \n            {\n                Console.WriteLine(&quot;Writing data to the client.&quot;);\n                stream.EndWrite(ar);\n            }\n            catch (Exception writeException)\n            {\n                Console.WriteLine(&quot;Write error: {0}&quot;, \n                    writeException.Message);\n                state.Close();\n                return;\n            }\n            Console.WriteLine(&quot;Finished with client.&quot;);\n            state.Close();\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclSslServerAsync#4\">   void WriteCallback( IAsyncResult^ ar )\n   {\n      ClientState^ state = dynamic_cast&lt;ClientState^&gt;(ar-&gt;AsyncState);\n      SslStream^ stream = state-&gt;stream;\n      try\n      {\n         Console::WriteLine( L&quot;Writing data to the client.&quot; );\n         stream-&gt;EndWrite( ar );\n      }\n      catch ( Exception^ writeException ) \n      {\n         Console::WriteLine( L&quot;Write error: {0}&quot;, writeException-&gt;Message );\n         state-&gt;Close();\n         return;\n      }\n\n      Console::WriteLine( L&quot;Finished with client.&quot; );\n      state-&gt;Close();\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Flush\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Causes any buffered data to be written to the underlying device.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method invokes <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Flush_\" data-linktype=\"relative-path\">Flush</a> on the underlying stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientSync#5\">            // Create a TCP/IP client socket.\n            // machineName is the host running the server application.\n            TcpClient^ client = gcnew TcpClient(machineName, 8080);\n            Console::WriteLine(&quot;Client connected.&quot;);\n              \n            // Create an SSL stream that will close \n            // the client&#39;s stream.\n            SslStream^ sslStream = gcnew SslStream(\n                client-&gt;GetStream(), false,\n                gcnew RemoteCertificateValidationCallback(ValidateServerCertificate),\n                nullptr);\n              \n            // The server name must match the name\n            // on the server certificate.\n            try\n            {\n                sslStream-&gt;AuthenticateAsClient(serverName);\n            }\n            catch (AuthenticationException^ ex) \n            {\n                Console::WriteLine(&quot;Exception: {0}&quot;, ex-&gt;Message);\n                if (ex-&gt;InnerException != nullptr)\n                {\n                    Console::WriteLine(&quot;Inner exception: {0}&quot;, \n                        ex-&gt;InnerException-&gt;Message);\n                }\n\n                Console::WriteLine(&quot;Authentication failed - &quot;\n                    &quot;closing the connection.&quot;);\n                sslStream-&gt;Close();\n                client-&gt;Close();\n                return;\n            }\n            // Encode a test message into a byte array.\n            // Signal the end of the message using the &quot;&lt;EOF&gt;&quot;.\n            array&lt;Byte&gt;^ messsage = Encoding::UTF8-&gt;GetBytes(\n                &quot;Hello from the client.&lt;EOF&gt;&quot;);\n              \n            // Send hello message to the server.\n            sslStream-&gt;Write(messsage);\n            sslStream-&gt;Flush();\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientSync#5\">            // Create a TCP/IP client socket.\n            // machineName is the host running the server application.\n            TcpClient client = new TcpClient(machineName,443);\n            Console.WriteLine(&quot;Client connected.&quot;);\n            // Create an SSL stream that will close the client&#39;s stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), \n                false, \n                new RemoteCertificateValidationCallback (ValidateServerCertificate), \n                null\n                );\n            // The server name must match the name on the server certificate.\n            try \n            {\n                sslStream.AuthenticateAsClient(serverName);\n            } \n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                client.Close();\n                return;\n            }\n            // Encode a test message into a byte array.\n            // Signal the end of the message using the &quot;&lt;EOF&gt;&quot;.\n            byte[] messsage = Encoding.UTF8.GetBytes(&quot;Hello from the client.&lt;EOF&gt;&quot;);\n            // Send hello message to the server. \n            sslStream.Write(messsage);\n            sslStream.Flush();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Read_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Reads data from this stream and stores it in the specified array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Read (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that receives the bytes read from this stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the maximum number of bytes to read from this stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the number of bytes read. When there is no more data to be read, returns 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code>\n    <code>&lt;</code>\n    <code>0</code>.  </p>\n<p> <code>-or-</code><code>offset</code> &gt; the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> + count &gt; the length of <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The read operation failed. Check the inner exception, if present to determine the cause of the failure.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>There is already a read operation in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The method reads a maximum of <code>count</code> bytes from the stream and stores them in <code>buffer</code> beginning at <code>offset</code>. You cannot perform multiple simultaneous read operations.  </p>\n<p> You cannot call this method until you have successfully authenticated. To authenticate call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.  </p>\n<p> To perform this operation asynchronously, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates reading from an <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslClientSync#6\">    private:\n        static String^ ReadMessage(SslStream^ sslStream)\n        {\n              \n            // Read the  message sent by the server.\n            // The end of the message is signaled using the\n            // &quot;&lt;EOF&gt;&quot; marker.\n            array&lt;Byte&gt;^ buffer = gcnew array&lt;Byte&gt;(2048);\n            StringBuilder^ messageData = gcnew StringBuilder;\n            // Use Decoder class to convert from bytes to UTF8\n            // in case a character spans two buffers.\n            Encoding^ u8 = Encoding::UTF8;\n            Decoder^ decoder = u8-&gt;GetDecoder();\n\n            int bytes = -1;\n            do\n            {\n                bytes = sslStream-&gt;Read(buffer, 0, buffer-&gt;Length);\n                 \n                array&lt;__wchar_t&gt;^ chars = gcnew array&lt;__wchar_t&gt;(\n                    decoder-&gt;GetCharCount(buffer, 0, bytes));\n                decoder-&gt;GetChars(buffer, 0, bytes, chars, 0);\n                messageData-&gt;Append(chars);\n                 \n                // Check for EOF.\n                if (messageData-&gt;ToString()-&gt;IndexOf(&quot;&lt;EOF&gt;&quot;) != -1)\n                {\n                    break;\n                }\n            }\n            while (bytes != 0);\n\n            return messageData-&gt;ToString();\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslClientSync#6\">        static string ReadMessage(SslStream sslStream)\n        {\n            // Read the  message sent by the server.\n            // The end of the message is signaled using the\n            // &quot;&lt;EOF&gt;&quot; marker.\n            byte [] buffer = new byte[2048];\n            StringBuilder messageData = new StringBuilder();\n            int bytes = -1;\n            do\n            {\n                bytes = sslStream.Read(buffer, 0, buffer.Length);\n                        \n                // Use Decoder class to convert from bytes to UTF8\n                // in case a character spans two buffers.\n                Decoder decoder = Encoding.UTF8.GetDecoder();\n                char[] chars = new char[decoder.GetCharCount(buffer,0,bytes)];\n                decoder.GetChars(buffer, 0, bytes, chars,0);\n                messageData.Append (chars);\n                // Check for EOF.\n                if (messageData.ToString().IndexOf(&quot;&lt;EOF&gt;&quot;) != -1)\n                {\n                    break;\n                }\n            } while (bytes != 0); \n            \n            return messageData.ToString();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Seek_System_Int64_System_IO_SeekOrigin_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Seek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Seek(Int64,SeekOrigin)</div>        \r\n          </div>\r\n    \r\n            <p>Throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Seek (long offset, System.IO.SeekOrigin origin);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This value is ignored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This value is ignored.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>Always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Seeking is not supported by <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not call this method. It is inherited, but is not supported by the <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_SetLength_System_Int64_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_SetLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLength(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the length of the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetLength (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the length of the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method invokes <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_SetLength_\" data-linktype=\"relative-path\">SetLength</a> on the underlying stream specified when this <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> was created.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Write_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified data to this stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that supplies the bytes written to the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The write operation failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>There is already a write operation in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method blocks while the operation completes. To prevent blocking while the operation completes, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method.  </p>\n<p> You cannot call this method until you have successfully authenticated. To authenticate call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class does not support multiple simultaneous write operations.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates writing to an authenticated <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclSslServerSync#1\">   static void ProcessClient( TcpClient^ client )\n   {\n      \n      // A client has connected. Create the \n      // SslStream using the client&#39;s network stream.\n      SslStream^ sslStream = gcnew SslStream( client-&gt;GetStream(),false );\n      \n      // Authenticate the server but don&#39;t require the client to authenticate.\n      try\n      {\n         sslStream-&gt;AuthenticateAsServer( serverCertificate, false, \n             SslProtocols::Tls, true );\n         \n         // Display the properties and settings for the authenticated stream.\n         DisplaySecurityLevel( sslStream );\n         DisplaySecurityServices( sslStream );\n         DisplayCertificateInformation( sslStream );\n         DisplayStreamProperties( sslStream );\n         \n         // Set timeouts for the read and write to 5 seconds.\n         sslStream-&gt;ReadTimeout = 5000;\n         sslStream-&gt;WriteTimeout = 5000;\n         \n         // Read a message from the client.   \n         Console::WriteLine( L&quot;Waiting for client message...&quot; );\n         String^ messageData = ReadMessage( sslStream );\n         Console::WriteLine( L&quot;Received: {0}&quot;, messageData );\n         \n         // Write a message to the client.\n         array&lt;Byte&gt;^message = Encoding::UTF8-&gt;GetBytes( L&quot;Hello from the server.&lt;EOF&gt;&quot; );\n         Console::WriteLine( L&quot;Sending hello message.&quot; );\n         sslStream-&gt;Write( message );\n      }\n      catch ( AuthenticationException^ e ) \n      {\n         Console::WriteLine( L&quot;Exception: {0}&quot;, e-&gt;Message );\n         if ( e-&gt;InnerException != nullptr )\n         {\n            Console::WriteLine( L&quot;Inner exception: {0}&quot;, e-&gt;InnerException-&gt;Message );\n         }\n         Console::WriteLine( L&quot;Authentication failed - closing the connection.&quot; );\n         sslStream-&gt;Close();\n         client-&gt;Close();\n         return;\n      }\n      finally\n      {\n         \n         // The client stream will be closed with the sslStream\n         // because we specified this behavior when creating\n         // the sslStream.\n         sslStream-&gt;Close();\n         client-&gt;Close();\n      }\n\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclSslServerSync#1\">        static void ProcessClient (TcpClient client)\n        {\n            // A client has connected. Create the \n            // SslStream using the client&#39;s network stream.\n            SslStream sslStream = new SslStream(\n                client.GetStream(), false);\n            // Authenticate the server but don&#39;t require the client to authenticate.\n            try \n            {\n                sslStream.AuthenticateAsServer(serverCertificate, \n                    false, SslProtocols.Tls, true);\n                // Display the properties and settings for the authenticated stream.\n                DisplaySecurityLevel(sslStream);\n                DisplaySecurityServices(sslStream);\n                DisplayCertificateInformation(sslStream);\n                DisplayStreamProperties(sslStream);\n\n                // Set timeouts for the read and write to 5 seconds.\n                sslStream.ReadTimeout = 5000;\n                sslStream.WriteTimeout = 5000;\n                // Read a message from the client.   \n                Console.WriteLine(&quot;Waiting for client message...&quot;);\n                string messageData = ReadMessage(sslStream);\n                Console.WriteLine(&quot;Received: {0}&quot;, messageData);\n                \n                // Write a message to the client.\n                byte[] message = Encoding.UTF8.GetBytes(&quot;Hello from the server.&lt;EOF&gt;&quot;);\n                Console.WriteLine(&quot;Sending hello message.&quot;);\n                sslStream.Write(message);\n            }\n            catch (AuthenticationException e)\n            {\n                Console.WriteLine(&quot;Exception: {0}&quot;, e.Message);\n                if (e.InnerException != null)\n                {\n                    Console.WriteLine(&quot;Inner exception: {0}&quot;, e.InnerException.Message);\n                }\n                Console.WriteLine (&quot;Authentication failed - closing the connection.&quot;);\n                sslStream.Close();\n                client.Close();\n                return;\n            }\n            finally\n            {\n                // The client stream will be closed with the sslStream\n                // because we specified this behavior when creating\n                // the sslStream.\n                sslStream.Close();\n                client.Close();\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Security_SslStream_Write_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Security_SslStream_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Write the specified number of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>s to the underlying stream using the specified buffer and offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that supplies the bytes written to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains the number of bytes to read from <code>buffer</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code>\n    <code>&lt;</code>\n    <code>0</code>.  </p>\n<p> <code>-or-</code><code>offset</code> &gt; the length of <code>buffer</code>.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> + count &gt; the length of <code>buffer</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The write operation failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>There is already a write operation in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Authentication has not occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method blocks while the operation completes. To prevent blocking while the operation completes the operation completes, use the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method.  </p>\n<p> You cannot call this method until you have successfully authenticated. To authenticate call one of the <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsClient_\" data-linktype=\"relative-path\">AuthenticateAsClient</a>, or <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsClient_\" data-linktype=\"relative-path\">BeginAuthenticateAsClient</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_AuthenticateAsServer_\" data-linktype=\"relative-path\">AuthenticateAsServer</a>, <a class=\"xref\" href=\"system.net.security.sslstream#System_Net_Security_SslStream_BeginAuthenticateAsServer_\" data-linktype=\"relative-path\">BeginAuthenticateAsServer</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.security.sslstream\" data-linktype=\"relative-path\">SslStream</a> class does not support multiple simultaneous write operations.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Security.SslStream.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Security.SslStream.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.AuthenticateAsClient\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.AuthenticateAsClientAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.AuthenticateAsServer\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.AuthenticateAsServerAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.BeginAuthenticateAsClient\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.BeginAuthenticateAsServer\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.BeginRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.BeginWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CanRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CanSeek\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CanTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CheckCertRevocationStatus\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CipherAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.CipherStrength\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.EndAuthenticateAsClient\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.EndAuthenticateAsServer\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.EndRead\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.EndWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Flush\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.HashAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.HashStrength\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.IsAuthenticated\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.IsEncrypted\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.IsMutuallyAuthenticated\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.IsServer\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.IsSigned\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.KeyExchangeAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.KeyExchangeStrength\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Length\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.LocalCertificate\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Position\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Read\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.ReadTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.RemoteCertificate\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Seek\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.SetLength\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.SslProtocol\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.TransportContext\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.Write\">\r\n<meta name=\"APIName\" content=\"System.Net.Security.SslStream.WriteTimeout\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4481d9b7-af06-d055-6757-a193d5df0527\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net.Security\\SslStream.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Security/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Security.SslStream\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Security.SslStream.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Security.SslStream.yml","open_to_public_contributors":true,"api_name":["System.Net.Security.SslStream","System.Net.Security.SslStream..ctor","System.Net.Security.SslStream.AuthenticateAsClient","System.Net.Security.SslStream.AuthenticateAsClientAsync","System.Net.Security.SslStream.AuthenticateAsServer","System.Net.Security.SslStream.AuthenticateAsServerAsync","System.Net.Security.SslStream.BeginAuthenticateAsClient","System.Net.Security.SslStream.BeginAuthenticateAsServer","System.Net.Security.SslStream.BeginRead","System.Net.Security.SslStream.BeginWrite","System.Net.Security.SslStream.CanRead","System.Net.Security.SslStream.CanSeek","System.Net.Security.SslStream.CanTimeout","System.Net.Security.SslStream.CanWrite","System.Net.Security.SslStream.CheckCertRevocationStatus","System.Net.Security.SslStream.CipherAlgorithm","System.Net.Security.SslStream.CipherStrength","System.Net.Security.SslStream.Dispose","System.Net.Security.SslStream.EndAuthenticateAsClient","System.Net.Security.SslStream.EndAuthenticateAsServer","System.Net.Security.SslStream.EndRead","System.Net.Security.SslStream.EndWrite","System.Net.Security.SslStream.Flush","System.Net.Security.SslStream.HashAlgorithm","System.Net.Security.SslStream.HashStrength","System.Net.Security.SslStream.IsAuthenticated","System.Net.Security.SslStream.IsEncrypted","System.Net.Security.SslStream.IsMutuallyAuthenticated","System.Net.Security.SslStream.IsServer","System.Net.Security.SslStream.IsSigned","System.Net.Security.SslStream.KeyExchangeAlgorithm","System.Net.Security.SslStream.KeyExchangeStrength","System.Net.Security.SslStream.Length","System.Net.Security.SslStream.LocalCertificate","System.Net.Security.SslStream.Position","System.Net.Security.SslStream.Read","System.Net.Security.SslStream.ReadTimeout","System.Net.Security.SslStream.RemoteCertificate","System.Net.Security.SslStream.Seek","System.Net.Security.SslStream.SetLength","System.Net.Security.SslStream.SslProtocol","System.Net.Security.SslStream.TransportContext","System.Net.Security.SslStream.Write","System.Net.Security.SslStream.WriteTimeout"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Security.SslStream","System::Net::Security::SslStream","System.Net.Security.SslStream.#ctor","System::Net::Security::SslStream::#ctor","System.Net.Security.SslStream.AuthenticateAsClient","System::Net::Security::SslStream::AuthenticateAsClient","System.Net.Security.SslStream.AuthenticateAsClientAsync","System::Net::Security::SslStream::AuthenticateAsClientAsync","System.Net.Security.SslStream.AuthenticateAsServer","System::Net::Security::SslStream::AuthenticateAsServer","System.Net.Security.SslStream.AuthenticateAsServerAsync","System::Net::Security::SslStream::AuthenticateAsServerAsync","System.Net.Security.SslStream.BeginAuthenticateAsClient","System::Net::Security::SslStream::BeginAuthenticateAsClient","System.Net.Security.SslStream.BeginAuthenticateAsServer","System::Net::Security::SslStream::BeginAuthenticateAsServer","System.Net.Security.SslStream.BeginRead","System::Net::Security::SslStream::BeginRead","System.Net.Security.SslStream.BeginWrite","System::Net::Security::SslStream::BeginWrite","System.Net.Security.SslStream.CanRead","System::Net::Security::SslStream::CanRead","System.Net.Security.SslStream.CanSeek","System::Net::Security::SslStream::CanSeek","System.Net.Security.SslStream.CanTimeout","System::Net::Security::SslStream::CanTimeout","System.Net.Security.SslStream.CanWrite","System::Net::Security::SslStream::CanWrite","System.Net.Security.SslStream.CheckCertRevocationStatus","System::Net::Security::SslStream::CheckCertRevocationStatus","System.Net.Security.SslStream.CipherAlgorithm","System::Net::Security::SslStream::CipherAlgorithm","System.Net.Security.SslStream.CipherStrength","System::Net::Security::SslStream::CipherStrength","System.Net.Security.SslStream.Dispose","System::Net::Security::SslStream::Dispose","System.Net.Security.SslStream.EndAuthenticateAsClient","System::Net::Security::SslStream::EndAuthenticateAsClient","System.Net.Security.SslStream.EndAuthenticateAsServer","System::Net::Security::SslStream::EndAuthenticateAsServer","System.Net.Security.SslStream.EndRead","System::Net::Security::SslStream::EndRead","System.Net.Security.SslStream.EndWrite","System::Net::Security::SslStream::EndWrite","System.Net.Security.SslStream.Flush","System::Net::Security::SslStream::Flush","System.Net.Security.SslStream.HashAlgorithm","System::Net::Security::SslStream::HashAlgorithm","System.Net.Security.SslStream.HashStrength","System::Net::Security::SslStream::HashStrength","System.Net.Security.SslStream.IsAuthenticated","System::Net::Security::SslStream::IsAuthenticated","System.Net.Security.SslStream.IsEncrypted","System::Net::Security::SslStream::IsEncrypted","System.Net.Security.SslStream.IsMutuallyAuthenticated","System::Net::Security::SslStream::IsMutuallyAuthenticated","System.Net.Security.SslStream.IsServer","System::Net::Security::SslStream::IsServer","System.Net.Security.SslStream.IsSigned","System::Net::Security::SslStream::IsSigned","System.Net.Security.SslStream.KeyExchangeAlgorithm","System::Net::Security::SslStream::KeyExchangeAlgorithm","System.Net.Security.SslStream.KeyExchangeStrength","System::Net::Security::SslStream::KeyExchangeStrength","System.Net.Security.SslStream.Length","System::Net::Security::SslStream::Length","System.Net.Security.SslStream.LocalCertificate","System::Net::Security::SslStream::LocalCertificate","System.Net.Security.SslStream.Position","System::Net::Security::SslStream::Position","System.Net.Security.SslStream.Read","System::Net::Security::SslStream::Read","System.Net.Security.SslStream.ReadTimeout","System::Net::Security::SslStream::ReadTimeout","System.Net.Security.SslStream.RemoteCertificate","System::Net::Security::SslStream::RemoteCertificate","System.Net.Security.SslStream.Seek","System::Net::Security::SslStream::Seek","System.Net.Security.SslStream.SetLength","System::Net::Security::SslStream::SetLength","System.Net.Security.SslStream.SslProtocol","System::Net::Security::SslStream::SslProtocol","System.Net.Security.SslStream.TransportContext","System::Net::Security::SslStream::TransportContext","System.Net.Security.SslStream.Write","System::Net::Security::SslStream::Write","System.Net.Security.SslStream.WriteTimeout","System::Net::Security::SslStream::WriteTimeout"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4481d9b7-af06-d055-6757-a193d5df0527","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net.Security\\SslStream.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Security/SslStream.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SslStream class | Microsoft Docs","_op_ogTitle":"SslStream class","description":"Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.\n","toc_asset_id":"_splitted/System.Net.Security/toc.json","toc_rel":"_splitted/System.Net.Security/toc.json","source_url":"","ms.assetid":"System.Net.Security.SslStream","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.security.sslstream","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.security.sslstream","fileRelativePath":"System.Net.Security.SslStream.html"},"themesRelativePathToOutputRoot":"_themes/"}