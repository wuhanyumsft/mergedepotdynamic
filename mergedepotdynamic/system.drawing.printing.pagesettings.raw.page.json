{"content":"    \r\n    <h1 id=\"System_Drawing_Printing_PageSettings\">\r\n      <span class=\"lang-csharp\">PageSettings</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies settings that apply to a single, printed page.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class PageSettings : ICloneable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PageSettings</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The PageSettings class is used to specify settings that modify the way a page will be printed. Typically, you set default settings for all pages to be printed through the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_DefaultPageSettings_\" data-linktype=\"relative-path\">DefaultPageSettings</a> property. To specify settings on a page-by-page basis, handle the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_PrintPage\" data-linktype=\"relative-path\">System.Drawing.Printing.PrintDocument.PrintPage</a> or <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_QueryPageSettings\" data-linktype=\"relative-path\">System.Drawing.Printing.PrintDocument.QueryPageSettings</a> event and modify the PageSettings argument included in the <a class=\"xref\" href=\"system.drawing.printing.printpageeventargs\" data-linktype=\"relative-path\">PrintPageEventArgs</a> or <a class=\"xref\" href=\"system.drawing.printing.querypagesettingseventargs\" data-linktype=\"relative-path\">QueryPageSettingsEventArgs</a>, respectively.  </p>\n<p> For more information about handling <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> events, see the <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> class overview. For more information about printing, see the <a class=\"xref\" href=\"system.drawing.printing\" data-linktype=\"relative-path\">System.Drawing.Printing</a> namespace overview.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings__ctor\" data-linktype=\"self-bookmark\">PageSettings()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> class using the default printer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings__ctor_System_Drawing_Printing_PrinterSettings_\" data-linktype=\"self-bookmark\">PageSettings(PrinterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> class using a specified printer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_Bounds\" data-linktype=\"self-bookmark\">Bounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size of the page, taking into account the page orientation specified by the <span class=\"xref\">stem.Drawing.Printing.PageSettings.Landscape*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_Color\" data-linktype=\"self-bookmark\">Color</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the page should be printed in color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_HardMarginX\" data-linktype=\"self-bookmark\">HardMarginX</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the x-coordinate, in hundredths of an inch, of the hard margin at the left of the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_HardMarginY\" data-linktype=\"self-bookmark\">HardMarginY</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_Landscape\" data-linktype=\"self-bookmark\">Landscape</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_Margins\" data-linktype=\"self-bookmark\">Margins</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the margins for this page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_PaperSize\" data-linktype=\"self-bookmark\">PaperSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the paper size for the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_PaperSource\" data-linktype=\"self-bookmark\">PaperSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the page&#39;s paper source; for example, the printer&#39;s upper tray.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_PrintableArea\" data-linktype=\"self-bookmark\">PrintableArea</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the bounds of the printable area of the page for the printer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_PrinterResolution\" data-linktype=\"self-bookmark\">PrinterResolution</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the printer resolution for the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_PrinterSettings\" data-linktype=\"self-bookmark\">PrinterSettings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the printer settings associated with the page.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of this <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_CopyToHdevmode_System_IntPtr_\" data-linktype=\"self-bookmark\">CopyToHdevmode(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the relevant information from the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> to the specified <code>DEVMODE</code>structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_SetHdevmode_System_IntPtr_\" data-linktype=\"self-bookmark\">SetHdevmode(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies relevant information to the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> from the specified <code>DEVMODE</code> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Printing_PageSettings_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> to string form.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings__ctor\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageSettings()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> class using the default printer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PageSettings ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor initializes all fields to their default values.  </p>\n<p> Typically, you do not create an instance of <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>, but instead use the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_DefaultPageSettings_\" data-linktype=\"relative-path\">DefaultPageSettings</a> to set settings for all pages.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings__ctor_System_Drawing_Printing_PrinterSettings_\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageSettings(PrinterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> class using a specified printer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PageSettings (System.Drawing.Printing.PrinterSettings printerSettings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>printerSettings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.printersettings\" data-linktype=\"relative-path\">PrinterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.printing.printersettings\" data-linktype=\"relative-path\">PrinterSettings</a> that describes the printer to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PageSettings constructor is similar to initializing a new instance of <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> and setting the <a class=\"xref\" href=\"system.drawing.printing.pagesettings#System_Drawing_Printing_PageSettings_PrinterSettings_\" data-linktype=\"relative-path\">PrinterSettings</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_Bounds\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_Bounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size of the page, taking into account the page orientation specified by the <span class=\"xref\">stem.Drawing.Printing.PageSettings.Landscape*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle Bounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the length and width, in hundredths of an inch, of the page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Bounds property along with the <a class=\"xref\" href=\"system.drawing.printing.pagesettings#System_Drawing_Printing_PageSettings_Margins_\" data-linktype=\"relative-path\">Margins</a> property to calculate the printing area for the page.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_Color\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_Color_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Color</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the page should be printed in color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Color { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the page should be printed in color; otherwise, <code>false</code>. The default is determined by the printer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <a class=\"xref\" href=\"system.drawing.printing.printersettings#System_Drawing_Printing_PrinterSettings_SupportsColor_\" data-linktype=\"relative-path\">SupportsColor</a> property to determine if the printer supports color printing. If the printer supports color, but you do not want to print in color, set the Color property to <code>false</code>. The default will be <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> variable named <code>printDoc</code> has been created, and the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_PrintPage\" data-linktype=\"relative-path\">PrintPage</a> and <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_QueryPageSettings\" data-linktype=\"relative-path\">QueryPageSettings</a> events are handled.  </p>\n<p> Use the <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a> and <a class=\"xref\" href=\"system.drawing.printing\" data-linktype=\"relative-path\">System.Drawing.Printing</a> namespaces for this example.  </p>\n<pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#6\">\n    private void MyButtonPrint_OnClick(object sender, System.EventArgs e)\n    {\n        \n        // Set the printer name and ensure it is valid. If not, provide a message to the user.\n        printDoc.PrinterSettings.PrinterName = &quot;\\\\mynetworkprinter&quot;;\n\n        if (printDoc.PrinterSettings.IsValid) {\n        \n            // If the printer supports printing in color, then override the printer&#39;s default behavior.\n            if (printDoc.PrinterSettings.SupportsColor) {\n\n                // Set the page default&#39;s to not print in color.\n                printDoc.DefaultPageSettings.Color = false;\n            }\n\n            // Provide a friendly name, set the page number, and print the document.\n            printDoc.DocumentName = &quot;My Presentation&quot;;\n            currentPageNumber = 1;\n            printDoc.Print();\n        }\n        else {\n            MessageBox.Show(&quot;Printer is not valid&quot;);\n        }\n    }\n\n    private void MyPrintQueryPageSettingsEvent(object sender, QueryPageSettingsEventArgs e)\n    {\n        // Determines if the printer supports printing in color.\n        if (printDoc.PrinterSettings.SupportsColor) {\n\n            // If the printer supports color printing, use color.\n            if (currentPageNumber == 1 ) {\n\n                e.PageSettings.Color = true;\n            }\n\n        }    \n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#6\">   private:\n      void MyButtonPrint_OnClick( Object^ sender, System::EventArgs^ e )\n      {\n         // Set the printer name and ensure it is valid. If not, provide a message to the user.\n         printDoc-&gt;PrinterSettings-&gt;PrinterName = &quot;\\\\mynetworkprinter&quot;;\n         if ( printDoc-&gt;PrinterSettings-&gt;IsValid )\n         {\n            // If the printer supports printing in color, then override the printer&#39;s default behavior.\n            if ( printDoc-&gt;PrinterSettings-&gt;SupportsColor )\n            {\n               // Set the page default&#39;s to not print in color.\n               printDoc-&gt;DefaultPageSettings-&gt;Color = false;\n            }\n\n            // Provide a friendly name, set the page number, and print the document.\n            printDoc-&gt;DocumentName = &quot;My Presentation&quot;;\n            currentPageNumber = 1;\n            printDoc-&gt;Print();\n         }\n         else\n         {\n            MessageBox::Show( &quot;Printer is not valid&quot; );\n         }\n      }\n\n      void MyPrintQueryPageSettingsEvent( Object^ sender, QueryPageSettingsEventArgs^ e )\n      {\n         // Determines if the printer supports printing in color.\n         if ( printDoc-&gt;PrinterSettings-&gt;SupportsColor )\n         {\n            // If the printer supports color printing, use color.\n            if ( currentPageNumber == 1 )\n            {\n               e-&gt;PageSettings-&gt;Color = true;\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#6\">\n    Private Sub MyButtonPrint_OnClick(ByVal sender As Object, ByVal e As System.EventArgs)\n\n        &#39; Set the printer name and ensure it is valid. If not, provide a message to the user.\n        printDoc.PrinterSettings.PrinterName = &quot;\\\\mynetworkprinter&quot;\n\n        If printDoc.PrinterSettings.IsValid Then\n\n            &#39; If the printer supports printing in color, then override the printer&#39;s default behavior.\n            if printDoc.PrinterSettings.SupportsColor then\n\n                &#39; Set the page default&#39;s to not print in color.\n                printDoc.DefaultPageSettings.Color = False\n            End If\n\n            &#39; Provide a friendly name, set the page number, and print the document.\n            printDoc.DocumentName = &quot;My Presentation&quot;\n            currentPageNumber = 1\n            printDoc.Print()\n        Else\n            MessageBox.Show(&quot;Printer is not valid&quot;)\n        End If\n    End Sub\n\n    Private Sub MyPrintQueryPageSettingsEvent(ByVal sender As Object, ByVal e As QueryPageSettingsEventArgs)\n\n        &#39; Determines if the printer supports printing in color.\n        If printDoc.PrinterSettings.SupportsColor Then\n\n            &#39; If the printer supports color printing, use color.\n            If currentPageNumber = 1 Then\n\n                e.PageSettings.Color = True\n            End If\n\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_HardMarginX\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_HardMarginX_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HardMarginX</div>        \r\n          </div>\r\n    \r\n            <p>Gets the x-coordinate, in hundredths of an inch, of the hard margin at the left of the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float HardMarginX { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The x-coordinate, in hundredths of an inch, of the left-hand hard margin.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The hard margin represents the physical margin set by the printer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_HardMarginY\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_HardMarginY_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HardMarginY</div>        \r\n          </div>\r\n    \r\n            <p>Gets the y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float HardMarginY { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The y-coordinate, in hundredths of an inch, of the hard margin at the top of the page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The hard margin represents the physical margin set by the printer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_Landscape\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_Landscape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Landscape</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the page is printed in landscape or portrait orientation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Landscape { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the page should be printed in landscape orientation; otherwise, <code>false</code>. The default is determined by the printer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <a class=\"xref\" href=\"system.drawing.printing.printersettings#System_Drawing_Printing_PrinterSettings_LandscapeAngle_\" data-linktype=\"relative-path\">LandscapeAngle</a> property to determine the angle, in degrees, that the portrait orientation is rotated to produce the landscape orientation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets a document&#39;s default page orientation to landscape through the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_DefaultPageSettings_\" data-linktype=\"relative-path\">DefaultPageSettings</a> property, and prints the document. The example has three prerequisites:  </p>\n<ul>\n<li><p>A variable named <code>filePath</code> has been set to the path of the file to print.  </p>\n</li>\n<li><p>A method named <code>pd_PrintPage</code>, which handles the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_PrintPage\" data-linktype=\"relative-path\">PrintPage</a> event, has been defined.  </p>\n</li>\n<li><p>A variable named <code>printer</code> has been set to the printer&#39;s name.  </p>\n<p>Use the <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a>, <a class=\"xref\" href=\"system.drawing.printing\" data-linktype=\"relative-path\">System.Drawing.Printing</a>, and <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespaces for this example.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic PageSettings Example#1\">public:\n   void Printing()\n   {\n      try\n      {\n         streamToPrint = gcnew StreamReader( filePath );\n         try\n         {\n            printFont = gcnew Font( &quot;Arial&quot;,10 );\n            PrintDocument^ pd = gcnew PrintDocument;\n            pd-&gt;PrintPage += gcnew PrintPageEventHandler(\n               this, &amp;Sample::pd_PrintPage );\n            pd-&gt;PrinterSettings-&gt;PrinterName = printer;\n            // Set the page orientation to landscape.\n            pd-&gt;DefaultPageSettings-&gt;Landscape = true;\n            pd-&gt;Print();\n         }\n         finally\n         {\n            streamToPrint-&gt;Close();\n         }\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic PageSettings Example#1\"> Public Sub Printing()\n     Try\n         streamToPrint = New StreamReader(filePath)\n         Try\n             printFont = New Font(&quot;Arial&quot;, 10)\n             Dim pd As New PrintDocument()\n             AddHandler pd.PrintPage, AddressOf pd_PrintPage\n             pd.PrinterSettings.PrinterName = printer\n             &#39; Set the page orientation to landscape.\n             pd.DefaultPageSettings.Landscape = True\n             pd.Print()\n         Finally\n             streamToPrint.Close()\n         End Try\n     Catch ex As Exception\n         MessageBox.Show(ex.Message)\n     End Try\n End Sub\n        \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic PageSettings Example#1\">public void Printing() {\n   try {\n     streamToPrint = new StreamReader (filePath);\n     try {\n       printFont = new Font(&quot;Arial&quot;, 10);\n       PrintDocument pd = new PrintDocument(); \n       pd.PrintPage += new PrintPageEventHandler(pd_PrintPage);\n       pd.PrinterSettings.PrinterName = printer;\n       // Set the page orientation to landscape.\n       pd.DefaultPageSettings.Landscape = true;\n       pd.Print();\n     } \n     finally {\n       streamToPrint.Close() ;\n     }\n   } \n   catch(Exception ex) { \n     MessageBox.Show(ex.Message);\n   }\n }\n \n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_Margins\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_Margins_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Margins</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the margins for this page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Printing.Margins Margins { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.margins\" data-linktype=\"relative-path\">Margins</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.printing.margins\" data-linktype=\"relative-path\">Margins</a> that represents the margins, in hundredths of an inch, for the page. The default is 1-inch margins on all sides.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When handling the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_PrintPage\" data-linktype=\"relative-path\">System.Drawing.Printing.PrintDocument.PrintPage</a> event, you can use this property along with the <a class=\"xref\" href=\"system.drawing.printing.pagesettings#System_Drawing_Printing_PageSettings_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property to calculate the printing area for the page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the default page settings for a document to margins to 1 inch on each side. The example has three prerequisites:  </p>\n<ul>\n<li><p>A variable named <code>filePath</code> has been set to the path of the file to print.  </p>\n</li>\n<li><p>A method named <code>pd_PrintPage</code>, which handles the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_PrintPage\" data-linktype=\"relative-path\">PrintPage</a> event, has been defined.  </p>\n</li>\n<li><p>A variable named <code>printer</code> has been set to the printer&#39;s name.  </p>\n<p>Use the <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a>, <a class=\"xref\" href=\"system.drawing.printing\" data-linktype=\"relative-path\">System.Drawing.Printing</a>, and <a class=\"xref\" href=\"system.io\" data-linktype=\"relative-path\">System.IO</a> namespaces for this example.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic PageSettings.Margins Example#1\">public void Printing(){\n   try{\n     streamToPrint = new StreamReader (filePath);\n     try{\n       printFont = new Font(&quot;Arial&quot;, 10);\n       PrintDocument pd = new PrintDocument(); \n       pd.PrintPage += new PrintPageEventHandler(pd_PrintPage);\n       pd.PrinterSettings.PrinterName = printer;\n       // Create a new instance of Margins with 1-inch margins.\n       Margins margins = new Margins(100,100,100,100);\n       pd.DefaultPageSettings.Margins = margins;\n       pd.Print();\n     } \n     finally{\n       streamToPrint.Close() ;\n     }\n   } \n   catch(Exception ex){ \n     MessageBox.Show(ex.Message);\n   }\n }\n \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic PageSettings.Margins Example#1\">public:\n   void Printing()\n   {\n      try\n      {\n         streamToPrint = gcnew StreamReader( filePath );\n         try\n         {\n            printFont = gcnew Font( &quot;Arial&quot;,10 );\n            PrintDocument^ pd = gcnew PrintDocument;\n            pd-&gt;PrintPage += gcnew PrintPageEventHandler(\n               this, &amp;Sample::pd_PrintPage );\n            pd-&gt;PrinterSettings-&gt;PrinterName = printer;\n            // Create a new instance of Margins with 1-inch margins.\n            Margins^ margins = gcnew Margins( 100,100,100,100 );\n            pd-&gt;DefaultPageSettings-&gt;Margins = margins;\n            pd-&gt;Print();\n         }\n         finally\n         {\n            streamToPrint-&gt;Close();\n         }\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic PageSettings.Margins Example#1\"> Public Sub Printing()\n     Try\n         streamToPrint = New StreamReader(filePath)\n         Try\n             printFont = New Font(&quot;Arial&quot;, 10)\n             Dim pd As New PrintDocument()\n             AddHandler pd.PrintPage, AddressOf pd_PrintPage\n             pd.PrinterSettings.PrinterName = printer\n             &#39; Create a new instance of Margins with 1-inch margins.\n             Dim margins As New Margins(100, 100, 100, 100)\n             pd.DefaultPageSettings.Margins = margins\n             pd.Print()\n         Finally\n             streamToPrint.Close()\n         End Try\n     Catch ex As Exception\n         MessageBox.Show(ex.Message)\n     End Try\n End Sub &#39;Printing\n       \n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_PaperSize\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_PaperSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaperSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the paper size for the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Printing.PaperSize PaperSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.papersize\" data-linktype=\"relative-path\">PaperSize</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.printing.papersize\" data-linktype=\"relative-path\">PaperSize</a> that represents the size of the paper. The default is the printer&#39;s default paper size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist or there is no default printer installed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.printing.papersize\" data-linktype=\"relative-path\">PaperSize</a> represents the size of the paper through the <a class=\"xref\" href=\"system.drawing.printing.papersize#System_Drawing_Printing_PaperSize_Kind_\" data-linktype=\"relative-path\">Kind</a> property, which contains one of the <a class=\"xref\" href=\"system.drawing.printing.paperkind\" data-linktype=\"relative-path\">PaperKind</a> values.  </p>\n<p> Set the PaperSize property for the page to a valid <a class=\"xref\" href=\"system.drawing.printing.papersize\" data-linktype=\"relative-path\">PaperSize</a>, available through the <a class=\"xref\" href=\"system.drawing.printing.printersettings#System_Drawing_Printing_PrinterSettings_PaperSizes_\" data-linktype=\"relative-path\">PaperSizes</a> collection.  </p>\n<p> For information about how you can specify a custom paper size, see the <a class=\"xref\" href=\"system.drawing.printing.papersize#System_Drawing_Printing_PaperSize__ctor_\" data-linktype=\"relative-path\">PaperSize</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets three properties for the document&#39;s default page, including the paper size based upon the size selected in the <code>comboPaperSize</code> combo box, and then prints the document using the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_Print_\" data-linktype=\"relative-path\">Print</a> method. The example requires that a <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> variable named <code>printDoc</code> exists and that the specific combo boxes exist.  </p>\n<pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#1\">            // Add list of supported paper sizes found on the printer. \n            // The DisplayMember property is used to identify the property that will provide the display string.\n            comboPaperSize.DisplayMember = &quot;PaperName&quot;;\n\n            PaperSize pkSize;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PaperSizes.Count; i++){\n                pkSize = printDoc.PrinterSettings.PaperSizes[i];\n                comboPaperSize.Items.Add(pkSize);\n            }\n\n            // Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n            PaperSize pkCustomSize1 = new PaperSize(&quot;First custom size&quot;, 100, 200);\n\n            comboPaperSize.Items.Add(pkCustomSize1);\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#1\">         // Add list of supported paper sizes found on the printer.\n         // The DisplayMember property is used to identify the property that will provide the display String*.\n         comboPaperSize-&gt;DisplayMember = &quot;PaperName&quot;;\n         PaperSize^ pkSize;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PaperSizes-&gt;Count; i++ )\n         {\n            pkSize = printDoc-&gt;PrinterSettings-&gt;PaperSizes[ i ];\n            comboPaperSize-&gt;Items-&gt;Add( pkSize );\n         }\n\n         // Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n         PaperSize^ pkCustomSize1 = gcnew PaperSize( &quot;First custom size&quot;,100,200 );\n         comboPaperSize-&gt;Items-&gt;Add( pkCustomSize1 );\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#1\">        &#39; Add list of supported paper sizes found on the printer. \n        &#39; The DisplayMember property is used to identify the property that will provide the display string.\n        comboPaperSize.DisplayMember = &quot;PaperName&quot;\n\n        Dim pkSize As PaperSize\n        For i = 0 to printDoc.PrinterSettings.PaperSizes.Count - 1\n            pkSize = printDoc.PrinterSettings.PaperSizes.Item(i)\n            comboPaperSize.Items.Add(pkSize)\n        Next\n\n        &#39; Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n        Dim pkCustomSize1 As New PaperSize(&quot;Custom Paper Size&quot;, 100, 200)\n\n        comboPaperSize.Items.Add(pkCustomSize1)\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#2\">            // Add list of paper sources found on the printer to the combo box.\n            // The DisplayMember property is used to identify the property that will provide the display string.\n            comboPaperSource.DisplayMember=&quot;SourceName&quot;;\n\n            PaperSource pkSource;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PaperSources.Count; i++){\n                pkSource = printDoc.PrinterSettings.PaperSources[i];\n                comboPaperSource.Items.Add(pkSource);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#2\">         // Add list of paper sources found on the printer to the combo box.\n         // The DisplayMember property is used to identify the property that will provide the display String*.\n         comboPaperSource-&gt;DisplayMember = &quot;SourceName&quot;;\n         PaperSource^ pkSource;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PaperSources-&gt;Count; i++ )\n         {\n            pkSource = printDoc-&gt;PrinterSettings-&gt;PaperSources[ i ];\n            comboPaperSource-&gt;Items-&gt;Add( pkSource );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#2\">        &#39; Add list of paper sources found on the printer to the combo box.\n        &#39; The DisplayMember property is used to identify the property that will provide the display string.\n        comboPaperSource.DisplayMember = &quot;SourceName&quot;\n        \n        Dim pkSource As PaperSource\n        For i = 0 to printDoc.PrinterSettings.PaperSources.Count - 1\n            pkSource = printDoc.PrinterSettings.PaperSources.Item(i)\n            comboPaperSource.Items.Add(pkSource)\n        Next\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#3\">            // Add list of printer resolutions found on the printer to the combobox.\n            // The PrinterResolution&#39;s ToString() method will be used to provide the display string.\n\n            PrinterResolution pkResolution;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PrinterResolutions.Count; i++){\n                pkResolution = printDoc.PrinterSettings.PrinterResolutions[i];\n                comboPrintResolution.Items.Add(pkResolution);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#3\">         // Add list of printer resolutions found on the printer to the combobox.\n         // The PrinterResolution&#39;s ToString() method will be used to provide the display String.\n         PrinterResolution^ pkResolution;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PrinterResolutions-&gt;Count; i++ )\n         {\n            pkResolution = printDoc-&gt;PrinterSettings-&gt;PrinterResolutions[ i ];\n            comboPrintResolution-&gt;Items-&gt;Add( pkResolution );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#3\">        &#39; Add list of printer resolutions found on the printer to the combobox.\n        &#39; The PrinterResolution&#39;s ToString() method will be used to provide the display string.\n        Dim pkResolution As PrinterResolution\n        For i = 0 to printDoc.PrinterSettings.PrinterResolutions.Count - 1\n            pkResolution = printDoc.PrinterSettings.PrinterResolutions.Item(i)\n            comboPrintResolution.Items.Add(pkResolution)\n        Next\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#4\">    private void MyButtonPrint_Click(object sender, System.EventArgs e)\n    {\n        // Set the paper size based upon the selection in the combo box.\n        if (comboPaperSize.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSize = \n                printDoc.PrinterSettings.PaperSizes[comboPaperSize.SelectedIndex];\n        }\n\n        // Set the paper source based upon the selection in the combo box.\n        if (comboPaperSource.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSource = \n                printDoc.PrinterSettings.PaperSources[comboPaperSource.SelectedIndex];\n        }\n        \n        // Set the printer resolution based upon the selection in the combo box.\n        if (comboPrintResolution.SelectedIndex != -1) \n        {\n            printDoc.DefaultPageSettings.PrinterResolution= \n                printDoc.PrinterSettings.PrinterResolutions[comboPrintResolution.SelectedIndex];\n        }\n\n        // Print the document with the specified paper size, source, and print resolution.\n        printDoc.Print();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#4\">   private:\n      void MyButtonPrint_Click( Object^ sender, System::EventArgs^ e )\n      {\n         // Set the paper size based upon the selection in the combo box.\n         if ( comboPaperSize-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSize = printDoc-&gt;PrinterSettings-&gt;PaperSizes[ comboPaperSize-&gt;SelectedIndex ];\n         }\n\n         // Set the paper source based upon the selection in the combo box.\n         if ( comboPaperSource-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSource = printDoc-&gt;PrinterSettings-&gt;PaperSources[ comboPaperSource-&gt;SelectedIndex ];\n         }\n\n         // Set the printer resolution based upon the selection in the combo box.\n         if ( comboPrintResolution-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PrinterResolution = printDoc-&gt;PrinterSettings-&gt;PrinterResolutions[ comboPrintResolution-&gt;SelectedIndex ];\n         }\n\n         // Print the document with the specified paper size, source, and print resolution.\n         printDoc-&gt;Print();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#4\">    Private Sub MyButtonPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyButtonPrint.Click\n\n        &#39; Set the paper size based upon the selection in the combo box.\n        If comboPaperSize.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSize = _\n            printDoc.PrinterSettings.PaperSizes.Item(comboPaperSize.SelectedIndex)\n        End If\n\n        &#39; Set the paper source based upon the selection in the combo box.\n        If comboPaperSource.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSource = _\n            printDoc.PrinterSettings.PaperSources.Item(comboPaperSource.SelectedIndex)\n        End If\n\n        &#39; Set the printer resolution based upon the selection in the combo box.\n        If comboPrintResolution.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PrinterResolution = _\n            printDoc.PrinterSettings.PrinterResolutions.Item(comboPrintResolution.SelectedIndex)\n        End If\n\n        &#39; Print the document with the specified paper size and source.\n        printDoc.Print()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_PaperSource\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_PaperSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaperSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the page&#39;s paper source; for example, the printer&#39;s upper tray.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Printing.PaperSource PaperSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.papersource\" data-linktype=\"relative-path\">PaperSource</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.printing.papersource\" data-linktype=\"relative-path\">PaperSource</a> that specifies the source of the paper. The default is the printer&#39;s default paper source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist or there is no default printer installed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.printing.papersource\" data-linktype=\"relative-path\">PaperSource</a> represents the source of the paper through the <a class=\"xref\" href=\"system.drawing.printing.papersource#System_Drawing_Printing_PaperSource_Kind_\" data-linktype=\"relative-path\">Kind</a> property, which contains one of the <a class=\"xref\" href=\"system.drawing.printing.papersourcekind\" data-linktype=\"relative-path\">PaperSourceKind</a> values.  </p>\n<p> Set the PaperSource property for the page to a valid <a class=\"xref\" href=\"system.drawing.printing.papersource\" data-linktype=\"relative-path\">PaperSource</a>, available through the <a class=\"xref\" href=\"system.drawing.printing.printersettings#System_Drawing_Printing_PrinterSettings_PaperSources_\" data-linktype=\"relative-path\">PaperSources</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets three properties for the document&#39;s default page, including the paper source based upon the source selected in the <code>comboPaperSource</code> combo box, and then prints the document using the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_Print_\" data-linktype=\"relative-path\">Print</a> method. The example requires that a <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> variable named <code>printDoc</code> exists and that the specific combo boxes exist.  </p>\n<pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#1\">            // Add list of supported paper sizes found on the printer. \n            // The DisplayMember property is used to identify the property that will provide the display string.\n            comboPaperSize.DisplayMember = &quot;PaperName&quot;;\n\n            PaperSize pkSize;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PaperSizes.Count; i++){\n                pkSize = printDoc.PrinterSettings.PaperSizes[i];\n                comboPaperSize.Items.Add(pkSize);\n            }\n\n            // Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n            PaperSize pkCustomSize1 = new PaperSize(&quot;First custom size&quot;, 100, 200);\n\n            comboPaperSize.Items.Add(pkCustomSize1);\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#1\">         // Add list of supported paper sizes found on the printer.\n         // The DisplayMember property is used to identify the property that will provide the display String*.\n         comboPaperSize-&gt;DisplayMember = &quot;PaperName&quot;;\n         PaperSize^ pkSize;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PaperSizes-&gt;Count; i++ )\n         {\n            pkSize = printDoc-&gt;PrinterSettings-&gt;PaperSizes[ i ];\n            comboPaperSize-&gt;Items-&gt;Add( pkSize );\n         }\n\n         // Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n         PaperSize^ pkCustomSize1 = gcnew PaperSize( &quot;First custom size&quot;,100,200 );\n         comboPaperSize-&gt;Items-&gt;Add( pkCustomSize1 );\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#1\">        &#39; Add list of supported paper sizes found on the printer. \n        &#39; The DisplayMember property is used to identify the property that will provide the display string.\n        comboPaperSize.DisplayMember = &quot;PaperName&quot;\n\n        Dim pkSize As PaperSize\n        For i = 0 to printDoc.PrinterSettings.PaperSizes.Count - 1\n            pkSize = printDoc.PrinterSettings.PaperSizes.Item(i)\n            comboPaperSize.Items.Add(pkSize)\n        Next\n\n        &#39; Create a PaperSize and specify the custom paper size through the constructor and add to combobox.\n        Dim pkCustomSize1 As New PaperSize(&quot;Custom Paper Size&quot;, 100, 200)\n\n        comboPaperSize.Items.Add(pkCustomSize1)\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#2\">            // Add list of paper sources found on the printer to the combo box.\n            // The DisplayMember property is used to identify the property that will provide the display string.\n            comboPaperSource.DisplayMember=&quot;SourceName&quot;;\n\n            PaperSource pkSource;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PaperSources.Count; i++){\n                pkSource = printDoc.PrinterSettings.PaperSources[i];\n                comboPaperSource.Items.Add(pkSource);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#2\">         // Add list of paper sources found on the printer to the combo box.\n         // The DisplayMember property is used to identify the property that will provide the display String*.\n         comboPaperSource-&gt;DisplayMember = &quot;SourceName&quot;;\n         PaperSource^ pkSource;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PaperSources-&gt;Count; i++ )\n         {\n            pkSource = printDoc-&gt;PrinterSettings-&gt;PaperSources[ i ];\n            comboPaperSource-&gt;Items-&gt;Add( pkSource );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#2\">        &#39; Add list of paper sources found on the printer to the combo box.\n        &#39; The DisplayMember property is used to identify the property that will provide the display string.\n        comboPaperSource.DisplayMember = &quot;SourceName&quot;\n        \n        Dim pkSource As PaperSource\n        For i = 0 to printDoc.PrinterSettings.PaperSources.Count - 1\n            pkSource = printDoc.PrinterSettings.PaperSources.Item(i)\n            comboPaperSource.Items.Add(pkSource)\n        Next\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#3\">            // Add list of printer resolutions found on the printer to the combobox.\n            // The PrinterResolution&#39;s ToString() method will be used to provide the display string.\n\n            PrinterResolution pkResolution;\n            for (int i = 0; i &lt; printDoc.PrinterSettings.PrinterResolutions.Count; i++){\n                pkResolution = printDoc.PrinterSettings.PrinterResolutions[i];\n                comboPrintResolution.Items.Add(pkResolution);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#3\">         // Add list of printer resolutions found on the printer to the combobox.\n         // The PrinterResolution&#39;s ToString() method will be used to provide the display String.\n         PrinterResolution^ pkResolution;\n         for ( int i = 0; i &lt; printDoc-&gt;PrinterSettings-&gt;PrinterResolutions-&gt;Count; i++ )\n         {\n            pkResolution = printDoc-&gt;PrinterSettings-&gt;PrinterResolutions[ i ];\n            comboPrintResolution-&gt;Items-&gt;Add( pkResolution );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#3\">        &#39; Add list of printer resolutions found on the printer to the combobox.\n        &#39; The PrinterResolution&#39;s ToString() method will be used to provide the display string.\n        Dim pkResolution As PrinterResolution\n        For i = 0 to printDoc.PrinterSettings.PrinterResolutions.Count - 1\n            pkResolution = printDoc.PrinterSettings.PrinterResolutions.Item(i)\n            comboPrintResolution.Items.Add(pkResolution)\n        Next\n</code></pre><pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#4\">    private void MyButtonPrint_Click(object sender, System.EventArgs e)\n    {\n        // Set the paper size based upon the selection in the combo box.\n        if (comboPaperSize.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSize = \n                printDoc.PrinterSettings.PaperSizes[comboPaperSize.SelectedIndex];\n        }\n\n        // Set the paper source based upon the selection in the combo box.\n        if (comboPaperSource.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSource = \n                printDoc.PrinterSettings.PaperSources[comboPaperSource.SelectedIndex];\n        }\n        \n        // Set the printer resolution based upon the selection in the combo box.\n        if (comboPrintResolution.SelectedIndex != -1) \n        {\n            printDoc.DefaultPageSettings.PrinterResolution= \n                printDoc.PrinterSettings.PrinterResolutions[comboPrintResolution.SelectedIndex];\n        }\n\n        // Print the document with the specified paper size, source, and print resolution.\n        printDoc.Print();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#4\">   private:\n      void MyButtonPrint_Click( Object^ sender, System::EventArgs^ e )\n      {\n         // Set the paper size based upon the selection in the combo box.\n         if ( comboPaperSize-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSize = printDoc-&gt;PrinterSettings-&gt;PaperSizes[ comboPaperSize-&gt;SelectedIndex ];\n         }\n\n         // Set the paper source based upon the selection in the combo box.\n         if ( comboPaperSource-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSource = printDoc-&gt;PrinterSettings-&gt;PaperSources[ comboPaperSource-&gt;SelectedIndex ];\n         }\n\n         // Set the printer resolution based upon the selection in the combo box.\n         if ( comboPrintResolution-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PrinterResolution = printDoc-&gt;PrinterSettings-&gt;PrinterResolutions[ comboPrintResolution-&gt;SelectedIndex ];\n         }\n\n         // Print the document with the specified paper size, source, and print resolution.\n         printDoc-&gt;Print();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#4\">    Private Sub MyButtonPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyButtonPrint.Click\n\n        &#39; Set the paper size based upon the selection in the combo box.\n        If comboPaperSize.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSize = _\n            printDoc.PrinterSettings.PaperSizes.Item(comboPaperSize.SelectedIndex)\n        End If\n\n        &#39; Set the paper source based upon the selection in the combo box.\n        If comboPaperSource.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSource = _\n            printDoc.PrinterSettings.PaperSources.Item(comboPaperSource.SelectedIndex)\n        End If\n\n        &#39; Set the printer resolution based upon the selection in the combo box.\n        If comboPrintResolution.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PrinterResolution = _\n            printDoc.PrinterSettings.PrinterResolutions.Item(comboPrintResolution.SelectedIndex)\n        End If\n\n        &#39; Print the document with the specified paper size and source.\n        printDoc.Print()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_PrintableArea\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_PrintableArea_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrintableArea</div>        \r\n          </div>\r\n    \r\n            <p>Gets the bounds of the printable area of the page for the printer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF PrintableArea { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> representing the length and width, in hundredths of an inch, of the area the printer is capable of printing in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PrintableArea property returns the correct value, whether the page orientation is landscape or portrait.  </p>\n<p> You can use this property to print outside the margins of the page, but within the printable area.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_PrinterResolution\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_PrinterResolution_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrinterResolution</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the printer resolution for the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Printing.PrinterResolution PrinterResolution { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.printerresolution\" data-linktype=\"relative-path\">PrinterResolution</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.printing.printerresolution\" data-linktype=\"relative-path\">PrinterResolution</a> that specifies the printer resolution for the page. The default is the printer&#39;s default resolution.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist or there is no default printer installed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.printing.printerresolution\" data-linktype=\"relative-path\">PrinterResolution</a> represents the printer resolution of through the <a class=\"xref\" href=\"system.drawing.printing.printerresolution#System_Drawing_Printing_PrinterResolution_Kind_\" data-linktype=\"relative-path\">Kind</a> property, which contains one of the <a class=\"xref\" href=\"system.drawing.printing.printerresolutionkind\" data-linktype=\"relative-path\">PrinterResolutionKind</a> values.  </p>\n<p> Set the PrinterResolution property for the page to a valid <a class=\"xref\" href=\"system.drawing.printing.printerresolution\" data-linktype=\"relative-path\">PrinterResolution</a>, available through the <a class=\"xref\" href=\"system.drawing.printing.printersettings#System_Drawing_Printing_PrinterSettings_PrinterResolutions_\" data-linktype=\"relative-path\">PrinterResolutions</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets three properties for the document&#39;s default page, including the printer&#39;s resolution based upon the resolution selected in the <code>comboPrintResolution</code> combo box, and then prints the document using the <a class=\"xref\" href=\"system.drawing.printing.printdocument#System_Drawing_Printing_PrintDocument_Print_\" data-linktype=\"relative-path\">Print</a> method. The example requires that a <a class=\"xref\" href=\"system.drawing.printing.printdocument\" data-linktype=\"relative-path\">PrintDocument</a> variable named <code>printDoc</code> exists and that the specific combo boxes exist.  </p>\n<pre><code class=\"lang-cs\" name=\"PaperSource and PaperSize Example with Resolution#4\">    private void MyButtonPrint_Click(object sender, System.EventArgs e)\n    {\n        // Set the paper size based upon the selection in the combo box.\n        if (comboPaperSize.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSize = \n                printDoc.PrinterSettings.PaperSizes[comboPaperSize.SelectedIndex];\n        }\n\n        // Set the paper source based upon the selection in the combo box.\n        if (comboPaperSource.SelectedIndex != -1) {\n            printDoc.DefaultPageSettings.PaperSource = \n                printDoc.PrinterSettings.PaperSources[comboPaperSource.SelectedIndex];\n        }\n        \n        // Set the printer resolution based upon the selection in the combo box.\n        if (comboPrintResolution.SelectedIndex != -1) \n        {\n            printDoc.DefaultPageSettings.PrinterResolution= \n                printDoc.PrinterSettings.PrinterResolutions[comboPrintResolution.SelectedIndex];\n        }\n\n        // Print the document with the specified paper size, source, and print resolution.\n        printDoc.Print();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"PaperSource and PaperSize Example with Resolution#4\">   private:\n      void MyButtonPrint_Click( Object^ sender, System::EventArgs^ e )\n      {\n         // Set the paper size based upon the selection in the combo box.\n         if ( comboPaperSize-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSize = printDoc-&gt;PrinterSettings-&gt;PaperSizes[ comboPaperSize-&gt;SelectedIndex ];\n         }\n\n         // Set the paper source based upon the selection in the combo box.\n         if ( comboPaperSource-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PaperSource = printDoc-&gt;PrinterSettings-&gt;PaperSources[ comboPaperSource-&gt;SelectedIndex ];\n         }\n\n         // Set the printer resolution based upon the selection in the combo box.\n         if ( comboPrintResolution-&gt;SelectedIndex != -1 )\n         {\n            printDoc-&gt;DefaultPageSettings-&gt;PrinterResolution = printDoc-&gt;PrinterSettings-&gt;PrinterResolutions[ comboPrintResolution-&gt;SelectedIndex ];\n         }\n\n         // Print the document with the specified paper size, source, and print resolution.\n         printDoc-&gt;Print();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"PaperSource and PaperSize Example with Resolution#4\">    Private Sub MyButtonPrint_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyButtonPrint.Click\n\n        &#39; Set the paper size based upon the selection in the combo box.\n        If comboPaperSize.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSize = _\n            printDoc.PrinterSettings.PaperSizes.Item(comboPaperSize.SelectedIndex)\n        End If\n\n        &#39; Set the paper source based upon the selection in the combo box.\n        If comboPaperSource.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PaperSource = _\n            printDoc.PrinterSettings.PaperSources.Item(comboPaperSource.SelectedIndex)\n        End If\n\n        &#39; Set the printer resolution based upon the selection in the combo box.\n        If comboPrintResolution.SelectedIndex &lt;&gt; -1 Then\n            printDoc.DefaultPageSettings.PrinterResolution = _\n            printDoc.PrinterSettings.PrinterResolutions.Item(comboPrintResolution.SelectedIndex)\n        End If\n\n        &#39; Print the document with the specified paper size and source.\n        printDoc.Print()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_PrinterSettings\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_PrinterSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrinterSettings</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the printer settings associated with the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.printersettings\" data-linktype=\"relative-path\">PrinterSettings</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.printing.printersettings\" data-linktype=\"relative-path\">PrinterSettings</a> that represents the printer settings associated with the page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the printer settings to find default values for properties of the page that are not set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of this <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A copy of this object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_CopyToHdevmode_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_CopyToHdevmode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyToHdevmode(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the relevant information from the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> to the specified <code>DEVMODE</code>structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyToHdevmode (IntPtr hdevmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdevmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to a Win32 <code>DEVMODE</code> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist or there is no default printer installed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the CopyToHdevmode method to copy relevant information to a <code>DEVMODE</code> structure from a <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>. This method is useful when you want to make unmanaged Win32 calls that require a <code>DEVMODE</code>.  </p>\n<p> To copy information from a <code>DEVMODE</code> structure to the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>, call <a class=\"xref\" href=\"system.drawing.printing.pagesettings#System_Drawing_Printing_PageSettings_SetHdevmode_\" data-linktype=\"relative-path\">SetHdevmode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_SetHdevmode_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_SetHdevmode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetHdevmode(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Copies relevant information to the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> from the specified <code>DEVMODE</code> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetHdevmode (IntPtr hdevmode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hdevmode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to a Win32 <code>DEVMODE</code> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The printer handle is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.printing.invalidprinterexception\" data-linktype=\"relative-path\">InvalidPrinterException</a></div>\r\n                  </div>\r\n                  <p>The printer named in the <span class=\"xref\">stem.Drawing.Printing.PrinterSettings.PrinterName*</span> property does not exist or there is no default printer installed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to copy relevant information in a <code>DEVMODE</code> structure to the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>.  </p>\n<p> To copy information from the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> to a <code>DEVMODE</code>, call <a class=\"xref\" href=\"system.drawing.printing.pagesettings#System_Drawing_Printing_PageSettings_CopyToHdevmode_\" data-linktype=\"relative-path\">CopyToHdevmode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Printing_PageSettings_ToString\">\r\n    \r\n            <a id=\"System_Drawing_Printing_PageSettings_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a> to string form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string showing the various property settings for the <a class=\"xref\" href=\"system.drawing.printing.pagesettings\" data-linktype=\"relative-path\">PageSettings</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Printing.PageSettings.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Printing.PageSettings.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.Color\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.CopyToHdevmode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.HardMarginX\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.HardMarginY\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.Landscape\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.Margins\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.PaperSize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.PaperSource\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.PrintableArea\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.PrinterResolution\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.PrinterSettings\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.SetHdevmode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Printing.PageSettings.ToString\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"42557259-35a6-a488-320c-0a5c4c89573c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies settings that apply to a single, printed page.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Printing/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Printing.PageSettings\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Printing.PageSettings.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Printing.PageSettings.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Printing.PageSettings","System.Drawing.Printing.PageSettings..ctor","System.Drawing.Printing.PageSettings.Bounds","System.Drawing.Printing.PageSettings.Clone","System.Drawing.Printing.PageSettings.Color","System.Drawing.Printing.PageSettings.CopyToHdevmode","System.Drawing.Printing.PageSettings.HardMarginX","System.Drawing.Printing.PageSettings.HardMarginY","System.Drawing.Printing.PageSettings.Landscape","System.Drawing.Printing.PageSettings.Margins","System.Drawing.Printing.PageSettings.PaperSize","System.Drawing.Printing.PageSettings.PaperSource","System.Drawing.Printing.PageSettings.PrintableArea","System.Drawing.Printing.PageSettings.PrinterResolution","System.Drawing.Printing.PageSettings.PrinterSettings","System.Drawing.Printing.PageSettings.SetHdevmode","System.Drawing.Printing.PageSettings.ToString"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Printing.PageSettings","System::Drawing::Printing::PageSettings","System.Drawing.Printing.PageSettings.#ctor","System::Drawing::Printing::PageSettings::#ctor","System.Drawing.Printing.PageSettings.Bounds","System::Drawing::Printing::PageSettings::Bounds","System.Drawing.Printing.PageSettings.Clone","System::Drawing::Printing::PageSettings::Clone","System.Drawing.Printing.PageSettings.Color","System::Drawing::Printing::PageSettings::Color","System.Drawing.Printing.PageSettings.CopyToHdevmode","System::Drawing::Printing::PageSettings::CopyToHdevmode","System.Drawing.Printing.PageSettings.HardMarginX","System::Drawing::Printing::PageSettings::HardMarginX","System.Drawing.Printing.PageSettings.HardMarginY","System::Drawing::Printing::PageSettings::HardMarginY","System.Drawing.Printing.PageSettings.Landscape","System::Drawing::Printing::PageSettings::Landscape","System.Drawing.Printing.PageSettings.Margins","System::Drawing::Printing::PageSettings::Margins","System.Drawing.Printing.PageSettings.PaperSize","System::Drawing::Printing::PageSettings::PaperSize","System.Drawing.Printing.PageSettings.PaperSource","System::Drawing::Printing::PageSettings::PaperSource","System.Drawing.Printing.PageSettings.PrintableArea","System::Drawing::Printing::PageSettings::PrintableArea","System.Drawing.Printing.PageSettings.PrinterResolution","System::Drawing::Printing::PageSettings::PrinterResolution","System.Drawing.Printing.PageSettings.PrinterSettings","System::Drawing::Printing::PageSettings::PrinterSettings","System.Drawing.Printing.PageSettings.SetHdevmode","System::Drawing::Printing::PageSettings::SetHdevmode","System.Drawing.Printing.PageSettings.ToString","System::Drawing::Printing::PageSettings::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"42557259-35a6-a488-320c-0a5c4c89573c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Printing/PageSettings.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PageSettings class | Microsoft Docs","_op_ogTitle":"PageSettings class","description":"Specifies settings that apply to a single, printed page.\n","toc_asset_id":"_splitted/System.Drawing.Printing/toc.json","toc_rel":"_splitted/System.Drawing.Printing/toc.json","source_url":"","ms.assetid":"System.Drawing.Printing.PageSettings","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.printing.pagesettings","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.printing.pagesettings","fileRelativePath":"System.Drawing.Printing.PageSettings.html"},"themesRelativePathToOutputRoot":"_themes/"}