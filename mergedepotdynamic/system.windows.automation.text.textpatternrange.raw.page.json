{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">TextPatternRange</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a span of continuous text in a <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> container.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class TextPatternRange</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">TextPatternRange</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A TextPatternRange can represent an insertion point, a subset, or all of the text in a <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> container.  </p>\n<p> A TextPatternRange will become invalid if one of the following occurs: the text in the <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> container changes because of some user activity, or the <a class=\"xref\" href=\"system.windows.automation.valuepattern#System_Windows_Automation_ValuePattern_SetValue_\" data-linktype=\"relative-path\">SetValue</a> method of <a class=\"xref\" href=\"system.windows.automation.valuepattern\" data-linktype=\"relative-path\">ValuePattern</a> is used to programmatically change the value of the text in the <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> container.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_TextPattern\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TextPattern</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> associated with the text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.TextPattern TextPattern { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text provider.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_AddToSelection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddToSelection()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddToSelection ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If text provider does not support multiple, disjoint selections (for example, <span class=\"xref\">stem.Windows.Automation.TextPattern.SupportedTextSelection*</span> must have a value of <code>Multiple</code>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The text insertion point moves to the area of the new selection.  </p>\n<p> Providing a degenerate text range moves the insertion point.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a new <a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a> identical to the original <a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a> and inheriting all properties of the original.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.Text.TextPatternRange Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new text range. A null reference (<code>Nothing</code> in Microsoft Visual Basic .NET) is never returned.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Alternatively, create a new <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> from the <a class=\"xref\" href=\"system.windows.automation.textpattern\" data-linktype=\"relative-path\">TextPattern</a> and move the two endpoints to correspond with the endpoints of the original text range.  </p>\n<p> The new range can be manipulated independently from the original.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_Compare_System_Windows_Automation_Text_TextPatternRange_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compare(TextPatternRange)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether the span (the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint to the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint) of a text range is the same as another text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Compare (System.Windows.Automation.Text.TextPatternRange range);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>range</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A text range to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the span of both text ranges is identical; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If the range being compared does not come from the same text provider.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_CompareEndpoints_System_Windows_Automation_Text_TextPatternRangeEndpoint_System_Windows_Automation_Text_TextPatternRange_System_Windows_Automation_Text_TextPatternRangeEndpoint_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CompareEndpoints(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> indicating whether two text ranges have identical endpoints.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>endpoint</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> or <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint of the caller.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetRange</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The target range for comparison.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetEndpoint</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> or <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint of the target.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns a negative value if the caller&#39;s endpoint occurs earlier in the text than the target endpoint.  </p>\n<p> Returns zero if the caller&#39;s endpoint is at the same location as the target endpoint.  </p>\n<p> Returns a positive value if the caller&#39;s endpoint occurs later in the text than the target endpoint.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If range is a null reference (<code>Nothing</code> in Microsoft Visual Basic .NET).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If range is from another container.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By comparing the starting and ending endpoints of the same text range you can identify if a text range is degenerate or if the endpoints are in the order of logical text flow.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_ExpandToEnclosingUnit_System_Windows_Automation_Text_TextUnit_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExpandToEnclosingUnit(TextUnit)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Expands the text range to the specified <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>unit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The textual unit.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the range is already an exact quantity of the specified units then it remains unchanged.  </p>\n<p> In order for the ExpandToEnclosingUnit method to execute successfully, a sequence of actions is performed behind the scenes.  </p>\n<ol>\n<li><p>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint, making the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint superfluous. This step is necessary to remove ambiguity in situations where a text range spans <code>unit</code> boundaries; for example, &quot;{The U}RL <a href=\"http://www.microsoft.com\" data-linktype=\"external\">http://www.microsoft.com</a> is embedded in text&quot; where &quot;{&quot; and &quot;}&quot; are the text range endpoints.  </p>\n</li>\n<li><p>The resulting range is moved backward in the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> to the beginning of the requested <code>unit</code> boundary.  </p>\n</li>\n<li><p>The range is moved forward or backward in the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> by the requested number of <code>unit</code> boundaries.  </p>\n</li>\n<li><p>The range is then expanded from a degenerate range state by moving the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint by one requested <code>unit</code> boundary.  </p>\n<p><img src=\"add/media/uia-textpattern-moveandexpand-examples.png\" alt=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" title=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" data-linktype=\"relative-path\"><br>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.  </p>\n</div>\n<p> ExpandToEnclosingUnit respects both hidden and visible text. The UI Automation client can check the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> for text visibility.  </p>\n<p> ExpandToEnclosingUnit defers to the next largest <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> supported if the given <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> is not supported by the control.  </p>\n<p> The order, from smallest unit to largest, is listed below.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a></li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_FindAttribute_System_Windows_Automation_AutomationTextAttribute_System_Object_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FindAttribute(AutomationTextAttribute,Object,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a text range subset that has the specified attribute value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.Text.TextPatternRange FindAttribute (System.Windows.Automation.AutomationTextAttribute attribute, object value, bool backward);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attribute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationtextattribute\" data-linktype=\"relative-path\">AutomationTextAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The attribute to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The attribute value to search for. This value must match the type specified for the attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>backward</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the last occurring text range should be returned instead of the first; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A text range having a matching attribute and attribute value; otherwise null (<code>Nothing</code> in Microsoft Visual Basic .NET).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>There is no differentiation between hidden and visible text. UI Automation clients can use <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> to check text visibility.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> to search the entire document.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_FindText_System_String_System_Boolean_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FindText(String,Boolean,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a text range subset that contains the specified text.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.Text.TextPatternRange FindText (string text, bool backward, bool ignoreCase);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>text</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text string to search for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>backward</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the last occurring text range should be returned instead of the first; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ignoreCase</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if case should be ignored; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A text range matching the specified text; otherwise null (<code>Nothing</code> in Microsoft Visual Basic .NET).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>There is no differentiation between hidden and visible text. UI Automation clients can use <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> to check text visibility.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> to search the entire document.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_GetAttributeValue_System_Windows_Automation_AutomationTextAttribute_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAttributeValue(AutomationTextAttribute)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the value of the specified attribute across the entire text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object GetAttributeValue (System.Windows.Automation.AutomationTextAttribute attribute);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>attribute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationtextattribute\" data-linktype=\"relative-path\">AutomationTextAttribute</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text attribute.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns the value of the specified attribute. For example, GetAttributeValue(TextPattern.FontNameAttribute) would return a string that represents the font name, if unique, of the text range while GetAttributeValue(TextPattern.IsItalicAttribute) would return a boolean.  </p>\n<p> Returns <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_MixedAttributeValue\" data-linktype=\"relative-path\">MixedAttributeValue</a> if the value of the specified attribute varies over the text range.  </p>\n<p> Returns <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_NotSupported\" data-linktype=\"relative-path\">NotSupported</a> if the specified attribute is not supported by the provider or the control.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If the specified attribute is not valid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>There is no differentiation between hidden and visible text. UI Automation clients can use <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> to check text visibility.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_GetBoundingRectangles\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetBoundingRectangles()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Rect[] GetBoundingRectangles ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of bounding rectangles for each full or partial line of text in a text range.  </p>\n<p> An empty array for a degenerate text range.  </p>\n<p> An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_GetChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChildren()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Retrieves a collection of all embedded objects that fall within the text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.AutomationElement[] GetChildren ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of all child objects that fall within the range. Children that overlap with the range but are not entirely enclosed by it will also be included in the collection.  </p>\n<p> Returns an empty collection if there are no child objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_GetEnclosingElement\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEnclosingElement()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the innermost <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> that encloses the text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Automation.AutomationElement GetEnclosingElement ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The innermost element enclosing the caller.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The enclosing <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>, typically the text provider that supplies the text range. However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_GetText_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetText(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the plain text of the text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetText (int maxLength);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>maxLength</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum length of the string to return. Use <code>-1</code> if no limit is required.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The plain text of the text range, possibly truncated at the specified <code>maxLength</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If <code>maxLength</code> is less than -1.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>GetText respects both hidden and visible text. The UI Automation client can check the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> for text visibility.  </p>\n<p> If <code>maxLength</code> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.  </p>\n<p> GetText will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_Move_System_Windows_Automation_Text_TextUnit_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Move(TextUnit,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Moves the text range the specified number of text units.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Move (System.Windows.Automation.Text.TextUnit unit, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>unit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The text unit boundary.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of text units to move. A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of units actually moved. This can be less than the number requested if either of the new text range endpoints is greater than or less than the <span class=\"xref\">stem.Windows.Automation.TextPattern.DocumentRange*</span> endpoints.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the Move method to execute successfully.  </p>\n<ol>\n<li><p>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint, which makes the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint superfluous. This step is necessary to remove ambiguity in situations where a text range spans <code>unit</code> boundaries; for example, &quot;{The U}RL <a href=\"http://www.microsoft.com\" data-linktype=\"external\">http://www.microsoft.com</a> is embedded in text&quot; where &quot;{&quot; and &quot;}&quot; are the text range endpoints.  </p>\n</li>\n<li><p>The resulting range is moved backward in the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> to the beginning of the requested <code>unit</code> boundary.  </p>\n</li>\n<li><p>The range is moved forward or backward in the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> by the requested number of <code>unit</code> boundaries.  </p>\n</li>\n<li><p>The range is then expanded from a degenerate range state by moving the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint by one requested <code>unit</code> boundary.  </p>\n<p><img src=\"add/media/uia-textpattern-moveandexpand-examples.png\" alt=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" title=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" data-linktype=\"relative-path\"><br>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()  </p>\n<p>The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the UI Automation tree; object boundaries are ignored. If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects. This can be accomplished by calling <a class=\"xref\" href=\"system.windows.automation.text.textpatternrange#System_Windows_Automation_Text_TextPatternRange_GetChildren_\" data-linktype=\"relative-path\">GetChildren</a> to obtain an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> for each embedded object and then calling <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_RangeFromChild_\" data-linktype=\"relative-path\">RangeFromChild</a> to obtain a text range for each element; this is done recursively until all textual content has been retrieved.  </p>\n<p><img src=\"add/media/uia-textpattern-embeddedobjecttextranges.png\" alt=\"Text ranges spanned by embedded objects.\" title=\"Text ranges spanned by embedded objects.\" data-linktype=\"relative-path\"><br>Example of a text stream with embedded objects and their range spans  </p>\n<p>Move respects both hidden and visible text. The UI Automation client can check the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> for text visibility.  </p>\n<p>Move defers to the next largest <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> supported if the given <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> is not supported by the control.  </p>\n<p>The order, from smallest unit to largest, is listed below.  </p>\n</li>\n</ol>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The text is not altered in any way as the text range just spans a different part of the text.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_MoveEndpointByRange_System_Windows_Automation_Text_TextPatternRangeEndpoint_System_Windows_Automation_Text_TextPatternRange_System_Windows_Automation_Text_TextPatternRangeEndpoint_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveEndpointByRange(TextPatternRangeEndpoint,TextPatternRange,TextPatternRangeEndpoint)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Moves one endpoint of a text range to the specified endpoint of a second text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextPatternRange targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>endpoint</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The endpoint to move.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetRange</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrange\" data-linktype=\"relative-path\">TextPatternRange</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Another range from the same text provider.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetEndpoint</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An endpoint on the other range.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> is always less than or equal to <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a>).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_MoveEndpointByUnit_System_Windows_Automation_Text_TextPatternRangeEndpoint_System_Windows_Automation_Text_TextUnit_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveEndpointByUnit(TextPatternRangeEndpoint,TextUnit,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Moves one endpoint of the text range the specified number of <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>s within the document range.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>endpoint</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The endpoint to move.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>unit</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The textual unit for moving.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>count</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of units to move. A positive count moves the endpoint forward. A negative count moves backward. A count of 0 has no effect.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrange#System_Windows_Automation_Text_TextPatternRange_Move_\" data-linktype=\"relative-path\">Move</a> method to execute successfully.  </p>\n<ol>\n<li><p>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint, which makes the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint superfluous. This step is necessary to remove ambiguity in situations where a text range spans <code>unit</code> boundaries; for example, &quot;{The U}RL <a href=\"http://www.microsoft.com\" data-linktype=\"external\">http://www.microsoft.com</a> is embedded in text&quot; where &quot;{&quot; and &quot;}&quot; are the text range endpoints.  </p>\n</li>\n<li><p>The resulting range is moved backward in the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_DocumentRange_\" data-linktype=\"relative-path\">DocumentRange</a> to the beginning of the requested <code>unit</code> boundary.  </p>\n</li>\n<li><p>The range is then expanded from a degenerate range state by moving the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint by one requested <code>unit</code> boundary.  </p>\n<p><img src=\"add/media/uia-textpattern-moveandexpand-examples.png\" alt=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" title=\"Range adjustments by Move &amp; ExpandToEnclosingUnit\" data-linktype=\"relative-path\"><br>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()  </p>\n<p>The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the UI Automation tree; object boundaries are ignored. If a UI Automation client is retrieving the text for the purpose of reciting, interpreting, or analyzing in some manner, the text range should be checked for special cases, such as a table with textual content or other embedded objects. This can be accomplished by calling <a class=\"xref\" href=\"system.windows.automation.text.textpatternrange#System_Windows_Automation_Text_TextPatternRange_GetChildren_\" data-linktype=\"relative-path\">GetChildren</a> to obtain an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> for each embedded object and then calling <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_RangeFromChild_\" data-linktype=\"relative-path\">RangeFromChild</a> to obtain a text range for each element; this is done recursively until all textual content has been retrieved.  </p>\n<p><img src=\"add/media/uia-textpattern-embeddedobjecttextranges.png\" alt=\"Text ranges spanned by embedded objects.\" title=\"Text ranges spanned by embedded objects.\" data-linktype=\"relative-path\"><br>Example of a text stream with embedded objects and their range spans  </p>\n<p>MoveEndpointByUnit defers to the next largest <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> supported if the given <a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a> is not supported by the control.  </p>\n<p>The order, from smallest unit to largest, is listed below.  </p>\n</li>\n</ol>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.automation.text.textunit\" data-linktype=\"relative-path\">TextUnit</a></li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_RemoveFromSelection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveFromSelection()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes a highlighted section of text, corresponding to the calling text range <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> and <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoints, from an existing collection of highlighted text in a text container that supports multiple, disjoint selections.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RemoveFromSelection ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If text provider does not support multiple, disjoint selections (for example, <span class=\"xref\">stem.Windows.Automation.TextPattern.SupportedTextSelection*</span> must have a value of <code>Multiple</code>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The text insertion point will move to the area of the removed highlight.  </p>\n<p> Providing a degenerate text range will move the insertion point.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_ScrollIntoView_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollIntoView(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Causes the text control to scroll vertically until the text range is visible in the viewport.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ScrollIntoView (bool alignToTop);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>alignToTop</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the text control should be scrolled so the text range is flush with the top of the viewport; <code>false</code> if it should be flush with the bottom of the viewport.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>If scrolling is not supported by the control.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>ScrollIntoView respects both hidden and visible text. The UI Automation client can check the <a class=\"xref\" href=\"system.windows.automation.textpattern#System_Windows_Automation_TextPattern_IsHiddenAttribute\" data-linktype=\"relative-path\">IsHiddenAttribute</a> for text visibility. If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Automation_Text_TextPatternRange_Select\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Select()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Highlights text in the text control corresponding to the text range <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> and <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoints.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Select ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Occurs when text selection is not supported by the text control.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If a degenerate text range is provided, the text insertion point will move to the <a class=\"xref\" href=\"system.windows.automation.text.textpatternrangeendpoint\" data-linktype=\"relative-path\">TextPatternRangeEndpoint</a> endpoint of the text range.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Text.TextPatternRange.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Text.TextPatternRange.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.AddToSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.Compare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.CompareEndpoints\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.FindAttribute\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.FindText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.GetAttributeValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.GetChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.GetText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.ScrollIntoView\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Text.TextPatternRange.TextPattern\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8dfa008f-6db3-d0ea-2c5d-25136335f0d9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a span of continuous text in a  container.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation.Text/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.Text.TextPatternRange\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Text.TextPatternRange.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Text.TextPatternRange.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.Text.TextPatternRange","System.Windows.Automation.Text.TextPatternRange.AddToSelection","System.Windows.Automation.Text.TextPatternRange.Clone","System.Windows.Automation.Text.TextPatternRange.Compare","System.Windows.Automation.Text.TextPatternRange.CompareEndpoints","System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit","System.Windows.Automation.Text.TextPatternRange.FindAttribute","System.Windows.Automation.Text.TextPatternRange.FindText","System.Windows.Automation.Text.TextPatternRange.GetAttributeValue","System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles","System.Windows.Automation.Text.TextPatternRange.GetChildren","System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement","System.Windows.Automation.Text.TextPatternRange.GetText","System.Windows.Automation.Text.TextPatternRange.Move","System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange","System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit","System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection","System.Windows.Automation.Text.TextPatternRange.ScrollIntoView","System.Windows.Automation.Text.TextPatternRange.Select","System.Windows.Automation.Text.TextPatternRange.TextPattern"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.Text.TextPatternRange","System::Windows::Automation::Text::TextPatternRange","System.Windows.Automation.Text.TextPatternRange.AddToSelection","System::Windows::Automation::Text::TextPatternRange::AddToSelection","System.Windows.Automation.Text.TextPatternRange.Clone","System::Windows::Automation::Text::TextPatternRange::Clone","System.Windows.Automation.Text.TextPatternRange.Compare","System::Windows::Automation::Text::TextPatternRange::Compare","System.Windows.Automation.Text.TextPatternRange.CompareEndpoints","System::Windows::Automation::Text::TextPatternRange::CompareEndpoints","System.Windows.Automation.Text.TextPatternRange.ExpandToEnclosingUnit","System::Windows::Automation::Text::TextPatternRange::ExpandToEnclosingUnit","System.Windows.Automation.Text.TextPatternRange.FindAttribute","System::Windows::Automation::Text::TextPatternRange::FindAttribute","System.Windows.Automation.Text.TextPatternRange.FindText","System::Windows::Automation::Text::TextPatternRange::FindText","System.Windows.Automation.Text.TextPatternRange.GetAttributeValue","System::Windows::Automation::Text::TextPatternRange::GetAttributeValue","System.Windows.Automation.Text.TextPatternRange.GetBoundingRectangles","System::Windows::Automation::Text::TextPatternRange::GetBoundingRectangles","System.Windows.Automation.Text.TextPatternRange.GetChildren","System::Windows::Automation::Text::TextPatternRange::GetChildren","System.Windows.Automation.Text.TextPatternRange.GetEnclosingElement","System::Windows::Automation::Text::TextPatternRange::GetEnclosingElement","System.Windows.Automation.Text.TextPatternRange.GetText","System::Windows::Automation::Text::TextPatternRange::GetText","System.Windows.Automation.Text.TextPatternRange.Move","System::Windows::Automation::Text::TextPatternRange::Move","System.Windows.Automation.Text.TextPatternRange.MoveEndpointByRange","System::Windows::Automation::Text::TextPatternRange::MoveEndpointByRange","System.Windows.Automation.Text.TextPatternRange.MoveEndpointByUnit","System::Windows::Automation::Text::TextPatternRange::MoveEndpointByUnit","System.Windows.Automation.Text.TextPatternRange.RemoveFromSelection","System::Windows::Automation::Text::TextPatternRange::RemoveFromSelection","System.Windows.Automation.Text.TextPatternRange.ScrollIntoView","System::Windows::Automation::Text::TextPatternRange::ScrollIntoView","System.Windows.Automation.Text.TextPatternRange.Select","System::Windows::Automation::Text::TextPatternRange::Select","System.Windows.Automation.Text.TextPatternRange.TextPattern","System::Windows::Automation::Text::TextPatternRange::TextPattern"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8dfa008f-6db3-d0ea-2c5d-25136335f0d9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation.Text/TextPatternRange.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TextPatternRange class | Microsoft Docs","_op_ogTitle":"TextPatternRange class","description":"Represents a span of continuous text in a  container.\n","toc_asset_id":"_splitted/System.Windows.Automation.Text/toc.json","toc_rel":"_splitted/System.Windows.Automation.Text/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.Text.TextPatternRange","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.text.textpatternrange","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.text.textpatternrange","fileRelativePath":"System.Windows.Automation.Text.TextPatternRange.html"},"themesRelativePathToOutputRoot":"_themes/"}