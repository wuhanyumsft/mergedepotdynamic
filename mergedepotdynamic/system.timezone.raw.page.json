{"content":"    \r\n    <h1 id=\"System_TimeZone\">\r\n      <span class=\"lang-csharp\">TimeZone</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a time zone.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class TimeZone</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TimeZone</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A time zone is a geographical region in which the same standard time is used.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> class instead of the TimeZone class.  </p>\n</div>\n<p> You can use the TimeZone class to retrieve information about the current time zone, and to convert times from local time to Coordinated Universal Time (UTC) or vice versa. However, you cannot use the TimeZone class to represent time zones other than the local zone or to handle date and time conversions from one time zone to another. For this purpose, use the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> class. You can use this class to retrieve information on any time zone defined on the local system, to create custom time zones, and to convert times from one time zone to another.  </p>\n<p> The TimeZone class supports only a single daylight saving time adjustment rule for the local time zone. As a result, the TimeZone class can accurately report daylight saving time information or convert between UTC and local time only for the period in which the latest adjustment rule is in effect. In contrast, the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> class supports multiple adjustment rules, which makes it possible to work with historic time zone data.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone__ctor\" data-linktype=\"self-bookmark\">TimeZone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_CurrentTimeZone\" data-linktype=\"self-bookmark\">CurrentTimeZone</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time zone of the current computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_DaylightName\" data-linktype=\"self-bookmark\">DaylightName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the daylight saving time zone name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_StandardName\" data-linktype=\"self-bookmark\">StandardName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the standard time zone name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_GetDaylightChanges_System_Int32_\" data-linktype=\"self-bookmark\">GetDaylightChanges(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the daylight saving time period for a particular year.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_GetUtcOffset_System_DateTime_\" data-linktype=\"self-bookmark\">GetUtcOffset(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the Coordinated Universal Time (UTC) offset for the specified local time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_IsDaylightSavingTime_System_DateTime_\" data-linktype=\"self-bookmark\">IsDaylightSavingTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether the specified date and time is within a daylight saving time period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_IsDaylightSavingTime_System_DateTime_System_Globalization_DaylightTime_\" data-linktype=\"self-bookmark\">IsDaylightSavingTime(DateTime,DaylightTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether the specified date and time is within the specified daylight saving time period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_ToLocalTime_System_DateTime_\" data-linktype=\"self-bookmark\">ToLocalTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the local time that corresponds to a specified date and time value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TimeZone_ToUniversalTime_System_DateTime_\" data-linktype=\"self-bookmark\">ToUniversalTime(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone__ctor\">\r\n    \r\n            <a id=\"System_TimeZone__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeZone()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected TimeZone ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_CurrentTimeZone\">\r\n    \r\n            <a id=\"System_TimeZone_CurrentTimeZone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentTimeZone</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time zone of the current computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeZone CurrentTimeZone { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> object that represents the current local time zone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CurrentTimeZone property corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> property. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example references the <code>CurrentTimeZone</code> property and displays the names for standard time and daylight saving time for the local time zone.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing namespace System;\nusing namespace System::Globalization;\nint main()\n{\n   String^ dataFmt = &quot;{0,-30}{1}&quot;;\n   String^ timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n   Console::WriteLine( &quot;This example of selected TimeZone class &quot;\n   &quot;elements generates the following <br>&quot;\n   &quot;output, which varies depending on the &quot;\n   &quot;time zone in which it is run.<br>&quot; );\n   \n   // Get the local time zone and the current local time and year.\n   TimeZone^ localZone = TimeZone::CurrentTimeZone;\n   DateTime currentDate = DateTime::Now;\n   int currentYear = currentDate.Year;\n   \n   // Display the names for standard time and daylight saving \n   // time for the local time zone.\n   Console::WriteLine( dataFmt, &quot;Standard time name:&quot;, localZone-&gt;StandardName );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, localZone-&gt;DaylightName );\n   \n   // Display the current date and time and show if they occur \n   // in daylight saving time.\n   Console::WriteLine( String::Concat( &quot;<br>&quot;, timeFmt ), &quot;Current date and time:&quot;, currentDate );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time?&quot;, localZone-&gt;IsDaylightSavingTime( currentDate ) );\n   \n   // Get the current Coordinated Universal Time (UTC) and UTC \n   // offset.\n   DateTime currentUTC = localZone-&gt;ToUniversalTime( currentDate );\n   TimeSpan currentOffset = localZone-&gt;GetUtcOffset( currentDate );\n   Console::WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, currentUTC );\n   Console::WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n   \n   // Get the DaylightTime object for the current year.\n   DaylightTime^ daylight = localZone-&gt;GetDaylightChanges( currentYear );\n   \n   // Display the daylight saving time range for the current year.\n   Console::WriteLine( &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n   Console::WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot;\n   &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, daylight-&gt;Start, daylight-&gt;End, daylight-&gt;Delta );\n}\n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone.Class#1\">&#39; Example of selected TimeZone class elements.\nImports System\nImports System.Globalization\nImports Microsoft.VisualBasic\n\nModule TimeZoneDemo\n\n    Sub Main( )\n\n        Const dataFmt As String = &quot;{0,-30}{1}&quot;\n        Const timeFmt As String = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;\n\n        Console.WriteLine( &quot;This example of selected &quot; &amp; _\n            &quot;TimeZone class elements generates the following &quot; &amp; _\n            vbCrLf &amp; &quot;output, which varies depending on the &quot; &amp; _\n            &quot;time zone in which it is run.&quot; &amp; vbCrLf )\n\n        &#39; Get the local time zone and the current local time and year.\n        Dim localZone As TimeZone = TimeZone.CurrentTimeZone\n        Dim currentDate As DateTime = DateTime.Now\n        Dim currentYear As Integer = currentDate.Year\n\n        &#39; Display the names for standard time and daylight saving \n        &#39; time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, _\n            localZone.StandardName )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, _\n            localZone.DaylightName )\n\n        &#39; Display the current date and time and show if they occur \n        &#39; in daylight saving time.\n        Console.WriteLine( vbCrLf &amp; timeFmt, _\n            &quot;Current date and time:&quot;, currentDate )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, _\n            localZone.IsDaylightSavingTime( currentDate ) )\n\n        &#39; Get the current Coordinated Universal Time (UTC) and UTC \n        &#39; offset.\n        Dim currentUTC As DateTime = _\n            localZone.ToUniversalTime( currentDate )\n        Dim currentOffset As TimeSpan = _\n            localZone.GetUtcOffset( currentDate )\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, _\n            currentUTC )\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset )\n\n        &#39; Get the DaylightTime object for the current year.\n        Dim daylight As DaylightTime = _\n            localZone.GetDaylightChanges( currentYear )\n\n        &#39; Display the daylight saving time range for the current year.\n        Console.WriteLine( vbCrLf &amp; _\n            &quot;Daylight saving time for year {0}:&quot;, currentYear )\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; &amp; _\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, _\n            daylight.Start, daylight.End, daylight.Delta )\n    End Sub \nEnd Module \n\n&#39;This example of selected TimeZone class elements generates the following\n&#39;output, which varies depending on the time zone in which it is run.\n&#39;\n&#39;Standard time name:           Pacific Standard Time\n&#39;Daylight saving time name:    Pacific Daylight Time\n&#39;\n&#39;Current date and time:        2006-01-06 16:47\n&#39;Daylight saving time?         False\n&#39;Coordinated Universal Time:   2006-01-07 00:47\n&#39;UTC offset:                   -08:00:00\n&#39;\n&#39;Daylight saving time for year 2006:\n&#39;2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing System;\nusing System.Globalization;\n\nclass TimeZoneDemo\n{\n    static void Main( )\n    {\n        const string dataFmt = &quot;{0,-30}{1}&quot;;\n        const string timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n\n        Console.WriteLine(\n            &quot;This example of selected TimeZone class &quot; +\n            &quot;elements generates the following <br>&quot; +\n            &quot;output, which varies depending on the &quot; +\n            &quot;time zone in which it is run.<br>&quot; );\n\n        // Get the local time zone and the current local time and year.\n        TimeZone localZone = TimeZone.CurrentTimeZone;\n        DateTime currentDate = DateTime.Now;\n        int      currentYear = currentDate.Year;\n\n        // Display the names for standard time and daylight saving \n        // time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, \n            localZone.StandardName );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, \n            localZone.DaylightName );\n\n        // Display the current date and time and show if they occur \n        // in daylight saving time.\n        Console.WriteLine( &quot;<br>&quot; + timeFmt, &quot;Current date and time:&quot;,\n            currentDate );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, \n            localZone.IsDaylightSavingTime( currentDate ) );\n\n        // Get the current Coordinated Universal Time (UTC) and UTC \n        // offset.\n        DateTime currentUTC = \n            localZone.ToUniversalTime( currentDate );\n        TimeSpan currentOffset = \n            localZone.GetUtcOffset( currentDate );\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, \n            currentUTC );\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n\n        // Get the DaylightTime object for the current year.\n        DaylightTime daylight = \n            localZone.GetDaylightChanges( currentYear );\n\n        // Display the daylight saving time range for the current year.\n        Console.WriteLine( \n            &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; +\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, \n            daylight.Start, daylight.End, daylight.Delta );\n    } \n} \n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/ \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_DaylightName\">\r\n    \r\n            <a id=\"System_TimeZone_DaylightName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DaylightName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the daylight saving time zone name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string DaylightName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The daylight saving time zone name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If daylight saving time is not used in the time zone, an empty string (&quot;&quot;) is returned.  </p>\n<p> The DaylightName property corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> property. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_DaylightName_\" data-linktype=\"relative-path\">DaylightName</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example references and displays the <code>DaylightName</code> property of the current time zone.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing namespace System;\nusing namespace System::Globalization;\nint main()\n{\n   String^ dataFmt = &quot;{0,-30}{1}&quot;;\n   String^ timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n   Console::WriteLine( &quot;This example of selected TimeZone class &quot;\n   &quot;elements generates the following <br>&quot;\n   &quot;output, which varies depending on the &quot;\n   &quot;time zone in which it is run.<br>&quot; );\n   \n   // Get the local time zone and the current local time and year.\n   TimeZone^ localZone = TimeZone::CurrentTimeZone;\n   DateTime currentDate = DateTime::Now;\n   int currentYear = currentDate.Year;\n   \n   // Display the names for standard time and daylight saving \n   // time for the local time zone.\n   Console::WriteLine( dataFmt, &quot;Standard time name:&quot;, localZone-&gt;StandardName );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, localZone-&gt;DaylightName );\n   \n   // Display the current date and time and show if they occur \n   // in daylight saving time.\n   Console::WriteLine( String::Concat( &quot;<br>&quot;, timeFmt ), &quot;Current date and time:&quot;, currentDate );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time?&quot;, localZone-&gt;IsDaylightSavingTime( currentDate ) );\n   \n   // Get the current Coordinated Universal Time (UTC) and UTC \n   // offset.\n   DateTime currentUTC = localZone-&gt;ToUniversalTime( currentDate );\n   TimeSpan currentOffset = localZone-&gt;GetUtcOffset( currentDate );\n   Console::WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, currentUTC );\n   Console::WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n   \n   // Get the DaylightTime object for the current year.\n   DaylightTime^ daylight = localZone-&gt;GetDaylightChanges( currentYear );\n   \n   // Display the daylight saving time range for the current year.\n   Console::WriteLine( &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n   Console::WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot;\n   &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, daylight-&gt;Start, daylight-&gt;End, daylight-&gt;Delta );\n}\n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone.Class#1\">&#39; Example of selected TimeZone class elements.\nImports System\nImports System.Globalization\nImports Microsoft.VisualBasic\n\nModule TimeZoneDemo\n\n    Sub Main( )\n\n        Const dataFmt As String = &quot;{0,-30}{1}&quot;\n        Const timeFmt As String = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;\n\n        Console.WriteLine( &quot;This example of selected &quot; &amp; _\n            &quot;TimeZone class elements generates the following &quot; &amp; _\n            vbCrLf &amp; &quot;output, which varies depending on the &quot; &amp; _\n            &quot;time zone in which it is run.&quot; &amp; vbCrLf )\n\n        &#39; Get the local time zone and the current local time and year.\n        Dim localZone As TimeZone = TimeZone.CurrentTimeZone\n        Dim currentDate As DateTime = DateTime.Now\n        Dim currentYear As Integer = currentDate.Year\n\n        &#39; Display the names for standard time and daylight saving \n        &#39; time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, _\n            localZone.StandardName )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, _\n            localZone.DaylightName )\n\n        &#39; Display the current date and time and show if they occur \n        &#39; in daylight saving time.\n        Console.WriteLine( vbCrLf &amp; timeFmt, _\n            &quot;Current date and time:&quot;, currentDate )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, _\n            localZone.IsDaylightSavingTime( currentDate ) )\n\n        &#39; Get the current Coordinated Universal Time (UTC) and UTC \n        &#39; offset.\n        Dim currentUTC As DateTime = _\n            localZone.ToUniversalTime( currentDate )\n        Dim currentOffset As TimeSpan = _\n            localZone.GetUtcOffset( currentDate )\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, _\n            currentUTC )\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset )\n\n        &#39; Get the DaylightTime object for the current year.\n        Dim daylight As DaylightTime = _\n            localZone.GetDaylightChanges( currentYear )\n\n        &#39; Display the daylight saving time range for the current year.\n        Console.WriteLine( vbCrLf &amp; _\n            &quot;Daylight saving time for year {0}:&quot;, currentYear )\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; &amp; _\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, _\n            daylight.Start, daylight.End, daylight.Delta )\n    End Sub \nEnd Module \n\n&#39;This example of selected TimeZone class elements generates the following\n&#39;output, which varies depending on the time zone in which it is run.\n&#39;\n&#39;Standard time name:           Pacific Standard Time\n&#39;Daylight saving time name:    Pacific Daylight Time\n&#39;\n&#39;Current date and time:        2006-01-06 16:47\n&#39;Daylight saving time?         False\n&#39;Coordinated Universal Time:   2006-01-07 00:47\n&#39;UTC offset:                   -08:00:00\n&#39;\n&#39;Daylight saving time for year 2006:\n&#39;2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing System;\nusing System.Globalization;\n\nclass TimeZoneDemo\n{\n    static void Main( )\n    {\n        const string dataFmt = &quot;{0,-30}{1}&quot;;\n        const string timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n\n        Console.WriteLine(\n            &quot;This example of selected TimeZone class &quot; +\n            &quot;elements generates the following <br>&quot; +\n            &quot;output, which varies depending on the &quot; +\n            &quot;time zone in which it is run.<br>&quot; );\n\n        // Get the local time zone and the current local time and year.\n        TimeZone localZone = TimeZone.CurrentTimeZone;\n        DateTime currentDate = DateTime.Now;\n        int      currentYear = currentDate.Year;\n\n        // Display the names for standard time and daylight saving \n        // time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, \n            localZone.StandardName );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, \n            localZone.DaylightName );\n\n        // Display the current date and time and show if they occur \n        // in daylight saving time.\n        Console.WriteLine( &quot;<br>&quot; + timeFmt, &quot;Current date and time:&quot;,\n            currentDate );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, \n            localZone.IsDaylightSavingTime( currentDate ) );\n\n        // Get the current Coordinated Universal Time (UTC) and UTC \n        // offset.\n        DateTime currentUTC = \n            localZone.ToUniversalTime( currentDate );\n        TimeSpan currentOffset = \n            localZone.GetUtcOffset( currentDate );\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, \n            currentUTC );\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n\n        // Get the DaylightTime object for the current year.\n        DaylightTime daylight = \n            localZone.GetDaylightChanges( currentYear );\n\n        // Display the daylight saving time range for the current year.\n        Console.WriteLine( \n            &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; +\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, \n            daylight.Start, daylight.End, daylight.Delta );\n    } \n} \n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/ \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_StandardName\">\r\n    \r\n            <a id=\"System_TimeZone_StandardName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the standard time zone name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string StandardName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The standard time zone name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to set this property to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The StandardName property corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a> property. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_StandardName_\" data-linktype=\"relative-path\">StandardName</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example references and displays the <code>StandardName</code> property of the current time zone.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing namespace System;\nusing namespace System::Globalization;\nint main()\n{\n   String^ dataFmt = &quot;{0,-30}{1}&quot;;\n   String^ timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n   Console::WriteLine( &quot;This example of selected TimeZone class &quot;\n   &quot;elements generates the following <br>&quot;\n   &quot;output, which varies depending on the &quot;\n   &quot;time zone in which it is run.<br>&quot; );\n   \n   // Get the local time zone and the current local time and year.\n   TimeZone^ localZone = TimeZone::CurrentTimeZone;\n   DateTime currentDate = DateTime::Now;\n   int currentYear = currentDate.Year;\n   \n   // Display the names for standard time and daylight saving \n   // time for the local time zone.\n   Console::WriteLine( dataFmt, &quot;Standard time name:&quot;, localZone-&gt;StandardName );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, localZone-&gt;DaylightName );\n   \n   // Display the current date and time and show if they occur \n   // in daylight saving time.\n   Console::WriteLine( String::Concat( &quot;<br>&quot;, timeFmt ), &quot;Current date and time:&quot;, currentDate );\n   Console::WriteLine( dataFmt, &quot;Daylight saving time?&quot;, localZone-&gt;IsDaylightSavingTime( currentDate ) );\n   \n   // Get the current Coordinated Universal Time (UTC) and UTC \n   // offset.\n   DateTime currentUTC = localZone-&gt;ToUniversalTime( currentDate );\n   TimeSpan currentOffset = localZone-&gt;GetUtcOffset( currentDate );\n   Console::WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, currentUTC );\n   Console::WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n   \n   // Get the DaylightTime object for the current year.\n   DaylightTime^ daylight = localZone-&gt;GetDaylightChanges( currentYear );\n   \n   // Display the daylight saving time range for the current year.\n   Console::WriteLine( &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n   Console::WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot;\n   &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, daylight-&gt;Start, daylight-&gt;End, daylight-&gt;Delta );\n}\n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TimeZone.Class#1\">&#39; Example of selected TimeZone class elements.\nImports System\nImports System.Globalization\nImports Microsoft.VisualBasic\n\nModule TimeZoneDemo\n\n    Sub Main( )\n\n        Const dataFmt As String = &quot;{0,-30}{1}&quot;\n        Const timeFmt As String = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;\n\n        Console.WriteLine( &quot;This example of selected &quot; &amp; _\n            &quot;TimeZone class elements generates the following &quot; &amp; _\n            vbCrLf &amp; &quot;output, which varies depending on the &quot; &amp; _\n            &quot;time zone in which it is run.&quot; &amp; vbCrLf )\n\n        &#39; Get the local time zone and the current local time and year.\n        Dim localZone As TimeZone = TimeZone.CurrentTimeZone\n        Dim currentDate As DateTime = DateTime.Now\n        Dim currentYear As Integer = currentDate.Year\n\n        &#39; Display the names for standard time and daylight saving \n        &#39; time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, _\n            localZone.StandardName )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, _\n            localZone.DaylightName )\n\n        &#39; Display the current date and time and show if they occur \n        &#39; in daylight saving time.\n        Console.WriteLine( vbCrLf &amp; timeFmt, _\n            &quot;Current date and time:&quot;, currentDate )\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, _\n            localZone.IsDaylightSavingTime( currentDate ) )\n\n        &#39; Get the current Coordinated Universal Time (UTC) and UTC \n        &#39; offset.\n        Dim currentUTC As DateTime = _\n            localZone.ToUniversalTime( currentDate )\n        Dim currentOffset As TimeSpan = _\n            localZone.GetUtcOffset( currentDate )\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, _\n            currentUTC )\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset )\n\n        &#39; Get the DaylightTime object for the current year.\n        Dim daylight As DaylightTime = _\n            localZone.GetDaylightChanges( currentYear )\n\n        &#39; Display the daylight saving time range for the current year.\n        Console.WriteLine( vbCrLf &amp; _\n            &quot;Daylight saving time for year {0}:&quot;, currentYear )\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; &amp; _\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, _\n            daylight.Start, daylight.End, daylight.Delta )\n    End Sub \nEnd Module \n\n&#39;This example of selected TimeZone class elements generates the following\n&#39;output, which varies depending on the time zone in which it is run.\n&#39;\n&#39;Standard time name:           Pacific Standard Time\n&#39;Daylight saving time name:    Pacific Daylight Time\n&#39;\n&#39;Current date and time:        2006-01-06 16:47\n&#39;Daylight saving time?         False\n&#39;Coordinated Universal Time:   2006-01-07 00:47\n&#39;UTC offset:                   -08:00:00\n&#39;\n&#39;Daylight saving time for year 2006:\n&#39;2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.TimeZone.Class#1\">// Example of selected TimeZone class elements.\nusing System;\nusing System.Globalization;\n\nclass TimeZoneDemo\n{\n    static void Main( )\n    {\n        const string dataFmt = &quot;{0,-30}{1}&quot;;\n        const string timeFmt = &quot;{0,-30}{1:yyyy-MM-dd HH:mm}&quot;;\n\n        Console.WriteLine(\n            &quot;This example of selected TimeZone class &quot; +\n            &quot;elements generates the following <br>&quot; +\n            &quot;output, which varies depending on the &quot; +\n            &quot;time zone in which it is run.<br>&quot; );\n\n        // Get the local time zone and the current local time and year.\n        TimeZone localZone = TimeZone.CurrentTimeZone;\n        DateTime currentDate = DateTime.Now;\n        int      currentYear = currentDate.Year;\n\n        // Display the names for standard time and daylight saving \n        // time for the local time zone.\n        Console.WriteLine( dataFmt, &quot;Standard time name:&quot;, \n            localZone.StandardName );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time name:&quot;, \n            localZone.DaylightName );\n\n        // Display the current date and time and show if they occur \n        // in daylight saving time.\n        Console.WriteLine( &quot;<br>&quot; + timeFmt, &quot;Current date and time:&quot;,\n            currentDate );\n        Console.WriteLine( dataFmt, &quot;Daylight saving time?&quot;, \n            localZone.IsDaylightSavingTime( currentDate ) );\n\n        // Get the current Coordinated Universal Time (UTC) and UTC \n        // offset.\n        DateTime currentUTC = \n            localZone.ToUniversalTime( currentDate );\n        TimeSpan currentOffset = \n            localZone.GetUtcOffset( currentDate );\n\n        Console.WriteLine( timeFmt, &quot;Coordinated Universal Time:&quot;, \n            currentUTC );\n        Console.WriteLine( dataFmt, &quot;UTC offset:&quot;, currentOffset );\n\n        // Get the DaylightTime object for the current year.\n        DaylightTime daylight = \n            localZone.GetDaylightChanges( currentYear );\n\n        // Display the daylight saving time range for the current year.\n        Console.WriteLine( \n            &quot;<br>Daylight saving time for year {0}:&quot;, currentYear );\n        Console.WriteLine( &quot;{0:yyyy-MM-dd HH:mm} to &quot; +\n            &quot;{1:yyyy-MM-dd HH:mm}, delta: {2}&quot;, \n            daylight.Start, daylight.End, daylight.Delta );\n    } \n} \n\n/*\nThis example of selected TimeZone class elements generates the following\noutput, which varies depending on the time zone in which it is run.\n\nStandard time name:           Pacific Standard Time\nDaylight saving time name:    Pacific Daylight Time\n\nCurrent date and time:        2006-01-06 16:47\nDaylight saving time?         False\nCoordinated Universal Time:   2006-01-07 00:47\nUTC offset:                   -08:00:00\n\nDaylight saving time for year 2006:\n2006-04-02 02:00 to 2006-10-29 02:00, delta: 01:00:00\n*/ \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_GetDaylightChanges_System_Int32_\">\r\n    \r\n            <a id=\"System_TimeZone_GetDaylightChanges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDaylightChanges(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the daylight saving time period for a particular year.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>year</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The year that the daylight saving time period applies to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.daylighttime\" data-linktype=\"relative-path\">DaylightTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.globalization.daylighttime\" data-linktype=\"relative-path\">DaylightTime</a> object that contains the start and end date for daylight saving time in <code>year</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>year</code> is less than 1 or greater than 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Only one daylight saving time period per year is supported.  </p>\n<p> If daylight saving time is not used in the current time zone, the return value is a <a class=\"xref\" href=\"system.globalization.daylighttime\" data-linktype=\"relative-path\">DaylightTime</a> object, where the value of <a class=\"xref\" href=\"system.globalization.daylighttime#System_Globalization_DaylightTime_Start_\" data-linktype=\"relative-path\">Start</a> and <a class=\"xref\" href=\"system.globalization.daylighttime#System_Globalization_DaylightTime_End_\" data-linktype=\"relative-path\">End</a> is <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a>, and the value of <a class=\"xref\" href=\"system.globalization.daylighttime#System_Globalization_DaylightTime_Delta_\" data-linktype=\"relative-path\">Delta</a> is a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> initialized to 0 ticks.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_GetUtcOffset_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZone_GetUtcOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUtcOffset(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the Coordinated Universal Time (UTC) offset for the specified local time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract TimeSpan GetUtcOffset (DateTime time);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>time</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The Coordinated Universal Time (UTC) offset from <code>time</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the offset, or difference, between the <code>time</code> parameter and Coordinated Universal Time (UTC). That is:  </p>\n<p> <code>time</code> = UTC + offset  </p>\n<p> The method interprets the time zone of <code>time</code> based on its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property. If the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the method returns the offset of the local time zone. If the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the method returns an offset equal to <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>.  </p>\n<p> If the local time zone observes daylight saving time, GetUtcOffset applies the current adjustment rule to <code>time</code> when determining the offset of the local time zone. That is, the offset returned by GetUtcOffset reflects whether <code>time</code> falls in the time zone&#39;s standard time or its daylight saving time.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The GetUtcOffset method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the UTC offset of a local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if <code>time</code> is a historic date and time value that was subject to a previous adjustment rule.  </p>\n</div>\n<p> The GetUtcOffset method corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a> method.  </p>\n<p> Because the date and time value represented by <code>time</code> and this value&#39;s offset from UTC are not tightly coupled, a local or unspecified date and time value can return a different offset value when run on different computers or when run on the same computer under different time zones. If this behavior is undesirable, use a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value instead. The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> data type tightly couples a date and time value with its offset from UTC.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_IsDaylightSavingTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZone_IsDaylightSavingTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDaylightSavingTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether the specified date and time is within a daylight saving time period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsDaylightSavingTime (DateTime time);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>time</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>time</code> is in a daylight saving time period; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The year to which the daylight saving time period applies is derived from the <code>time</code> parameter.  </p>\n<p> Because the <a class=\"xref\" href=\"system.timezone\" data-linktype=\"relative-path\">TimeZone</a> class supports a single daylight saving time adjustment rule, the IsDaylightSavingTime method applies the current adjustment rule to any date, regardless of whether the adjustment rule was in effect on that date. Assuming that the operating system itself has accurate historic daylight saving time data, a more accurate result is available by using the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> method. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_IsDaylightSavingTime_System_DateTime_System_Globalization_DaylightTime_\">\r\n    \r\n            <a id=\"System_TimeZone_IsDaylightSavingTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDaylightSavingTime(DateTime,DaylightTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether the specified date and time is within the specified daylight saving time period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>time</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>daylightTimes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.daylighttime\" data-linktype=\"relative-path\">DaylightTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>time</code> is in <code>daylightTimes</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>daylightTimes</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> method provides the same functionality as this overload of the IsDaylightSavingTime method. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsDaylightSavingTime_\" data-linktype=\"relative-path\">IsDaylightSavingTime</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_ToLocalTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZone_ToLocalTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToLocalTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the local time that corresponds to a specified date and time value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual DateTime ToLocalTime (DateTime time);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>time</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Coordinated Universal Time (UTC) time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the local time that corresponds to <code>time</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the relationship between the <code>time</code> parameter and the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value returned by this method.  </p>\n<table>\n<thead>\n<tr>\n<th><code>time</code> parameter</th>\n<th>Behavior</th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A Coordinated Universal Time (UTC) time (<a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>).</td>\n<td>Converts the time from UTC to the local time.</td>\n<td>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the local time that corresponds to <code>time</code>.</td>\n</tr>\n<tr>\n<td>A local time (<a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>).</td>\n<td>No conversion necessary.</td>\n<td>The same <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value represented by the <code>time</code> parameter.</td>\n</tr>\n<tr>\n<td>An unspecified time (<a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>).</td>\n<td>Assumes that the time is UTC and converts it from UTC to the local time.</td>\n<td>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the local time that corresponds to <code>time</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> If the local time zone observes daylight saving time, ToLocalTime applies the current adjustment rule to <code>time</code> when performing the conversion.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ToLocalTime method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the local time corresponding to a particular UTC time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if <code>time</code> is a historic date and time value that was subject to a previous adjustment rule.  </p>\n</div>\n<p> The ToLocalTime method corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeFromUtc_\" data-linktype=\"relative-path\">ConvertTimeFromUtc</a> method with its <code>destinationTimeZone</code> parameter set to <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a>. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeFromUtc_\" data-linktype=\"relative-path\">ConvertTimeFromUtc</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_TimeZone_ToUniversalTime_System_DateTime_\">\r\n    \r\n            <a id=\"System_TimeZone_ToUniversalTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUniversalTime(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the Coordinated Universal Time (UTC) that corresponds to a specified time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual DateTime ToUniversalTime (DateTime time);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>time</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the Coordinated Universal Time (UTC) that corresponds to <code>time</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the local time zone observes daylight saving time, ToUniversalTime applies the current adjustment rule to the <code>time</code> parameter when performing the conversion.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ToUniversalTime method recognizes only the current daylight saving time adjustment rule for the local time zone. As a result, it is guaranteed to accurately return the Coordinated Universal Time (UTC) corresponding to a particular local time only during the period in which the latest adjustment rule is in effect. It may return inaccurate results if <code>time</code> is a historic date and time value that was subject to a previous adjustment rule.  </p>\n</div>\n<p> If the <code>time</code> parameter is an ambiguous time, the method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone.) If <code>time</code> is an invalid time, the method simply subtracts the local time from the local time zone&#39;s UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)  </p>\n<p> Because <code>time</code> is interpreted in relation to the current time zone on the current system, the date and time returned by this method can differ if an application is run on different computers or on the same computer with different time zones. For cases in which a date and time value must represent a single, unambiguous point in time, use a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to represent the local time.  </p>\n<p> The ToUniversalTime method corresponds to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTimeToUtc(DateTime)</a> method overload with a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> parameter whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property does not equal <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. Whenever possible, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTimeToUtc(DateTime)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TimeZone.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TimeZone.yml\">\r\n<meta name=\"APIName\" content=\"System.TimeZone\">\r\n<meta name=\"APIName\" content=\"System.TimeZone..ctor\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.CurrentTimeZone\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.DaylightName\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.GetDaylightChanges\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.GetUtcOffset\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.IsDaylightSavingTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.StandardName\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.ToLocalTime\">\r\n<meta name=\"APIName\" content=\"System.TimeZone.ToUniversalTime\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ebb63bcb-7c97-db0d-6388-9ba9e08e5d7b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a time zone.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.TimeZone\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TimeZone.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TimeZone.yml","open_to_public_contributors":true,"api_name":["System.TimeZone","System.TimeZone..ctor","System.TimeZone.CurrentTimeZone","System.TimeZone.DaylightName","System.TimeZone.GetDaylightChanges","System.TimeZone.GetUtcOffset","System.TimeZone.IsDaylightSavingTime","System.TimeZone.StandardName","System.TimeZone.ToLocalTime","System.TimeZone.ToUniversalTime"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.TimeZone","System::TimeZone","System.TimeZone.#ctor","System::TimeZone::#ctor","System.TimeZone.CurrentTimeZone","System::TimeZone::CurrentTimeZone","System.TimeZone.DaylightName","System::TimeZone::DaylightName","System.TimeZone.GetDaylightChanges","System::TimeZone::GetDaylightChanges","System.TimeZone.GetUtcOffset","System::TimeZone::GetUtcOffset","System.TimeZone.IsDaylightSavingTime","System::TimeZone::IsDaylightSavingTime","System.TimeZone.StandardName","System::TimeZone::StandardName","System.TimeZone.ToLocalTime","System::TimeZone::ToLocalTime","System.TimeZone.ToUniversalTime","System::TimeZone::ToUniversalTime"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ebb63bcb-7c97-db0d-6388-9ba9e08e5d7b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/TimeZone.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TimeZone class | Microsoft Docs","_op_ogTitle":"TimeZone class","description":"Represents a time zone.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.TimeZone","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.timezone","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.timezone","fileRelativePath":"System.TimeZone.html"},"themesRelativePathToOutputRoot":"_themes/"}