{"content":"    \r\n    <h1 id=\"System_Windows_Forms_ListViewInsertionMark\">\r\n      <span class=\"lang-csharp\">ListViewInsertionMark</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Used to indicate the expected drop location when an item is dragged to a new position in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. This functionality is available only on Windows XP and later.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ListViewInsertionMark</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ListViewInsertionMark</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can retrieve a ListViewInsertionMark from the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_InsertionMark_\" data-linktype=\"relative-path\">InsertionMark</a> property of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and use it to visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position.  </p>\n<p> This feature works only when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoArrange_\" data-linktype=\"relative-path\">AutoArrange</a> property is set to <code>true</code> and when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not sort the items automatically. To prevent automatic sorting, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">System.Windows.Forms.SortOrder</a> and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. Additionally, the insertion mark feature cannot be used with the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> grouping feature because the grouping feature orders the items by group membership.  </p>\n<p> The ListViewInsertionMark class is typically used in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseMove</a> event to update the position of the insertion mark as an item is dragged. It is also used in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragDrop</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseUp</a> event to insert a dragged item at the correct location.  </p>\n<p> To update the position of the insertion mark, follow these steps:  </p>\n<ol>\n<li><p>In a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseMove</a> event, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_InsertionMark_\" data-linktype=\"relative-path\">InsertionMark</a> property to access the ListViewInsertionMark object associated with the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method to retrieve the index of the item closest to the mouse pointer.  </p>\n</li>\n<li><p>Pass the index value to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemRect_\" data-linktype=\"relative-path\">GetItemRect</a> method to retrieve the bounding rectangle of the item.  </p>\n</li>\n<li><p>If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem_\" data-linktype=\"relative-path\">AppearsAfterItem</a> property to <code>false</code>; otherwise, set it to <code>true</code>.  </p>\n</li>\n<li><p>Set the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Index_\" data-linktype=\"relative-path\">Index</a> property to the index value retrieved from the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method. The insertion mark appears next to item with the specified index, either to the left or the right, depending on the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem_\" data-linktype=\"relative-path\">AppearsAfterItem</a> property value. If an item is dragged over itself, the index is -1 and the insertion mark is hidden.  </p>\n<p>To insert the dragged item at the correct location, follow these steps:  </p>\n</li>\n<li><p>In a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragDrop</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseUp</a> event, use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Index_\" data-linktype=\"relative-path\">Index</a> property to determine the current location of the insertion mark. Store this value to be used later as the insertion index.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem_\" data-linktype=\"relative-path\">AppearsAfterItem</a> property is set to <code>true</code>, increment the stored insertion index value.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_Insert_\" data-linktype=\"relative-path\">Insert</a> method to insert a clone of the dragged item into the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection at the stored insertion index.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method to remove the original copy of the dragged item.  </p>\n<p>You must insert a clone of the dragged item before the original copy is removed so the index values in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection are not altered before the insertion.  </p>\n<p>To ensure that the items are displayed in the same order as their index values, you must set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property to an implementation of the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface that sorts items by index value. For more information, see the Example section.  </p>\n<p>You can modify the color of the insertion mark by using the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Color_\" data-linktype=\"relative-path\">Color</a> property. If you need the size or position of the insertion mark, you can get its bounding rectangle through the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The insertion mark feature is available only on Windows XP and the Windows Server 2003 family when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. On earlier operating systems, any code relating to the insertion mark will be ignored and the insertion mark will not appear. As a result, any code that depends on the insertion mark feature may not work correctly. You may want to include a test that determines whether the insertion mark feature is available, and provide alternate functionality when it is unavailable. For example, you may want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.  </p>\n<p> The insertion mark feature is provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <a class=\"xref\" href=\"system.windows.forms.featuresupport#System_Windows_Forms_FeatureSupport_IsPresent_System_Object_\" data-linktype=\"relative-path\">System.Windows.Forms.FeatureSupport.IsPresent(Object)</a> method overload and pass in the <a class=\"xref\" href=\"system.windows.forms.osfeature#System_Windows_Forms_OSFeature_Themes\" data-linktype=\"relative-path\">System.Windows.Forms.OSFeature.Themes</a> value.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem\" data-linktype=\"self-bookmark\">AppearsAfterItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the insertion mark appears to the right of the item with the index specified by the <span class=\"xref\">stem.Windows.Forms.ListViewInsertionMark.Index*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListViewInsertionMark_Bounds\" data-linktype=\"self-bookmark\">Bounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the bounding rectangle of the insertion mark.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListViewInsertionMark_Color\" data-linktype=\"self-bookmark\">Color</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of the insertion mark.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListViewInsertionMark_Index\" data-linktype=\"self-bookmark\">Index</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the item next to which the insertion mark appears.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListViewInsertionMark_NearestIndex_System_Drawing_Point_\" data-linktype=\"self-bookmark\">NearestIndex(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the index of the item closest to the specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppearsAfterItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the insertion mark appears to the right of the item with the index specified by the <span class=\"xref\">stem.Windows.Forms.ListViewInsertionMark.Index*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AppearsAfterItem { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the insertion mark appears to the right of the item with the index specified by the <span class=\"xref\">stem.Windows.Forms.ListViewInsertionMark.Index*</span> property; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method lets you find the item closest to the mouse pointer, but you must do your own calculations to determine whether the insertion mark should appear before or after this item.  </p>\n<p> To calculate the value needed for the AppearsAfterItem property, follow these steps:  </p>\n<ol>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method to retrieve the index of the item closest to the mouse pointer.  </p>\n</li>\n<li><p>Pass the index value to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemRect_\" data-linktype=\"relative-path\">GetItemRect</a> method to retrieve the bounding rectangle of the item.  </p>\n</li>\n<li><p>If the mouse pointer is located to the left of the midpoint of the bounding rectangle, set the AppearsAfterItem property to <code>false</code>; otherwise, set it to <code>true</code>.  </p>\n<p>For more information, see the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> overview reference topic.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    // Moves the insertion mark as the item is dragged.\n    private void myListView_DragOver(object sender, DragEventArgs e)\n    {\n        // Retrieve the client coordinates of the mouse pointer.\n        Point targetPoint = \n            myListView.PointToClient(new Point(e.X, e.Y));\n\n        // Retrieve the index of the item closest to the mouse pointer.\n        int targetIndex = myListView.InsertionMark.NearestIndex(targetPoint);\n\n        // Confirm that the mouse pointer is not over the dragged item.\n        if (targetIndex &gt; -1) \n        {\n            // Determine whether the mouse pointer is to the left or\n            // the right of the midpoint of the closest item and set\n            // the InsertionMark.AppearsAfterItem property accordingly.\n            Rectangle itemBounds = myListView.GetItemRect(targetIndex);\n            if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n            {\n                myListView.InsertionMark.AppearsAfterItem = true;\n            }\n            else\n            {\n                myListView.InsertionMark.AppearsAfterItem = false;\n            }\n        }\n\n        // Set the location of the insertion mark. If the mouse is\n        // over the dragged item, the targetIndex value is -1 and\n        // the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    &#39; Moves the insertion mark as the item is dragged.\n    Private Sub myListView_DragOver(sender As Object, e As DragEventArgs)\n        &#39; Retrieve the client coordinates of the mouse pointer.\n        Dim targetPoint As Point = myListView.PointToClient(New Point(e.X, e.Y))\n        \n        &#39; Retrieve the index of the item closest to the mouse pointer.\n        Dim targetIndex As Integer = _\n            myListView.InsertionMark.NearestIndex(targetPoint)\n        \n        &#39; Confirm that the mouse pointer is not over the dragged item.\n        If targetIndex &gt; -1 Then\n            &#39; Determine whether the mouse pointer is to the left or\n            &#39; the right of the midpoint of the closest item and set\n            &#39; the InsertionMark.AppearsAfterItem property accordingly.\n            Dim itemBounds As Rectangle = myListView.GetItemRect(targetIndex)\n            If targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) Then\n                myListView.InsertionMark.AppearsAfterItem = True\n            Else\n                myListView.InsertionMark.AppearsAfterItem = False\n            End If\n        End If\n        \n        &#39; Set the location of the insertion mark. If the mouse is\n        &#39; over the dragged item, the targetIndex value is -1 and\n        &#39; the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex\n    End Sub &#39;myListView_DragOver\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">   // Moves the insertion mark as the item is dragged.\n   void myListView_DragOver( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      // Retrieve the client coordinates of the mouse pointer.\n      Point targetPoint = myListView-&gt;PointToClient( Point(e-&gt;X,e-&gt;Y) );\n\n      // Retrieve the index of the item closest to the mouse pointer.\n      int targetIndex = myListView-&gt;InsertionMark-&gt;NearestIndex( targetPoint );\n\n      // Confirm that the mouse pointer is not over the dragged item.\n      if ( targetIndex &gt; -1 )\n      {\n         // Determine whether the mouse pointer is to the left or\n         // the right of the midpoint of the closest item and set\n         // the InsertionMark.AppearsAfterItem property accordingly.\n         Rectangle itemBounds = myListView-&gt;GetItemRect( targetIndex );\n         if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = true;\n         }\n         else\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = false;\n         }\n      }\n\n      // Set the location of the insertion mark. If the mouse is\n      // over the dragged item, the targetIndex value is -1 and\n      // the insertion mark disappears.\n      myListView-&gt;InsertionMark-&gt;Index = targetIndex;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListViewInsertionMark_Bounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListViewInsertionMark_Bounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the bounding rectangle of the insertion mark.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle Bounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the position and size of the insertion mark.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The coordinates in the insertion mark bounding rectangle are relative to the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListViewInsertionMark_Color\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListViewInsertionMark_Color_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Color</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of the insertion mark.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color Color { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> value that represents the color of the insertion mark. The default value is the value of the <span class=\"xref\">stem.Windows.Forms.ListView.ForeColor*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to set the insertion mark color to a value other than the foreground color of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.InsertionMark#2\">    public ListViewInsertionMarkExample()\n    {\n        // Initialize myListView.\n        myListView = new ListView();\n        myListView.Dock = DockStyle.Fill;\n        myListView.View = View.LargeIcon;\n        myListView.MultiSelect = false;\n        myListView.ListViewItemSorter = new ListViewIndexComparer();\n\n        // Initialize the insertion mark.\n        myListView.InsertionMark.Color = Color.Green;\n\n        // Add items to myListView.\n        myListView.Items.Add(&quot;zero&quot;);\n        myListView.Items.Add(&quot;one&quot;);\n        myListView.Items.Add(&quot;two&quot;);\n        myListView.Items.Add(&quot;three&quot;);\n        myListView.Items.Add(&quot;four&quot;);\n        myListView.Items.Add(&quot;five&quot;);\n        \n        // Initialize the drag-and-drop operation when running\n        // under Windows XP or a later operating system.\n        if (OSFeature.Feature.IsPresent(OSFeature.Themes))\n        {\n            myListView.AllowDrop = true;\n            myListView.ItemDrag += new ItemDragEventHandler(myListView_ItemDrag);\n            myListView.DragEnter += new DragEventHandler(myListView_DragEnter);\n            myListView.DragOver += new DragEventHandler(myListView_DragOver);\n            myListView.DragLeave += new EventHandler(myListView_DragLeave);\n            myListView.DragDrop += new DragEventHandler(myListView_DragDrop);\n        }\n\n        // Initialize the form.\n        this.Text = &quot;ListView Insertion Mark Example&quot;;\n        this.Controls.Add(myListView);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.InsertionMark#2\">    Public Sub New()\n        &#39; Initialize myListView.\n        myListView = New ListView()\n        myListView.Dock = DockStyle.Fill\n        myListView.View = View.LargeIcon\n        myListView.MultiSelect = False\n        myListView.ListViewItemSorter = New ListViewIndexComparer()\n        \n        &#39; Initialize the insertion mark.\n        myListView.InsertionMark.Color = Color.Green\n        \n        &#39; Add items to myListView.\n        myListView.Items.Add(&quot;zero&quot;)\n        myListView.Items.Add(&quot;one&quot;)\n        myListView.Items.Add(&quot;two&quot;)\n        myListView.Items.Add(&quot;three&quot;)\n        myListView.Items.Add(&quot;four&quot;)\n        myListView.Items.Add(&quot;five&quot;)\n        \n        &#39; Initialize the drag-and-drop operation when running\n        &#39; under Windows XP or a later operating system.\n        If OSFeature.Feature.IsPresent(OSFeature.Themes)\n            myListView.AllowDrop = True\n            AddHandler myListView.ItemDrag, AddressOf myListView_ItemDrag\n            AddHandler myListView.DragEnter, AddressOf myListView_DragEnter\n            AddHandler myListView.DragOver, AddressOf myListView_DragOver\n            AddHandler myListView.DragLeave, AddressOf myListView_DragLeave\n            AddHandler myListView.DragDrop, AddressOf myListView_DragDrop\n        End If \n\n        &#39; Initialize the form.\n        Me.Text = &quot;ListView Insertion Mark Example&quot;\n        Me.Controls.Add(myListView)\n    End Sub &#39;New\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.InsertionMark#2\">   ListViewInsertionMarkExample()\n   {\n      // Initialize myListView.\n      myListView = gcnew ListView;\n      myListView-&gt;Dock = DockStyle::Fill;\n      myListView-&gt;View = View::LargeIcon;\n      myListView-&gt;MultiSelect = false;\n      myListView-&gt;ListViewItemSorter = gcnew ListViewIndexComparer;\n\n      // Initialize the insertion mark.\n      myListView-&gt;InsertionMark-&gt;Color = Color::Green;\n\n      // Add items to myListView.\n      myListView-&gt;Items-&gt;Add( &quot;zero&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;one&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;two&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;three&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;four&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;five&quot; );\n\n      // Initialize the drag-and-drop operation when running\n      // under Windows XP or a later operating system.\n      if ( System::Environment::OSVersion-&gt;Version-&gt;Major &gt; 5 || (System::Environment::OSVersion-&gt;Version-&gt;Major == 5 &amp;&amp; System::Environment::OSVersion-&gt;Version-&gt;Minor &gt;= 1) )\n      {\n         myListView-&gt;AllowDrop = true;\n         myListView-&gt;ItemDrag += gcnew ItemDragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_ItemDrag );\n         myListView-&gt;DragEnter += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragEnter );\n         myListView-&gt;DragOver += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragOver );\n         myListView-&gt;DragLeave += gcnew EventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragLeave );\n         myListView-&gt;DragDrop += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragDrop );\n      }\n\n      // Initialize the form.\n      this-&gt;Text = &quot;ListView Insertion Mark Example&quot;;\n      this-&gt;Controls-&gt;Add( myListView );\n   }\n\nprivate:\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListViewInsertionMark_Index\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListViewInsertionMark_Index_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Index</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the item next to which the insertion mark appears.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Index { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the item next to which the insertion mark appears or -1 when the insertion mark is hidden.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The insertion mark appears to the left of the item with the specified index if the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_AppearsAfterItem_\" data-linktype=\"relative-path\">AppearsAfterItem</a> property is set to <code>false</code>; otherwise, it appears to the right of the item. The insertion mark disappears automatically when a dragged item is inserted into the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection. To remove the insertion mark manually, for example, when an item is dragged onto itself or dragged outside the control, set the Index value to -1.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method to retrieve the index of the item closest to a specified location, such as the location of the mouse pointer when positioning an item in a drag-and-drop operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    // Moves the insertion mark as the item is dragged.\n    private void myListView_DragOver(object sender, DragEventArgs e)\n    {\n        // Retrieve the client coordinates of the mouse pointer.\n        Point targetPoint = \n            myListView.PointToClient(new Point(e.X, e.Y));\n\n        // Retrieve the index of the item closest to the mouse pointer.\n        int targetIndex = myListView.InsertionMark.NearestIndex(targetPoint);\n\n        // Confirm that the mouse pointer is not over the dragged item.\n        if (targetIndex &gt; -1) \n        {\n            // Determine whether the mouse pointer is to the left or\n            // the right of the midpoint of the closest item and set\n            // the InsertionMark.AppearsAfterItem property accordingly.\n            Rectangle itemBounds = myListView.GetItemRect(targetIndex);\n            if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n            {\n                myListView.InsertionMark.AppearsAfterItem = true;\n            }\n            else\n            {\n                myListView.InsertionMark.AppearsAfterItem = false;\n            }\n        }\n\n        // Set the location of the insertion mark. If the mouse is\n        // over the dragged item, the targetIndex value is -1 and\n        // the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    &#39; Moves the insertion mark as the item is dragged.\n    Private Sub myListView_DragOver(sender As Object, e As DragEventArgs)\n        &#39; Retrieve the client coordinates of the mouse pointer.\n        Dim targetPoint As Point = myListView.PointToClient(New Point(e.X, e.Y))\n        \n        &#39; Retrieve the index of the item closest to the mouse pointer.\n        Dim targetIndex As Integer = _\n            myListView.InsertionMark.NearestIndex(targetPoint)\n        \n        &#39; Confirm that the mouse pointer is not over the dragged item.\n        If targetIndex &gt; -1 Then\n            &#39; Determine whether the mouse pointer is to the left or\n            &#39; the right of the midpoint of the closest item and set\n            &#39; the InsertionMark.AppearsAfterItem property accordingly.\n            Dim itemBounds As Rectangle = myListView.GetItemRect(targetIndex)\n            If targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) Then\n                myListView.InsertionMark.AppearsAfterItem = True\n            Else\n                myListView.InsertionMark.AppearsAfterItem = False\n            End If\n        End If\n        \n        &#39; Set the location of the insertion mark. If the mouse is\n        &#39; over the dragged item, the targetIndex value is -1 and\n        &#39; the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex\n    End Sub &#39;myListView_DragOver\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">   // Moves the insertion mark as the item is dragged.\n   void myListView_DragOver( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      // Retrieve the client coordinates of the mouse pointer.\n      Point targetPoint = myListView-&gt;PointToClient( Point(e-&gt;X,e-&gt;Y) );\n\n      // Retrieve the index of the item closest to the mouse pointer.\n      int targetIndex = myListView-&gt;InsertionMark-&gt;NearestIndex( targetPoint );\n\n      // Confirm that the mouse pointer is not over the dragged item.\n      if ( targetIndex &gt; -1 )\n      {\n         // Determine whether the mouse pointer is to the left or\n         // the right of the midpoint of the closest item and set\n         // the InsertionMark.AppearsAfterItem property accordingly.\n         Rectangle itemBounds = myListView-&gt;GetItemRect( targetIndex );\n         if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = true;\n         }\n         else\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = false;\n         }\n      }\n\n      // Set the location of the insertion mark. If the mouse is\n      // over the dragged item, the targetIndex value is -1 and\n      // the insertion mark disappears.\n      myListView-&gt;InsertionMark-&gt;Index = targetIndex;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListViewInsertionMark_NearestIndex_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListViewInsertionMark_NearestIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NearestIndex(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the index of the item closest to the specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int NearestIndex (System.Drawing.Point pt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> representing the location from which to find the nearest item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the item closest to the specified point or -1 if the closest item is the item currently being dragged.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method lets you locate the item closest to the mouse pointer when doing a drag-and-drop operation. Use the index value returned to set the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Index_\" data-linktype=\"relative-path\">Index</a> property. When the item closest to the mouse pointer is the item being dragged, the return value of this method is -1. In this case, setting the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_Index_\" data-linktype=\"relative-path\">Index</a> property to this value hides the insertion mark.  </p>\n<p> This method finds the closest item regardless of where the mouse pointer is located, while the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemAt_\" data-linktype=\"relative-path\">GetItemAt</a> method returns the item at the specified location only, or <code>null</code> if there is no item at that location. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemAt_\" data-linktype=\"relative-path\">GetItemAt</a> method returns <code>null</code>, for example, when the mouse pointer is located between two items. For this reason, you should always use the NearestIndex method when using a drag-and-drop operation to position items.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    // Moves the insertion mark as the item is dragged.\n    private void myListView_DragOver(object sender, DragEventArgs e)\n    {\n        // Retrieve the client coordinates of the mouse pointer.\n        Point targetPoint = \n            myListView.PointToClient(new Point(e.X, e.Y));\n\n        // Retrieve the index of the item closest to the mouse pointer.\n        int targetIndex = myListView.InsertionMark.NearestIndex(targetPoint);\n\n        // Confirm that the mouse pointer is not over the dragged item.\n        if (targetIndex &gt; -1) \n        {\n            // Determine whether the mouse pointer is to the left or\n            // the right of the midpoint of the closest item and set\n            // the InsertionMark.AppearsAfterItem property accordingly.\n            Rectangle itemBounds = myListView.GetItemRect(targetIndex);\n            if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n            {\n                myListView.InsertionMark.AppearsAfterItem = true;\n            }\n            else\n            {\n                myListView.InsertionMark.AppearsAfterItem = false;\n            }\n        }\n\n        // Set the location of the insertion mark. If the mouse is\n        // over the dragged item, the targetIndex value is -1 and\n        // the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">    &#39; Moves the insertion mark as the item is dragged.\n    Private Sub myListView_DragOver(sender As Object, e As DragEventArgs)\n        &#39; Retrieve the client coordinates of the mouse pointer.\n        Dim targetPoint As Point = myListView.PointToClient(New Point(e.X, e.Y))\n        \n        &#39; Retrieve the index of the item closest to the mouse pointer.\n        Dim targetIndex As Integer = _\n            myListView.InsertionMark.NearestIndex(targetPoint)\n        \n        &#39; Confirm that the mouse pointer is not over the dragged item.\n        If targetIndex &gt; -1 Then\n            &#39; Determine whether the mouse pointer is to the left or\n            &#39; the right of the midpoint of the closest item and set\n            &#39; the InsertionMark.AppearsAfterItem property accordingly.\n            Dim itemBounds As Rectangle = myListView.GetItemRect(targetIndex)\n            If targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) Then\n                myListView.InsertionMark.AppearsAfterItem = True\n            Else\n                myListView.InsertionMark.AppearsAfterItem = False\n            End If\n        End If\n        \n        &#39; Set the location of the insertion mark. If the mouse is\n        &#39; over the dragged item, the targetIndex value is -1 and\n        &#39; the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex\n    End Sub &#39;myListView_DragOver\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.InsertionMark#3\">   // Moves the insertion mark as the item is dragged.\n   void myListView_DragOver( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      // Retrieve the client coordinates of the mouse pointer.\n      Point targetPoint = myListView-&gt;PointToClient( Point(e-&gt;X,e-&gt;Y) );\n\n      // Retrieve the index of the item closest to the mouse pointer.\n      int targetIndex = myListView-&gt;InsertionMark-&gt;NearestIndex( targetPoint );\n\n      // Confirm that the mouse pointer is not over the dragged item.\n      if ( targetIndex &gt; -1 )\n      {\n         // Determine whether the mouse pointer is to the left or\n         // the right of the midpoint of the closest item and set\n         // the InsertionMark.AppearsAfterItem property accordingly.\n         Rectangle itemBounds = myListView-&gt;GetItemRect( targetIndex );\n         if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = true;\n         }\n         else\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = false;\n         }\n      }\n\n      // Set the location of the insertion mark. If the mouse is\n      // over the dragged item, the targetIndex value is -1 and\n      // the insertion mark disappears.\n      myListView-&gt;InsertionMark-&gt;Index = targetIndex;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ListViewInsertionMark.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ListViewInsertionMark.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark.Color\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark.Index\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListViewInsertionMark.NearestIndex\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e433efd3-7720-7049-18b7-fa11b5be9b0a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Forms\\ListViewInsertionMark.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Used to indicate the expected drop location when an item is dragged to a new position in a  control. This functionality is available only on Windows XP and later.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ListViewInsertionMark\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ListViewInsertionMark.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ListViewInsertionMark.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.ListViewInsertionMark","System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem","System.Windows.Forms.ListViewInsertionMark.Bounds","System.Windows.Forms.ListViewInsertionMark.Color","System.Windows.Forms.ListViewInsertionMark.Index","System.Windows.Forms.ListViewInsertionMark.NearestIndex"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ListViewInsertionMark","System::Windows::Forms::ListViewInsertionMark","System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem","System::Windows::Forms::ListViewInsertionMark::AppearsAfterItem","System.Windows.Forms.ListViewInsertionMark.Bounds","System::Windows::Forms::ListViewInsertionMark::Bounds","System.Windows.Forms.ListViewInsertionMark.Color","System::Windows::Forms::ListViewInsertionMark::Color","System.Windows.Forms.ListViewInsertionMark.Index","System::Windows::Forms::ListViewInsertionMark::Index","System.Windows.Forms.ListViewInsertionMark.NearestIndex","System::Windows::Forms::ListViewInsertionMark::NearestIndex"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e433efd3-7720-7049-18b7-fa11b5be9b0a","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Forms\\ListViewInsertionMark.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/ListViewInsertionMark.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ListViewInsertionMark class | Microsoft Docs","_op_ogTitle":"ListViewInsertionMark class","description":"Used to indicate the expected drop location when an item is dragged to a new position in a  control. This functionality is available only on Windows XP and later.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ListViewInsertionMark","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.listviewinsertionmark","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.listviewinsertionmark","fileRelativePath":"System.Windows.Forms.ListViewInsertionMark.html"},"themesRelativePathToOutputRoot":"_themes/"}