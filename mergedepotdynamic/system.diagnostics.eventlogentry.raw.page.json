{"content":"    \r\n    <h1 id=\"System_Diagnostics_EventLogEntry\">\r\n      <span class=\"lang-csharp\">EventLogEntry</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a single record in the event log. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.ToolboxItem(false)]\npublic sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EventLogEntry</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You usually will not create instances of EventLogEntry directly when working with the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> member of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class contains a collection of EventLogEntry instances, which you iterate over when reading by using the <a class=\"xref\" href=\"system.diagnostics.eventlogentrycollection#System_Diagnostics_EventLogEntryCollection_Item_\" data-linktype=\"relative-path\">Item</a> class index member.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Category\" data-linktype=\"self-bookmark\">Category</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the text associated with the <span class=\"xref\">stem.Diagnostics.EventLogEntry.CategoryNumber*</span> property for this entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_CategoryNumber\" data-linktype=\"self-bookmark\">CategoryNumber</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the category number of the event log entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Data\" data-linktype=\"self-bookmark\">Data</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the binary data associated with the entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_EntryType\" data-linktype=\"self-bookmark\">EntryType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the event type of this entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_EventID\" data-linktype=\"self-bookmark\">EventID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the application-specific event identifier for the current event entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Index\" data-linktype=\"self-bookmark\">Index</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of this entry in the event log.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_InstanceId\" data-linktype=\"self-bookmark\">InstanceId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the resource identifier that designates the message text of the event entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_MachineName\" data-linktype=\"self-bookmark\">MachineName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the computer on which this entry was generated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Message\" data-linktype=\"self-bookmark\">Message</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the localized message associated with this event entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_ReplacementStrings\" data-linktype=\"self-bookmark\">ReplacementStrings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the replacement strings associated with the event log entry.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Source\" data-linktype=\"self-bookmark\">Source</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the application that generated this event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_TimeGenerated\" data-linktype=\"self-bookmark\">TimeGenerated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the local time at which this event was generated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_TimeWritten\" data-linktype=\"self-bookmark\">TimeWritten</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the local time at which this event was written to the log.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_UserName\" data-linktype=\"self-bookmark\">UserName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the user who is responsible for this event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_Equals_System_Diagnostics_EventLogEntry_\" data-linktype=\"self-bookmark\">Equals(EventLogEntry)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a comparison between two event log entries.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_EventLogEntry_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Category\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Category_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Category</div>        \r\n          </div>\r\n    \r\n            <p>Gets the text associated with the <span class=\"xref\">stem.Diagnostics.EventLogEntry.CategoryNumber*</span> property for this entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Category { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The application-specific category text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The space could not be allocated for one of the insertion strings associated with the category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_CategoryNumber\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_CategoryNumber_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CategoryNumber</div>        \r\n          </div>\r\n    \r\n            <p>Gets the category number of the event log entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public short CategoryNumber { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>The application-specific category number for this entry.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each application (event source) can define its own numbered categories and the text strings to which they are mapped. The Event Viewer can use the category to filter events in the log. The categories must be numbered consecutively beginning with the number 1. The category number is specified by the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_CategoryId_\" data-linktype=\"relative-path\">CategoryId</a> property. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string. For more information, see <a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Data\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Data_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Data</div>        \r\n          </div>\r\n    \r\n            <p>Gets the binary data associated with the entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] Data { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>An array of bytes that holds the binary data associated with the entry.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Getting this property creates an array that holds a copy of the entry&#39;s event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format. Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_EntryType\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_EntryType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EntryType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the event type of this entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.EventLogEntryType EntryType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></div>\r\n                  </div>\r\n                  <p>The event type that is associated with the entry in the event log.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All event types have well-defined common data and can optionally include event-specific data. Each event is of a single type, which the application indicates when it reports the event. The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the EntryType property. In this example, a <code>switch</code> statement uses console input to search for event log entries for the specified EntryType.  If a match is found, log entry source information is displayed at the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"EventLogEntry_Source#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   String^ myEventType = nullptr;\n   \n   // Associate the instance of &#39;EventLog&#39; with local System Log.\n   EventLog^ myEventLog = gcnew EventLog( &quot;System&quot;,&quot;.&quot; );\n   Console::WriteLine( &quot;1:Error&quot; );\n   Console::WriteLine( &quot;2:Information&quot; );\n   Console::WriteLine( &quot;3:Warning&quot; );\n   Console::WriteLine( &quot;Select the Event Type&quot; );\n   int myOption = Convert::ToInt32( Console::ReadLine() );\n   switch ( myOption )\n   {\n      case 1:\n         myEventType = &quot;Error&quot;;\n         break;\n\n      case 2:\n         myEventType = &quot;Information&quot;;\n         break;\n\n      case 3:\n         myEventType = &quot;Warning&quot;;\n         break;\n\n      default:\n         break;\n   }\n   EventLogEntryCollection^ myLogEntryCollection = myEventLog-&gt;Entries;\n   int myCount = myLogEntryCollection-&gt;Count;\n   \n   // Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n   for ( int i = myCount - 1; i &gt; 0; i-- )\n   {\n      EventLogEntry^ myLogEntry = myLogEntryCollection[ i ];\n      \n      // Select the entry having desired EventType.\n      if ( myLogEntry-&gt;EntryType.Equals( myEventType ) )\n      {\n         // Display Source of the event.\n         Console::WriteLine( &quot;{0} was the source of last event of type {1}&quot;, myLogEntry-&gt;Source, myLogEntry-&gt;EntryType );\n         return 0;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"EventLogEntry_Source#1\">using System;\nusing System.Diagnostics;\n   class MyEventlogClass\n   {\n      public static void Main()\n      {\n         String myEventType=null;\n         // Associate the instance of &#39;EventLog&#39; with local System Log.\n         EventLog myEventLog = new EventLog(&quot;System&quot;, &quot;.&quot;);\n         Console.WriteLine(&quot;1:Error&quot;);\n         Console.WriteLine(&quot;2:Information&quot;);\n         Console.WriteLine(&quot;3:Warning&quot;);\n         Console.WriteLine(&quot;Select the Event Type&quot;);\n         int myOption=Convert.ToInt32(Console.ReadLine());\n         switch(myOption)\n         {\n            case 1:  myEventType=&quot;Error&quot;;\n                     break;\n            case 2:  myEventType=&quot;Information&quot;;\n                     break;\n            case 3:  myEventType=&quot;Warning&quot;;\n                     break;\n            default: break;\n         }\n\n            EventLogEntryCollection myLogEntryCollection=myEventLog.Entries;\n            int myCount =myLogEntryCollection.Count;\n            // Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n            for(int i=myCount-1;i&gt;0;i--)\n            {\n               EventLogEntry myLogEntry = myLogEntryCollection[i];\n               // Select the entry having desired EventType.\n               if(myLogEntry.EntryType.ToString().Equals(myEventType))\n               {\n                  // Display Source of the event.\n                  Console.WriteLine(myLogEntry.Source\n                     +&quot; was the source of last event of type &quot;\n                     +myLogEntry.EntryType);\n                  return;\n               }\n            }\n\n         }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"EventLogEntry_Source#1\">Imports System\nImports System.Diagnostics\n\nClass MyEventlogClass\n\n   Public Shared Sub Main()\n      Dim myEventType As String = Nothing\n      &#39; Associate the instance of &#39;EventLog&#39; with local System Log.\n      Dim myEventLog As New EventLog(&quot;System&quot;, &quot;.&quot;)\n      Console.WriteLine(&quot;1:Error&quot;)\n      Console.WriteLine(&quot;2:Information&quot;)\n      Console.WriteLine(&quot;3:Warning&quot;)\n      Console.WriteLine(&quot;Select the Event Type&quot;)\n      Dim myOption As Integer = Convert.ToInt32(Console.ReadLine())\n      Select Case myOption\n         Case 1\n            myEventType = &quot;Error&quot;\n         Case 2\n            myEventType = &quot;Information&quot;\n         Case 3\n            myEventType = &quot;Warning&quot;\n         Case Else\n      End Select\n\n      Dim myLogEntryCollection As EventLogEntryCollection = myEventLog.Entries\n      Dim myCount As Integer = myLogEntryCollection.Count\n      &#39; Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n      Dim i As Integer\n      For i = myCount - 1 To -1 Step -1\n         Dim myLogEntry As EventLogEntry = myLogEntryCollection(i)\n         &#39; Select the entry having desired EventType.\n         If myLogEntry.EntryType.ToString().Equals(myEventType) Then\n            &#39; Display Source of the event.\n            Console.WriteLine(myLogEntry.Source + &quot; was the source of last &quot;&amp; _\n                             &quot;event of type &quot; &amp; myLogEntry.EntryType.ToString())\n            Return\n         End If\n      Next i\n\n   End Sub &#39;Main\nEnd Class &#39;MyEventlogClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_EventID\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_EventID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventID</div>        \r\n          </div>\r\n    \r\n            <p>Gets the application-specific event identifier for the current event entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int EventID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The application-specific identifier for the event message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value represents the event identifier for the entry in the event log, with the top two bits masked off. The <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. Two event log entries from the same source can have matching EventID values, but have different <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> values due to differences in the top two bits of the event identifier.  </p>\n<p> If the application wrote the event entry using one of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> methods, the EventID property matches the optional <code>eventId</code> parameter. If the application wrote the event using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> or the Win32 API <code>ReportEvent</code>, the EventID property matches the resource identifier for the event, with the top two bits masked off.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Index\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Index_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Index</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of this entry in the event log.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Index { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of this entry in the event log.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This number is not necessarily zero-based.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_InstanceId\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_InstanceId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the resource identifier that designates the message text of the event entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long InstanceId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A resource identifier that corresponds to a string definition in the message resource file of the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InstanceId property uniquely identifies an event entry for a configured event source. The InstanceId for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source. The <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_EventID_\" data-linktype=\"relative-path\">EventID</a> property equals the InstanceId with the top two bits masked off. Two event log entries from the same source can have matching <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_EventID_\" data-linktype=\"relative-path\">EventID</a> values, but have different InstanceId values due to differences in the top two bits of the resource identifier.  </p>\n<p> If the application wrote the event entry using one of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> methods, the InstanceId property matches the optional <code>eventId</code> parameter. If the application wrote the event using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>, the InstanceId property matches the resource identifier specified in the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> of the <code>instance</code> parameter. If the application wrote the event using the Win32 API <code>ReportEvent</code>, the InstanceId property matches the resource identifier specified in the <code>dwEventID</code> parameter.  </p>\n<p> For details about defining event messages and building event log resource files, see the &quot;Message Compiler&quot; topic in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>. For details about event log identifiers, see the &quot;Event Identifiers&quot; topic in the Platform SDK.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example searches an event log for entries with a particular resource identifier. The code example displays the event message for each matching entry, and counts the total number of matching entries in the log. The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.  </p>\n<pre><code class=\"lang-cpp\" name=\"EventLog_WriteEvent#10\">\n   // Get the event log corresponding to the existing source.\n   String^ myLogName = EventLog::LogNameFromSourceName( sourceName, &quot;.&quot; );\n   \n   // Find each instance of a specific event log entry in a\n   // particular event log.\n   EventLog^ myEventLog = gcnew EventLog( myLogName,&quot;.&quot; );\n   int count = 0;\n   Console::WriteLine( &quot;Searching event log entries for the event ID {0}...&quot;, ServerConnectionDownMsgId );\n   \n   // Search for the resource ID, display the event text,\n   // and display the number of matching entries.\n   System::Collections::IEnumerator^ myEnum = myEventLog-&gt;Entries-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      EventLogEntry^ entry = safe_cast&lt;EventLogEntry^&gt;(myEnum-&gt;Current);\n      if ( entry-&gt;InstanceId == ServerConnectionDownMsgId )\n      {\n         count++;\n         Console::WriteLine();\n         Console::WriteLine( &quot;Entry ID    = {0}&quot;, entry-&gt;InstanceId );\n         Console::WriteLine( &quot;Reported at {0}&quot;, entry-&gt;TimeWritten );\n         Console::WriteLine( &quot;Message text:&quot; );\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, entry-&gt;Message );\n      }\n   }\n\n   Console::WriteLine();\n   Console::WriteLine( &quot;Found {0} events with ID {1} in event log {2}.&quot;, count, ServerConnectionDownMsgId, myLogName );\n</code></pre><pre><code class=\"lang-vb\" name=\"EventLog_WriteEvent#10\">            &#39; Get the event log corresponding to the existing source.\n            Dim myLogName As String = EventLog.LogNameFromSourceName(sourceName,&quot;.&quot;)\n        \n            &#39; Find each instance of a specific event log entry in a\n            &#39; particular event log.\n\n            Dim myEventLog As EventLog = new EventLog(myLogName, &quot;.&quot;, sourceName)\n            Dim count As Integer = 0\n\n            Console.WriteLine(&quot;Searching event log entries for the event ID {0}...&quot;, _\n               ServerConnectionDownMsgId.ToString())\n            \n            &#39; Search for the resource ID, display the event text,\n            &#39; and display the number of matching entries.\n\n            Dim entry As EventLogEntry\n            For Each entry In  myEventLog.Entries\n                If entry.InstanceId = ServerConnectionDownMsgId\n                    count = count + 1\n                    Console.WriteLine()\n                    Console.WriteLine(&quot;Entry ID    = {0}&quot;, _\n                        entry.InstanceId.ToString())\n                    Console.WriteLine(&quot;Reported at {0}&quot;, _\n                        entry.TimeWritten.ToString())\n                    Console.WriteLine(&quot;Message text:&quot;)\n                    Console.WriteLine(ControlChars.Tab + entry.Message)\n                End If\n            Next entry\n\n            Console.WriteLine()\n            Console.WriteLine(&quot;Found {0} events with ID {1} in event log {2}&quot;, _\n                count.ToString(), ServerConnectionDownMsgId.ToString(), myLogName)\n</code></pre><pre><code class=\"lang-cs\" name=\"EventLog_WriteEvent#10\">            // Get the event log corresponding to the existing source.\n            string myLogName = EventLog.LogNameFromSourceName(sourceName,&quot;.&quot;);\n       \n            // Find each instance of a specific event log entry in a\n            // particular event log.\n\n            EventLog myEventLog = new EventLog(myLogName, &quot;.&quot;);\n            int count = 0;\n\n            Console.WriteLine(&quot;Searching event log entries for the event ID {0}...&quot;,\n                ServerConnectionDownMsgId.ToString());\n\n            // Search for the resource ID, display the event text,\n            // and display the number of matching entries.\n\n            foreach(EventLogEntry entry in myEventLog.Entries)\n            {\n                if (entry.InstanceId == ServerConnectionDownMsgId)\n                {\n                    count ++;\n                    Console.WriteLine();\n                    Console.WriteLine(&quot;Entry ID    = {0}&quot;, \n                        entry.InstanceId.ToString());\n                    Console.WriteLine(&quot;Reported at {0}&quot;, \n                        entry.TimeWritten.ToString());\n                    Console.WriteLine(&quot;Message text:&quot;);\n                    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, entry.Message);\n                }\n            }    \n            Console.WriteLine();\n            Console.WriteLine(&quot;Found {0} events with ID {1} in event log {2}.&quot;,\n                count.ToString(), ServerConnectionDownMsgId.ToString(), myLogName);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_MachineName\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_MachineName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MachineName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the computer on which this entry was generated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MachineName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the computer that contains the event log.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Message\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Message_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Message</div>        \r\n          </div>\r\n    \r\n            <p>Gets the localized message associated with this event entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Message { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The formatted, localized text for the message. This includes associated replacement strings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The space could not be allocated for one of the insertion strings associated with the message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Getting this property opens the registry to determine the file name of the .dll file that contains the localized text. If you receive a registry error when testing your source code, verify that the .dll file exists on the computer. If insertion strings are included in the message, catch errors in their allocation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_ReplacementStrings\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_ReplacementStrings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReplacementStrings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the replacement strings associated with the event log entry.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] ReplacementStrings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array that holds the replacement strings stored in the event entry.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property retrieves only the replacement strings for the entry. To retrieve the full message, read the <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_Message_\" data-linktype=\"relative-path\">Message</a> property.  </p>\n<p> The ReplacementStrings property contains the localized versions of replacement strings that are used in the event log entry. If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer. To do that, create an instance of the <a class=\"xref\" href=\"system.resources.resourcemanager\" data-linktype=\"relative-path\">ResourceManager</a> class for the resource assembly that contains your replacement strings. The first parameter of the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager__ctor_System_String_System_Reflection_Assembly_\" data-linktype=\"relative-path\">ResourceManager(String,Assembly)</a> constructor identifies the resource assembly to be used. Use the <a class=\"xref\" href=\"system.resources.resourcemanager#System_Resources_ResourceManager_GetString_\" data-linktype=\"relative-path\">GetString</a> method of that instance to supply localized messages for log events. The following code automatically sets the message to the language for the current culture.  </p>\n<pre><code>ResourceManager LocRM = new ResourceManager(&quot;ReplacementStrings.TestStrings&quot;,   \n      typeof(Program).Assembly);  \nEventLog e1 = new EventLog(&quot;LocTest&quot;, &quot;MyMachine&quot;, &quot;LocTest&quot;);  \n// Get the string associated with the current culture.  \ne1.WriteEntry(LocRM.GetString(&quot;strMessage&quot;),  \n   EventLogEntryType.Information);  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Source\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Source_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Source</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the application that generated this event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Source { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name registered with the event log as the source of this event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The event source indicates what logged the event. It is often the name of the application or the name of a subcomponent of the application if the application is large. Applications and services usually write to (and therefore are sources for) the Application log or a custom log. Device drivers usually write to the System log.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the Source property. In this example, a <code>switch</code> statement uses console input to search for event log entries for the specified <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_EntryType_\" data-linktype=\"relative-path\">EntryType</a>.  If a match is found, the Source property information is displayed at the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"EventLogEntry_Source#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Diagnostics;\n\nint main()\n{\n   String^ myEventType = nullptr;\n   \n   // Associate the instance of &#39;EventLog&#39; with local System Log.\n   EventLog^ myEventLog = gcnew EventLog( &quot;System&quot;,&quot;.&quot; );\n   Console::WriteLine( &quot;1:Error&quot; );\n   Console::WriteLine( &quot;2:Information&quot; );\n   Console::WriteLine( &quot;3:Warning&quot; );\n   Console::WriteLine( &quot;Select the Event Type&quot; );\n   int myOption = Convert::ToInt32( Console::ReadLine() );\n   switch ( myOption )\n   {\n      case 1:\n         myEventType = &quot;Error&quot;;\n         break;\n\n      case 2:\n         myEventType = &quot;Information&quot;;\n         break;\n\n      case 3:\n         myEventType = &quot;Warning&quot;;\n         break;\n\n      default:\n         break;\n   }\n   EventLogEntryCollection^ myLogEntryCollection = myEventLog-&gt;Entries;\n   int myCount = myLogEntryCollection-&gt;Count;\n   \n   // Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n   for ( int i = myCount - 1; i &gt; 0; i-- )\n   {\n      EventLogEntry^ myLogEntry = myLogEntryCollection[ i ];\n      \n      // Select the entry having desired EventType.\n      if ( myLogEntry-&gt;EntryType.Equals( myEventType ) )\n      {\n         // Display Source of the event.\n         Console::WriteLine( &quot;{0} was the source of last event of type {1}&quot;, myLogEntry-&gt;Source, myLogEntry-&gt;EntryType );\n         return 0;\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"EventLogEntry_Source#1\">using System;\nusing System.Diagnostics;\n   class MyEventlogClass\n   {\n      public static void Main()\n      {\n         String myEventType=null;\n         // Associate the instance of &#39;EventLog&#39; with local System Log.\n         EventLog myEventLog = new EventLog(&quot;System&quot;, &quot;.&quot;);\n         Console.WriteLine(&quot;1:Error&quot;);\n         Console.WriteLine(&quot;2:Information&quot;);\n         Console.WriteLine(&quot;3:Warning&quot;);\n         Console.WriteLine(&quot;Select the Event Type&quot;);\n         int myOption=Convert.ToInt32(Console.ReadLine());\n         switch(myOption)\n         {\n            case 1:  myEventType=&quot;Error&quot;;\n                     break;\n            case 2:  myEventType=&quot;Information&quot;;\n                     break;\n            case 3:  myEventType=&quot;Warning&quot;;\n                     break;\n            default: break;\n         }\n\n            EventLogEntryCollection myLogEntryCollection=myEventLog.Entries;\n            int myCount =myLogEntryCollection.Count;\n            // Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n            for(int i=myCount-1;i&gt;0;i--)\n            {\n               EventLogEntry myLogEntry = myLogEntryCollection[i];\n               // Select the entry having desired EventType.\n               if(myLogEntry.EntryType.ToString().Equals(myEventType))\n               {\n                  // Display Source of the event.\n                  Console.WriteLine(myLogEntry.Source\n                     +&quot; was the source of last event of type &quot;\n                     +myLogEntry.EntryType);\n                  return;\n               }\n            }\n\n         }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"EventLogEntry_Source#1\">Imports System\nImports System.Diagnostics\n\nClass MyEventlogClass\n\n   Public Shared Sub Main()\n      Dim myEventType As String = Nothing\n      &#39; Associate the instance of &#39;EventLog&#39; with local System Log.\n      Dim myEventLog As New EventLog(&quot;System&quot;, &quot;.&quot;)\n      Console.WriteLine(&quot;1:Error&quot;)\n      Console.WriteLine(&quot;2:Information&quot;)\n      Console.WriteLine(&quot;3:Warning&quot;)\n      Console.WriteLine(&quot;Select the Event Type&quot;)\n      Dim myOption As Integer = Convert.ToInt32(Console.ReadLine())\n      Select Case myOption\n         Case 1\n            myEventType = &quot;Error&quot;\n         Case 2\n            myEventType = &quot;Information&quot;\n         Case 3\n            myEventType = &quot;Warning&quot;\n         Case Else\n      End Select\n\n      Dim myLogEntryCollection As EventLogEntryCollection = myEventLog.Entries\n      Dim myCount As Integer = myLogEntryCollection.Count\n      &#39; Iterate through all &#39;EventLogEntry&#39; instances in &#39;EventLog&#39;.\n      Dim i As Integer\n      For i = myCount - 1 To -1 Step -1\n         Dim myLogEntry As EventLogEntry = myLogEntryCollection(i)\n         &#39; Select the entry having desired EventType.\n         If myLogEntry.EntryType.ToString().Equals(myEventType) Then\n            &#39; Display Source of the event.\n            Console.WriteLine(myLogEntry.Source + &quot; was the source of last &quot;&amp; _\n                             &quot;event of type &quot; &amp; myLogEntry.EntryType.ToString())\n            Return\n         End If\n      Next i\n\n   End Sub &#39;Main\nEnd Class &#39;MyEventlogClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_TimeGenerated\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_TimeGenerated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeGenerated</div>        \r\n          </div>\r\n    \r\n            <p>Gets the local time at which this event was generated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime TimeGenerated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The local time at which this event was generated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member holds the time that an event was generated. This might not be the same as the time when the event information was written to the event log. For the latter, read the <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_TimeWritten_\" data-linktype=\"relative-path\">TimeWritten</a> property.  </p>\n<p> There is usually a lag between the time that an event is generated and the time it is logged. It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging. That can happen if your log files are on a different server and you are experiencing a bottleneck.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_TimeWritten\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_TimeWritten_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeWritten</div>        \r\n          </div>\r\n    \r\n            <p>Gets the local time at which this event was written to the log.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime TimeWritten { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The local time at which this event was written to the log.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member holds the time that an event&#39;s information is written to the event log. This might not be the same time as when the event was generated. For the latter, read the <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_TimeGenerated_\" data-linktype=\"relative-path\">TimeGenerated</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_UserName\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_UserName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the user who is responsible for this event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The security identifier (SID) that uniquely identifies a user or group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></div>\r\n                  </div>\r\n                  <p>Account information could not be obtained for the user&#39;s SID.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is often blank for events in logs other than the Security log.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_Equals_System_Diagnostics_EventLogEntry_\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(EventLogEntry)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a comparison between two event log entries.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Diagnostics.EventLogEntry otherEntry);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>otherEntry</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> objects are identical; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method performs a byte-by-byte comparison between the two objects. It does not determine whether the two <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> instances refer to the same object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_EventLogEntry_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Diagnostics_EventLogEntry_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> with the data needed to serialize the target object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>) for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLogEntry.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLogEntry.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Category\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.CategoryNumber\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Data\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.EntryType\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Equals\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.EventID\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Index\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.InstanceId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.MachineName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Message\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.ReplacementStrings\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.Source\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.TimeGenerated\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.TimeWritten\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLogEntry.UserName\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c235fd36-5c41-4273-fd35-19bb4b5c5caa\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a single record in the event log. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.EventLogEntry\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLogEntry.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLogEntry.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.EventLogEntry","System.Diagnostics.EventLogEntry.Category","System.Diagnostics.EventLogEntry.CategoryNumber","System.Diagnostics.EventLogEntry.Data","System.Diagnostics.EventLogEntry.EntryType","System.Diagnostics.EventLogEntry.Equals","System.Diagnostics.EventLogEntry.EventID","System.Diagnostics.EventLogEntry.Index","System.Diagnostics.EventLogEntry.InstanceId","System.Diagnostics.EventLogEntry.MachineName","System.Diagnostics.EventLogEntry.Message","System.Diagnostics.EventLogEntry.ReplacementStrings","System.Diagnostics.EventLogEntry.Source","System.Diagnostics.EventLogEntry.ISerializable.GetObjectData","System.Diagnostics.EventLogEntry.TimeGenerated","System.Diagnostics.EventLogEntry.TimeWritten","System.Diagnostics.EventLogEntry.UserName"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.EventLogEntry","System::Diagnostics::EventLogEntry","System.Diagnostics.EventLogEntry.Category","System::Diagnostics::EventLogEntry::Category","System.Diagnostics.EventLogEntry.CategoryNumber","System::Diagnostics::EventLogEntry::CategoryNumber","System.Diagnostics.EventLogEntry.Data","System::Diagnostics::EventLogEntry::Data","System.Diagnostics.EventLogEntry.EntryType","System::Diagnostics::EventLogEntry::EntryType","System.Diagnostics.EventLogEntry.Equals","System::Diagnostics::EventLogEntry::Equals","System.Diagnostics.EventLogEntry.EventID","System::Diagnostics::EventLogEntry::EventID","System.Diagnostics.EventLogEntry.Index","System::Diagnostics::EventLogEntry::Index","System.Diagnostics.EventLogEntry.InstanceId","System::Diagnostics::EventLogEntry::InstanceId","System.Diagnostics.EventLogEntry.MachineName","System::Diagnostics::EventLogEntry::MachineName","System.Diagnostics.EventLogEntry.Message","System::Diagnostics::EventLogEntry::Message","System.Diagnostics.EventLogEntry.ReplacementStrings","System::Diagnostics::EventLogEntry::ReplacementStrings","System.Diagnostics.EventLogEntry.Source","System::Diagnostics::EventLogEntry::Source","System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData","System::Diagnostics::EventLogEntry::System#Runtime#Serialization#ISerializable#GetObjectData","System.Diagnostics.EventLogEntry.TimeGenerated","System::Diagnostics::EventLogEntry::TimeGenerated","System.Diagnostics.EventLogEntry.TimeWritten","System::Diagnostics::EventLogEntry::TimeWritten","System.Diagnostics.EventLogEntry.UserName","System::Diagnostics::EventLogEntry::UserName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c235fd36-5c41-4273-fd35-19bb4b5c5caa","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/EventLogEntry.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventLogEntry class | Microsoft Docs","_op_ogTitle":"EventLogEntry class","description":"Encapsulates a single record in the event log. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.EventLogEntry","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventlogentry","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventlogentry","fileRelativePath":"System.Diagnostics.EventLogEntry.html"},"themesRelativePathToOutputRoot":"_themes/"}