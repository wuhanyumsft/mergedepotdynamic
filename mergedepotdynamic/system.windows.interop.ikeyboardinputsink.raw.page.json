{"content":"    \r\n    <h1 id=\"System_Windows_Interop_IKeyboardInputSink\">\r\n      <span class=\"lang-csharp\">IKeyboardInputSink</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE -->-<!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-win32-md.md&quot; -->Win32<!--END INCLUDE --> interoperation scenarios.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IKeyboardInputSink</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A keyboard sink handles input from particular subsets of the overall keyboard input model for <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-win32-md.md&quot; -->Win32<!--END INCLUDE --> and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE -->, and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.  </p>\n<p> If your component contains other components, and maintains a tab order, your component must also implement <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a> and keep track of which component has focus.  </p>\n<p> For a discussion of the input architecture specifically implemented for <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winforms-md.md&quot; -->Windows Forms<!--END INCLUDE --> interop, see <a href=\"../Topic/Windows%20Forms%20and%20WPF%20Interoperability%20Input%20Architecture.md\" data-linktype=\"relative-path\">Windows Forms and WPF Interoperability Input Architecture</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a> and <a class=\"xref\" href=\"system.windows.interop.hwndhost\" data-linktype=\"relative-path\">HwndHost</a> each implement the IKeyboardInputSink interface, through explicit interface definitions. The explicit definitions supply default behaviors, and can also be accessed if necessary through an IKeyboardInputSink interface cast of <a class=\"xref\" href=\"system.windows.interop.hwndsource\" data-linktype=\"relative-path\">HwndSource</a> or <a class=\"xref\" href=\"system.windows.interop.hwndhost\" data-linktype=\"relative-path\">HwndHost</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_KeyboardInputSite\" data-linktype=\"self-bookmark\">KeyboardInputSite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a reference to the component&#39;s container&#39;s <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a> interface.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_HasFocusWithin\" data-linktype=\"self-bookmark\">HasFocusWithin()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the sink or one of its contained components has focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_OnMnemonic_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\" data-linktype=\"self-bookmark\">OnMnemonic(MSG,ModifierKeys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when one of the mnemonics (access keys) for this sink is invoked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_RegisterKeyboardInputSink_System_Windows_Interop_IKeyboardInputSink_\" data-linktype=\"self-bookmark\">RegisterKeyboardInputSink(IKeyboardInputSink)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink\" data-linktype=\"relative-path\">IKeyboardInputSink</a> interface of a contained component.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_TabInto_System_Windows_Input_TraversalRequest_\" data-linktype=\"self-bookmark\">TabInto(TraversalRequest)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets focus on either the first tab stop or the last tab stop of the sink.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\" data-linktype=\"self-bookmark\">TranslateAccelerator(MSG,ModifierKeys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes keyboard input at the keydown message level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_IKeyboardInputSink_TranslateChar_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\" data-linktype=\"self-bookmark\">TranslateChar(MSG,ModifierKeys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <span class=\"xref\">stem.Windows.Interop.IKeyboardInputSink.OnMnemonic*</span> is called.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_KeyboardInputSite\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_KeyboardInputSite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyboardInputSite</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a reference to the component&#39;s container&#39;s <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a> interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a></div>\r\n                  </div>\r\n                  <p>A reference to the container&#39;s <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property should initially be set to <code>null</code>. Any container that adds the sink to its components list will set KeyboardInputSite before any other methods are called, and it can be set multiple times after that. You should set the property to <code>null</code> again before disposal.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_HasFocusWithin\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_HasFocusWithin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasFocusWithin()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the sink or one of its contained components has focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasFocusWithin ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the sink or one of its contained components has focus; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is necessary for forwarding <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_\" data-linktype=\"relative-path\">TranslateAccelerator</a> calls to child components with focus from within the <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_\" data-linktype=\"relative-path\">TranslateAccelerator</a> implementation. Call HasFocusWithin recursively until you reach the level of specific focus and forward <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_\" data-linktype=\"relative-path\">TranslateAccelerator</a> there.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_OnMnemonic_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_OnMnemonic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMnemonic(MSG,ModifierKeys)</div>        \r\n          </div>\r\n    \r\n            <p>Called when one of the mnemonics (access keys) for this sink is invoked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.msg\" data-linktype=\"relative-path\">MSG</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.modifierkeys\" data-linktype=\"relative-path\">ModifierKeys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Modifier keys.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was handled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-win-md.md&quot; -->Microsoft Windows<!--END INCLUDE --> message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.  </p>\n<p> If the component has contained components, the message must be passed in your implementation by calling each contained component&#39;s OnMnemonic method.  </p>\n<p> An interface that returns <code>true</code> from <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_\" data-linktype=\"relative-path\">TranslateAccelerator</a> will not call OnMnemonic. Implementations can choose to perform all specific key combination handling in <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TranslateChar_\" data-linktype=\"relative-path\">TranslateChar</a>.and bypass OnMnemonic.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_RegisterKeyboardInputSink_System_Windows_Interop_IKeyboardInputSink_\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_RegisterKeyboardInputSink_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterKeyboardInputSink(IKeyboardInputSink)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink\" data-linktype=\"relative-path\">IKeyboardInputSink</a> interface of a contained component.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sink</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink\" data-linktype=\"relative-path\">IKeyboardInputSink</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink\" data-linktype=\"relative-path\">IKeyboardInputSink</a> sink of the contained component.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite\" data-linktype=\"relative-path\">IKeyboardInputSite</a> site of the contained component.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site. You only need to maintain the site collection, because the sink can be obtained from the site.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_TabInto_System_Windows_Input_TraversalRequest_\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_TabInto_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TabInto(TraversalRequest)</div>        \r\n          </div>\r\n    \r\n            <p>Sets focus on either the first tab stop or the last tab stop of the sink.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TabInto (System.Windows.Input.TraversalRequest request);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.traversalrequest\" data-linktype=\"relative-path\">TraversalRequest</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies whether focus should be set to the first or the last tab stop.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the focus has been set as requested; <code>false</code>, if there are no tab stops.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a> and <a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a> are the only relevant values that should be passed to this method in the <a class=\"xref\" href=\"system.windows.input.traversalrequest\" data-linktype=\"relative-path\">TraversalRequest</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_TranslateAccelerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateAccelerator(MSG,ModifierKeys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes keyboard input at the keydown message level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.msg\" data-linktype=\"relative-path\">MSG</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.modifierkeys\" data-linktype=\"relative-path\">ModifierKeys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Modifier keys.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was handled by the method implementation; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.  </p>\n<p> If the component is unable to handle the input translations and has child components that might have translations, it typically calls TranslateAccelerator method on the child component that holds the current focus before returning a result.  </p>\n<p> If the message cannot be handled immediately, you can re-dispatch it from within the TranslateAccelerator implementation if necessary, and then return <code>false</code>.  </p>\n<p> A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_TabInto_\" data-linktype=\"relative-path\">TabInto</a> to a child component, or to call <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsite#System_Windows_Interop_IKeyboardInputSite_OnNoMoreTabStops_\" data-linktype=\"relative-path\">OnNoMoreTabStops</a> on the parent site because the tab sequence has reached the beginning or end bounds. Certain components may choose to not handle the tab key in this fashion.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_IKeyboardInputSink_TranslateChar_System_Windows_Interop_MSG__System_Windows_Input_ModifierKeys_\">\r\n    \r\n            <a id=\"System_Windows_Interop_IKeyboardInputSink_TranslateChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateChar(MSG,ModifierKeys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <span class=\"xref\">stem.Windows.Interop.IKeyboardInputSink.OnMnemonic*</span> is called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.msg\" data-linktype=\"relative-path\">MSG</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.modifierkeys\" data-linktype=\"relative-path\">ModifierKeys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Modifier keys.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was processed and <span class=\"xref\">stem.Windows.Interop.IKeyboardInputSink.OnMnemonic*</span> should not be called; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you implement this method to return <code>true</code>, the input architecture will not call <a class=\"xref\" href=\"system.windows.interop.ikeyboardinputsink#System_Windows_Interop_IKeyboardInputSink_OnMnemonic_\" data-linktype=\"relative-path\">OnMnemonic</a> for that key message.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Interop.IKeyboardInputSink.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Interop.IKeyboardInputSink.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.HasFocusWithin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.OnMnemonic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.TabInto\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.IKeyboardInputSink.TranslateChar\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5aa14446-cbef-88a6-7788-7348ff4a883c\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Interop\\IKeyboardInputSink.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Winâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Interop/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Interop.IKeyboardInputSink\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Interop.IKeyboardInputSink.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Interop.IKeyboardInputSink.yml","open_to_public_contributors":true,"api_name":["System.Windows.Interop.IKeyboardInputSink","System.Windows.Interop.IKeyboardInputSink.HasFocusWithin","System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite","System.Windows.Interop.IKeyboardInputSink.OnMnemonic","System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink","System.Windows.Interop.IKeyboardInputSink.TabInto","System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator","System.Windows.Interop.IKeyboardInputSink.TranslateChar"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Interop.IKeyboardInputSink","System::Windows::Interop::IKeyboardInputSink","System.Windows.Interop.IKeyboardInputSink.HasFocusWithin","System::Windows::Interop::IKeyboardInputSink::HasFocusWithin","System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite","System::Windows::Interop::IKeyboardInputSink::KeyboardInputSite","System.Windows.Interop.IKeyboardInputSink.OnMnemonic","System::Windows::Interop::IKeyboardInputSink::OnMnemonic","System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink","System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink","System.Windows.Interop.IKeyboardInputSink.TabInto","System::Windows::Interop::IKeyboardInputSink::TabInto","System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator","System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator","System.Windows.Interop.IKeyboardInputSink.TranslateChar","System::Windows::Interop::IKeyboardInputSink::TranslateChar"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5aa14446-cbef-88a6-7788-7348ff4a883c","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Interop\\IKeyboardInputSink.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Interop/IKeyboardInputSink.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IKeyboardInputSink interface | Microsoft Docs","_op_ogTitle":"IKeyboardInputSink interface","description":"Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Winâ€¦","toc_asset_id":"_splitted/System.Windows.Interop/toc.json","toc_rel":"_splitted/System.Windows.Interop/toc.json","source_url":"","ms.assetid":"System.Windows.Interop.IKeyboardInputSink","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.interop.ikeyboardinputsink","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.interop.ikeyboardinputsink","fileRelativePath":"System.Windows.Interop.IKeyboardInputSink.html"},"themesRelativePathToOutputRoot":"_themes/"}