{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">WebClient</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides common methods for sending data to and receiving data from a resource identified by a URI.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class WebClient : System.ComponentModel.Component</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">WebClient</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The WebClient class provides common methods for sending data to or receiving data from any local, intranet, or Internet resource identified by a URI.  </p>\n<p> The WebClient class uses the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class to provide access to resources. WebClient instances can access data with any <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> By default, the .NET Framework supports URIs that begin with <code>http:</code>, <code>https:</code>, ftp:, and <code>file:</code> scheme identifiers.  </p>\n</div>\n<p> The following table describes WebClient methods for uploading data to a resource.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a></td>\n<td>Retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to send data to the resource.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a></td>\n<td>Retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to send data to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a></td>\n<td>Sends a byte array to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a></td>\n<td>Sends a local file to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a></td>\n<td>Sends a local file to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to the resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The following table describes WebClient methods for downloading data from a resource.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a></td>\n<td>Returns the data from a resource as a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a></td>\n<td>Returns the data from a resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a></td>\n<td>Downloads data from a resource to a local file.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a></td>\n<td>Downloads data from a resource to a local file, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a></td>\n<td>Downloads a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from a resource and returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a></td>\n<td>Downloads a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from a resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> A WebClient instance does not send optional HTTP headers by default. If your request requires an optional header, you must add the header to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection. For example, to retain queries in the response, you must add a user-agent header. Also, servers may return 500 (Internal Server Error) if the user agent header is missing.  </p>\n<p> <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowAutoRedirect_\" data-linktype=\"relative-path\">AllowAutoRedirect</a> is set to <code>true</code> in WebClient instances.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WebClient()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public WebClient ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default constructor creates a new instance of the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class. The default HTTP method is GET. The default FTP method is RETR. The default <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> is <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Default_\" data-linktype=\"relative-path\">Default</a>. The default value of <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowAutoRedirect_\" data-linktype=\"relative-path\">AllowAutoRedirect</a> is <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_AllowReadStreamBuffering\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowReadStreamBuffering</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether to buffer the data read from the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowReadStreamBuffering { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>.  </p>\n<p> <code>true</code> to enable buffering of the data received from the Internet resource; <code>false</code> to disable buffering. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the AllowReadStreamBuffering property is <code>true</code>, the data is buffered in memory so it is ready to be read by the app.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_AllowWriteStreamBuffering\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AllowWriteStreamBuffering</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether to buffer the data written to the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool AllowWriteStreamBuffering { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>.  </p>\n<p> <code>true</code> to enable buffering of the data written to the Internet resource; <code>false</code> to disable buffering. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the AllowWriteStreamBuffering property is <code>true</code>, the data is buffered in memory so it can be written more efficiently to the Internet resource in larger chunks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_BaseAddress\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BaseAddress</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the base URI for requests made by a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string BaseAddress { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the base URI for requests made by a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> if no base address has been specified.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>BaseAddress is set to an invalid URI. The inner exception may contain information that will help you locate the error.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The BaseAddress property contains a base URI that is combined with a relative address. When you call a method that uploads or downloads data, the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object combines this base URI with the relative address you specify in the method call. If you specify an absolute URI, <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> does not use the BaseAddress property value.  </p>\n<p> To remove a previously set value, set this property to <code>null</code> or an empty string (&quot;&quot;).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_CachePolicy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CachePolicy</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the application&#39;s cache policy for any resources obtained by this WebClient instance using <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> objects.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a> object that represents the application&#39;s caching requirements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_Credentials\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Credentials</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.ICredentials Credentials { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> containing the authentication credentials for the request. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Credentials property contains the authentication credentials used to access a resource on a host. In most client-side scenarios, you should use the <a class=\"xref\" href=\"system.net.credentialcache#System_Net_CredentialCache_DefaultCredentials_\" data-linktype=\"relative-path\">DefaultCredentials</a>, which are the credentials of the currently logged on user. To do this, set the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UseDefaultCredentials_\" data-linktype=\"relative-path\">UseDefaultCredentials</a> property to <code>true</code> instead of setting this property.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class is being used in a middle tier application, such as an ASP.NET application, the <a class=\"xref\" href=\"system.net.credentialcache#System_Net_CredentialCache_DefaultCredentials_\" data-linktype=\"relative-path\">DefaultCredentials</a> belong to the account running the ASP page (the server-side credentials). Typically, you would set this property to the credentials of the client on whose behalf the request is made.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_Encoding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Encoding</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets and sets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> used to upload and download strings.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Text.Encoding Encoding { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that is used to encode strings. The default value of this property is the encoding returned by <span class=\"xref\">stem.Text.Encoding.Default*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> and <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods use this property to convert the specified string to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array before uploading the string. For additional information, see the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> method.  </p>\n<p> When a string is downloaded using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> or <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods, <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> uses the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> returned by this to convert the downloaded <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array into a string. For additional information, see the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetString_\" data-linktype=\"relative-path\">GetString</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_Headers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Headers</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a collection of header name/value pairs associated with the request.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.WebHeaderCollection Headers { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> containing header name/value pairs associated with this request.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Headers property contains a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> instance containing protocol headers that the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> sends with the request.  </p>\n<p> Some common headers are considered restricted and are protected by the system and cannot be set or changed in a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object. Any attempt to set one of these restricted headers in the <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object associated with a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object will throw an exception later when attempting to send the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> request.  </p>\n<p> Restricted headers protected by the system include, but are not limited to the following:  </p>\n<ul>\n<li><p>Date  </p>\n</li>\n<li><p>Host  </p>\n<p>In addition, some other headers are also restricted when using a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object. These restricted headers include, but are not limited to the following:  </p>\n</li>\n<li><p>Accept  </p>\n</li>\n<li><p>Connection  </p>\n</li>\n<li><p>Content-Length  </p>\n</li>\n<li><p>Expect (when the value is set to &quot;100-continue&quot;  </p>\n</li>\n<li><p>If-Modified-Since  </p>\n</li>\n<li><p>Range  </p>\n</li>\n<li><p>Transfer-Encoding  </p>\n<p>The <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class has properties for setting some of the above headers. If it is important for an application to set these headers, then the <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class should be used instead of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.  </p>\n<p>You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_IsBusy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsBusy</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets whether a Web request is in progress.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsBusy { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the Web request is still in progress; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_Proxy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Proxy</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the proxy used by this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.IWebProxy Proxy { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> instance used to send requests.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Proxy is set to <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Proxy property identifies the <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> instance that communicates with remote servers on behalf of this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object. The proxy is set by the system using configuration files and the Internet Explorer Local Area Network settings. To specify that no proxy should be used, set the Proxy property to the proxy instance returned by the <a class=\"xref\" href=\"system.net.globalproxyselection#System_Net_GlobalProxySelection_GetEmptyWebProxy_\" data-linktype=\"relative-path\">GetEmptyWebProxy</a> method.  </p>\n<p> For information on automatic proxy detection, see <a href=\"../Topic/Automatic%20Proxy%20Detection.md\" data-linktype=\"relative-path\">Automatic Proxy Detection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_QueryString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">QueryString</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a collection of query name/value pairs associated with the request.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Specialized.NameValueCollection QueryString { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> that contains query name/value pairs associated with the request. If no pairs are associated with the request, the value is an empty <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The QueryString property contains a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> instance containing name/value pairs that are appended to the URI as a query string. The contents of the QueryString property are preceded by a question mark (?), and name/value pairs are separated from one another by an ampersand (&amp;).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_ResponseHeaders\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ResponseHeaders</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a collection of header name/value pairs associated with the response.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Net.WebHeaderCollection ResponseHeaders { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> containing header name/value pairs associated with the response, or <code>null</code> if no response has been received.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ResponseHeaders property contains a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> instance containing header information the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> receives with the response.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UseDefaultCredentials\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UseDefaultCredentials</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that controls whether the <span class=\"xref\">stem.Net.CredentialCache.DefaultCredentials*</span> are sent with requests.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool UseDefaultCredentials { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the default credentials are used; otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Set this property to <code>true</code> when requests made by this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object should, if requested by the server, be authenticated using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Credentials_\" data-linktype=\"relative-path\">Credentials</a> property to the credentials of the client on whose behalf the request is made.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_CancelAsync\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CancelAsync()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Cancels a pending asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void CancelAsync ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If an operation is pending, this method calls <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Abort_\" data-linktype=\"relative-path\">Abort</a> on the underlying <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.  </p>\n<p> When you call CancelAsync, your application still receives the completion event associated with the operation. For example, when you call CancelAsync to cancel a <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> operation, if you have specified an event handler for the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event, your event handler receives notification that the operation has ended. To learn whether the operation completed successfully, check the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> property on the base class of <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> in the event data object passed to the event handler.  </p>\n<p> If no asynchronous operation is in progress, this method does nothing.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadData_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadData(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] DownloadData (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method has been called simultaneously on multiple threads.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DownloadData method downloads the resource with the URI specified by the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadData_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadData(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] DownloadData (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI represented by the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object, from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> method downloads the resource with the URI specified by the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadDataAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadDataAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadDataAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <code>address</code>. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> methods. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded data is available in the <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs#System_Net_DownloadDataCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadDataAsync_System_Uri_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadDataAsync(Uri,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadDataAsync (Uri address, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <code>address</code>. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> methods. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded data is available in the <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs#System_Net_DownloadDataCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadDataTaskAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadDataTaskAsync(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <code>address</code> parameter. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> The following code example requests data from a server and displays the data returned. It assumes that <code>remoteUri</code> contains a valid URI for the requested data.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadDataTaskAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadDataTaskAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <code>address</code> parameter. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFile_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFile(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource with the specified URI to a local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFile (string address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the local file that is to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>filename</code> is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The file does not exist.  </p>\n<p> -or- An error occurred while downloading data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method has been called simultaneously on multiple threads.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The DownloadFile method downloads to a local file data from the URI specified by in the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFile_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFile(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource with the specified URI to a local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFile (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the local file that is to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>filename</code> is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method has been called simultaneously on multiple threads.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> method downloads to a local file data from the URI specified by in the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileAsync (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to be placed on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the resource is being downloaded. To block while waiting for the download to complete, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> methods.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileAsync(Uri,String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadFileAsync (Uri address, string fileName, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to be placed on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the resource is being downloaded. To block while waiting for the download to complete, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> methods.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFileTaskAsync_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileTaskAsync(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to be placed on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFileTaskAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileTaskAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to be placed on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadString(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DownloadString (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the requested resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method has been called simultaneously on multiple threads.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves the specified resource. After it downloads the resource, the method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadString_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadString(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DownloadString (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the requested resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The method has been called simultaneously on multiple threads.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves the specified resource. After it downloads the resource, the method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadStringAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadStringAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadStringAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> method. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded string is available in the <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs#System_Net_DownloadStringCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadStringAsync_System_Uri_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadStringAsync(Uri,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DownloadStringAsync (Uri address, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> method. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded string is available in the <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs#System_Net_DownloadStringCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadStringTaskAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadStringTaskAsync(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadStringTaskAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadStringTaskAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to download.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded. The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_GetWebRequest_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetWebRequest(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object for the specified resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Net.WebRequest GetWebRequest (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that identifies the resource to request.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object for the specified resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method copies the existing <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a>, <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Credentials_\" data-linktype=\"relative-path\">Credentials</a>, and method to the newly created <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object. Derived classes should call the base class implementation of GetWebRequest to ensure the method works as expected.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_GetWebResponse_System_Net_WebRequest_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetWebResponse(WebRequest)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>request</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> that is used to obtain the response.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> containing the response for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The object returned by this method is obtained by calling the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method on the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_GetWebResponse_System_Net_WebRequest_System_IAsyncResult_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetWebResponse(WebRequest,IAsyncResult)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> using the specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>request</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> that is used to obtain the response.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object obtained from a previous call to <span class=\"xref\">stem.Net.WebRequest.BeginGetResponse*</span> .</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> containing the response for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The object returned by this method is obtained by calling the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> method on the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnDownloadDataCompleted_System_Net_DownloadDataCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDownloadDataCompleted(DownloadDataCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> object that contains event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>  </p>\n<p> The OnDownloadDataCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnDownloadFileCompleted_System_ComponentModel_AsyncCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDownloadFileCompleted(AsyncCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadFileCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnDownloadProgressChanged_System_Net_DownloadProgressChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDownloadProgressChanged(DownloadProgressChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadProgressChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnDownloadStringCompleted_System_Net_DownloadStringCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnDownloadStringCompleted(DownloadStringCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadStringCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnOpenReadCompleted_System_Net_OpenReadCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnOpenReadCompleted(OpenReadCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnOpenReadCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnOpenWriteCompleted_System_Net_OpenWriteCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnOpenWriteCompleted(OpenWriteCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnOpenWriteCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnUploadDataCompleted_System_Net_UploadDataCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnUploadDataCompleted(UploadDataCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadDataCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnUploadFileCompleted_System_Net_UploadFileCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnUploadFileCompleted(UploadFileCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadFileCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnUploadProgressChanged_System_Net_UploadProgressChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnUploadProgressChanged(UploadProgressChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"relative-path\">UploadProgressChanged</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"relative-path\">UploadProgressChanged</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadProgressChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnUploadStringCompleted_System_Net_UploadStringCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnUploadStringCompleted(UploadStringCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadStringCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnUploadValuesCompleted_System_Net_UploadValuesCompletedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnUploadValuesCompleted(UploadValuesCompletedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadValuesCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OnWriteStreamClosed_System_Net_WriteStreamClosedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnWriteStreamClosed(WriteStreamClosedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_WriteStreamClosed\" data-linktype=\"relative-path\">WriteStreamClosed</a> event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a> object containing event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenRead_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenRead(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenRead (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OpenRead method creates a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to read the contents of the resource specified by the <code>address</code> parameter. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenRead_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenRead(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenRead (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> from which to download data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a> method creates a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to read the contents of the resource specified by the <code>address</code> parameter. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenReadAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenReadAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OpenReadAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> This method does not block the calling thread while the stream is opening. To block while waiting for the stream, use the OpenReadAsync method.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenReadAsync_System_Uri_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenReadAsync(Uri,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OpenReadAsync (Uri address, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> This method does not block the calling thread while the stream is opening. To block while waiting for the stream, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a> method.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenReadTaskAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenReadTaskAsync(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a readable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenReadTaskAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenReadTaskAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to retrieve.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a readable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWrite_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWrite(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenWrite (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The OpenWrite method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWrite_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWrite(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenWrite (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWrite_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWrite(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenWrite (string address, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. The underlying request is made with the method specified in the <code>method</code> parameter. The data is sent to the server when you close the stream. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute address, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWrite_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWrite(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource, by using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.IO.Stream OpenWrite (Uri address, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OpenWriteAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. When you close the stream, the thread blocks until the request is sent to <code>address</code> and a response is received.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OpenWriteAsync (Uri address, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. When you close the stream, the thread blocks until the request is sent to <code>address</code> and a response is received.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteAsync(Uri,String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource, using the specified method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void OpenWriteAsync (Uri address, string method, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. The contents of the stream are sent to the server when you close the stream.  </p>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteTaskAsync(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_Uri_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteTaskAsync(Uri)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteTaskAsync(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteTaskAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadData_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadData(String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadData (string address, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while sending the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UploadData method sends a data buffer to a resource.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used. If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The UploadData method sends the content of <code>data</code> to the server without encoding it. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadData_System_Uri_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadData(Uri,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadData (Uri address, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while sending the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used. If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadData_System_String_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadData(String,String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadData (string address, string method, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource using the HTTP method specified in the <code>method</code> parameter, and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadData_System_Uri_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadData(Uri,String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadData (Uri address, string method, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource using the HTTP method specified in the <code>method</code> parameter, and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataAsync(Uri,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to a resource identified by a URI, using the POST method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadDataAsync (Uri address, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataAsync(Uri,String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to a resource identified by a URI, using the specified method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadDataAsync (Uri address, string method, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataAsync(Uri,String,Byte[],Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer to a resource identified by a URI, using the specified method and identifying token.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataTaskAsync(String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataTaskAsync(Uri,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_String_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataTaskAsync(String,String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_String_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataTaskAsync(Uri,String,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data buffer to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFile_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFile(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadFile (string address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource. For example, &quot;samplefile.txt&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UploadFile method sends a local file to a resource. This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <code>POST</code> method is defined by HTTP. If the underlying request does not use HTTP and <code>POST</code> is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFile_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFile(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadFile (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource. For example, &quot;samplefile.txt&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource. This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <code>POST</code> method is defined by HTTP. If the underlying request does not use HTTP and <code>POST</code> is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFile_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFile(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadFile (string address, string method, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the file to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When address specifies an HTTP resource, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource using the HTTP method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server or the <code>address</code> resource, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFile_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFile(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadFile (Uri address, string method, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the file to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When address specifies an HTTP resource, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource using the HTTP method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server or the <code>address</code> resource, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadFileAsync (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileAsync(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadFileAsync (Uri address, string method, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileAsync(Uri,String,String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadFileAsync (Uri address, string method, string fileName, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileTaskAsync(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The local file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileTaskAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The local file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileTaskAsync(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The local file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> BY default, this method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileTaskAsync(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The local file to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> BY default, this method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadString_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadString(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string UploadString (string address, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadString_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadString(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string UploadString (Uri address, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadString_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadString(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string UploadString (string address, string method, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadString_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadString(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string UploadString (Uri address, string method, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadStringAsync (Uri address, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringAsync(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadStringAsync (Uri address, string method, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringAsync(Uri,String,String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadStringAsync (Uri address, string method, string data, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringTaskAsync(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringTaskAsync(Uri,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringTaskAsync(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringTaskAsync(Uri,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to be uploaded.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValues_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValues(String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The UploadValues method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, the UploadValues method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValues_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValues(Uri,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValues_System_String_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValues(String,String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a resource using the method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the <code>Content-type</code> header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to <code>application/x-www-form-urlencoded</code>.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValues_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValues(Uri,String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a resource using the method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the <code>Content-type</code> header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to <code>application/x-www-form-urlencoded</code>.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesAsync(Uri,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the data in the specified name/value collection to the resource identified by the specified URI. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the default method. See remarks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesAsync(Uri,String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends the data contained in a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the <code>address</code> resource. Use this method to send form data to a URI for processing. The data is sent using the form-urlencoded media type; the Content-Type header value must be set to &quot;application/x-www-form-urlencoded&quot;. The header is set correctly by default. The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods throw a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> if you call this method with a different Content-Type header value set in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection.  </p>\n<p> If the <code>method</code> method is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the upload operation completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not empty, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesAsync(Uri,String,NameValueCollection,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread, and allows the caller to pass an object to the method that is invoked when the operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>userToken</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method sends the data contained in a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the <code>address</code> resource. Use this method to send form data to a URI for processing. The data is sent using the form-urlencoded media type; the Content-Type header value must be set to &quot;application/x-www-form-urlencoded&quot;. The header is set correctly by default. The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods throw a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> if you call this method with a different Content-Type header value set in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection.  </p>\n<p> If the <code>method</code> method is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the upload operation completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not empty, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesTaskAsync(String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesTaskAsync(Uri,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_String_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesTaskAsync(String,String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the collection to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesTaskAsync(Uri,String,NameValueCollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>address</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The URI of the resource to receive the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>method</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The HTTP method used to send the collection to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadDataCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadDataCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous data download operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous data download operation completes. Asynchronous data downloads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.downloaddatacompletedeventhandler\" data-linktype=\"relative-path\">DownloadDataCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadFileCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadFileCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous file download operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous file download operation completes. Asynchronous file downloads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventhandler\" data-linktype=\"relative-path\">AsyncCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous download operation successfully transfers some or all of the data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous download makes progress. This event is raised when downloads are started using any of the following methods.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a></td>\n<td>Downloads data from a resource to a local file, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a></td>\n<td>Returns the data from a resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.net.downloadprogresschangedeventhandler\" data-linktype=\"relative-path\">DownloadProgressChangedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> A passive FTP file transfer will always show a progress percentage of zero, since the server did not send the file size. To show progress, you can change the FTP connection to active by overriding the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_GetWebRequest_\" data-linktype=\"relative-path\">GetWebRequest</a> virtual method:  </p>\n</div>\n<pre><code>internal class MyWebClient:WebClient{  \n        protected override WebRequest GetWebRequest(Uri address) {  \n            FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  \n            req.UsePassive = false;  \n            return req;  \n        }  \n    }  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_DownloadStringCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DownloadStringCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous resource-download operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous operation to download a resource as a string completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.downloadstringcompletedeventhandler\" data-linktype=\"relative-path\">DownloadStringCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenReadCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenReadCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous operation to open a stream containing a resource completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous operation to open a stream containing a resource completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.openreadcompletedeventhandler\" data-linktype=\"relative-path\">OpenReadCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_OpenWriteCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OpenWriteCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous operation to open a stream that is used to send data to a resource completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.openwritecompletedeventhandler\" data-linktype=\"relative-path\">OpenWriteCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadDataCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadDataCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous data-upload operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous data upload operation completes. Asynchronous data uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploaddatacompletedeventhandler\" data-linktype=\"relative-path\">UploadDataCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadFileCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadFileCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous file-upload operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous file upload operation completes. Asynchronous file uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadfilecompletedeventhandler\" data-linktype=\"relative-path\">UploadFileCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadProgressChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadProgressChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous upload makes progress. This event is raised when uploads are started using any of the following methods.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a></td>\n<td>Sends a local file to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.net.uploadprogresschangedeventhandler\" data-linktype=\"relative-path\">UploadProgressChangedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadStringCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadStringCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous string-upload operation completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous string upload operation completes. Asynchronous string uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadstringcompletedeventhandler\" data-linktype=\"relative-path\">UploadStringCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_UploadValuesCompleted\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UploadValuesCompleted</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous upload of a name/value collection completes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous upload of a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> object&#39;s data completes. These uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventhandler\" data-linktype=\"relative-path\">UploadValuesCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Net_WebClient_WriteStreamClosed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteStreamClosed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an asynchronous operation to write data to a resource using a write stream is closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event is raised each time an asynchronous operation used to write data to a resource using a write stream is closed. These operations result from calls to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteTaskAsync_\" data-linktype=\"relative-path\">OpenWriteTaskAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.writestreamclosedeventhandler\" data-linktype=\"relative-path\">WriteStreamClosedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebClient.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.AllowReadStreamBuffering\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.AllowWriteStreamBuffering\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.BaseAddress\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.CachePolicy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.CancelAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Credentials\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFile\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Encoding\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.GetWebRequest\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.GetWebResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.IsBusy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnOpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnOpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnWriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenRead\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Proxy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.QueryString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.ResponseHeaders\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFile\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValues\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UseDefaultCredentials\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.WriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_WriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_WriteStreamClosed\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 08:28 AM\">\r\n<meta name=\"document_id\" content=\"80e0a902-3165-34fd-1dae-8ef8c9481134\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides common methods for sending data to and receiving data from a resource identified by a URI.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.WebClient\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebClient.yml","open_to_public_contributors":true,"api_name":["System.Net.WebClient","System.Net.WebClient..ctor","System.Net.WebClient.AllowReadStreamBuffering","System.Net.WebClient.AllowWriteStreamBuffering","System.Net.WebClient.BaseAddress","System.Net.WebClient.CachePolicy","System.Net.WebClient.CancelAsync","System.Net.WebClient.Credentials","System.Net.WebClient.DownloadData","System.Net.WebClient.DownloadDataAsync","System.Net.WebClient.DownloadDataCompleted","System.Net.WebClient.add_DownloadDataCompleted","System.Net.WebClient.remove_DownloadDataCompleted","System.Net.WebClient.DownloadDataTaskAsync","System.Net.WebClient.DownloadFile","System.Net.WebClient.DownloadFileAsync","System.Net.WebClient.DownloadFileCompleted","System.Net.WebClient.add_DownloadFileCompleted","System.Net.WebClient.remove_DownloadFileCompleted","System.Net.WebClient.DownloadFileTaskAsync","System.Net.WebClient.DownloadProgressChanged","System.Net.WebClient.add_DownloadProgressChanged","System.Net.WebClient.remove_DownloadProgressChanged","System.Net.WebClient.DownloadString","System.Net.WebClient.DownloadStringAsync","System.Net.WebClient.DownloadStringCompleted","System.Net.WebClient.add_DownloadStringCompleted","System.Net.WebClient.remove_DownloadStringCompleted","System.Net.WebClient.DownloadStringTaskAsync","System.Net.WebClient.Encoding","System.Net.WebClient.GetWebRequest","System.Net.WebClient.GetWebResponse","System.Net.WebClient.Headers","System.Net.WebClient.IsBusy","System.Net.WebClient.OnDownloadDataCompleted","System.Net.WebClient.OnDownloadFileCompleted","System.Net.WebClient.OnDownloadProgressChanged","System.Net.WebClient.OnDownloadStringCompleted","System.Net.WebClient.OnOpenReadCompleted","System.Net.WebClient.OnOpenWriteCompleted","System.Net.WebClient.OnUploadDataCompleted","System.Net.WebClient.OnUploadFileCompleted","System.Net.WebClient.OnUploadProgressChanged","System.Net.WebClient.OnUploadStringCompleted","System.Net.WebClient.OnUploadValuesCompleted","System.Net.WebClient.OnWriteStreamClosed","System.Net.WebClient.OpenRead","System.Net.WebClient.OpenReadAsync","System.Net.WebClient.OpenReadCompleted","System.Net.WebClient.add_OpenReadCompleted","System.Net.WebClient.remove_OpenReadCompleted","System.Net.WebClient.OpenReadTaskAsync","System.Net.WebClient.OpenWrite","System.Net.WebClient.OpenWriteAsync","System.Net.WebClient.OpenWriteCompleted","System.Net.WebClient.add_OpenWriteCompleted","System.Net.WebClient.remove_OpenWriteCompleted","System.Net.WebClient.OpenWriteTaskAsync","System.Net.WebClient.Proxy","System.Net.WebClient.QueryString","System.Net.WebClient.ResponseHeaders","System.Net.WebClient.UploadData","System.Net.WebClient.UploadDataAsync","System.Net.WebClient.UploadDataCompleted","System.Net.WebClient.add_UploadDataCompleted","System.Net.WebClient.remove_UploadDataCompleted","System.Net.WebClient.UploadDataTaskAsync","System.Net.WebClient.UploadFile","System.Net.WebClient.UploadFileAsync","System.Net.WebClient.UploadFileCompleted","System.Net.WebClient.add_UploadFileCompleted","System.Net.WebClient.remove_UploadFileCompleted","System.Net.WebClient.UploadFileTaskAsync","System.Net.WebClient.UploadProgressChanged","System.Net.WebClient.add_UploadProgressChanged","System.Net.WebClient.remove_UploadProgressChanged","System.Net.WebClient.UploadString","System.Net.WebClient.UploadStringAsync","System.Net.WebClient.UploadStringCompleted","System.Net.WebClient.add_UploadStringCompleted","System.Net.WebClient.remove_UploadStringCompleted","System.Net.WebClient.UploadStringTaskAsync","System.Net.WebClient.UploadValues","System.Net.WebClient.UploadValuesAsync","System.Net.WebClient.UploadValuesCompleted","System.Net.WebClient.add_UploadValuesCompleted","System.Net.WebClient.remove_UploadValuesCompleted","System.Net.WebClient.UploadValuesTaskAsync","System.Net.WebClient.UseDefaultCredentials","System.Net.WebClient.WriteStreamClosed","System.Net.WebClient.add_WriteStreamClosed","System.Net.WebClient.remove_WriteStreamClosed"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.WebClient","System::Net::WebClient","System.Net.WebClient.#ctor","System::Net::WebClient::#ctor","System.Net.WebClient.AllowReadStreamBuffering","System::Net::WebClient::AllowReadStreamBuffering","System.Net.WebClient.AllowWriteStreamBuffering","System::Net::WebClient::AllowWriteStreamBuffering","System.Net.WebClient.BaseAddress","System::Net::WebClient::BaseAddress","System.Net.WebClient.CachePolicy","System::Net::WebClient::CachePolicy","System.Net.WebClient.CancelAsync","System::Net::WebClient::CancelAsync","System.Net.WebClient.Credentials","System::Net::WebClient::Credentials","System.Net.WebClient.DownloadData","System::Net::WebClient::DownloadData","System.Net.WebClient.DownloadDataAsync","System::Net::WebClient::DownloadDataAsync","System.Net.WebClient.DownloadDataCompleted","System::Net::WebClient::DownloadDataCompleted","System.Net.WebClient.DownloadDataTaskAsync","System::Net::WebClient::DownloadDataTaskAsync","System.Net.WebClient.DownloadFile","System::Net::WebClient::DownloadFile","System.Net.WebClient.DownloadFileAsync","System::Net::WebClient::DownloadFileAsync","System.Net.WebClient.DownloadFileCompleted","System::Net::WebClient::DownloadFileCompleted","System.Net.WebClient.DownloadFileTaskAsync","System::Net::WebClient::DownloadFileTaskAsync","System.Net.WebClient.DownloadProgressChanged","System::Net::WebClient::DownloadProgressChanged","System.Net.WebClient.DownloadString","System::Net::WebClient::DownloadString","System.Net.WebClient.DownloadStringAsync","System::Net::WebClient::DownloadStringAsync","System.Net.WebClient.DownloadStringCompleted","System::Net::WebClient::DownloadStringCompleted","System.Net.WebClient.DownloadStringTaskAsync","System::Net::WebClient::DownloadStringTaskAsync","System.Net.WebClient.Encoding","System::Net::WebClient::Encoding","System.Net.WebClient.GetWebRequest","System::Net::WebClient::GetWebRequest","System.Net.WebClient.GetWebResponse","System::Net::WebClient::GetWebResponse","System.Net.WebClient.Headers","System::Net::WebClient::Headers","System.Net.WebClient.IsBusy","System::Net::WebClient::IsBusy","System.Net.WebClient.OnDownloadDataCompleted","System::Net::WebClient::OnDownloadDataCompleted","System.Net.WebClient.OnDownloadFileCompleted","System::Net::WebClient::OnDownloadFileCompleted","System.Net.WebClient.OnDownloadProgressChanged","System::Net::WebClient::OnDownloadProgressChanged","System.Net.WebClient.OnDownloadStringCompleted","System::Net::WebClient::OnDownloadStringCompleted","System.Net.WebClient.OnOpenReadCompleted","System::Net::WebClient::OnOpenReadCompleted","System.Net.WebClient.OnOpenWriteCompleted","System::Net::WebClient::OnOpenWriteCompleted","System.Net.WebClient.OnUploadDataCompleted","System::Net::WebClient::OnUploadDataCompleted","System.Net.WebClient.OnUploadFileCompleted","System::Net::WebClient::OnUploadFileCompleted","System.Net.WebClient.OnUploadProgressChanged","System::Net::WebClient::OnUploadProgressChanged","System.Net.WebClient.OnUploadStringCompleted","System::Net::WebClient::OnUploadStringCompleted","System.Net.WebClient.OnUploadValuesCompleted","System::Net::WebClient::OnUploadValuesCompleted","System.Net.WebClient.OnWriteStreamClosed","System::Net::WebClient::OnWriteStreamClosed","System.Net.WebClient.OpenRead","System::Net::WebClient::OpenRead","System.Net.WebClient.OpenReadAsync","System::Net::WebClient::OpenReadAsync","System.Net.WebClient.OpenReadCompleted","System::Net::WebClient::OpenReadCompleted","System.Net.WebClient.OpenReadTaskAsync","System::Net::WebClient::OpenReadTaskAsync","System.Net.WebClient.OpenWrite","System::Net::WebClient::OpenWrite","System.Net.WebClient.OpenWriteAsync","System::Net::WebClient::OpenWriteAsync","System.Net.WebClient.OpenWriteCompleted","System::Net::WebClient::OpenWriteCompleted","System.Net.WebClient.OpenWriteTaskAsync","System::Net::WebClient::OpenWriteTaskAsync","System.Net.WebClient.Proxy","System::Net::WebClient::Proxy","System.Net.WebClient.QueryString","System::Net::WebClient::QueryString","System.Net.WebClient.ResponseHeaders","System::Net::WebClient::ResponseHeaders","System.Net.WebClient.UploadData","System::Net::WebClient::UploadData","System.Net.WebClient.UploadDataAsync","System::Net::WebClient::UploadDataAsync","System.Net.WebClient.UploadDataCompleted","System::Net::WebClient::UploadDataCompleted","System.Net.WebClient.UploadDataTaskAsync","System::Net::WebClient::UploadDataTaskAsync","System.Net.WebClient.UploadFile","System::Net::WebClient::UploadFile","System.Net.WebClient.UploadFileAsync","System::Net::WebClient::UploadFileAsync","System.Net.WebClient.UploadFileCompleted","System::Net::WebClient::UploadFileCompleted","System.Net.WebClient.UploadFileTaskAsync","System::Net::WebClient::UploadFileTaskAsync","System.Net.WebClient.UploadProgressChanged","System::Net::WebClient::UploadProgressChanged","System.Net.WebClient.UploadString","System::Net::WebClient::UploadString","System.Net.WebClient.UploadStringAsync","System::Net::WebClient::UploadStringAsync","System.Net.WebClient.UploadStringCompleted","System::Net::WebClient::UploadStringCompleted","System.Net.WebClient.UploadStringTaskAsync","System::Net::WebClient::UploadStringTaskAsync","System.Net.WebClient.UploadValues","System::Net::WebClient::UploadValues","System.Net.WebClient.UploadValuesAsync","System::Net::WebClient::UploadValuesAsync","System.Net.WebClient.UploadValuesCompleted","System::Net::WebClient::UploadValuesCompleted","System.Net.WebClient.UploadValuesTaskAsync","System::Net::WebClient::UploadValuesTaskAsync","System.Net.WebClient.UseDefaultCredentials","System::Net::WebClient::UseDefaultCredentials","System.Net.WebClient.WriteStreamClosed","System::Net::WebClient::WriteStreamClosed"],"dev_langs":["csharp"],"updated_at":"2017-03-20 08:28 AM","document_id":"80e0a902-3165-34fd-1dae-8ef8c9481134","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/WebClient.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebClient class | Microsoft Docs","_op_ogTitle":"WebClient class","description":"Provides common methods for sending data to and receiving data from a resource identified by a URI.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.WebClient","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webclient","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webclient","fileRelativePath":"System.Net.WebClient.html"},"themesRelativePathToOutputRoot":"_themes/"}