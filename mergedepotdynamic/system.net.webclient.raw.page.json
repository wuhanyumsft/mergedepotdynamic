{"content":"    \r\n    <h1 id=\"System_Net_WebClient\">\r\n      <span class=\"lang-csharp\">WebClient</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides common methods for sending data to and receiving data from a resource identified by a URI.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class WebClient : System.ComponentModel.Component</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WebClient</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The WebClient class provides common methods for sending data to or receiving data from any local, intranet, or Internet resource identified by a URI.  </p>\n<p> The WebClient class uses the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class to provide access to resources. WebClient instances can access data with any <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> descendant registered with the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_RegisterPrefix_\" data-linktype=\"relative-path\">RegisterPrefix</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> By default, the .NET Framework supports URIs that begin with <code>http:</code>, <code>https:</code>, ftp:, and <code>file:</code> scheme identifiers.  </p>\n</div>\n<p> The following table describes WebClient methods for uploading data to a resource.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a></td>\n<td>Retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to send data to the resource.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a></td>\n<td>Retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to send data to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a></td>\n<td>Sends a byte array to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a></td>\n<td>Sends a local file to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a></td>\n<td>Sends a local file to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to the resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The following table describes WebClient methods for downloading data from a resource.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a></td>\n<td>Returns the data from a resource as a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a></td>\n<td>Returns the data from a resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a></td>\n<td>Downloads data from a resource to a local file.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a></td>\n<td>Downloads data from a resource to a local file, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a></td>\n<td>Downloads a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from a resource and returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a></td>\n<td>Downloads a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from a resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> A WebClient instance does not send optional HTTP headers by default. If your request requires an optional header, you must add the header to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection. For example, to retain queries in the response, you must add a user-agent header. Also, servers may return 500 (Internal Server Error) if the user agent header is missing.  </p>\n<p> <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowAutoRedirect_\" data-linktype=\"relative-path\">AllowAutoRedirect</a> is set to <code>true</code> in WebClient instances.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient__ctor\" data-linktype=\"self-bookmark\">WebClient()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_AllowReadStreamBuffering\" data-linktype=\"self-bookmark\">AllowReadStreamBuffering</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to buffer the data read from the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_AllowWriteStreamBuffering\" data-linktype=\"self-bookmark\">AllowWriteStreamBuffering</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to buffer the data written to the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_BaseAddress\" data-linktype=\"self-bookmark\">BaseAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the base URI for requests made by a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_CachePolicy\" data-linktype=\"self-bookmark\">CachePolicy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the application&#39;s cache policy for any resources obtained by this WebClient instance using <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_Credentials\" data-linktype=\"self-bookmark\">Credentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_Encoding\" data-linktype=\"self-bookmark\">Encoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> used to upload and download strings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a collection of header name/value pairs associated with the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_IsBusy\" data-linktype=\"self-bookmark\">IsBusy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether a Web request is in progress.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_Proxy\" data-linktype=\"self-bookmark\">Proxy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the proxy used by this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_QueryString\" data-linktype=\"self-bookmark\">QueryString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a collection of query name/value pairs associated with the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_ResponseHeaders\" data-linktype=\"self-bookmark\">ResponseHeaders</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of header name/value pairs associated with the response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UseDefaultCredentials\" data-linktype=\"self-bookmark\">UseDefaultCredentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that controls whether the <span class=\"xref\">stem.Net.CredentialCache.DefaultCredentials*</span> are sent with requests.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_CancelAsync\" data-linktype=\"self-bookmark\">CancelAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels a pending asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadData_System_String_\" data-linktype=\"self-bookmark\">DownloadData(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadData_System_Uri_\" data-linktype=\"self-bookmark\">DownloadData(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadDataAsync_System_Uri_\" data-linktype=\"self-bookmark\">DownloadDataAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadDataAsync_System_Uri_System_Object_\" data-linktype=\"self-bookmark\">DownloadDataAsync(Uri,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadDataTaskAsync_System_String_\" data-linktype=\"self-bookmark\">DownloadDataTaskAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadDataTaskAsync_System_Uri_\" data-linktype=\"self-bookmark\">DownloadDataTaskAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFile_System_String_System_String_\" data-linktype=\"self-bookmark\">DownloadFile(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource with the specified URI to a local file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFile_System_Uri_System_String_\" data-linktype=\"self-bookmark\">DownloadFile(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource with the specified URI to a local file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">DownloadFileAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_System_Object_\" data-linktype=\"self-bookmark\">DownloadFileAsync(Uri,String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFileTaskAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">DownloadFileTaskAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFileTaskAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">DownloadFileTaskAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadString_System_String_\" data-linktype=\"self-bookmark\">DownloadString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadString_System_Uri_\" data-linktype=\"self-bookmark\">DownloadString(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadStringAsync_System_Uri_\" data-linktype=\"self-bookmark\">DownloadStringAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadStringAsync_System_Uri_System_Object_\" data-linktype=\"self-bookmark\">DownloadStringAsync(Uri,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadStringTaskAsync_System_String_\" data-linktype=\"self-bookmark\">DownloadStringTaskAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadStringTaskAsync_System_Uri_\" data-linktype=\"self-bookmark\">DownloadStringTaskAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_GetWebRequest_System_Uri_\" data-linktype=\"self-bookmark\">GetWebRequest(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object for the specified resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_GetWebResponse_System_Net_WebRequest_\" data-linktype=\"self-bookmark\">GetWebResponse(WebRequest)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_GetWebResponse_System_Net_WebRequest_System_IAsyncResult_\" data-linktype=\"self-bookmark\">GetWebResponse(WebRequest,IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> using the specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnDownloadDataCompleted_System_Net_DownloadDataCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnDownloadDataCompleted(DownloadDataCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnDownloadFileCompleted_System_ComponentModel_AsyncCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnDownloadFileCompleted(AsyncCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnDownloadProgressChanged_System_Net_DownloadProgressChangedEventArgs_\" data-linktype=\"self-bookmark\">OnDownloadProgressChanged(DownloadProgressChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnDownloadStringCompleted_System_Net_DownloadStringCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnDownloadStringCompleted(DownloadStringCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnOpenReadCompleted_System_Net_OpenReadCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnOpenReadCompleted(OpenReadCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnOpenWriteCompleted_System_Net_OpenWriteCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnOpenWriteCompleted(OpenWriteCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnUploadDataCompleted_System_Net_UploadDataCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnUploadDataCompleted(UploadDataCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnUploadFileCompleted_System_Net_UploadFileCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnUploadFileCompleted(UploadFileCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnUploadProgressChanged_System_Net_UploadProgressChangedEventArgs_\" data-linktype=\"self-bookmark\">OnUploadProgressChanged(UploadProgressChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"relative-path\">UploadProgressChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnUploadStringCompleted_System_Net_UploadStringCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnUploadStringCompleted(UploadStringCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnUploadValuesCompleted_System_Net_UploadValuesCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnUploadValuesCompleted(UploadValuesCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OnWriteStreamClosed_System_Net_WriteStreamClosedEventArgs_\" data-linktype=\"self-bookmark\">OnWriteStreamClosed(WriteStreamClosedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_WriteStreamClosed\" data-linktype=\"relative-path\">WriteStreamClosed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenRead_System_String_\" data-linktype=\"self-bookmark\">OpenRead(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenRead_System_Uri_\" data-linktype=\"self-bookmark\">OpenRead(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenReadAsync_System_Uri_\" data-linktype=\"self-bookmark\">OpenReadAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenReadAsync_System_Uri_System_Object_\" data-linktype=\"self-bookmark\">OpenReadAsync(Uri,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenReadTaskAsync_System_String_\" data-linktype=\"self-bookmark\">OpenReadTaskAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenReadTaskAsync_System_Uri_\" data-linktype=\"self-bookmark\">OpenReadTaskAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWrite_System_String_\" data-linktype=\"self-bookmark\">OpenWrite(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWrite_System_Uri_\" data-linktype=\"self-bookmark\">OpenWrite(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWrite_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWrite(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWrite_System_Uri_System_String_\" data-linktype=\"self-bookmark\">OpenWrite(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource, by using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteAsync_System_Uri_\" data-linktype=\"self-bookmark\">OpenWriteAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">OpenWriteAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_System_Object_\" data-linktype=\"self-bookmark\">OpenWriteAsync(Uri,String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource, using the specified method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteTaskAsync_System_String_\" data-linktype=\"self-bookmark\">OpenWriteTaskAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteTaskAsync_System_Uri_\" data-linktype=\"self-bookmark\">OpenWriteTaskAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteTaskAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">OpenWriteTaskAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteTaskAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">OpenWriteTaskAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadData_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadData(String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadData_System_Uri_System_Byte___\" data-linktype=\"self-bookmark\">UploadData(Uri,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadData_System_String_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadData(String,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadData_System_Uri_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadData(Uri,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataAsync_System_Uri_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataAsync(Uri,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to a resource identified by a URI, using the POST method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataAsync(Uri,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to a resource identified by a URI, using the specified method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___System_Object_\" data-linktype=\"self-bookmark\">UploadDataAsync(Uri,String,Byte[],Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer to a resource identified by a URI, using the specified method and identifying token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataTaskAsync_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataTaskAsync(String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataTaskAsync(Uri,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataTaskAsync_System_String_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataTaskAsync(String,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_String_System_Byte___\" data-linktype=\"self-bookmark\">UploadDataTaskAsync(Uri,String,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFile_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFile(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFile_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadFile(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFile_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFile(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFile_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFile(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadFileAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFileAsync(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_System_Object_\" data-linktype=\"self-bookmark\">UploadFileAsync(Uri,String,String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFileTaskAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadFileTaskAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFileTaskAsync(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadFileTaskAsync(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadString_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadString(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadString_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadString(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadString_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadString(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadString_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadString(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadStringAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadStringAsync(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_System_Object_\" data-linktype=\"self-bookmark\">UploadStringAsync(Uri,String,String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadStringTaskAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_\" data-linktype=\"self-bookmark\">UploadStringTaskAsync(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadStringTaskAsync(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_System_String_\" data-linktype=\"self-bookmark\">UploadStringTaskAsync(Uri,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValues_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValues(String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValues_System_Uri_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValues(Uri,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValues_System_String_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValues(String,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValues_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValues(Uri,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesAsync(Uri,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesAsync(Uri,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Object_\" data-linktype=\"self-bookmark\">UploadValuesAsync(Uri,String,NameValueCollection,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread, and allows the caller to pass an object to the method that is invoked when the operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesTaskAsync_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesTaskAsync(String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesTaskAsync(Uri,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesTaskAsync_System_String_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesTaskAsync(String,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">UploadValuesTaskAsync(Uri,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"self-bookmark\">DownloadDataCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous data download operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"self-bookmark\">DownloadFileCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous file download operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"self-bookmark\">DownloadProgressChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous download operation successfully transfers some or all of the data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"self-bookmark\">DownloadStringCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous resource-download operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"self-bookmark\">OpenReadCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous operation to open a stream containing a resource completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"self-bookmark\">OpenWriteCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"self-bookmark\">UploadDataCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous data-upload operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"self-bookmark\">UploadFileCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous file-upload operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"self-bookmark\">UploadProgressChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"self-bookmark\">UploadStringCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous string-upload operation completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"self-bookmark\">UploadValuesCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous upload of a name/value collection completes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebClient_WriteStreamClosed\" data-linktype=\"self-bookmark\">WriteStreamClosed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous operation to write data to a resource using a write stream is closed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient__ctor\">\r\n    \r\n            <a id=\"System_Net_WebClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebClient()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebClient ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor creates a new instance of the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class. The default HTTP method is GET. The default FTP method is RETR. The default <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> is <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Default_\" data-linktype=\"relative-path\">Default</a>. The default value of <a class=\"xref\" href=\"system.net.httpwebrequest#System_Net_HttpWebRequest_AllowAutoRedirect_\" data-linktype=\"relative-path\">AllowAutoRedirect</a> is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance and then uses it to download data from a server and display it on the system console, to download data from a server and write it to a file, and to upload form values to a server and receive the response.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebClient#1\">   try\n   {\n      // Download the data to a buffer.\n      WebClient^ client = gcnew WebClient;\n\n      array&lt;Byte&gt;^ pageData = client-&gt;DownloadData( &quot;http://www.contoso.com&quot; );\n      String^ pageHtml = Encoding::ASCII-&gt;GetString( pageData );\n      Console::WriteLine( pageHtml );\n      \n      // Download the data to a file.\n      client-&gt;DownloadFile( &quot;http://www.contoso.com&quot;, &quot;page.htm&quot; );\n      \n      // Upload some form post values.\n      NameValueCollection^ form = gcnew NameValueCollection;\n      form-&gt;Add( &quot;MyName&quot;, &quot;MyValue&quot; );\n      array&lt;Byte&gt;^ responseData = client-&gt;UploadValues( &quot;http://www.contoso.com/form.aspx&quot;, form );\n   }\n   catch ( WebException^ webEx ) \n   {\n      Console::WriteLine( webEx-&gt;ToString() );\n      if ( webEx-&gt;Status == WebExceptionStatus::ConnectFailure )\n      {\n         Console::WriteLine( &quot;Are you behind a firewall?  If so, go through the proxy server.&quot; );\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient#1\">    Public Shared Sub Main()\n\n\n        Try\n            Dim client As New WebClient()\n            Dim pageData As [Byte]() = client.DownloadData(&quot;http://www.contoso.com&quot;)\n            Dim pageHtml As String = Encoding.ASCII.GetString(pageData)\n\n            &#39; Download the data to a buffer.\n            Console.WriteLine(pageHtml)\n            \n            &#39; Download the data to a file.\n            client.DownloadFile(&quot;http://www.contoso.com&quot;, &quot;page.htm&quot;)\n            \n            \n            &#39; Upload some form post values.\n            dim form as New NameValueCollection()\n\t\t\t   form.Add(&quot;MyName&quot;, &quot;MyValue&quot;)  \n\n\t\t\t   &#39; Note that you need to replace &quot;http://localhost/somefile.aspx&quot; with the name of \n\t\t\t   &#39; a file that is available to your computer.\n\t\t\t   Dim responseData As [Byte]() = client.UploadValues(&quot;http://www.contoso.com/form.aspx&quot;, form)      \n            Console.WriteLine(Encoding.ASCII.GetString(responseData))\n        \n        Catch webEx As WebException\n            if webEx.Status = WebExceptionStatus.ConnectFailure then\n               Console.WriteLine(&quot;Are you behind a firewall?  If so, go through the proxy server.&quot;)\n            end if\n            Console.Write(webEx.ToString())\n        End Try\n        \n    \n    End Sub &#39;Main\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClient#1\">        try {\n\t\t\t\n\t\t// Download the data to a buffer.\n\t       \tWebClient client = new WebClient();\n\n  \t\tByte[] pageData = client.DownloadData(&quot;http://www.contoso.com&quot;);\n\t\tstring pageHtml = Encoding.ASCII.GetString(pageData);\n\t\tConsole.WriteLine(pageHtml);\n\n\t\t// Download the data to a file.\n\t        \tclient.DownloadFile(&quot;http://www.contoso.com&quot;, &quot;page.htm&quot;);\n\n\t\t// Upload some form post values.\n\t\tNameValueCollection form = new NameValueCollection();\t\t\n\t\tform.Add(&quot;MyName&quot;, &quot;MyValue&quot;);\t\t\n\t\tByte[] responseData = client.UploadValues(&quot;http://www.contoso.com/form.aspx&quot;, form);\t\t\n\n        }\n        catch (WebException webEx) {\n          \tConsole.WriteLine(webEx.ToString());\n           \tif(webEx.Status == WebExceptionStatus.ConnectFailure) {\n           \t\tConsole.WriteLine(&quot;Are you behind a firewall?  If so, go through the proxy server.&quot;);\n           \t}\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_AllowReadStreamBuffering\">\r\n    \r\n            <a id=\"System_Net_WebClient_AllowReadStreamBuffering_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowReadStreamBuffering</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to buffer the data read from the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowReadStreamBuffering { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>.  </p>\n<p> <code>true</code> to enable buffering of the data received from the Internet resource; <code>false</code> to disable buffering. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the AllowReadStreamBuffering property is <code>true</code>, the data is buffered in memory so it is ready to be read by the app.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_AllowWriteStreamBuffering\">\r\n    \r\n            <a id=\"System_Net_WebClient_AllowWriteStreamBuffering_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowWriteStreamBuffering</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to buffer the data written to the Internet resource for a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowWriteStreamBuffering { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>.  </p>\n<p> <code>true</code> to enable buffering of the data written to the Internet resource; <code>false</code> to disable buffering. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the AllowWriteStreamBuffering property is <code>true</code>, the data is buffered in memory so it can be written more efficiently to the Internet resource in larger chunks.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_BaseAddress\">\r\n    \r\n            <a id=\"System_Net_WebClient_BaseAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the base URI for requests made by a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BaseAddress { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the base URI for requests made by a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> if no base address has been specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>BaseAddress is set to an invalid URI. The inner exception may contain information that will help you locate the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BaseAddress property contains a base URI that is combined with a relative address. When you call a method that uploads or downloads data, the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object combines this base URI with the relative address you specify in the method call. If you specify an absolute URI, <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> does not use the BaseAddress property value.  </p>\n<p> To remove a previously set value, set this property to <code>null</code> or an empty string (&quot;&quot;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example downloads data from an Internet server and displays it on the console. It assumes that the server&#39;s address (such as <a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a>) is in <code>hostUri</code> and that the path to the resource (such as /default.htm) is in <code>uriSuffix</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_BaseAddress_ResponseHeaders#1\">            // Create a new WebClient instance.\n            WebClient myWebClient = new WebClient();\n\n            // Set the BaseAddress of the Web Resource in the WebClient.\n            myWebClient.BaseAddress = hostUri;\n            Console.WriteLine(&quot;Downloading from &quot; + hostUri + &quot;/&quot; + uriSuffix);\n            Console.WriteLine(&quot;<br>Press Enter key to continue&quot;);\n            Console.ReadLine();\t\n\n            // Download the target Web Resource into a byte array.\n            byte[] myDatabuffer = myWebClient.DownloadData (uriSuffix);\n\n            // Display the downloaded data.\n            string download = Encoding.ASCII.GetString(myDatabuffer);\n            Console.WriteLine(download);\n\n            Console.WriteLine(&quot;Download of &quot; + myWebClient.BaseAddress.ToString() + uriSuffix + &quot; was successful.&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_BaseAddress_ResponseHeaders#1\">      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      \n      // Set the BaseAddress of the Web Resource in the WebClient.\n      myWebClient-&gt;BaseAddress = hostUri;\n      Console::WriteLine( &quot;Downloading from {0}/ {1}&quot;, hostUri, uriSuffix );\n      Console::WriteLine( &quot;<br>Press Enter key to continue&quot; );\n      Console::ReadLine();\n      \n      // Download the target Web Resource into a Byte array.\n      array&lt;Byte&gt;^ myDatabuffer = myWebClient-&gt;DownloadData( uriSuffix );\n      \n      // Display the downloaded data.\n      String^ download = Encoding::ASCII-&gt;GetString( myDatabuffer );\n      Console::WriteLine( download );\n      Console::WriteLine( &quot;Download of {0}{1} was successful.&quot;, myWebClient-&gt;BaseAddress, uriSuffix );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_BaseAddress_ResponseHeaders#1\">            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            &#39; Set the BaseAddress of the Web resource in the WebClient.\n            myWebClient.BaseAddress = hostUri\n            Console.WriteLine((&quot;Downloading from &quot; + hostUri + &quot;/&quot; + uriSuffix))\n            Console.WriteLine(ControlChars.Cr + &quot;Press Enter key to continue&quot;)\n            Console.ReadLine()\n\n            &#39; Download the target Web resource into a byte array.\n            Dim myDatabuffer As Byte() = myWebClient.DownloadData(uriSuffix)\n\n            &#39; Display the downloaded data.\n\t    Dim download As String = Encoding.ASCII.GetString(myDatabuffer)\n\t    Console.WriteLine(download)\n\n            Console.WriteLine((&quot;Download of &quot; + myWebClient.BaseAddress.ToString() + uriSuffix + &quot; was successful.&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_CachePolicy\">\r\n    \r\n            <a id=\"System_Net_WebClient_CachePolicy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CachePolicy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the application&#39;s cache policy for any resources obtained by this WebClient instance using <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.cache.requestcachepolicy\" data-linktype=\"relative-path\">RequestCachePolicy</a> object that represents the application&#39;s caching requirements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_Credentials\">\r\n    \r\n            <a id=\"System_Net_WebClient_Credentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Credentials</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.ICredentials Credentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> containing the authentication credentials for the request. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Credentials property contains the authentication credentials used to access a resource on a host. In most client-side scenarios, you should use the <a class=\"xref\" href=\"system.net.credentialcache#System_Net_CredentialCache_DefaultCredentials_\" data-linktype=\"relative-path\">DefaultCredentials</a>, which are the credentials of the currently logged on user. To do this, set the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UseDefaultCredentials_\" data-linktype=\"relative-path\">UseDefaultCredentials</a> property to <code>true</code> instead of setting this property.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> class is being used in a middle tier application, such as an ASP.NET application, the <a class=\"xref\" href=\"system.net.credentialcache#System_Net_CredentialCache_DefaultCredentials_\" data-linktype=\"relative-path\">DefaultCredentials</a> belong to the account running the ASP page (the server-side credentials). Typically, you would set this property to the credentials of the client on whose behalf the request is made.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the user&#39;s system credentials to authenticate a request.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebClientAuthentication#1\">int main()\n{\n   try\n   {\n      WebClient^ client = gcnew WebClient;\n      client-&gt;Credentials = CredentialCache::DefaultCredentials;\n      array&lt;Byte&gt;^pageData = client-&gt;DownloadData( &quot;http://www.contoso.com&quot; );\n      String^ pageHtml = Encoding::ASCII-&gt;GetString( pageData );\n      Console::WriteLine( pageHtml );\n   }\n   catch ( WebException^ webEx ) \n   {\n      Console::Write( webEx );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClientAuthentication#1\">\tpublic static void Main()\n\t{           \n\t\ttry {\n\n\t\t\tWebClient client = new WebClient();\n\n  \t\t\tclient.Credentials = CredentialCache.DefaultCredentials;\n\t\n\t\t\tByte[] pageData = client.DownloadData(&quot;http://www.contoso.com&quot;);\n\t\t\tstring pageHtml = Encoding.ASCII.GetString(pageData);\n\t\t\tConsole.WriteLine(pageHtml);\n\n\t\t} catch (WebException webEx) {\n\t\t\tConsole.Write(webEx.ToString());\n\t\t}\n\t}    \n</code></pre><pre><code class=\"lang-vb\" name=\"WebClientAuthentication#1\">    Public Shared Sub Main()\n        Try\n            Dim client As New WebClient()\n\n            client.Credentials = CredentialCache.DefaultCredentials\n\n            Dim pageData As [Byte]() = client.DownloadData(&quot;http://www.contoso.com&quot;)\n            Dim pageHtml As String = Encoding.ASCII.GetString(pageData)\n            \n            Console.WriteLine(pageHtml)\n\n        Catch webEx As WebException\n            Console.Write(webEx.ToString())\n        End Try\n    End Sub \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_Encoding\">\r\n    \r\n            <a id=\"System_Net_WebClient_Encoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> used to upload and download strings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding Encoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that is used to encode strings. The default value of this property is the encoding returned by <span class=\"xref\">stem.Text.Encoding.Default*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> and <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods use this property to convert the specified string to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array before uploading the string. For additional information, see the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetBytes_\" data-linktype=\"relative-path\">GetBytes</a> method.  </p>\n<p> When a string is downloaded using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> or <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods, <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> uses the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> returned by this to convert the downloaded <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array into a string. For additional information, see the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetString_\" data-linktype=\"relative-path\">GetString</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#1\">void UploadString( String^ address )\n{\n   String^ data = &quot;Time = 12:00am temperature = 50&quot;;\n   WebClient^ client = gcnew WebClient;\n   \n   // Optionally specify an encoding for uploading and downloading strings.\n   client-&gt;Encoding = System::Text::Encoding::UTF8;\n   \n   // Upload the data.\n   String^ reply = client-&gt;UploadString( address, data );\n   \n   // Disply the server&#39;s response.\n   Console::WriteLine( reply );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#1\">    public static void UploadString (string address)\n    {\n        string data = &quot;Time = 12:00am temperature = 50&quot;;\n        WebClient client = new WebClient ();\n        // Optionally specify an encoding for uploading and downloading strings.\n        client.Encoding = System.Text.Encoding.UTF8;\n        // Upload the data.\n        string reply = client.UploadString (address, data);\n        // Disply the server&#39;s response.\n        Console.WriteLine (reply);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#1\">\t\tPublic Shared Sub UploadString(ByVal address As String)\n\n\t\t\tDim data As String = &quot;Time = 12:00am temperature = 50&quot;\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\t&#39;  Optionally specify an encoding for uploading and downloading strings.\n\t\t\tclient.Encoding = System.Text.Encoding.UTF8\n\t\t\t&#39;  Upload the data.\n\t\t\tDim reply As String = client.UploadString(address, data)\n\t\t\t&#39;  Disply the server&#39;s response.\n\t\t\tConsole.WriteLine(reply)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_Headers\">\r\n    \r\n            <a id=\"System_Net_WebClient_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a collection of header name/value pairs associated with the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.WebHeaderCollection Headers { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> containing header name/value pairs associated with this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property contains a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> instance containing protocol headers that the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> sends with the request.  </p>\n<p> Some common headers are considered restricted and are protected by the system and cannot be set or changed in a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object. Any attempt to set one of these restricted headers in the <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object associated with a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object will throw an exception later when attempting to send the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> request.  </p>\n<p> Restricted headers protected by the system include, but are not limited to the following:  </p>\n<ul>\n<li><p>Date  </p>\n</li>\n<li><p>Host  </p>\n<p>In addition, some other headers are also restricted when using a <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object. These restricted headers include, but are not limited to the following:  </p>\n</li>\n<li><p>Accept  </p>\n</li>\n<li><p>Connection  </p>\n</li>\n<li><p>Content-Length  </p>\n</li>\n<li><p>Expect (when the value is set to &quot;100-continue&quot;  </p>\n</li>\n<li><p>If-Modified-Since  </p>\n</li>\n<li><p>Range  </p>\n</li>\n<li><p>Transfer-Encoding  </p>\n<p>The <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class has properties for setting some of the above headers. If it is important for an application to set these headers, then the <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> class should be used instead of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.  </p>\n<p>You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Headers collection to set the HTTP <code>Content-Type</code> header to <code>application/x-www-form-urlencoded,</code> to notify the server that form data is attached to the post.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UpLoadData_Headers#2\">     \tstring uriString;\n\t\t\tConsole.Write(&quot;<br>Please enter the URI to post data to {for example, http://www.contoso.com} : &quot;);\n\t\t\turiString = Console.ReadLine();\n\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\tConsole.WriteLine(&quot;<br>Please enter the data to be posted to the URI {0}:&quot;,uriString);\n\t\t\tstring postData = Console.ReadLine();\n\t\t\tmyWebClient.Headers.Add(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);\n\n      // Display the headers in the request\n\t\t\tConsole.Write(&quot;Resulting Request Headers: &quot;);\n\t\t\tConsole.WriteLine(myWebClient.Headers.ToString());\n\t\t\t\n\t\t\t// Apply ASCII Encoding to obtain the string as a byte array.\n     \n\t\t\tbyte[] byteArray = Encoding.ASCII.GetBytes(postData);\n\t\t\tConsole.WriteLine(&quot;Uploading to {0} ...&quot;,  uriString);\t\t\t\t\t\t\n\t\t\t// Upload the input string using the HTTP 1.0 POST method.\n\t\t\tbyte[] responseArray = myWebClient.UploadData(uriString,&quot;POST&quot;,byteArray);\n\t\t\t\n\t\t\t// Decode and display the response.\n\t\t\tConsole.WriteLine(&quot;<br>Response received was {0}&quot;,\n\t        Encoding.ASCII.GetString(responseArray));\n\t\t\t\t      \n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UpLoadData_Headers#2\">            Dim uriString As String\n            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to{for example, http://www.contoso.com} : &quot;)\n            uriString = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the data to be posted to the URI {0}:&quot;, uriString)\n            Dim postData As String = Console.ReadLine()\n            myWebClient.Headers.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;)\n            \n            &#39; Display the headers in the request\n            Console.Write(&quot;Resulting Request Headers: &quot;)\n            Console.Writeline(myWebClient.Headers.ToString())\n\n            &#39; Apply ASCII Encoding to obtain the string as a byte array.\n            Dim byteArray As Byte() = Encoding.ASCII.GetBytes(postData)\n            Console.WriteLine(&quot;Uploading to {0} ...&quot;, uriString)\n            &#39; Upload the input string using the HTTP 1.0 POST method.\n            Dim responseArray As Byte() = myWebClient.UploadData(uriString, &quot;POST&quot;, byteArray)\n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received was :{0}&quot;, Encoding.ASCII.GetString(responseArray))\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UpLoadData_Headers#2\">      String^ uriString;\n      Console::Write( &quot;<br>Please enter the URI to post data to {for example, http://www.contoso.com}: &quot; );\n      uriString = Console::ReadLine();\n\n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      Console::WriteLine( &quot;<br>Please enter the data to be posted to the URI {0}:&quot;, uriString );\n      String^ postData = Console::ReadLine();\n      myWebClient-&gt;Headers-&gt;Add( &quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot; );\n\n      // Displays the headers in the request\n      Console::Write( &quot;Resulting Request Headers: &quot;);\n      Console::WriteLine(myWebClient-&gt;Headers);\n      \n      // Apply ASCII Encoding to obtain the String^ as a Byte array.\n      array&lt;Byte&gt;^ byteArray = Encoding::ASCII-&gt;GetBytes( postData );\n      Console::WriteLine( &quot;Uploading to {0} ...&quot;, uriString );\n      // Upload the input String* using the HTTP 1.0 POST method.\n      array&lt;Byte&gt;^responseArray = myWebClient-&gt;UploadData( uriString, &quot;POST&quot;, byteArray );\n      // Decode and display the response.\n      Console::WriteLine( &quot;<br>Response received was {0}&quot;,\n         Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_IsBusy\">\r\n    \r\n            <a id=\"System_Net_WebClient_IsBusy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBusy</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether a Web request is in progress.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsBusy { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the Web request is still in progress; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_Proxy\">\r\n    \r\n            <a id=\"System_Net_WebClient_Proxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Proxy</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the proxy used by this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.IWebProxy Proxy { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> instance used to send requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Proxy is set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Proxy property identifies the <a class=\"xref\" href=\"system.net.iwebproxy\" data-linktype=\"relative-path\">IWebProxy</a> instance that communicates with remote servers on behalf of this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object. The proxy is set by the system using configuration files and the Internet Explorer Local Area Network settings. To specify that no proxy should be used, set the Proxy property to the proxy instance returned by the <a class=\"xref\" href=\"system.net.globalproxyselection#System_Net_GlobalProxySelection_GetEmptyWebProxy_\" data-linktype=\"relative-path\">GetEmptyWebProxy</a> method.  </p>\n<p> For information on automatic proxy detection, see <a href=\"../Topic/Automatic%20Proxy%20Detection.md\" data-linktype=\"relative-path\">Automatic Proxy Detection</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_QueryString\">\r\n    \r\n            <a id=\"System_Net_WebClient_QueryString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">QueryString</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a collection of query name/value pairs associated with the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection QueryString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> that contains query name/value pairs associated with the request. If no pairs are associated with the request, the value is an empty <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The QueryString property contains a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> instance containing name/value pairs that are appended to the URI as a query string. The contents of the QueryString property are preceded by a question mark (?), and name/value pairs are separated from one another by an ampersand (&amp;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example takes user input from the command line and builds a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> that is assigned to the QueryString property. It then downloads the response from the server to a local file.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_QueryString#1\">\t\t\tstring uriString = &quot;http://www.contoso.com/search&quot;;\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\t// Create a new NameValueCollection instance to hold the QueryString parameters and values.\n\t\t\tNameValueCollection myQueryStringCollection = new NameValueCollection();\n\t\t\tConsole.Write(&quot;Enter the word(s), separated by space character to search for in &quot; +  uriString + &quot;: &quot;);\n\t\t\t// Read user input phrase to search for at uriString.\n\t\t\tstring searchPhrase = Console.ReadLine();\n\t\t\tif (searchPhrase.Length &gt; 1)\n\t\t\t\t// Assign the user-defined search phrase.\n\t\t\t\tmyQueryStringCollection.Add(&quot;q&quot;,searchPhrase);\n\t\t\telse\n\t\t\t\t// If error, default to search for &#39;Microsoft&#39;.\n\t\t\t\tmyQueryStringCollection.Add(&quot;q&quot;,&quot;Microsoft&quot;);\t\t\n\t\t\t// Assign auxilliary parameters required for the search.\n\t\t\tConsole.WriteLine(&quot;Searching &quot; + uriString + &quot; .......&quot;);\n\t\t\t// Attach QueryString to the WebClient.\n\t\t\tmyWebClient.QueryString = myQueryStringCollection;\n\t\t\t// Download the search results Web page into &#39;searchresult.htm&#39; for inspection.\n\t\t\tmyWebClient.DownloadFile (uriString, &quot;searchresult.htm&quot;);\n\t\t\tConsole.WriteLine(&quot;<br>Download of &quot; + uriString + &quot; was successful. Please see &#39;searchresult.htm&#39; for results.&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_QueryString#1\">      String^ uriString = &quot;http://www.contoso.com/search&quot;;\n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      // Create a new NameValueCollection instance to hold the QueryString parameters and values.\n      NameValueCollection^ myQueryStringCollection = gcnew NameValueCollection;\n      Console::Write( &quot;Enter the word(s), separated by space character to search for in {0}: &quot;, uriString );\n      // Read user input phrase to search for at uriString.\n      String^ searchPhrase = Console::ReadLine();\n      if ( searchPhrase-&gt;Length &gt; 1 )\n      {\n         // Assign the user-defined search phrase.\n         myQueryStringCollection-&gt;Add( &quot;q&quot;, searchPhrase );\n      }\n      else\n      {\n         // If error, default to search for &#39;Microsoft&#39;.\n         myQueryStringCollection-&gt;Add( &quot;q&quot;, &quot;Microsoft&quot; );\n      }\n      // Assign auxilliary parameters required for the search.\n      Console::WriteLine( &quot;Searching {0} .......&quot;, uriString );\n      // Attach QueryString to the WebClient.\n      myWebClient-&gt;QueryString = myQueryStringCollection;\n      // Download the search results Web page into &#39;searchresult.htm&#39; for inspection.\n      myWebClient-&gt;DownloadFile( uriString, &quot;searchresult.htm&quot; );\n      Console::WriteLine( &quot;<br>Download of {0} was successful. Please see &#39;searchresult.htm&#39; for results.&quot;, uriString );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_QueryString#1\">            Dim uriString As String = &quot;http://www.contoso.com/search&quot;\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            &#39; Create a new NameValueCollection instance to hold the QueryString parameters and values.\n            Dim myQueryStringCollection As New NameValueCollection()\n            Console.Write((&quot;Enter the word(s), separated by space characters, to search for in &quot; + uriString + &quot;: &quot;))\n            &#39; Read user input phrase to search in uriString.\n            Dim searchPhrase As String = Console.ReadLine()\n            If searchPhrase.Length &gt; 1 Then\n                &#39;Assign the user-defined search phrase.\n                myQueryStringCollection.Add(&quot;q&quot;, searchPhrase)\n            &#39; If error, default to search &#39;Microsoft&#39;.\n            Else\n                myQueryStringCollection.Add(&quot;q&quot;, &quot;Microsoft&quot;)\n            End If \n            &#39; Assign auxilliary parameters required for the search.\n            Console.WriteLine((&quot;Searching &quot; + uriString + &quot; .......&quot;))\n            &#39; Attach QueryString to the WebClient.\n            myWebClient.QueryString = myQueryStringCollection\n            &#39; Download the search results Web page into &#39;searchresult.htm&#39; for inspection.\n            myWebClient.DownloadFile(uriString, &quot;searchresult.htm&quot;)\n            Console.WriteLine((ControlChars.Cr + &quot;Download of &quot; + uriString + &quot; was successful. Please see &#39;searchresult.htm&#39; for results.&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_ResponseHeaders\">\r\n    \r\n            <a id=\"System_Net_WebClient_ResponseHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResponseHeaders</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of header name/value pairs associated with the response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.WebHeaderCollection ResponseHeaders { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> containing header name/value pairs associated with the response, or <code>null</code> if no response has been received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ResponseHeaders property contains a <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> instance containing header information the <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> receives with the response.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example downloads and displays the ResponseHeaders returned by a server.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_BaseAddress_ResponseHeaders#2\">            // Obtain the WebHeaderCollection instance containing the header name/value pair from the response.\n            WebHeaderCollection myWebHeaderCollection = myWebClient.ResponseHeaders;\n            Console.WriteLine(&quot;<br>Displaying the response headers<br>&quot;);\n            // Loop through the ResponseHeaders and display the header name/value pairs.\n            for (int i=0; i &lt; myWebHeaderCollection.Count; i++)\t\t\t\t\n            \tConsole.WriteLine (&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + myWebHeaderCollection.GetKey(i) + &quot; = &quot; + myWebHeaderCollection.Get(i));\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_BaseAddress_ResponseHeaders#2\">      // Obtain the WebHeaderCollection instance containing the header name/value pair from the response.\n      WebHeaderCollection^ myWebHeaderCollection = myWebClient-&gt;ResponseHeaders;\n      Console::WriteLine( &quot;<br>Displaying the response headers<br>&quot; );\n      \n      // Loop through the ResponseHeaders and display the header name/value pairs.\n      for ( int i = 0; i &lt; myWebHeaderCollection-&gt;Count; i++ )\n      {\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} = {1}&quot;, myWebHeaderCollection-&gt;GetKey( i ),\n            myWebHeaderCollection-&gt;Get( i ) );\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_BaseAddress_ResponseHeaders#2\">            &#39; ResponseHeaders is a WebHeaderCollection instance that contains the headers sent back \n\t         &#39; in response to the WebClient request. \n            Dim myWebHeaderCollection As WebHeaderCollection = myWebClient.ResponseHeaders\n            Console.WriteLine(ControlChars.Cr + &quot;Displaying the response headers&quot; + ControlChars.Cr)\n            &#39; Loop through the ResponseHeaders.\n            Dim i As Integer\n            For i = 0 To myWebHeaderCollection.Count - 1\n                &#39; Display the headers as name/value pairs.\n                Console.WriteLine((ControlChars.Tab + myWebHeaderCollection.GetKey(i) + &quot; &quot; + ChrW(61) + &quot; &quot; + myWebHeaderCollection.Get(i)))\n            Next i \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UseDefaultCredentials\">\r\n    \r\n            <a id=\"System_Net_WebClient_UseDefaultCredentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseDefaultCredentials</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that controls whether the <span class=\"xref\">stem.Net.CredentialCache.DefaultCredentials*</span> are sent with requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UseDefaultCredentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the default credentials are used; otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set this property to <code>true</code> when requests made by this <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a> object should, if requested by the server, be authenticated using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Credentials_\" data-linktype=\"relative-path\">Credentials</a> property to the credentials of the client on whose behalf the request is made.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#3\">// Sample call: UploadFileInBackground3(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\nvoid UploadFileInBackground3( String^ address, String^ fileName )\n{\n   \n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n\n   client-&gt;UseDefaultCredentials = true;\n   \n   client-&gt;UploadFileCompleted += gcnew UploadFileCompletedEventHandler( UploadFileCallback2 );\n   client-&gt;UploadFileAsync( uri, fileName );\n   Console::WriteLine( &quot;File upload started.&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#3\">    // Sample call: UploadFileInBackground3(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n    public static void UploadFileInBackground3 (string address, string fileName)\n    {\n        WebClient client = new WebClient ();\n\n        Uri uri = new Uri(address);\n\n        client.UseDefaultCredentials = true;\n        client.UploadFileCompleted += new UploadFileCompletedEventHandler (UploadFileCallback2);\n        client.UploadFileAsync (uri, fileName);\n        Console.WriteLine (&quot;File upload started.&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#3\">\t\t&#39;  Sample call: UploadFileInBackground3(&quot;http:&#39; www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n\t\tPublic Shared Sub UploadFileInBackground3(ByVal address As String, ByVal fileName As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n                        Dim uri as Uri =  New Uri(address)\n\t\t\tclient.UseDefaultCredentials = True\n\t\t\tAddHandler client.UploadFileCompleted, AddressOf UploadFileCallback2\n\t\t\tclient.UploadFileAsync(uri, fileName)\n\t\t\tConsole.WriteLine(&quot;File upload started.&quot;)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_CancelAsync\">\r\n    \r\n            <a id=\"System_Net_WebClient_CancelAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels a pending asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CancelAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an operation is pending, this method calls <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_Abort_\" data-linktype=\"relative-path\">Abort</a> on the underlying <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.  </p>\n<p> When you call CancelAsync, your application still receives the completion event associated with the operation. For example, when you call CancelAsync to cancel a <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> operation, if you have specified an event handler for the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event, your event handler receives notification that the operation has ended. To learn whether the operation completed successfully, check the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_Cancelled_\" data-linktype=\"relative-path\">Cancelled</a> property on the base class of <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> in the event data object passed to the event handler.  </p>\n<p> If no asynchronous operation is in progress, this method does nothing.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadData_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadData(String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] DownloadData (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI from which to download data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method has been called simultaneously on multiple threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DownloadData method downloads the resource with the URI specified by the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example requests data from a server and displays the data returned. It assumes that <code>remoteUri</code> contains a valid URI for the requested data.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_DownloadData#1\">            Console.Write(&quot;<br>Please enter a URI (for example, http://www.contoso.com): &quot;);\n            string remoteUri = Console.ReadLine();\n\n            // Create a new WebClient instance.\n            WebClient myWebClient = new WebClient();\n            // Download home page data.\n            Console.WriteLine(&quot;Downloading &quot; + remoteUri);                        \n            // Download the Web resource and save it into a data buffer.\n            byte[] myDataBuffer = myWebClient.DownloadData (remoteUri);\n\n            // Display the downloaded data.\n            string download = Encoding.ASCII.GetString(myDataBuffer);\n            Console.WriteLine(download);\n                                \n            Console.WriteLine(&quot;Download successful.&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_DownloadData#1\">      Console::Write( &quot;<br>Please enter a URI (e.g. http://www.contoso.com): &quot; );\n      String^ remoteUri = Console::ReadLine();\n      \n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      // Download home page data.\n      Console::WriteLine( &quot;Downloading {0}&quot;, remoteUri );\n      // Download the Web resource and save it into a data buffer.\n      array&lt;Byte&gt;^ myDataBuffer = myWebClient-&gt;DownloadData( remoteUri );\n      \n      // Display the downloaded data.\n      String^ download = Encoding::ASCII-&gt;GetString( myDataBuffer );\n      Console::WriteLine( download );\n\n      Console::WriteLine( &quot;Download successful.&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_DownloadData#1\">\n            Console.Write(ControlChars.Cr + &quot;Please enter a Url(for example, http://www.msn.com): &quot;)\n            Dim remoteUrl As String = Console.ReadLine()\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            &#39; Download the home page data.\n            Console.WriteLine((&quot;Downloading &quot; + remoteUrl))\n            &#39; DownloadData() method takes a &#39;uriRemote.ToString()&#39; and downloads the Web resource and saves it into a data buffer.\n            Dim myDatabuffer As Byte() = myWebClient.DownloadData(remoteUrl)\n\n            &#39; Display the downloaded data.\n            Dim download As String = Encoding.ASCII.GetString(myDataBuffer)\n            Console.WriteLine(download)\n\n            Console.WriteLine(&quot;Download successful.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadData_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadData(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] DownloadData (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI represented by the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object, from which to download data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> method downloads the resource with the URI specified by the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadDataAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadDataAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadDataAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <code>address</code>. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> methods. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded data is available in the <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs#System_Net_DownloadDataCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadDataAsync_System_Uri_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadDataAsync(Uri,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadDataAsync (Uri address, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <code>address</code>. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadData_\" data-linktype=\"relative-path\">DownloadData</a> methods. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded data is available in the <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs#System_Net_DownloadDataCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadDataTaskAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadDataTaskAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <code>address</code> parameter. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> The following code example requests data from a server and displays the data returned. It assumes that <code>remoteUri</code> contains a valid URI for the requested data.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadDataTaskAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadDataTaskAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array from the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; DownloadDataTaskAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <code>address</code> parameter. The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFile_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFile(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource with the specified URI to a local file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadFile (string address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI from which to download data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the local file that is to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>filename</code> is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The file does not exist.  </p>\n<p> -or- An error occurred while downloading data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method has been called simultaneously on multiple threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DownloadFile method downloads to a local file data from the URI specified by in the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example downloads a file from <a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a> to the local hard drive.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebClient_DownloadFile#1\">      String^ remoteUri = &quot;http://www.contoso.com/library/homepage/images/&quot;;\n      String^ fileName = &quot;ms-banner.gif&quot;, ^myStringWebResource = nullptr;\n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      // Concatenate the domain with the Web resource filename.\n      myStringWebResource = String::Concat( remoteUri, fileName );\n      Console::WriteLine( &quot;Downloading File \\&quot;{0}\\&quot; from \\&quot;{1}\\&quot; .......<br><br>&quot;, fileName, myStringWebResource );\n      // Download the Web resource and save it into the current filesystem folder.\n      myWebClient-&gt;DownloadFile( myStringWebResource, fileName );\n      Console::WriteLine( &quot;Successfully Downloaded File \\&quot;{0}\\&quot; from \\&quot;{1}\\&quot;&quot;, fileName, myStringWebResource );\n      Console::WriteLine( &quot;<br>Downloaded file saved in the following file system folder:<br>&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;, Application::StartupPath );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClient_DownloadFile#1\">\t\t\tstring remoteUri = &quot;http://www.contoso.com/library/homepage/images/&quot;;\n\t\t\tstring fileName = &quot;ms-banner.gif&quot;, myStringWebResource = null;\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\t// Concatenate the domain with the Web resource filename.\n\t\t\tmyStringWebResource = remoteUri + fileName;\n\t\t\tConsole.WriteLine(&quot;Downloading File \\&quot;{0}\\&quot; from \\&quot;{1}\\&quot; .......<br><br>&quot;, fileName, myStringWebResource);\n\t\t\t// Download the Web resource and save it into the current filesystem folder.\n\t\t\tmyWebClient.DownloadFile(myStringWebResource,fileName);\t\t\n\t\t\tConsole.WriteLine(&quot;Successfully Downloaded File \\&quot;{0}\\&quot; from \\&quot;{1}\\&quot;&quot;, fileName, myStringWebResource);\n\t\t\tConsole.WriteLine(&quot;<br>Downloaded file saved in the following file system folder:<br>&nbsp;&nbsp;&nbsp;&nbsp;&quot; + Application.StartupPath);\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_DownloadFile#1\">            Dim remoteUri As String = &quot;http://www.contoso.com/library/homepage/images/&quot;\n            Dim fileName As String = &quot;ms-banner.gif&quot;\n            Dim myStringWebResource As String = Nothing\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            &#39; Concatenate the domain with the Web resource filename. Because DownloadFile \n            &#39;requires a fully qualified resource name, concatenate the domain with the Web resource file name.\n            myStringWebResource = remoteUri + fileName\n            Console.WriteLine(&quot;Downloading File &quot;&quot;{0}&quot;&quot; from &quot;&quot;{1}&quot;&quot; .......&quot; + ControlChars.Cr + ControlChars.Cr, fileName, myStringWebResource)\n            &#39; The DownloadFile() method downloads the Web resource and saves it into the current file-system folder.\n            myWebClient.DownloadFile(myStringWebResource, fileName)\n            Console.WriteLine(&quot;Successfully Downloaded file &quot;&quot;{0}&quot;&quot; from &quot;&quot;{1}&quot;&quot;&quot;, fileName, myStringWebResource)\n            Console.WriteLine((ControlChars.Cr + &quot;Downloaded file saved in the following file system folder:&quot; + ControlChars.Cr + ControlChars.Tab + Application.StartupPath))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFile_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFile(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource with the specified URI to a local file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadFile (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, from which to download data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the local file that is to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>filename</code> is <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method has been called simultaneously on multiple threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> method downloads to a local file data from the URI specified by in the <code>address</code> parameter. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFileAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFileAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadFileAsync (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to be placed on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the resource is being downloaded. To block while waiting for the download to complete, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> methods.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFileAsync_System_Uri_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFileAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFileAsync(Uri,String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads, to a local file, the resource with the specified URI. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadFileAsync (Uri address, string fileName, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to be placed on the local computer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the resource is being downloaded. To block while waiting for the download to complete, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFile_\" data-linktype=\"relative-path\">DownloadFile</a> methods.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFileTaskAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFileTaskAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task DownloadFileTaskAsync (string address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to be placed on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFileTaskAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFileTaskAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the specified resource to a local file as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task DownloadFileTaskAsync (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to be placed on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The local file specified by <code>fileName</code> is in use by another thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the data resource has been downloaded.  </p>\n<p> This method downloads the resource at the URI specified by in the <code>address</code> parameter. When the download completes successfully, the downloaded file is named <code>fileName</code> on the local computer. The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.  </p>\n</div>\n<p> When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadString_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DownloadString (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the URI to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the requested resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method has been called simultaneously on multiple threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves the specified resource. After it downloads the resource, the method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#25\">void DownloadString( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   String^ reply = client-&gt;DownloadString( address );\n   Console::WriteLine( reply );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#25\">    public static void DownloadString (string address)\n    {\n        WebClient client = new WebClient ();\n        string reply = client.DownloadString (address);\n\n        Console.WriteLine (reply);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#25\">\t\tPublic Shared Sub DownloadString(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\tDim reply As String = client.DownloadString(address)\n\n\t\t\tConsole.WriteLine(reply)\n\t\tEnd Sub\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadString_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadString(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the requested resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. The resource to download is specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DownloadString (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object containing the URI to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the requested resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method has been called simultaneously on multiple threads.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves the specified resource. After it downloads the resource, the method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method blocks while downloading the resource. To download a resource and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadStringAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadStringAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadStringAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> method. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded string is available in the <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs#System_Net_DownloadStringCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadStringAsync_System_Uri_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadStringAsync(Uri,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DownloadStringAsync (Uri address, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> containing the URI to download.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource. To download a resource and block while waiting for the server&#39;s response, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadString_\" data-linktype=\"relative-path\">DownloadString</a> method. When the download completes, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event is raised. Your application must handle this event to receive notification. The downloaded string is available in the <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs#System_Net_DownloadStringCompletedEventArgs_Result_\" data-linktype=\"relative-path\">Result</a> property.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadStringTaskAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadStringTaskAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded.  The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadStringTaskAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_DownloadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadStringTaskAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the resource as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; DownloadStringTaskAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to download.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the downloaded resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the data resource has been downloaded. The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> After downloading the resource, this method uses the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property to convert the resource to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. This method does not block the calling thread while downloading the resource.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method to cancel asynchronous operations that have not completed.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_GetWebRequest_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_GetWebRequest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWebRequest(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object for the specified resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Net.WebRequest GetWebRequest (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that identifies the resource to request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object for the specified resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method copies the existing <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a>, <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Credentials_\" data-linktype=\"relative-path\">Credentials</a>, and method to the newly created <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object. Derived classes should call the base class implementation of GetWebRequest to ensure the method works as expected.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#1\">        protected override WebRequest GetWebRequest (Uri address)\n        {\n            WebRequest request = (WebRequest) base.GetWebRequest (address);\n\n            // Perform any customizations on the request.\n            // This version of WebClient always preauthenticates.\n            request.PreAuthenticate = true;\n            return request;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#1\">   virtual WebRequest^ GetWebRequest ( Uri^ address ) override\n   {\n      WebRequest^ request = dynamic_cast&lt;WebRequest^&gt;(WebClient::GetWebRequest( address ));\n\n      // Perform any customizations on the request.\n      // This version of WebClient always preauthenticates.\n      request-&gt;PreAuthenticate = true;\n      return request;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_GetWebResponse_System_Net_WebRequest_\">\r\n    \r\n            <a id=\"System_Net_WebClient_GetWebResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWebResponse(WebRequest)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> that is used to obtain the response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> containing the response for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned by this method is obtained by calling the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method on the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#2\">        protected override WebResponse GetWebResponse (WebRequest request)\n        {\n            WebResponse response = base.GetWebResponse (request);\n            // Perform any custom actions with the response ...\n            return response;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#2\">   virtual WebResponse^ GetWebResponse( WebRequest^ request ) override\n   {\n      WebResponse^ response = WebClient::GetWebResponse( request );\n\n      // Perform any custom actions with the response ...\n      return response;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_GetWebResponse_System_Net_WebRequest_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_WebClient_GetWebResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWebResponse(WebRequest,IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> using the specified <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> that is used to obtain the response.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object obtained from a previous call to <span class=\"xref\">stem.Net.WebRequest.BeginGetResponse*</span> .</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> containing the response for the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned by this method is obtained by calling the <a class=\"xref\" href=\"system.net.webrequest#System_Net_WebRequest_EndGetResponse_\" data-linktype=\"relative-path\">EndGetResponse</a> method on the specified <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> object.  </p>\n<p> This method can be called only by classes that inherit from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>. It is provided to give inheritors access to the underlying <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#3\">        protected override WebResponse GetWebResponse (WebRequest request, IAsyncResult result)\n        {\n            WebResponse response = base.GetWebResponse (request, result);\n            // Perform any custom actions with the response ...\n            return response;\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#3\">   virtual WebResponse^ GetWebResponse( WebRequest^ request, IAsyncResult^ result ) override\n   {\n      WebResponse^ response = WebClient::GetWebResponse( request, result );\n\n      // Perform any custom actions with the response ...\n      return response;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnDownloadDataCompleted_System_Net_DownloadDataCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnDownloadDataCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDownloadDataCompleted(DownloadDataCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDownloadDataCompleted (System.Net.DownloadDataCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> object that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataCompleted\" data-linktype=\"relative-path\">DownloadDataCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>  </p>\n<p> The OnDownloadDataCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#4\">        protected override void OnDownloadDataCompleted (DownloadDataCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnDownloadDataCompleted(e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#4\">   virtual void OnDownloadDataCompleted( DownloadDataCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnDownloadDataCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnDownloadFileCompleted_System_ComponentModel_AsyncCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnDownloadFileCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDownloadFileCompleted(AsyncCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileCompleted\" data-linktype=\"relative-path\">DownloadFileCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadFileCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#5\">        protected  override void OnDownloadFileCompleted (System.ComponentModel.AsyncCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnDownloadFileCompleted(e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#5\">   virtual void OnDownloadFileCompleted( System::ComponentModel::AsyncCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnDownloadFileCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnDownloadProgressChanged_System_Net_DownloadProgressChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnDownloadProgressChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDownloadProgressChanged(DownloadProgressChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDownloadProgressChanged (System.Net.DownloadProgressChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadProgressChanged\" data-linktype=\"relative-path\">DownloadProgressChanged</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadProgressChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#12\">        protected override void OnDownloadProgressChanged (DownloadProgressChangedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnDownloadProgressChanged (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#12\">   virtual void OnDownloadProgressChanged( DownloadProgressChangedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnDownloadProgressChanged( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnDownloadStringCompleted_System_Net_DownloadStringCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnDownloadStringCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDownloadStringCompleted(DownloadStringCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDownloadStringCompleted (System.Net.DownloadStringCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringCompleted\" data-linktype=\"relative-path\">DownloadStringCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDownloadStringCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#6\">        protected override void OnDownloadStringCompleted (DownloadStringCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnDownloadStringCompleted (e);\n \n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#6\">   virtual void OnDownloadStringCompleted( DownloadStringCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnDownloadStringCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnOpenReadCompleted_System_Net_OpenReadCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnOpenReadCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnOpenReadCompleted(OpenReadCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnOpenReadCompleted (System.Net.OpenReadCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnOpenReadCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#7\">        protected override void OnOpenReadCompleted (OpenReadCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnOpenReadCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#7\">   virtual void OnOpenReadCompleted( OpenReadCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnOpenReadCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnOpenWriteCompleted_System_Net_OpenWriteCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnOpenWriteCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnOpenWriteCompleted(OpenWriteCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnOpenWriteCompleted (System.Net.OpenWriteCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnOpenWriteCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#8\">        protected override void OnOpenWriteCompleted (OpenWriteCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnOpenWriteCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#8\">   virtual void OnOpenWriteCompleted( OpenWriteCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnOpenWriteCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnUploadDataCompleted_System_Net_UploadDataCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnUploadDataCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUploadDataCompleted(UploadDataCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUploadDataCompleted (System.Net.UploadDataCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadDataCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#9\">        protected override void OnUploadDataCompleted (UploadDataCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnUploadDataCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#9\">   virtual void OnUploadDataCompleted( UploadDataCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnUploadDataCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnUploadFileCompleted_System_Net_UploadFileCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnUploadFileCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUploadFileCompleted(UploadFileCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUploadFileCompleted (System.Net.UploadFileCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadFileCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#10\">        protected override void OnUploadFileCompleted (UploadFileCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnUploadFileCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#10\">   virtual void OnUploadFileCompleted( UploadFileCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnUploadFileCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnUploadProgressChanged_System_Net_UploadProgressChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnUploadProgressChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUploadProgressChanged(UploadProgressChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"relative-path\">UploadProgressChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUploadProgressChanged (System.Net.UploadProgressChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadProgressChanged\" data-linktype=\"relative-path\">UploadProgressChanged</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadProgressChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#13\">        protected override void OnUploadProgressChanged (UploadProgressChangedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnUploadProgressChanged (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#13\">   virtual void OnUploadProgressChanged( UploadProgressChangedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnUploadProgressChanged( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnUploadStringCompleted_System_Net_UploadStringCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnUploadStringCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUploadStringCompleted(UploadStringCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUploadStringCompleted (System.Net.UploadStringCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadStringCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#11\">        protected override void OnUploadStringCompleted (UploadStringCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnUploadStringCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#11\">   virtual void OnUploadStringCompleted( UploadStringCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnUploadStringCompleted( e );\n\n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnUploadValuesCompleted_System_Net_UploadValuesCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnUploadValuesCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUploadValuesCompleted(UploadValuesCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUploadValuesCompleted (System.Net.UploadValuesCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from this class can override this method to perform additional tasks when the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event occurs.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUploadValuesCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows an implementation of this method that can be customized by a class derived from <a class=\"xref\" href=\"system.net.webclient\" data-linktype=\"relative-path\">WebClient</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLCustomWebClient#14\">        protected override void OnUploadValuesCompleted (UploadValuesCompletedEventArgs e)\n        {\n            // Here you can perform any custom actions before the event is raised\n            // and event handlers are called...\n\n            base.OnUploadValuesCompleted (e);\n\n            // Here you can perform any post event actions...\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLCustomWebClient#14\">   virtual void OnUploadValuesCompleted( UploadValuesCompletedEventArgs ^ e ) override\n   {\n      // Here you can perform any custom actions before the event is raised\n      // and event handlers are called...\n      WebClient::OnUploadValuesCompleted( e );\n      \n      // Here you can perform any post event actions...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OnWriteStreamClosed_System_Net_WriteStreamClosedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OnWriteStreamClosed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnWriteStreamClosed(WriteStreamClosedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_WriteStreamClosed\" data-linktype=\"relative-path\">WriteStreamClosed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnWriteStreamClosed (System.Net.WriteStreamClosedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a> object containing event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenRead_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenRead(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenRead (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI specified as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> from which to download data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OpenRead method creates a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to read the contents of the resource specified by the <code>address</code> parameter. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example opens the resource identified by <code>uriString</code> and displays the results on the system console. Note that the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> returned by OpenRead is closed when the data has been read.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebClient_OpenRead#1\">      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      // Download home page data.\n      Console::WriteLine( &quot;Accessing {0} ...&quot;, uriString );\n      // Open a stream to point to the data stream coming from the Web resource.\n      Stream^ myStream = myWebClient-&gt;OpenRead( uriString );\n\n      Console::WriteLine( &quot;<br>Displaying Data :<br>&quot; );\n      StreamReader^ sr = gcnew StreamReader( myStream );\n      Console::WriteLine( sr-&gt;ReadToEnd() );\n      \n      // Close the stream.\n      myStream-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_OpenRead#1\">            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            &#39; Download home page data. \n            Console.WriteLine(&quot;Accessing {0} ...&quot;, uriString)\n\n            &#39; Open a stream to point to the data stream coming from the Web resource.\n            Dim myStream As Stream = myWebClient.OpenRead(uriString)\n\n            Console.WriteLine(ControlChars.Cr + &quot;Displaying Data :&quot; + ControlChars.Cr)\n\t    Dim sr As New StreamReader(myStream)\n\t    Console.WriteLine(sr.ReadToEnd())\n\n\n            &#39; Close the stream.\n            myStream.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClient_OpenRead#1\">\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\t// Download home page data. \n\t\t\tConsole.WriteLine(&quot;Accessing {0} ...&quot;,  uriString);\t\t\t\t\t\t\n\t\t\t// Open a stream to point to the data stream coming from the Web resource.\n\t\t\tStream myStream = myWebClient.OpenRead(uriString);\n\n\t\t\tConsole.WriteLine(&quot;<br>Displaying Data :<br>&quot;);\n\t\t\tStreamReader sr = new StreamReader(myStream);\n\t\t\tConsole.WriteLine(sr.ReadToEnd());\n\n\n\t\t\t// Close the stream. \n\t\t\tmyStream.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenRead_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenRead(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream for the data downloaded from a resource with the URI specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenRead (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI specified as a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> from which to download data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a> method creates a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to read the contents of the resource specified by the <code>address</code> parameter. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> <strong>Note</strong> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenReadAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenReadAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenReadAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenReadAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> This method does not block the calling thread while the stream is opening. To block while waiting for the stream, use the OpenReadAsync method.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenReadAsync_System_Uri_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenReadAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenReadAsync(Uri,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream containing the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenReadAsync (Uri address, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to retrieve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadCompleted\" data-linktype=\"relative-path\">OpenReadCompleted</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> This method does not block the calling thread while the stream is opening. To block while waiting for the stream, use the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenRead_\" data-linktype=\"relative-path\">OpenRead</a> method.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenReadTaskAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenReadTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenReadTaskAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a readable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenReadTaskAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenReadTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenReadTaskAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenReadTaskAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to read data from a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and address is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while downloading the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a readable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to access the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested resource. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not <code>null</code>, it is appended to <code>address</code>.  </p>\n<p> This method uses the RETR command to download an FTP resource. For an HTTP resource, the GET method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWrite_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWrite(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenWrite (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OpenWrite method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads data from the command line and uses OpenWrite to obtain a stream for writing the data. Note that the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> returned by OpenWrite is closed after the data is sent.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebClient_OpenWrite2#1\">      String^ uriString;\n      Console::Write( &quot;<br>Please enter the URI to post data to: &quot; );\n      uriString = Console::ReadLine();\n      Console::WriteLine( &quot;<br>Please enter the data to be posted to the URI {0}:&quot;, uriString );\n      String^ postData = Console::ReadLine();\n      // Apply Ascii Encoding to obtain an array of bytes.\n      array&lt;Byte&gt;^ postArray = Encoding::ASCII-&gt;GetBytes( postData );\n      \n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      \n      // postStream implicitly sets HTTP POST as the request method.\n      Console::WriteLine( &quot;Uploading to {0} ...&quot;, uriString );\n      Stream^ postStream = myWebClient-&gt;OpenWrite( uriString );\n\n      postStream-&gt;Write( postArray, 0, postArray-&gt;Length );\n      \n      // Close the stream and release resources.\n      postStream-&gt;Close();\n\n      Console::WriteLine( &quot;<br>Successfully posted the data.&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClient_OpenWrite2#1\">\t\t\tstring uriString;\n\t\t\tConsole.Write(&quot;<br>Please enter the URI to post data to : &quot;);\n\t\t\turiString = Console.ReadLine();\n\t\t\tConsole.WriteLine(&quot;<br>Please enter the data to be posted to the URI {0}:&quot;,uriString);\n\t\t\tstring postData = Console.ReadLine();\n\t\t\t// Apply Ascii Encoding to obtain an array of bytes. \n\t\t\tbyte[] postArray = Encoding.ASCII.GetBytes(postData);\n\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\n\t\t\t// postStream implicitly sets HTTP POST as the request method.\n\t\t\tConsole.WriteLine(&quot;Uploading to {0} ...&quot;,  uriString);\t\t\t\t\t\t\tStream postStream = myWebClient.OpenWrite(uriString);\n\n\t\t\tpostStream.Write(postArray,0,postArray.Length);\n\n\t\t\t// Close the stream and release resources.\n\t\t\tpostStream.Close();\n\n\t\t\tConsole.WriteLine(&quot;<br>Successfully posted the data.&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_OpenWrite2#1\">            Dim uriString As String\n            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to : &quot;)\n            uriString = Console.ReadLine()\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the data to be posted to the URI {0}:&quot;, uriString)\n\n            Dim postData As String = Console.ReadLine()\n\n            &#39; Apply ASCII Encoding to obtain an array of bytes .\n            Dim postArray As Byte() = Encoding.ASCII.GetBytes(postData)\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            Console.WriteLine(&quot;Uploading to {0} ...&quot;, uriString)\n\n            &#39; OpenWrite implicitly sets HTTP POST as the request method.\n            Dim postStream As Stream = myWebClient.OpenWrite(uriString)\n            postStream.Write(postArray, 0, postArray.Length)\n\n            &#39; Close the stream and release resources.\n            postStream.Close()\n\n            Console.WriteLine(ControlChars.Cr + &quot;Successfully posted the data.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWrite_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWrite(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenWrite (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWrite_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWrite(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenWrite (string address, string method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. The underlying request is made with the method specified in the <code>method</code> parameter. The data is sent to the server when you close the stream. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not specify an absolute address, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads data from the command line and uses <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> to obtain a stream used to write the data. Note that the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> returned by <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> must be closed to send the data.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_OpenWrite#1\">\t\t\tstring uriString;\n\t\t\tConsole.Write(&quot;<br>Please enter the URI to post data to : &quot;);\n\t\t\turiString = Console.ReadLine();\n\t\t\tConsole.WriteLine(&quot;<br>Please enter the data to be posted to the URI {0}:&quot;,uriString);\n\t\t\tstring postData = Console.ReadLine();\n\t\t\t// Apply ASCII encoding to obtain an array of bytes .\n\t\t\tbyte[] postArray = Encoding.ASCII.GetBytes(postData);\n\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\n\t\t\tConsole.WriteLine(&quot;Uploading to {0} ...&quot;,  uriString);\t\t\t\t\t\t\n\t\t\tStream postStream = myWebClient.OpenWrite(uriString,&quot;POST&quot;);\n\t\t\tpostStream.Write(postArray,0,postArray.Length);\n\n\t\t\t// Close the stream and release resources.\n\t\t\tpostStream.Close();\n\t\t\tConsole.WriteLine(&quot;<br>Successfully posted the data.&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_OpenWrite#1\">            Dim uriString As String\n            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to : &quot;)\n            uriString = Console.ReadLine()\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the data to be posted to the URI {0}:&quot;, uriString)\n            Dim postData As String = Console.ReadLine()\n            &#39; Apply ASCII encoding to obtain an array of bytes.\n            Dim postArray As Byte() = Encoding.ASCII.GetBytes(postData)\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            Console.WriteLine(&quot;Uploading to {0} ...&quot;, uriString)\n            Dim postStream As Stream = myWebClient.OpenWrite(uriString, &quot;POST&quot;)\n\n            postStream.Write(postArray, 0, postArray.Length)\n\n            &#39; Close the stream and release resources.\n            postStream.Close()\n\n            Console.WriteLine(ControlChars.Cr + &quot;Successfully posted the data.&quot;)\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_OpenWrite#1\">      String^ uriString;\n      Console::Write( &quot;<br>Please enter the URI to post data to: &quot; );\n      uriString = Console::ReadLine();\n      Console::WriteLine( &quot;<br>Please enter the data to be posted to the URI {0}:&quot;, uriString );\n      String^ postData = Console::ReadLine();\n      // Apply ASCII encoding to obtain an array of bytes .\n      array&lt;Byte&gt;^ postArray = Encoding::ASCII-&gt;GetBytes( postData );\n      \n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n\n      Console::WriteLine( &quot;Uploading to {0} ...&quot;, uriString );\n      Stream^ postStream = myWebClient-&gt;OpenWrite( uriString, &quot;POST&quot; );\n      postStream-&gt;Write( postArray, 0, postArray-&gt;Length );\n      \n      // Close the stream and release resources.\n      postStream-&gt;Close();\n      Console::WriteLine( &quot;<br>Successfully posted the data.&quot; );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWrite_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWrite(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource, by using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OpenWrite (Uri address, string method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> method returns a writable stream that is used to send data to a resource. This method blocks while opening the stream. To continue executing while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenWriteAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. When you close the stream, the thread blocks until the request is sent to <code>address</code> and a response is received.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenWriteAsync (Uri address, string method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. When you close the stream, the thread blocks until the request is sent to <code>address</code> and a response is received.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteAsync_System_Uri_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteAsync(Uri,String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource, using the specified method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OpenWriteAsync (Uri address, string method, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves a writable stream that is used to send data to a resource. The stream is retrieved asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the stream is available, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteCompleted\" data-linktype=\"relative-path\">OpenWriteCompleted</a> event. The contents of the stream are sent to the server when you close the stream.  </p>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> This method does not block the calling thread while the stream is being opened. To block while waiting for the stream, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWrite_\" data-linktype=\"relative-path\">OpenWrite</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteTaskAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteTaskAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteTaskAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (string address, string method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteTaskAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_OpenWriteTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteTaskAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenWriteTaskAsync (Uri address, string method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write data to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a writable stream to the data resource has been opened. This method does not block the calling thread while the stream is opening.  </p>\n<p> This method retrieves a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance used to write data to the resource specified by the <code>address</code> parameter. The stream is obtained using thread resources that are automatically allocated from the thread pool.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must call <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a> when you are finished with the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to avoid running out of system resources.  </p>\n</div>\n<p> If the <code>method</code> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadData_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadData(String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadData (string address, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while sending the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UploadData method sends a data buffer to a resource.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used. If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The UploadData method sends the content of <code>data</code> to the server without encoding it. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example converts a string entered from the console to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array and posts the array to the specified server using UploadData. Any response from the server is displayed to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UpLoadData2#1\">\t\t\tConsole.Write(&quot;<br>Please enter the URI to post data to : &quot;);\n\t\t\tstring uriString = Console.ReadLine();\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\tConsole.WriteLine(&quot;<br>Please enter the data to be posted to the URI {0}:&quot;,uriString);\n\t\t\tstring postData = Console.ReadLine();\n\t\t\t// Apply ASCII Encoding to obtain the string as a byte array.\n\t\t\tbyte[] postArray = Encoding.ASCII.GetBytes(postData);\n\t\t\tConsole.WriteLine(&quot;Uploading to {0} ...&quot;,  uriString);\t\t\t\t\t\t\t\n         myWebClient.Headers.Add(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);\n\t\t\n\t\t\t//UploadData implicitly sets HTTP POST as the request method.\n\t\t\tbyte[] responseArray = myWebClient.UploadData(uriString,postArray);\n\n\t\t\t// Decode and display the response.\n\t\t\tConsole.WriteLine(&quot;<br>Response received was :{0}&quot;, Encoding.ASCII.GetString(responseArray));\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UpLoadData2#1\">      Console::Write( &quot;<br>Please enter the URI to post data to: &quot; );\n      String^ uriString = Console::ReadLine();\n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      Console::WriteLine( &quot;<br>Please enter the data to be posted to the URI {0}:&quot;, uriString );\n      String^ postData = Console::ReadLine();\n      // Apply ASCII Encoding to obtain the String* as a Byte array.\n      array&lt;Byte&gt;^ postArray = Encoding::ASCII-&gt;GetBytes( postData );\n      Console::WriteLine( &quot;Uploading to {0} ...&quot;, uriString );\n      myWebClient-&gt;Headers-&gt;Add( &quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot; );\n      \n      //UploadData implicitly sets HTTP POST as the request method.\n      array&lt;Byte&gt;^responseArray = myWebClient-&gt;UploadData( uriString, postArray );\n      \n      // Decode and display the response.\n      Console::WriteLine( &quot;<br>Response received was: {0}&quot;, Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UpLoadData2#1\">            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to : &quot;)\n            Dim uriString As String = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the data to be posted to the URI {0}:&quot;, uriString)\n            Dim postData As String = Console.ReadLine()\n            &#39; Apply ASCII Encoding to obtain the string as a byte array.\n            Dim postArray As Byte() = Encoding.ASCII.GetBytes(postData)\n            Console.WriteLine(&quot;Uploading to {0} ...&quot;, uriString)\n            myWebClient.Headers.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;)\n\n            &#39; UploadData implicitly sets HTTP POST as the request method.\n            Dim responseArray As Byte() = myWebClient.UploadData(uriString, postArray)\n\n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received was :{0}&quot;, Encoding.ASCII.GetString(responseArray))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadData_System_Uri_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadData(Uri,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to a resource identified by a URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadData (Uri address, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while sending the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used. If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadData_System_String_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadData(String,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadData (string address, string method, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource using the HTTP method specified in the <code>method</code> parameter, and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example converts a string entered from the console into a byte array and posts the array to the specified server using <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a>. Any response from the server is displayed to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UpLoadData_Headers#2\">     \tstring uriString;\n\t\t\tConsole.Write(&quot;<br>Please enter the URI to post data to {for example, http://www.contoso.com} : &quot;);\n\t\t\turiString = Console.ReadLine();\n\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\t\t\tConsole.WriteLine(&quot;<br>Please enter the data to be posted to the URI {0}:&quot;,uriString);\n\t\t\tstring postData = Console.ReadLine();\n\t\t\tmyWebClient.Headers.Add(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;);\n\n      // Display the headers in the request\n\t\t\tConsole.Write(&quot;Resulting Request Headers: &quot;);\n\t\t\tConsole.WriteLine(myWebClient.Headers.ToString());\n\t\t\t\n\t\t\t// Apply ASCII Encoding to obtain the string as a byte array.\n     \n\t\t\tbyte[] byteArray = Encoding.ASCII.GetBytes(postData);\n\t\t\tConsole.WriteLine(&quot;Uploading to {0} ...&quot;,  uriString);\t\t\t\t\t\t\n\t\t\t// Upload the input string using the HTTP 1.0 POST method.\n\t\t\tbyte[] responseArray = myWebClient.UploadData(uriString,&quot;POST&quot;,byteArray);\n\t\t\t\n\t\t\t// Decode and display the response.\n\t\t\tConsole.WriteLine(&quot;<br>Response received was {0}&quot;,\n\t        Encoding.ASCII.GetString(responseArray));\n\t\t\t\t      \n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UpLoadData_Headers#2\">            Dim uriString As String\n            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to{for example, http://www.contoso.com} : &quot;)\n            uriString = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            Console.WriteLine(ControlChars.Cr + &quot;Please enter the data to be posted to the URI {0}:&quot;, uriString)\n            Dim postData As String = Console.ReadLine()\n            myWebClient.Headers.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;)\n            \n            &#39; Display the headers in the request\n            Console.Write(&quot;Resulting Request Headers: &quot;)\n            Console.Writeline(myWebClient.Headers.ToString())\n\n            &#39; Apply ASCII Encoding to obtain the string as a byte array.\n            Dim byteArray As Byte() = Encoding.ASCII.GetBytes(postData)\n            Console.WriteLine(&quot;Uploading to {0} ...&quot;, uriString)\n            &#39; Upload the input string using the HTTP 1.0 POST method.\n            Dim responseArray As Byte() = myWebClient.UploadData(uriString, &quot;POST&quot;, byteArray)\n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received was :{0}&quot;, Encoding.ASCII.GetString(responseArray))\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UpLoadData_Headers#2\">      String^ uriString;\n      Console::Write( &quot;<br>Please enter the URI to post data to {for example, http://www.contoso.com}: &quot; );\n      uriString = Console::ReadLine();\n\n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      Console::WriteLine( &quot;<br>Please enter the data to be posted to the URI {0}:&quot;, uriString );\n      String^ postData = Console::ReadLine();\n      myWebClient-&gt;Headers-&gt;Add( &quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot; );\n\n      // Displays the headers in the request\n      Console::Write( &quot;Resulting Request Headers: &quot;);\n      Console::WriteLine(myWebClient-&gt;Headers);\n      \n      // Apply ASCII Encoding to obtain the String^ as a Byte array.\n      array&lt;Byte&gt;^ byteArray = Encoding::ASCII-&gt;GetBytes( postData );\n      Console::WriteLine( &quot;Uploading to {0} ...&quot;, uriString );\n      // Upload the input String* using the HTTP 1.0 POST method.\n      array&lt;Byte&gt;^responseArray = myWebClient-&gt;UploadData( uriString, &quot;POST&quot;, byteArray );\n      // Decode and display the response.\n      Console::WriteLine( &quot;<br>Response received was {0}&quot;,\n         Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadData_System_Uri_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadData(Uri,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadData (Uri address, string method, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the data to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the data.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends a data buffer to a resource using the HTTP method specified in the <code>method</code> parameter, and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> method sends the content of <code>data</code> to the server without encoding it.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataAsync(Uri,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to a resource identified by a URI, using the POST method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadDataAsync (Uri address, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataAsync(Uri,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to a resource identified by a URI, using the specified method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadDataAsync (Uri address, string method, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataAsync_System_Uri_System_String_System_Byte___System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataAsync(Uri,String,Byte[],Object)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer to a resource identified by a URI, using the specified method and identifying token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadDataAsync (Uri address, string method, byte[] data, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded. To receive notification when the data upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataCompleted\" data-linktype=\"relative-path\">UploadDataCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the data is being sent. To send data and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadData_\" data-linktype=\"relative-path\">UploadData</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataTaskAsync(String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataTaskAsync(Uri,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_String_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataTaskAsync(String,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (string address, string method, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataTaskAsync_System_Uri_System_String_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadDataTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataTaskAsync(Uri,String,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Uploads a data buffer that contains a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the URI specified as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadDataTaskAsync (Uri address, string method, byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data buffer to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the data buffer was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the a data buffer has been uploaded to the resource.  </p>\n<p> This method sends a data buffer to a resource. The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool. The data is not encoded.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFile_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFile(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadFile (string address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource. For example, &quot;samplefile.txt&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UploadFile method sends a local file to a resource. This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <code>POST</code> method is defined by HTTP. If the underlying request does not use HTTP and <code>POST</code> is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uploads the specified file to the specified URI using UploadFile. Any response returned by the server is displayed on the console.  </p>\n<pre><code class=\"lang-vb\" name=\"WebClient_UpLoadFile#1\">\n            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to : &quot;)\n            Dim uriString As String = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            Console.WriteLine(ControlChars.Cr &amp; _\n                &quot;Please enter the fully qualified path of the file to be uploaded to the URI&quot;)\n\n            Dim fileName As String = Console.ReadLine()\n            Console.WriteLine(&quot;Uploading {0} to {1} ...&quot;, fileName, uriString)\n\n            &#39; Upload the file to the URI.\n            &#39; The &#39;UploadFile(uriString,fileName)&#39; method implicitly uses HTTP POST method. \n            Dim responseArray As Byte() = myWebClient.UploadFile(uriString, fileName)\n\n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr &amp; &quot;Response Received.The contents of the file uploaded are: &quot; &amp; _\n                ControlChars.Cr &amp; &quot;{0}&quot;, System.Text.Encoding.ASCII.GetString(responseArray))\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UpLoadFile#1\">            Console::Write( &quot;<br>Please enter the URI to post data to : &quot; );\n            String^ uriString = Console::ReadLine();\n            \n            // Create a new WebClient instance.\n            WebClient^ myWebClient = gcnew WebClient;\n            Console::WriteLine( &quot;<br>Please enter the fully qualified path of the file to be uploaded to the URI&quot; );\n            String^ fileName = Console::ReadLine();\n            Console::WriteLine( &quot;Uploading {0} to {1} ...&quot;, fileName, uriString );\n            \n            // Upload the file to the URI.\n            // The &#39;UploadFile(uriString, fileName)&#39; method implicitly uses HTTP POST method.\n            array&lt;Byte&gt;^responseArray = myWebClient-&gt;UploadFile( uriString, fileName );\n            \n            // Decode and display the response.\n            Console::WriteLine( &quot;<br>Response Received::The contents of the file uploaded are: <br> {0}&quot;, \n                System::Text::Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebClient_UpLoadFile#1\">            Console.Write(&quot;<br>Please enter the URI to post data to : &quot;);\n            String uriString = Console.ReadLine();\n\n            // Create a new WebClient instance.\n            WebClient myWebClient = new WebClient();\n\n            Console.WriteLine(&quot;<br>Please enter the fully qualified path of the file to be uploaded to the URI&quot;);\n            string fileName = Console.ReadLine();\n            Console.WriteLine(&quot;Uploading {0} to {1} ...&quot;,fileName,uriString);\n\n            // Upload the file to the URI.\n            // The &#39;UploadFile(uriString,fileName)&#39; method implicitly uses HTTP POST method.\n            byte[] responseArray = myWebClient.UploadFile(uriString,fileName);\n\n            // Decode and display the response.\n            Console.WriteLine(&quot;<br>Response Received.The contents of the file uploaded are:<br>{0}&quot;, \n                System.Text.Encoding.ASCII.GetString(responseArray));\n</code></pre><p> The following code example shows an ASP.NET page that can accept posted files and is suitable for use with the UploadFile method. The page must reside on a Web server. Its address provides the value for the <code>address</code> parameter of the UploadFile method.  </p>\n<pre><code class=\"lang-vb\" name=\"NCLWebClientAsp#1\">&lt;%@ Import Namespace=&quot;System&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot;%&gt;\n&lt;%@ Import NameSpace=&quot;System.Web&quot;%&gt;\n\n&lt;Script language=&quot;VB&quot; runat=server&gt;\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n        Dim f As String\n        Dim file\n        For Each f In Request.Files.AllKeys\n            file = Request.Files(f)\n            file.SaveAs(&quot;c:\\inetpub&nbsp;&nbsp;&nbsp;&nbsp;est\\UploadedFiles\\&quot; &amp; file.FileName)\n        Next f\n        \n    End Sub\n\n&lt;/Script&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;p&gt; Upload complete. &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsp#1\">&lt;%@ Import Namespace=&quot;System&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot;%&gt;\n&lt;%@ Import NameSpace=&quot;System.Web&quot;%&gt;\n\n&lt;Script language=&quot;C#&quot; runat=server&gt;\nvoid Page_Load(object sender, EventArgs e) {\n\t\n\tforeach(string f in Request.Files.AllKeys) {\n\t\tHttpPostedFile file = Request.Files[f];\n\t\tfile.SaveAs(&quot;c:\\\\inetpub\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\UploadedFiles\\\\&quot; + file.FileName);\n\t}\t\n}\n\n&lt;/Script&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;p&gt; Upload complete.  &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFile_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFile(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource with the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadFile (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For example, ftp://localhost/samplefile.txt.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource. For example, &quot;samplefile.txt&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource. This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<p> This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <code>POST</code> method is defined by HTTP. If the underlying request does not use HTTP and <code>POST</code> is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFile_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFile(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadFile (string address, string method, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the file to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When address specifies an HTTP resource, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource using the HTTP method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server or the <code>address</code> resource, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uploads the specified file to the specified URI using <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a>. Any response returned by the server is displayed on the console.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UpLoadFile2#1\">            Console.Write(&quot;<br>Please enter the URL to post data to : &quot;);\n            String uriString = Console.ReadLine();\n\n            // Create a new WebClient instance.\n            WebClient myWebClient = new WebClient();\n\n            Console.WriteLine(&quot;<br>Please enter the fully qualified path of the file to be uploaded to the URL&quot;);\n            string fileName = Console.ReadLine();\n\n            Console.WriteLine(&quot;Uploading {0} to {1} ...&quot;,fileName,uriString);\t\t\t\t\t\t\n            // Upload the file to the URL using the HTTP 1.0 POST.\n            byte[] responseArray = myWebClient.UploadFile(uriString,&quot;POST&quot;,fileName);\n\n            // Decode and display the response.\n            Console.WriteLine(&quot;<br>Response Received.The contents of the file uploaded are:<br>{0}&quot;,\n                System.Text.Encoding.ASCII.GetString(responseArray));\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UpLoadFile2#1\">            Console::Write( &quot;<br>Please enter the URL to post data to : &quot; );\n            String^ uriString = Console::ReadLine();\n\n            // Create a new WebClient instance.\n            WebClient^ myWebClient = gcnew WebClient;\n            Console::WriteLine\n                (&quot;<br>Please enter the fully qualified path of the file to be uploaded to the URL&quot; );\n            String^ fileName = Console::ReadLine();\n            Console::WriteLine( &quot;Uploading {0} to {1} ...&quot;, fileName, uriString );\n\n            // Upload the file to the URL using the HTTP 1.0 POST.\n            array&lt;Byte&gt;^responseArray = myWebClient-&gt;UploadFile( uriString, &quot;POST&quot;, fileName );\n\n            // Decode and display the response.\n            Console::WriteLine( &quot;<br>Response Received::The contents of the file uploaded are: <br> {0}&quot;, \n                System::Text::Encoding::ASCII-&gt;GetString( responseArray ));\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UpLoadFile2#1\">\n            Console.Write(ControlChars.Cr + &quot;Please enter the URL to post data to : &quot;)\n            Dim uriString As String = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            Console.WriteLine(ControlChars.Cr &amp; _\n                &quot;Please enter the fully qualified path of the file to be uploaded to the URL&quot;)\n\n            Dim fileName As String = Console.ReadLine()\n            Console.WriteLine(&quot;Uploading {0} to {1} ...&quot;, fileName, uriString)\n\n            &#39; Upload the file to the Url using the HTTP 1.0 POST.\n            Dim responseArray As Byte() = myWebClient.UploadFile(uriString, &quot;POST&quot;, fileName)\n\n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response Received.The contents of the file uploaded are: &quot; &amp; _\n                ControlChars.Cr &amp; &quot;{0}&quot;, System.Text.Encoding.ASCII.GetString(responseArray))\n</code></pre><p> The following code example shows an ASP.NET page that can accept posted files and is suitable for use with the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method. The page must reside on a Web server. Its address provides the value for the <code>address</code> parameter of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"NCLWebClientAsp#1\">&lt;%@ Import Namespace=&quot;System&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot;%&gt;\n&lt;%@ Import NameSpace=&quot;System.Web&quot;%&gt;\n\n&lt;Script language=&quot;VB&quot; runat=server&gt;\n    Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n        Dim f As String\n        Dim file\n        For Each f In Request.Files.AllKeys\n            file = Request.Files(f)\n            file.SaveAs(&quot;c:\\inetpub&nbsp;&nbsp;&nbsp;&nbsp;est\\UploadedFiles\\&quot; &amp; file.FileName)\n        Next f\n        \n    End Sub\n\n&lt;/Script&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;p&gt; Upload complete. &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsp#1\">&lt;%@ Import Namespace=&quot;System&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.Net&quot;%&gt;\n&lt;%@ Import NameSpace=&quot;System.Web&quot;%&gt;\n\n&lt;Script language=&quot;C#&quot; runat=server&gt;\nvoid Page_Load(object sender, EventArgs e) {\n\t\n\tforeach(string f in Request.Files.AllKeys) {\n\t\tHttpPostedFile file = Request.Files[f];\n\t\tfile.SaveAs(&quot;c:\\\\inetpub\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\UploadedFiles\\\\&quot; + file.FileName);\n\t}\t\n}\n\n&lt;/Script&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;p&gt; Upload complete.  &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFile_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFile(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadFile (Uri address, string method, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the file to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid characters, or does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while uploading the file.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When address specifies an HTTP resource, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> method sends a local file to a resource using the HTTP method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the file. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server or the <code>address</code> resource, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadFileAsync (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileAsync(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadFileAsync (Uri address, string method, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileAsync_System_Uri_System_String_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileAsync(Uri,String,String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to the specified resource, using the POST method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadFileAsync (Uri address, string method, string fileName, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to send to the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the file upload completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileCompleted\" data-linktype=\"relative-path\">UploadFileCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the file is being sent. To send a file and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFile_\" data-linktype=\"relative-path\">UploadFile</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileTaskAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileTaskAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileTaskAsync(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (string address, string method, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> BY default, this method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileTaskAsync_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadFileTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileTaskAsync(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified local file to a resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadFileTaskAsync (Uri address, string method, string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the file. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the data to the resource. If <code>null</code>, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local file to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response received from the resource when the file was uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>fileName</code> is <code>null</code>, is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, contains invalid character, or the specified path to the file does not exist.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header begins with <code>multipart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the file has been uploaded to the resource. The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> BY default, this method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadString_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadString(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UploadString (string address, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#1\">void UploadString( String^ address )\n{\n   String^ data = &quot;Time = 12:00am temperature = 50&quot;;\n   WebClient^ client = gcnew WebClient;\n   \n   // Optionally specify an encoding for uploading and downloading strings.\n   client-&gt;Encoding = System::Text::Encoding::UTF8;\n   \n   // Upload the data.\n   String^ reply = client-&gt;UploadString( address, data );\n   \n   // Disply the server&#39;s response.\n   Console::WriteLine( reply );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#1\">    public static void UploadString (string address)\n    {\n        string data = &quot;Time = 12:00am temperature = 50&quot;;\n        WebClient client = new WebClient ();\n        // Optionally specify an encoding for uploading and downloading strings.\n        client.Encoding = System.Text.Encoding.UTF8;\n        // Upload the data.\n        string reply = client.UploadString (address, data);\n        // Disply the server&#39;s response.\n        Console.WriteLine (reply);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#1\">\t\tPublic Shared Sub UploadString(ByVal address As String)\n\n\t\t\tDim data As String = &quot;Time = 12:00am temperature = 50&quot;\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\t&#39;  Optionally specify an encoding for uploading and downloading strings.\n\t\t\tclient.Encoding = System.Text.Encoding.UTF8\n\t\t\t&#39;  Upload the data.\n\t\t\tDim reply As String = client.UploadString(address, data)\n\t\t\t&#39;  Disply the server&#39;s response.\n\t\t\tConsole.WriteLine(reply)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadString_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadString(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource, using the POST method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UploadString (Uri address, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;), and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadString_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadString(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UploadString (string address, string method, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#2\">void PostString( String^ address )\n{\n   String^ data = &quot;Time = 12:00am temperature = 50&quot;;\n   String^ method = &quot;POST&quot;;\n   WebClient^ client = gcnew WebClient;\n   String^ reply = client-&gt;UploadString( address, method, data );\n   Console::WriteLine( reply );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#2\">    public static void PostString (string address)\n    {\n        string data = &quot;Time = 12:00am temperature = 50&quot;;\n        string method = &quot;POST&quot;;\n        WebClient client = new WebClient ();\n        string reply = client.UploadString (address, method, data);\n\n        Console.WriteLine (reply);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#2\">\t\tPublic Shared Sub PostString(ByVal address As String)\n\n\t\t\tDim data As String = &quot;Time = 12:00am temperature = 50&quot;\n\t\t\tDim method As String = &quot;POST&quot;\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\tDim reply As String = client.UploadString(address, method, data)\n\n\t\t\tConsole.WriteLine(reply)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadString_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadString(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UploadString (Uri address, string method, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted. To send a string and continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadStringAsync (Uri address, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringAsync(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadStringAsync (Uri address, string method, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringAsync_System_Uri_System_String_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringAsync(Uri,String,String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadStringAsync (Uri address, string method, string data, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringTaskAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringTaskAsync(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringTaskAsync(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (string address, string method, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringTaskAsync_System_Uri_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadStringTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringTaskAsync(Uri,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; UploadStringTaskAsync (Uri address, string method, string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the string. For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to be uploaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the string has been uploaded to the resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. This method blocks while the string is transmitted.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValues_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValues(String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadValues (string address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UploadValues method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, the UploadValues method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gathers information from the user (name, age, and address) and posts the values to the server using UploadValues. Any response from the server is displayed on the console.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UploadValues#1\">            Console.Write(&quot;<br>Please enter the URI to post data to : &quot;);\n            string uriString = Console.ReadLine();\n\n            // Create a new WebClient instance.\n            WebClient myWebClient = new WebClient();\n\n            // Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n            NameValueCollection myNameValueCollection = new NameValueCollection();\n            \n            Console.WriteLine(&quot;Please enter the following parameters to be posted to the URL&quot;);\n            Console.Write(&quot;Name:&quot;);\n            string name = Console.ReadLine();\n\n            Console.Write(&quot;Age:&quot;);\n            string age = Console.ReadLine();\n\n            Console.Write(&quot;Address:&quot;);\n            string address = Console.ReadLine();\n\n            // Add necessary parameter/value pairs to the name/value container.\n            myNameValueCollection.Add(&quot;Name&quot;,name);            \n            myNameValueCollection.Add(&quot;Address&quot;,address);\n            myNameValueCollection.Add(&quot;Age&quot;,age);\n\n            Console.WriteLine(&quot;<br>Uploading to {0} ...&quot;,  uriString);\n            // &#39;The Upload(String,NameValueCollection)&#39; implicitly method sets HTTP POST as the request method.            \n            byte[] responseArray = myWebClient.UploadValues(uriString,myNameValueCollection);\n            \n            // Decode and display the response.\n            Console.WriteLine(&quot;<br>Response received was :<br>{0}&quot;,Encoding.ASCII.GetString(responseArray));\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UploadValues#1\">      Console::Write( &quot;<br>Please enter the URI to post data to: &quot; );\n      String^ uriString = Console::ReadLine();\n      \n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      \n      // Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n      NameValueCollection^ myNameValueCollection = gcnew NameValueCollection;\n\n      Console::WriteLine( &quot;Please enter the following parameters to be posted to the URL&quot; );\n      Console::Write( &quot;Name: &quot; );\n      String^ name = Console::ReadLine();\n\n      Console::Write( &quot;Age: &quot; );\n      String^ age = Console::ReadLine();\n\n      Console::Write( &quot;Address: &quot; );\n      String^ address = Console::ReadLine();\n      \n      // Add necessary parameter/value pairs to the name/value container.\n      myNameValueCollection-&gt;Add( &quot;Name&quot;, name );\n      myNameValueCollection-&gt;Add( &quot;Address&quot;, address );\n      myNameValueCollection-&gt;Add( &quot;Age&quot;, age );\n\n      Console::WriteLine( &quot;<br>Uploading to {0} ...&quot;, uriString );\n      // &#39;The Upload(String, NameValueCollection)&#39; implicitly method sets HTTP POST as the request method.\n      array&lt;Byte&gt;^ responseArray = myWebClient-&gt;UploadValues( uriString, myNameValueCollection );\n      \n      // Decode and display the response.\n      Console::WriteLine( &quot;<br>Response received was :<br> {0}&quot;, Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UploadValues#1\">            Console.Write(ControlChars.Cr + &quot;Please enter the URI to post data to : &quot;)\n            Dim uriString As String = Console.ReadLine()\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n            &#39; Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n            Dim myNameValueCollection As New NameValueCollection()\n            Console.WriteLine(&quot;Please enter the following parameters to be posted to the URL:&quot;)\n            Console.Write(&quot;Name:&quot;)\n            Dim name As String = Console.ReadLine()\n\n            Console.Write(&quot;Age:&quot;)\n            Dim age As String = Console.ReadLine()\n\n            Console.Write(&quot;Address:&quot;)\n            Dim address As String = Console.ReadLine()\n\n            &#39; Add necessary parameter/value pairs to the name/value container.\n            myNameValueCollection.Add(&quot;Name&quot;, name)\n            myNameValueCollection.Add(&quot;Address&quot;, address)\n            myNameValueCollection.Add(&quot;Age&quot;, age)\n\n            Console.WriteLine(ControlChars.Cr + &quot;Uploading to {0} ...&quot;, uriString)\n            &#39; The Upload(String,NameValueCollection)&#39; method implicitly sets the HTTP POST as the request method.\t\t\t\n            Dim responseArray As Byte() = myWebClient.UploadValues(uriString, myNameValueCollection)\n            \n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received was :&quot; + ControlChars.Cr + &quot;{0}&quot;, Encoding.ASCII.GetString(responseArray))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValues_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValues(Uri,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadValues (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValues_System_String_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValues(String,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadValues (string address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a resource using the method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the <code>Content-type</code> header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to <code>application/x-www-form-urlencoded</code>.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gathers information from the user (name, age, and address) and posts the values to the server using <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a>. Any response from the server is displayed on the console.  </p>\n<pre><code class=\"lang-cs\" name=\"WebClient_UploadValues2#1\">\t\t\tConsole.Write(&quot;<br>Please enter the URL to post data to : &quot;);\n\t\t\tstring uriString = Console.ReadLine();\n\n\t\t\t// Create a new WebClient instance.\n\t\t\tWebClient myWebClient = new WebClient();\n\n\t\t\t// Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n\t\t\tNameValueCollection myNameValueCollection = new NameValueCollection();\n\t\t\t\n\t\t\tConsole.WriteLine(&quot;Please enter the following parameters to be posted to the URI&quot;);\n\t\t\tConsole.Write(&quot;Name:&quot;);\n\t\t\tstring name = Console.ReadLine();\n\n\t\t\tConsole.Write(&quot;Age:&quot;);\n\t\t\tstring age = Console.ReadLine();\n\n\t\t\tConsole.Write(&quot;Address:&quot;);\n\t\t\tstring address = Console.ReadLine();\n\n\t\t\t// Add necessary parameter/value pairs to the name/value container.\n\t\t\tmyNameValueCollection.Add(&quot;Name&quot;,name);\t\t\t\n\t\t\tmyNameValueCollection.Add(&quot;Address&quot;,address);\n\t\t\tmyNameValueCollection.Add(&quot;Age&quot;,age);\n\t\t\tConsole.WriteLine(&quot;<br>Uploading to {0} ...&quot;,  uriString);\n\n\t\t\t// Upload the NameValueCollection.\n\t\t\tbyte[] responseArray = myWebClient.UploadValues(uriString,&quot;POST&quot;,myNameValueCollection);\n\t\t\t\n\t\t\t// Decode and display the response.\n\t\t\tConsole.WriteLine(&quot;<br>Response received was :<br>{0}&quot;,Encoding.ASCII.GetString(responseArray));\n</code></pre><pre><code class=\"lang-vb\" name=\"WebClient_UploadValues2#1\">            Console.Write(ControlChars.Cr + &quot;Please enter the URL to post data to : &quot;)\n            Dim uriString As String = Console.ReadLine()\n\n            &#39; Create a new WebClient instance.\n            Dim myWebClient As New WebClient()\n\n            &#39; Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n            Dim myNameValueCollection As New NameValueCollection()\n            \n            Console.WriteLine(&quot;Please enter the following parameters to be posted to the Url&quot;)\n            Console.Write(&quot;Name:&quot;)\n            Dim name As String = Console.ReadLine()\n\n            Console.Write(&quot;Age:&quot;)\n            Dim age As String = Console.ReadLine()\n\n            Console.Write(&quot;Address:&quot;)\n            Dim address As String = Console.ReadLine()\n\n            &#39; Add necessary parameter/value pairs to the name/value container.\n            myNameValueCollection.Add(&quot;Name&quot;, name)\n            myNameValueCollection.Add(&quot;Address&quot;, address)\n            myNameValueCollection.Add(&quot;Age&quot;, age)\n\n            Console.WriteLine(ControlChars.Cr + &quot;Uploading to {0} ...&quot;, uriString)\n\n            &#39; Upload the NameValueCollection.\n            Dim responseArray As Byte() = myWebClient.UploadValues(uriString, &quot;POST&quot;, myNameValueCollection)\n            \n            &#39; Decode and display the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received was :&quot; + ControlChars.Cr + &quot;{0}&quot;, Encoding.ASCII.GetString(responseArray))\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebClient_UploadValues2#1\">      Console::Write( &quot;<br>Please enter the URL to post data to: &quot; );\n      String^ uriString = Console::ReadLine();\n      \n      // Create a new WebClient instance.\n      WebClient^ myWebClient = gcnew WebClient;\n      \n      // Create a new NameValueCollection instance to hold some custom parameters to be posted to the URL.\n      NameValueCollection^ myNameValueCollection = gcnew NameValueCollection;\n\n      Console::WriteLine( &quot;Please enter the following parameters to be posted to the URI&quot; );\n      Console::Write( &quot;Name: &quot; );\n      String^ name = Console::ReadLine();\n\n      Console::Write( &quot;Age: &quot; );\n      String^ age = Console::ReadLine();\n\n      Console::Write( &quot;Address: &quot; );\n      String^ address = Console::ReadLine();\n      \n      // Add necessary parameter/value pairs to the name/value container.\n      myNameValueCollection-&gt;Add( &quot;Name&quot;, name );\n      myNameValueCollection-&gt;Add( &quot;Address&quot;, address );\n      myNameValueCollection-&gt;Add( &quot;Age&quot;, age );\n      Console::WriteLine( &quot;<br>Uploading to {0} ...&quot;, uriString );\n      \n      // Upload the NameValueCollection.\n      array&lt;Byte&gt;^ responseArray = myWebClient-&gt;UploadValues( uriString, &quot;POST&quot;, myNameValueCollection );\n      \n      // Decode and display the response.\n      Console::WriteLine( &quot;<br>Response received was :<br> {0}&quot;, Encoding::ASCII-&gt;GetString( responseArray ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValues_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValues(Uri,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] UploadValues (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the file to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the body of the response from the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>data</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to a resource using the method specified in the <code>method</code> parameter and returns any response from the server. This method blocks while uploading the data. To continue executing while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> If the <code>Content-type</code> header is <code>null</code>, the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> method sets it to <code>application/x-www-form-urlencoded</code>.  </p>\n<p> If the <code>method</code> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesAsync(Uri,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadValuesAsync (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the default method. See remarks.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a string to a resource. The string is sent asynchronously using thread resources that are automatically allocated from the thread pool. Before uploading the string, this method converts it to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array using the encoding specified in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Encoding_\" data-linktype=\"relative-path\">Encoding</a> property. To receive notification when the string upload completes, you can add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringCompleted\" data-linktype=\"relative-path\">UploadStringCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadString_\" data-linktype=\"relative-path\">UploadString</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesAsync(Uri,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends the data contained in a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the <code>address</code> resource. Use this method to send form data to a URI for processing. The data is sent using the form-urlencoded media type; the Content-Type header value must be set to &quot;application/x-www-form-urlencoded&quot;. The header is set correctly by default. The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods throw a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> if you call this method with a different Content-Type header value set in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection.  </p>\n<p> If the <code>method</code> method is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the upload operation completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not empty, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_System_Object_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesAsync(Uri,String,NameValueCollection,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method. This method does not block the calling thread, and allows the caller to pass an object to the method that is invoked when the operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UploadValuesAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection. This URI must identify a resource that can accept a request sent with the <code>method</code> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the string to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span> and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends the data contained in a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the <code>address</code> resource. Use this method to send form data to a URI for processing. The data is sent using the form-urlencoded media type; the Content-Type header value must be set to &quot;application/x-www-form-urlencoded&quot;. The header is set correctly by default. The <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods throw a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> if you call this method with a different Content-Type header value set in the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_Headers_\" data-linktype=\"relative-path\">Headers</a> collection.  </p>\n<p> If the <code>method</code> method is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> is sent asynchronously using thread resources that are automatically allocated from the thread pool. To receive notification when the upload operation completes, add an event handler to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesCompleted\" data-linktype=\"relative-path\">UploadValuesCompleted</a> event.  </p>\n<p> This method does not block the calling thread while the string is being sent. To send a string and block while waiting for the server&#39;s response, use one of the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValues_\" data-linktype=\"relative-path\">UploadValues</a> methods.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not empty, it is appended to <code>address</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesTaskAsync(String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesTaskAsync(Uri,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header value is not <code>null</code> and is not <code>application/x-www-form-urlencoded</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_String_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesTaskAsync(String,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (string address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the collection to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesTaskAsync_System_Uri_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Net_WebClient_UploadValuesTaskAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesTaskAsync(Uri,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; UploadValuesTaskAsync (Uri address, string method, System.Collections.Specialized.NameValueCollection data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI of the resource to receive the collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP method used to send the collection to the resource. If null, the default is POST for http and STOR for ftp.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to send to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation. The <span class=\"xref\">stem.Threading.Tasks.Task`1.Result*</span> property on the task object returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing the response sent by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>data</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <span class=\"xref\">stem.Net.WebClient.BaseAddress*</span>, and <code>address</code> is invalid.  </p>\n<p> -or-  </p>\n<p> <code>method</code> cannot be used to send content.  </p>\n<p> -or-  </p>\n<p> There was no response from the server hosting the resource.  </p>\n<p> -or-  </p>\n<p> An error occurred while opening the stream.  </p>\n<p> -or-  </p>\n<p> The <code>Content-type</code> header is not <code>null</code> or &quot;application/x-www-form-urlencoded&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the name/value collection has been uploaded to the resource. The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.  </p>\n<p> Asynchronous operations that have not completed can be canceled using the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_CancelAsync_\" data-linktype=\"relative-path\">CancelAsync</a> method.  </p>\n<p> If the underlying request is not understood by the server, the underlying protocol classes determine what occurs. Typically, a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown with the <a class=\"xref\" href=\"system.net.webexception#System_Net_WebException_Status_\" data-linktype=\"relative-path\">Status</a> property set to indicate the error.  </p>\n<p> If the Content-type header is <code>null</code>, this method sets it to &quot;application/x-www-form-urlencoded&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> property is not an empty string (&quot;&quot;) and <code>address</code> does not contain an absolute URI, <code>address</code> must be a relative URI that is combined with <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_BaseAddress_\" data-linktype=\"relative-path\">BaseAddress</a> to form the absolute URI of the requested data. If the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property is not an empty string, it is appended to <code>address</code>.  </p>\n<p> This method uses the STOR command to upload an FTP resource. For an HTTP resource, the POST method is used.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadDataCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadDataCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous data download operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.DownloadDataCompletedEventHandler DownloadDataCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous data download operation completes. Asynchronous data downloads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.downloaddatacompletedeventhandler\" data-linktype=\"relative-path\">DownloadDataCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloaddatacompletedeventargs\" data-linktype=\"relative-path\">DownloadDataCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#21\">// Sample call : DownLoadDataInBackground (&quot;http://www.contoso.com/GameScores.html&quot;);\nvoid DownloadDataInBackground( String^ address )\n{\n   System::Threading::AutoResetEvent^ waiter = gcnew System::Threading::AutoResetEvent( false );\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the DownloadDataCallback method gets called\n   // when the download completes.\n   client-&gt;DownloadDataCompleted += gcnew DownloadDataCompletedEventHandler( DownloadDataCallback );\n   client-&gt;DownloadDataAsync( uri, waiter );\n   \n   // Block the main application thread. Real applications\n   // can perform other tasks while waiting for the download to complete.\n   waiter-&gt;WaitOne();\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#21\">    // Sample call : DownLoadDataInBackground (&quot;http://www.contoso.com/GameScores.html&quot;);\n    public static void DownloadDataInBackground (string address)\n    {\n        System.Threading.AutoResetEvent waiter = new System.Threading.AutoResetEvent (false);\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        // Specify that the DownloadDataCallback method gets called\n        // when the download completes.\n        client.DownloadDataCompleted += new DownloadDataCompletedEventHandler (DownloadDataCallback);\n        client.DownloadDataAsync (uri, waiter);\n\n        // Block the main application thread. Real applications\n        // can perform other tasks while waiting for the download to complete.\n        waiter.WaitOne ();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#21\">\t\t&#39;  Sample call : DownLoadDataInBackground (&quot;http:&#39; www.contoso.com/GameScores.html&quot;)\n\t\tPublic Shared Sub DownloadDataInBackground(ByVal address As String)\n\n\t\t\tDim waiter As System.Threading.AutoResetEvent = New System.Threading.AutoResetEvent(False)\n\t\t\tDim client As WebClient = New WebClient()\n\n\t\t\t&#39;  Specify that the DownloadDataCallback method gets called\n\t\t\t&#39;  when the download completes.\n\t\t\tAddHandler client.DownloadDataCompleted, AddressOf DownloadDataCallback\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.DownloadDataAsync(uri, waiter)\n\n\t\t\t&#39;  Block the main application thread. Real applications\n\t\t\t&#39;  can perform other tasks while waiting for the download to complete.\n\t\t\twaiter.WaitOne()\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadFileCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadFileCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous file download operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.AsyncCompletedEventHandler DownloadFileCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous file download operation completes. Asynchronous file downloads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventhandler\" data-linktype=\"relative-path\">AsyncCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#19\">// Sample call : DownLoadFileInBackground2 (&quot;http://www.contoso.com/logs/January.txt&quot;);\nvoid DownLoadFileInBackground2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the DownloadFileCallback method gets called\n   // when the download completes.\n   client-&gt;DownloadFileCompleted += gcnew AsyncCompletedEventHandler( DownloadFileCallback2 );\n   \n   // Specify a progress notification handler.\n   client-&gt;DownloadProgressChanged += gcnew DownloadProgressChangedEventHandler( DownloadProgressCallback );\n   client-&gt;DownloadFileAsync( uri, &quot;serverdata.txt&quot; );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#19\">    // Sample call : DownLoadFileInBackground2 (&quot;http://www.contoso.com/logs/January.txt&quot;);\n    public static void DownLoadFileInBackground2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        // Specify that the DownloadFileCallback method gets called\n        // when the download completes.\n        client.DownloadFileCompleted += new AsyncCompletedEventHandler (DownloadFileCallback2);\n        // Specify a progress notification handler.\n        client.DownloadProgressChanged += new DownloadProgressChangedEventHandler(DownloadProgressCallback);\n        client.DownloadFileAsync (uri, &quot;serverdata.txt&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#19\">\t\t&#39;  Sample call : DownLoadFileInBackground2 (&quot;http:&#39; www.contoso.com/logs/January.txt&quot;)\n\t\tPublic Shared Sub DownLoadFileInBackground2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\n\t\t\t&#39;  Specify that the DownloadFileCallback method gets called\n\t\t\t&#39;  when the download completes.\n\t\t\tAddHandler client.DownloadFileCompleted, AddressOf DownloadFileCallback2\n\t\t\t&#39;  Specify a progress notification handler.\n\t\t\tAddHandler client.DownloadProgressChanged, AddressOf DownloadProgressCallback\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.DownloadFileAsync(uri, &quot;serverdata.txt&quot;)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadProgressChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadProgressChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous download operation successfully transfers some or all of the data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.DownloadProgressChangedEventHandler DownloadProgressChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous download makes progress. This event is raised when downloads are started using any of the following methods.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadDataAsync_\" data-linktype=\"relative-path\">DownloadDataAsync</a></td>\n<td>Downloads data from a resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadFileAsync_\" data-linktype=\"relative-path\">DownloadFileAsync</a></td>\n<td>Downloads data from a resource to a local file, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a></td>\n<td>Returns the data from a resource, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.net.downloadprogresschangedeventhandler\" data-linktype=\"relative-path\">DownloadProgressChangedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloadprogresschangedeventargs\" data-linktype=\"relative-path\">DownloadProgressChangedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> A passive FTP file transfer will always show a progress percentage of zero, since the server did not send the file size. To show progress, you can change the FTP connection to active by overriding the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_GetWebRequest_\" data-linktype=\"relative-path\">GetWebRequest</a> virtual method:  </p>\n</div>\n<pre><code>internal class MyWebClient:WebClient{  \n        protected override WebRequest GetWebRequest(Uri address) {  \n            FtpWebRequest req = (FtpWebRequest)base.GetWebRequest(address);  \n            req.UsePassive = false;  \n            return req;  \n        }  \n    }  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#19\">// Sample call : DownLoadFileInBackground2 (&quot;http://www.contoso.com/logs/January.txt&quot;);\nvoid DownLoadFileInBackground2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the DownloadFileCallback method gets called\n   // when the download completes.\n   client-&gt;DownloadFileCompleted += gcnew AsyncCompletedEventHandler( DownloadFileCallback2 );\n   \n   // Specify a progress notification handler.\n   client-&gt;DownloadProgressChanged += gcnew DownloadProgressChangedEventHandler( DownloadProgressCallback );\n   client-&gt;DownloadFileAsync( uri, &quot;serverdata.txt&quot; );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#19\">    // Sample call : DownLoadFileInBackground2 (&quot;http://www.contoso.com/logs/January.txt&quot;);\n    public static void DownLoadFileInBackground2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        // Specify that the DownloadFileCallback method gets called\n        // when the download completes.\n        client.DownloadFileCompleted += new AsyncCompletedEventHandler (DownloadFileCallback2);\n        // Specify a progress notification handler.\n        client.DownloadProgressChanged += new DownloadProgressChangedEventHandler(DownloadProgressCallback);\n        client.DownloadFileAsync (uri, &quot;serverdata.txt&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#19\">\t\t&#39;  Sample call : DownLoadFileInBackground2 (&quot;http:&#39; www.contoso.com/logs/January.txt&quot;)\n\t\tPublic Shared Sub DownLoadFileInBackground2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\n\t\t\t&#39;  Specify that the DownloadFileCallback method gets called\n\t\t\t&#39;  when the download completes.\n\t\t\tAddHandler client.DownloadFileCompleted, AddressOf DownloadFileCallback2\n\t\t\t&#39;  Specify a progress notification handler.\n\t\t\tAddHandler client.DownloadProgressChanged, AddressOf DownloadProgressCallback\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.DownloadFileAsync(uri, &quot;serverdata.txt&quot;)\n\t\tEnd Sub\n</code></pre><p> The following code example shows an implementation of a handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#42\">  static void UploadProgressCallback(Object^ sender, \n            UploadProgressChangedEventArgs^ e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console::WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, \n                (String ^)e-&gt;UserState, \n                e-&gt;BytesSent, \n                e-&gt;TotalBytesToSend,\n                e-&gt;ProgressPercentage);\n        }\n  static void DownloadProgressCallback(Object^ sender, \n            DownloadProgressChangedEventArgs^ e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console::WriteLine(&quot;{0}    downloaded {1} of {2} bytes. {3} % complete...&quot;, \n                (String ^)e-&gt;UserState, \n                e-&gt;BytesReceived, \n                e-&gt;TotalBytesToReceive,\n                e-&gt;ProgressPercentage);\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#42\">        private static void UploadProgressCallback(object sender, UploadProgressChangedEventArgs e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, \n                (string)e.UserState, \n                e.BytesSent, \n                e.TotalBytesToSend,\n                e.ProgressPercentage);\n        }\n        private static void DownloadProgressCallback(object sender, DownloadProgressChangedEventArgs e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    downloaded {1} of {2} bytes. {3} % complete...&quot;, \n                (string)e.UserState, \n                e.BytesReceived, \n                e.TotalBytesToReceive,\n                e.ProgressPercentage);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#42\">        Private Shared Sub UploadProgressCallback(ByVal sender As Object, ByVal e As UploadProgressChangedEventArgs)\n\n            &#39;  Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, _\n             CStr(e.UserState), e.BytesSent, e.TotalBytesToSend, e.ProgressPercentage)\n        End Sub\n        Private Shared Sub DownloadProgressCallback(ByVal sender As Object, ByVal e As DownloadProgressChangedEventArgs)\n\n            &#39;  Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;0}    downloaded 1} of 2} bytes. 3} % complete...&quot;, _\n             CStr(e.UserState), e.BytesReceived, e.TotalBytesToReceive, e.ProgressPercentage)\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_DownloadStringCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DownloadStringCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous resource-download operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.DownloadStringCompletedEventHandler DownloadStringCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous operation to download a resource as a string completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_DownloadStringAsync_\" data-linktype=\"relative-path\">DownloadStringAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.downloadstringcompletedeventhandler\" data-linktype=\"relative-path\">DownloadStringCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.downloadstringcompletedeventargs\" data-linktype=\"relative-path\">DownloadStringCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#28\">// Sample call : DownloadStringInBackground2 (&quot;http://www.contoso.com/GameScores.html&quot;);\nvoid DownloadStringInBackground2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the DownloadStringCallback2 method gets called\n   // when the download completes.\n   client-&gt;DownloadStringCompleted += gcnew DownloadStringCompletedEventHandler( DownloadStringCallback2 );\n   client-&gt;DownloadStringAsync( uri );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#28\">    // Sample call : DownloadStringInBackground2 (&quot;http://www.contoso.com/GameScores.html&quot;);\n    public static void DownloadStringInBackground2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        // Specify that the DownloadStringCallback2 method gets called\n        // when the download completes.\n        client.DownloadStringCompleted += new DownloadStringCompletedEventHandler (DownloadStringCallback2);\n        client.DownloadStringAsync (uri);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#28\">\t\t&#39;  Sample call : DownloadStringInBackground2 (&quot;http:&#39; www.contoso.com/GameScores.html&quot;)\n\t\tPublic Shared Sub DownloadStringInBackground2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\n\t\t\t&#39;  Specify that the DownloadStringCallback2 method gets called\n\t\t\t&#39;  when the download completes.\n\t\t\tAddHandler client.DownloadStringCompleted, AddressOf DownloadStringCallback2\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.DownloadStringAsync(uri)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenReadCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenReadCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous operation to open a stream containing a resource completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.OpenReadCompletedEventHandler OpenReadCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous operation to open a stream containing a resource completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenReadAsync_\" data-linktype=\"relative-path\">OpenReadAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.openreadcompletedeventhandler\" data-linktype=\"relative-path\">OpenReadCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.openreadcompletedeventargs\" data-linktype=\"relative-path\">OpenReadCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#30\">void OpenResourceForReading2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n\n   client-&gt;OpenReadCompleted += gcnew OpenReadCompletedEventHandler( OpenReadCallback2 );\n   client-&gt;OpenReadAsync( uri );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#30\">    public static void OpenResourceForReading2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        client.OpenReadCompleted += new OpenReadCompletedEventHandler(OpenReadCallback2);\n        client.OpenReadAsync (uri);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#30\">\t\tPublic Shared Sub OpenResourceForReading2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\tAddHandler client.OpenReadCompleted, AddressOf OpenReadCallback2\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.OpenReadAsync(uri)                        \n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_OpenWriteCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OpenWriteCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.OpenWriteCompletedEventHandler OpenWriteCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous operation to open a stream that is used to send data to a resource completes. These operations are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteAsync_\" data-linktype=\"relative-path\">OpenWriteAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.openwritecompletedeventhandler\" data-linktype=\"relative-path\">OpenWriteCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.openwritecompletedeventargs\" data-linktype=\"relative-path\">OpenWriteCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#14\">void OpenResourceForWriting2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   \n   // Specify that the OpenWriteCallback method gets called\n   // when the writeable stream is available.\n   client-&gt;OpenWriteCompleted += gcnew OpenWriteCompletedEventHandler( OpenWriteCallback2 );\n   client-&gt;OpenWriteAsync( uri, &quot;POST&quot; );\n   \n   // Applications can perform other tasks\n   // while waiting for the upload to complete.\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#14\">    public static void OpenResourceForWriting2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        // Specify that the OpenWriteCallback method gets called\n        // when the writeable stream is available.\n        client.OpenWriteCompleted += new OpenWriteCompletedEventHandler (OpenWriteCallback2);\n        client.OpenWriteAsync (uri, &quot;POST&quot;);\n        // Applications can perform other tasks\n        // while waiting for the upload to complete.\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#14\">\t\tPublic Shared Sub OpenResourceForWriting2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\n\t\t\t&#39;  Specify that the OpenWriteCallback method gets called\n\t\t\t&#39;  when the writeable stream is available.\n\t\t\tAddHandler client.OpenWriteCompleted, AddressOf OpenWriteCallback2\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.OpenWriteAsync(uri, &quot;POST&quot;)\n\t\t\t&#39;  Applications can perform other tasks\n\t\t\t&#39;  while waiting for the upload to complete.\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadDataCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadDataCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous data-upload operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.UploadDataCompletedEventHandler UploadDataCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous data upload operation completes. Asynchronous data uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploaddatacompletedeventhandler\" data-linktype=\"relative-path\">UploadDataCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploaddatacompletedeventargs\" data-linktype=\"relative-path\">UploadDataCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#36\">void UploadDataInBackground3( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   String^ text = &quot;Time = 12:00am temperature = 50&quot;;\n   array&lt;Byte&gt;^data = System::Text::Encoding::UTF8-&gt;GetBytes( text );\n\n   client-&gt;UploadDataCompleted += gcnew UploadDataCompletedEventHandler( UploadDataCallback3 );\n   client-&gt;UploadDataAsync( uri, data );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#36\">    public static void UploadDataInBackground3 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n        string text = &quot;Time = 12:00am temperature = 50&quot;;\n        byte[] data = System.Text.Encoding.UTF8.GetBytes (text);\n\n        client.UploadDataCompleted += new UploadDataCompletedEventHandler (UploadDataCallback3);\n        client.UploadDataAsync (uri, data);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#36\">\t\tPublic Shared Sub UploadDataInBackground3(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\tDim text As String = &quot;Time = 12:00am temperature = 50&quot;\n\t\t\tDim data() As Byte = System.Text.Encoding.UTF8.GetBytes(text)\n\t\t\tAddHandler client.UploadDataCompleted, AddressOf UploadDataCallback3\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.UploadDataAsync(uri, data)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadFileCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadFileCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous file-upload operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.UploadFileCompletedEventHandler UploadFileCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous file upload operation completes. Asynchronous file uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadfilecompletedeventhandler\" data-linktype=\"relative-path\">UploadFileCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadfilecompletedeventargs\" data-linktype=\"relative-path\">UploadFileCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#4\">// Sample call: UploadFileInBackground2(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\nvoid UploadFileInBackground2( String^ address, String^ fileName )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n\n   client-&gt;UploadFileCompleted += \n     gcnew UploadFileCompletedEventHandler (UploadFileCallback2);\n   \n   // Specify a progress notification handler.\n   client-&gt;UploadProgressChanged += \n       gcnew UploadProgressChangedEventHandler( UploadProgressCallback );\n   client-&gt;UploadFileAsync( uri, &quot;POST&quot;, fileName );\n   Console::WriteLine( &quot;File upload started.&quot; );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#4\">    // Sample call: UploadFileInBackground2(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n    public static void UploadFileInBackground2 (string address, string fileName)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        client.UploadFileCompleted += new UploadFileCompletedEventHandler (UploadFileCallback2);\n\n\t // Specify a progress notification handler.\n\t client.UploadProgressChanged += new UploadProgressChangedEventHandler(UploadProgressCallback);\n        client.UploadFileAsync (uri, &quot;POST&quot;, fileName);\n        Console.WriteLine (&quot;File upload started.&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#4\">\t\t&#39;  Sample call: UploadFileInBackground2(&quot;http:&#39; www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n\t\tPublic Shared Sub UploadFileInBackground2(ByVal address As String, ByVal fileName As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n                        Dim uri as Uri =  New Uri(address)\n\t\t\tAddHandler client.UploadFileCompleted, AddressOf UploadFileCallback2\n\n\t\t\t&#39;  Specify a progress notification handler.\n\t\t\tAddHandler client.UploadProgressChanged, AddressOf UploadProgressCallback\n\t\t\tclient.UploadFileAsync(uri, &quot;POST&quot;, fileName)\n\t\t\tConsole.WriteLine(&quot;File upload started.&quot;)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadProgressChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadProgressChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.UploadProgressChangedEventHandler UploadProgressChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous upload makes progress. This event is raised when uploads are started using any of the following methods.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadDataAsync_\" data-linktype=\"relative-path\">UploadDataAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadFileAsync_\" data-linktype=\"relative-path\">UploadFileAsync</a></td>\n<td>Sends a local file to the resource, without blocking the calling thread.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a></td>\n<td>Sends a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> to the resource and returns a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array containing any response, without blocking the calling thread.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.net.uploadprogresschangedeventhandler\" data-linktype=\"relative-path\">UploadProgressChangedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadprogresschangedeventargs\" data-linktype=\"relative-path\">UploadProgressChangedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#4\">// Sample call: UploadFileInBackground2(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\nvoid UploadFileInBackground2( String^ address, String^ fileName )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n\n   client-&gt;UploadFileCompleted += \n     gcnew UploadFileCompletedEventHandler (UploadFileCallback2);\n   \n   // Specify a progress notification handler.\n   client-&gt;UploadProgressChanged += \n       gcnew UploadProgressChangedEventHandler( UploadProgressCallback );\n   client-&gt;UploadFileAsync( uri, &quot;POST&quot;, fileName );\n   Console::WriteLine( &quot;File upload started.&quot; );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#4\">    // Sample call: UploadFileInBackground2(&quot;http://www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n    public static void UploadFileInBackground2 (string address, string fileName)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n\n        client.UploadFileCompleted += new UploadFileCompletedEventHandler (UploadFileCallback2);\n\n\t // Specify a progress notification handler.\n\t client.UploadProgressChanged += new UploadProgressChangedEventHandler(UploadProgressCallback);\n        client.UploadFileAsync (uri, &quot;POST&quot;, fileName);\n        Console.WriteLine (&quot;File upload started.&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#4\">\t\t&#39;  Sample call: UploadFileInBackground2(&quot;http:&#39; www.contoso.com/fileUpload.aspx&quot;, &quot;data.txt&quot;)\n\t\tPublic Shared Sub UploadFileInBackground2(ByVal address As String, ByVal fileName As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n                        Dim uri as Uri =  New Uri(address)\n\t\t\tAddHandler client.UploadFileCompleted, AddressOf UploadFileCallback2\n\n\t\t\t&#39;  Specify a progress notification handler.\n\t\t\tAddHandler client.UploadProgressChanged, AddressOf UploadProgressCallback\n\t\t\tclient.UploadFileAsync(uri, &quot;POST&quot;, fileName)\n\t\t\tConsole.WriteLine(&quot;File upload started.&quot;)\n\t\tEnd Sub\n</code></pre><p> The following code example shows an implementation of a handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#42\">  static void UploadProgressCallback(Object^ sender, \n            UploadProgressChangedEventArgs^ e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console::WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, \n                (String ^)e-&gt;UserState, \n                e-&gt;BytesSent, \n                e-&gt;TotalBytesToSend,\n                e-&gt;ProgressPercentage);\n        }\n  static void DownloadProgressCallback(Object^ sender, \n            DownloadProgressChangedEventArgs^ e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console::WriteLine(&quot;{0}    downloaded {1} of {2} bytes. {3} % complete...&quot;, \n                (String ^)e-&gt;UserState, \n                e-&gt;BytesReceived, \n                e-&gt;TotalBytesToReceive,\n                e-&gt;ProgressPercentage);\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#42\">        private static void UploadProgressCallback(object sender, UploadProgressChangedEventArgs e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, \n                (string)e.UserState, \n                e.BytesSent, \n                e.TotalBytesToSend,\n                e.ProgressPercentage);\n        }\n        private static void DownloadProgressCallback(object sender, DownloadProgressChangedEventArgs e)\n        {\n            // Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    downloaded {1} of {2} bytes. {3} % complete...&quot;, \n                (string)e.UserState, \n                e.BytesReceived, \n                e.TotalBytesToReceive,\n                e.ProgressPercentage);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#42\">        Private Shared Sub UploadProgressCallback(ByVal sender As Object, ByVal e As UploadProgressChangedEventArgs)\n\n            &#39;  Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;{0}    uploaded {1} of {2} bytes. {3} % complete...&quot;, _\n             CStr(e.UserState), e.BytesSent, e.TotalBytesToSend, e.ProgressPercentage)\n        End Sub\n        Private Shared Sub DownloadProgressCallback(ByVal sender As Object, ByVal e As DownloadProgressChangedEventArgs)\n\n            &#39;  Displays the operation identifier, and the transfer progress.\n            Console.WriteLine(&quot;0}    downloaded 1} of 2} bytes. 3} % complete...&quot;, _\n             CStr(e.UserState), e.BytesReceived, e.TotalBytesToReceive, e.ProgressPercentage)\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadStringCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadStringCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous string-upload operation completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.UploadStringCompletedEventHandler UploadStringCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous string upload operation completes. Asynchronous string uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadStringAsync_\" data-linktype=\"relative-path\">UploadStringAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadstringcompletedeventhandler\" data-linktype=\"relative-path\">UploadStringCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadstringcompletedeventargs\" data-linktype=\"relative-path\">UploadStringCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting an event handler for this event.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLWebClientAsync#38\">void UploadStringInBackground2( String^ address )\n{\n   WebClient^ client = gcnew WebClient;\n   Uri ^uri = gcnew Uri(address);\n   String^ data = &quot;Time = 12:00am temperature = 50&quot;;\n\n   client-&gt;UploadStringCompleted += gcnew UploadStringCompletedEventHandler( UploadStringCallback2 );\n   client-&gt;UploadStringAsync( uri, data );\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLWebClientAsync#38\">    public static void UploadStringInBackground2 (string address)\n    {\n        WebClient client = new WebClient ();\n        Uri uri = new Uri(address);\n        string data = &quot;Time = 12:00am temperature = 50&quot;;\n        client.UploadStringCompleted += new UploadStringCompletedEventHandler (UploadStringCallback2);\n        client.UploadStringAsync (uri, data);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLWebClientAsync#38\">\t\tPublic Shared Sub UploadStringInBackground2(ByVal address As String)\n\n\t\t\tDim client As WebClient = New WebClient()\n\t\t\tDim data As String = &quot;Time = 12:00am temperature = 50&quot;\n\t\t\tAddHandler client.UploadStringCompleted, AddressOf UploadStringCallback2\n                        Dim uri as Uri = New Uri(address)\n\t\t\tclient.UploadStringAsync(uri, data)\n\t\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_UploadValuesCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UploadValuesCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous upload of a name/value collection completes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.UploadValuesCompletedEventHandler UploadValuesCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous upload of a <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> object&#39;s data completes. These uploads are started by calling the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_UploadValuesAsync_\" data-linktype=\"relative-path\">UploadValuesAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventhandler\" data-linktype=\"relative-path\">UploadValuesCompletedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.uploadvaluescompletedeventargs\" data-linktype=\"relative-path\">UploadValuesCompletedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebClient_WriteStreamClosed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStreamClosed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous operation to write data to a resource using a write stream is closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.WriteStreamClosedEventHandler WriteStreamClosed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised each time an asynchronous operation used to write data to a resource using a write stream is closed. These operations result from calls to the <a class=\"xref\" href=\"system.net.webclient#System_Net_WebClient_OpenWriteTaskAsync_\" data-linktype=\"relative-path\">OpenWriteTaskAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.net.writestreamclosedeventhandler\" data-linktype=\"relative-path\">WriteStreamClosedEventHandler</a> is the delegate for this event. The <a class=\"xref\" href=\"system.net.writestreamclosedeventargs\" data-linktype=\"relative-path\">WriteStreamClosedEventArgs</a> class provides the event handler with event data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebClient.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.AllowReadStreamBuffering\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.AllowWriteStreamBuffering\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.BaseAddress\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.CachePolicy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.CancelAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Credentials\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadDataTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFile\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadFileTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_DownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.DownloadStringTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Encoding\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.GetWebRequest\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.GetWebResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.IsBusy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnDownloadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnOpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnOpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnUploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OnWriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenRead\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_OpenReadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenReadTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWrite\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_OpenWriteCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.OpenWriteTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.Proxy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.QueryString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.ResponseHeaders\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadData\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadDataCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadDataTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFile\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadFileCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadFileTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadProgressChanged\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadString\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadStringCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadStringTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValues\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_UploadValuesCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UploadValuesTaskAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.UseDefaultCredentials\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.WriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.add_WriteStreamClosed\">\r\n<meta name=\"APIName\" content=\"System.Net.WebClient.remove_WriteStreamClosed\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"80e0a902-3165-34fd-1dae-8ef8c9481134\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides common methods for sending data to and receiving data from a resource identified by a URI.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.WebClient\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebClient.yml","open_to_public_contributors":true,"api_name":["System.Net.WebClient","System.Net.WebClient..ctor","System.Net.WebClient.AllowReadStreamBuffering","System.Net.WebClient.AllowWriteStreamBuffering","System.Net.WebClient.BaseAddress","System.Net.WebClient.CachePolicy","System.Net.WebClient.CancelAsync","System.Net.WebClient.Credentials","System.Net.WebClient.DownloadData","System.Net.WebClient.DownloadDataAsync","System.Net.WebClient.DownloadDataCompleted","System.Net.WebClient.add_DownloadDataCompleted","System.Net.WebClient.remove_DownloadDataCompleted","System.Net.WebClient.DownloadDataTaskAsync","System.Net.WebClient.DownloadFile","System.Net.WebClient.DownloadFileAsync","System.Net.WebClient.DownloadFileCompleted","System.Net.WebClient.add_DownloadFileCompleted","System.Net.WebClient.remove_DownloadFileCompleted","System.Net.WebClient.DownloadFileTaskAsync","System.Net.WebClient.DownloadProgressChanged","System.Net.WebClient.add_DownloadProgressChanged","System.Net.WebClient.remove_DownloadProgressChanged","System.Net.WebClient.DownloadString","System.Net.WebClient.DownloadStringAsync","System.Net.WebClient.DownloadStringCompleted","System.Net.WebClient.add_DownloadStringCompleted","System.Net.WebClient.remove_DownloadStringCompleted","System.Net.WebClient.DownloadStringTaskAsync","System.Net.WebClient.Encoding","System.Net.WebClient.GetWebRequest","System.Net.WebClient.GetWebResponse","System.Net.WebClient.Headers","System.Net.WebClient.IsBusy","System.Net.WebClient.OnDownloadDataCompleted","System.Net.WebClient.OnDownloadFileCompleted","System.Net.WebClient.OnDownloadProgressChanged","System.Net.WebClient.OnDownloadStringCompleted","System.Net.WebClient.OnOpenReadCompleted","System.Net.WebClient.OnOpenWriteCompleted","System.Net.WebClient.OnUploadDataCompleted","System.Net.WebClient.OnUploadFileCompleted","System.Net.WebClient.OnUploadProgressChanged","System.Net.WebClient.OnUploadStringCompleted","System.Net.WebClient.OnUploadValuesCompleted","System.Net.WebClient.OnWriteStreamClosed","System.Net.WebClient.OpenRead","System.Net.WebClient.OpenReadAsync","System.Net.WebClient.OpenReadCompleted","System.Net.WebClient.add_OpenReadCompleted","System.Net.WebClient.remove_OpenReadCompleted","System.Net.WebClient.OpenReadTaskAsync","System.Net.WebClient.OpenWrite","System.Net.WebClient.OpenWriteAsync","System.Net.WebClient.OpenWriteCompleted","System.Net.WebClient.add_OpenWriteCompleted","System.Net.WebClient.remove_OpenWriteCompleted","System.Net.WebClient.OpenWriteTaskAsync","System.Net.WebClient.Proxy","System.Net.WebClient.QueryString","System.Net.WebClient.ResponseHeaders","System.Net.WebClient.UploadData","System.Net.WebClient.UploadDataAsync","System.Net.WebClient.UploadDataCompleted","System.Net.WebClient.add_UploadDataCompleted","System.Net.WebClient.remove_UploadDataCompleted","System.Net.WebClient.UploadDataTaskAsync","System.Net.WebClient.UploadFile","System.Net.WebClient.UploadFileAsync","System.Net.WebClient.UploadFileCompleted","System.Net.WebClient.add_UploadFileCompleted","System.Net.WebClient.remove_UploadFileCompleted","System.Net.WebClient.UploadFileTaskAsync","System.Net.WebClient.UploadProgressChanged","System.Net.WebClient.add_UploadProgressChanged","System.Net.WebClient.remove_UploadProgressChanged","System.Net.WebClient.UploadString","System.Net.WebClient.UploadStringAsync","System.Net.WebClient.UploadStringCompleted","System.Net.WebClient.add_UploadStringCompleted","System.Net.WebClient.remove_UploadStringCompleted","System.Net.WebClient.UploadStringTaskAsync","System.Net.WebClient.UploadValues","System.Net.WebClient.UploadValuesAsync","System.Net.WebClient.UploadValuesCompleted","System.Net.WebClient.add_UploadValuesCompleted","System.Net.WebClient.remove_UploadValuesCompleted","System.Net.WebClient.UploadValuesTaskAsync","System.Net.WebClient.UseDefaultCredentials","System.Net.WebClient.WriteStreamClosed","System.Net.WebClient.add_WriteStreamClosed","System.Net.WebClient.remove_WriteStreamClosed"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.WebClient","System::Net::WebClient","System.Net.WebClient.#ctor","System::Net::WebClient::#ctor","System.Net.WebClient.AllowReadStreamBuffering","System::Net::WebClient::AllowReadStreamBuffering","System.Net.WebClient.AllowWriteStreamBuffering","System::Net::WebClient::AllowWriteStreamBuffering","System.Net.WebClient.BaseAddress","System::Net::WebClient::BaseAddress","System.Net.WebClient.CachePolicy","System::Net::WebClient::CachePolicy","System.Net.WebClient.CancelAsync","System::Net::WebClient::CancelAsync","System.Net.WebClient.Credentials","System::Net::WebClient::Credentials","System.Net.WebClient.DownloadData","System::Net::WebClient::DownloadData","System.Net.WebClient.DownloadDataAsync","System::Net::WebClient::DownloadDataAsync","System.Net.WebClient.DownloadDataCompleted","System::Net::WebClient::DownloadDataCompleted","System.Net.WebClient.DownloadDataTaskAsync","System::Net::WebClient::DownloadDataTaskAsync","System.Net.WebClient.DownloadFile","System::Net::WebClient::DownloadFile","System.Net.WebClient.DownloadFileAsync","System::Net::WebClient::DownloadFileAsync","System.Net.WebClient.DownloadFileCompleted","System::Net::WebClient::DownloadFileCompleted","System.Net.WebClient.DownloadFileTaskAsync","System::Net::WebClient::DownloadFileTaskAsync","System.Net.WebClient.DownloadProgressChanged","System::Net::WebClient::DownloadProgressChanged","System.Net.WebClient.DownloadString","System::Net::WebClient::DownloadString","System.Net.WebClient.DownloadStringAsync","System::Net::WebClient::DownloadStringAsync","System.Net.WebClient.DownloadStringCompleted","System::Net::WebClient::DownloadStringCompleted","System.Net.WebClient.DownloadStringTaskAsync","System::Net::WebClient::DownloadStringTaskAsync","System.Net.WebClient.Encoding","System::Net::WebClient::Encoding","System.Net.WebClient.GetWebRequest","System::Net::WebClient::GetWebRequest","System.Net.WebClient.GetWebResponse","System::Net::WebClient::GetWebResponse","System.Net.WebClient.Headers","System::Net::WebClient::Headers","System.Net.WebClient.IsBusy","System::Net::WebClient::IsBusy","System.Net.WebClient.OnDownloadDataCompleted","System::Net::WebClient::OnDownloadDataCompleted","System.Net.WebClient.OnDownloadFileCompleted","System::Net::WebClient::OnDownloadFileCompleted","System.Net.WebClient.OnDownloadProgressChanged","System::Net::WebClient::OnDownloadProgressChanged","System.Net.WebClient.OnDownloadStringCompleted","System::Net::WebClient::OnDownloadStringCompleted","System.Net.WebClient.OnOpenReadCompleted","System::Net::WebClient::OnOpenReadCompleted","System.Net.WebClient.OnOpenWriteCompleted","System::Net::WebClient::OnOpenWriteCompleted","System.Net.WebClient.OnUploadDataCompleted","System::Net::WebClient::OnUploadDataCompleted","System.Net.WebClient.OnUploadFileCompleted","System::Net::WebClient::OnUploadFileCompleted","System.Net.WebClient.OnUploadProgressChanged","System::Net::WebClient::OnUploadProgressChanged","System.Net.WebClient.OnUploadStringCompleted","System::Net::WebClient::OnUploadStringCompleted","System.Net.WebClient.OnUploadValuesCompleted","System::Net::WebClient::OnUploadValuesCompleted","System.Net.WebClient.OnWriteStreamClosed","System::Net::WebClient::OnWriteStreamClosed","System.Net.WebClient.OpenRead","System::Net::WebClient::OpenRead","System.Net.WebClient.OpenReadAsync","System::Net::WebClient::OpenReadAsync","System.Net.WebClient.OpenReadCompleted","System::Net::WebClient::OpenReadCompleted","System.Net.WebClient.OpenReadTaskAsync","System::Net::WebClient::OpenReadTaskAsync","System.Net.WebClient.OpenWrite","System::Net::WebClient::OpenWrite","System.Net.WebClient.OpenWriteAsync","System::Net::WebClient::OpenWriteAsync","System.Net.WebClient.OpenWriteCompleted","System::Net::WebClient::OpenWriteCompleted","System.Net.WebClient.OpenWriteTaskAsync","System::Net::WebClient::OpenWriteTaskAsync","System.Net.WebClient.Proxy","System::Net::WebClient::Proxy","System.Net.WebClient.QueryString","System::Net::WebClient::QueryString","System.Net.WebClient.ResponseHeaders","System::Net::WebClient::ResponseHeaders","System.Net.WebClient.UploadData","System::Net::WebClient::UploadData","System.Net.WebClient.UploadDataAsync","System::Net::WebClient::UploadDataAsync","System.Net.WebClient.UploadDataCompleted","System::Net::WebClient::UploadDataCompleted","System.Net.WebClient.UploadDataTaskAsync","System::Net::WebClient::UploadDataTaskAsync","System.Net.WebClient.UploadFile","System::Net::WebClient::UploadFile","System.Net.WebClient.UploadFileAsync","System::Net::WebClient::UploadFileAsync","System.Net.WebClient.UploadFileCompleted","System::Net::WebClient::UploadFileCompleted","System.Net.WebClient.UploadFileTaskAsync","System::Net::WebClient::UploadFileTaskAsync","System.Net.WebClient.UploadProgressChanged","System::Net::WebClient::UploadProgressChanged","System.Net.WebClient.UploadString","System::Net::WebClient::UploadString","System.Net.WebClient.UploadStringAsync","System::Net::WebClient::UploadStringAsync","System.Net.WebClient.UploadStringCompleted","System::Net::WebClient::UploadStringCompleted","System.Net.WebClient.UploadStringTaskAsync","System::Net::WebClient::UploadStringTaskAsync","System.Net.WebClient.UploadValues","System::Net::WebClient::UploadValues","System.Net.WebClient.UploadValuesAsync","System::Net::WebClient::UploadValuesAsync","System.Net.WebClient.UploadValuesCompleted","System::Net::WebClient::UploadValuesCompleted","System.Net.WebClient.UploadValuesTaskAsync","System::Net::WebClient::UploadValuesTaskAsync","System.Net.WebClient.UseDefaultCredentials","System::Net::WebClient::UseDefaultCredentials","System.Net.WebClient.WriteStreamClosed","System::Net::WebClient::WriteStreamClosed"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"80e0a902-3165-34fd-1dae-8ef8c9481134","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/WebClient.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebClient class | Microsoft Docs","_op_ogTitle":"WebClient class","description":"Provides common methods for sending data to and receiving data from a resource identified by a URI.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.WebClient","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webclient","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webclient","fileRelativePath":"System.Net.WebClient.html"},"themesRelativePathToOutputRoot":"_themes/"}