{"content":"    \r\n    <h1 id=\"System_Web_HttpRequest\">\r\n      <span class=\"lang-csharp\">HttpRequest</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Enables ASP.NET to read the HTTP values sent by a client during a Web request.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HttpRequest</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpRequest</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The methods and properties of the HttpRequest class are exposed through the <code>Request</code> properties of the <a class=\"xref\" href=\"system.web.httpapplication\" data-linktype=\"relative-path\">HttpApplication</a>, <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>, <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a>, and <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> classes.  </p>\n<p> To access data from the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_QueryString_\" data-linktype=\"relative-path\">QueryString</a>, <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Form_\" data-linktype=\"relative-path\">Form</a>, <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Cookies_\" data-linktype=\"relative-path\">Cookies</a>, or <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_ServerVariables_\" data-linktype=\"relative-path\">ServerVariables</a> collections, you can write <code>Request[&quot;key&quot;]</code>, as shown in the example for the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Unicode support for HttpRequest class members requires IIS version 6.0 or later.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest__ctor_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">HttpRequest(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes an <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_AcceptTypes\" data-linktype=\"self-bookmark\">AcceptTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string array of client-supported MIME accept types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_AnonymousID\" data-linktype=\"self-bookmark\">AnonymousID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the anonymous identifier for the user, if present.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ApplicationPath\" data-linktype=\"self-bookmark\">ApplicationPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ASP.NET application&#39;s virtual application root path on the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_AppRelativeCurrentExecutionFilePath\" data-linktype=\"self-bookmark\">AppRelativeCurrentExecutionFilePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in &quot;~/page.aspx&quot;).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Browser\" data-linktype=\"self-bookmark\">Browser</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets information about the requesting client&#39;s browser capabilities.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ClientCertificate\" data-linktype=\"self-bookmark\">ClientCertificate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current request&#39;s client security certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ContentEncoding\" data-linktype=\"self-bookmark\">ContentEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the character set of the entity-body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ContentLength\" data-linktype=\"self-bookmark\">ContentLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the length, in bytes, of content sent by the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ContentType\" data-linktype=\"self-bookmark\">ContentType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the MIME content type of the incoming request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Cookies\" data-linktype=\"self-bookmark\">Cookies</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of cookies sent by the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_CurrentExecutionFilePath\" data-linktype=\"self-bookmark\">CurrentExecutionFilePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the virtual path of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_CurrentExecutionFilePathExtension\" data-linktype=\"self-bookmark\">CurrentExecutionFilePathExtension</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the extension of the file name that is specified in the <span class=\"xref\">stem.Web.HttpRequest.CurrentExecutionFilePath*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_FilePath\" data-linktype=\"self-bookmark\">FilePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the virtual path of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Files\" data-linktype=\"self-bookmark\">Files</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of files uploaded by the client, in multipart MIME format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Filter\" data-linktype=\"self-bookmark\">Filter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the filter to use when reading the current input stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Form\" data-linktype=\"self-bookmark\">Form</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of form variables.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of HTTP headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_HttpChannelBinding\" data-linktype=\"self-bookmark\">HttpChannelBinding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.security.authentication.extendedprotection.channelbinding\" data-linktype=\"relative-path\">ChannelBinding</a> object of the current <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_HttpMethod\" data-linktype=\"self-bookmark\">HttpMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the HTTP data transfer method (such as <code>GET</code>, <code>POST</code>, or <code>HEAD</code>) used by the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_InputStream\" data-linktype=\"self-bookmark\">InputStream</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the contents of the incoming HTTP entity body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_IsAuthenticated\" data-linktype=\"self-bookmark\">IsAuthenticated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the request has been authenticated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_IsLocal\" data-linktype=\"self-bookmark\">IsLocal</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the request is from the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_IsSecureConnection\" data-linktype=\"self-bookmark\">IsSecureConnection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Item_System_String_\" data-linktype=\"self-bookmark\">Item(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the specified object from the <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, or <span class=\"xref\">stem.Web.HttpRequest.ServerVariables*</span> collections.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_LogonUserIdentity\" data-linktype=\"self-bookmark\">LogonUserIdentity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> type for the current user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Params\" data-linktype=\"self-bookmark\">Params</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a combined collection of <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, and <span class=\"xref\">stem.Web.HttpRequest.ServerVariables*</span> items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Path\" data-linktype=\"self-bookmark\">Path</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the virtual path of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_PathInfo\" data-linktype=\"self-bookmark\">PathInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the additional path information for a resource with a URL extension.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_PhysicalApplicationPath\" data-linktype=\"self-bookmark\">PhysicalApplicationPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the physical file system path of the currently executing server application&#39;s root directory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_PhysicalPath\" data-linktype=\"self-bookmark\">PhysicalPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the physical file system path corresponding to the requested URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_QueryString\" data-linktype=\"self-bookmark\">QueryString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of HTTP query string variables.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_RawUrl\" data-linktype=\"self-bookmark\">RawUrl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the raw URL of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ReadEntityBodyMode\" data-linktype=\"self-bookmark\">ReadEntityBodyMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_RequestContext\" data-linktype=\"self-bookmark\">RequestContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.routing.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> instance of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_RequestType\" data-linktype=\"self-bookmark\">RequestType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP data transfer method (<code>GET</code> or <code>POST</code>) used by the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ServerVariables\" data-linktype=\"self-bookmark\">ServerVariables</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of Web server variables.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_TimedOutToken\" data-linktype=\"self-bookmark\">TimedOutToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> object that is tripped when a request times out.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_TlsTokenBindingInfo\" data-linktype=\"self-bookmark\">TlsTokenBindingInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the TLS token binding information. The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_TotalBytes\" data-linktype=\"self-bookmark\">TotalBytes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of bytes in the current input stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Unvalidated\" data-linktype=\"self-bookmark\">Unvalidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the HTTP request values without triggering request validation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Url\" data-linktype=\"self-bookmark\">Url</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information about the URL of the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_UrlReferrer\" data-linktype=\"self-bookmark\">UrlReferrer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information about the URL of the client&#39;s previous request that linked to the current URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_UserAgent\" data-linktype=\"self-bookmark\">UserAgent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the raw user agent string of the client browser.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_UserHostAddress\" data-linktype=\"self-bookmark\">UserHostAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the IP host address of the remote client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_UserHostName\" data-linktype=\"self-bookmark\">UserHostName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the DNS name of the remote client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_UserLanguages\" data-linktype=\"self-bookmark\">UserLanguages</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a sorted string array of client language preferences.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_Abort\" data-linktype=\"self-bookmark\">Abort()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail. You might use this method in response to an attack by a malicious HTTP client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_BinaryRead_System_Int32_\" data-linktype=\"self-bookmark\">BinaryRead(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a binary read of a specified number of bytes from the current input stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_GetBufferedInputStream\" data-linktype=\"self-bookmark\">GetBufferedInputStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_GetBufferlessInputStream\" data-linktype=\"self-bookmark\">GetBufferlessInputStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_GetBufferlessInputStream_System_Boolean_\" data-linktype=\"self-bookmark\">GetBufferlessInputStream(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <span class=\"xref\">stem.Web.Configuration.HttpRuntimeSection.MaxRequestLength*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_InsertEntityBody\" data-linktype=\"self-bookmark\">InsertEntityBody()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides IIS with a copy of the HTTP request entity body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_InsertEntityBody_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">InsertEntityBody(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_MapImageCoordinates_System_String_\" data-linktype=\"self-bookmark\">MapImageCoordinates(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_MapPath_System_String_\" data-linktype=\"self-bookmark\">MapPath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps the specified virtual path to a physical path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_MapPath_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">MapPath(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps the specified virtual path to a physical path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_MapRawImageCoordinates_System_String_\" data-linktype=\"self-bookmark\">MapRawImageCoordinates(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps an incoming image field form parameter into appropriate x and y coordinate values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_SaveAs_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">SaveAs(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves an HTTP request to disk.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpRequest_ValidateInput\" data-linktype=\"self-bookmark\">ValidateInput()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes validation to occur for the collections accessed through the <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, and <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span> properties.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest__ctor_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpRequest(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes an <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HttpRequest (string filename, string url, string queryString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file associated with the request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The information regarding the URL of the current request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>queryString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entire query string sent with the request (everything after the<code>&#39;?&#39;</code>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You do not need to create your own instance of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class. The methods and properties of the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class are exposed through the <code>Request</code> property of the <a class=\"xref\" href=\"system.web.httpapplication\" data-linktype=\"relative-path\">HttpApplication</a>, <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>, <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a>, and <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> classes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_AcceptTypes\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_AcceptTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptTypes</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string array of client-supported MIME accept types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] AcceptTypes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>A string array of client-supported MIME accept types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example captures the multiple values returned by the AcceptTypes property into an object variable and writes the number and name of each valueto a separate line of HTTP output.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.AcceptTypes Example#1\">Dim MyType() As String\n Dim Indx As Integer\n \n MyType = Request.AcceptTypes\n For Indx = 0 To MyType.GetUpperBound(0)\n    Response.Write(&quot;Accept Type &quot; &amp; Cstr(Indx) &amp; &quot;: &quot; &amp; Cstr(MyType(Indx)) &amp; &quot;&lt;br&gt;&quot;)\n Next Indx\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.AcceptTypes Example#1\">int indx;\n \n String[] arr = Request.AcceptTypes;    \n for (indx = 0; indx &lt; arr.Length; indx++) {\n    Response.Write(&quot;Accept Type &quot; + indx +&quot;: &quot; + arr[indx] + &quot;&lt;br&gt;&quot;);\n }\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_AnonymousID\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_AnonymousID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AnonymousID</div>        \r\n          </div>\r\n    \r\n            <p>Gets the anonymous identifier for the user, if present.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AnonymousID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representing the current anonymous user identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AnonymousID property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a <code>Session</code> object. By default, the AnonymousID property is tracked using a cookie, but it can be set to use the URI when the <a class=\"xref\" href=\"system.web.configuration.sessionstatesection#System_Web_Configuration_SessionStateSection_Cookieless_\" data-linktype=\"relative-path\">Cookieless</a> attribute in the anonymous identification configuration section is set to either the <a class=\"xref\" href=\"system.web.httpcookiemode\" data-linktype=\"relative-path\">HttpCookieMode</a>, <a class=\"xref\" href=\"system.web.httpcookiemode\" data-linktype=\"relative-path\">HttpCookieMode</a>, or <a class=\"xref\" href=\"system.web.httpcookiemode\" data-linktype=\"relative-path\">HttpCookieMode</a> value. You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.  </p>\n<p> Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required. For more information, see <a href=\"http://msdn.microsoft.com/en-us/2bd927ef-9057-4703-9c55-4cfb6d7d0929\" data-linktype=\"external\">anonymousIdentification Element (ASP.NET Settings Schema)</a></p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the AnonymousID property by handling the <a class=\"xref\" href=\"system.web.security.anonymousidentificationmodule#System_Web_Security_AnonymousIdentificationModule_Creating\" data-linktype=\"relative-path\">Creating</a> event in the Global.asax file. This example has two parts:  </p>\n<ul>\n<li><p>A method in the Global.asax file that handles the <a class=\"xref\" href=\"system.web.security.anonymousidentificationmodule#System_Web_Security_AnonymousIdentificationModule_Creating\" data-linktype=\"relative-path\">Creating</a> event.  </p>\n</li>\n<li><p>A Web Forms page.  </p>\n<p>The first part of the code example shows how to set the AnonymousID property by handling the <a class=\"xref\" href=\"system.web.security.anonymousidentificationmodule#System_Web_Security_AnonymousIdentificationModule_Creating\" data-linktype=\"relative-path\">Creating</a> event in the Global.asax file. The method that is named <code>AnonymousIdentification_Creating</code> sets the AnonymousID property when an anonymous ID is created.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_AnonymousID#2\">    void Application_Start(Object sender, EventArgs e)\n        {\n            // Initialize user count property\n            Application[&quot;UserCount&quot;] = 0;\n        }\n        \n    public void AnonymousIdentification_Creating(Object sender, AnonymousIdentificationEventArgs e)\n        {\n        // Change the anonymous id\n        e.AnonymousID = &quot;mysite.com_Anonymous_User_&quot; + DateTime.Now.Ticks;\n\n        // Increment count of unique anonymous users\n        Application[&quot;UserCount&quot;] = Int32.Parse(Application[&quot;UserCount&quot;].ToString()) + 1;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_AnonymousID#2\">    Sub Application_Start(ByVal sender As Object, ByVal e As EventArgs)\n\n        &#39;Initialize user count property\n        Application(&quot;UserCount&quot;) = 0\n\n    End Sub\n\n    Sub AnonymousIdentification_Creating(ByVal sender As Object, ByVal e As AnonymousIdentificationEventArgs)\n\n        &#39; Change the anonymous id\n        e.AnonymousID = &quot;mysite.com_Anonymous_User_&quot; &amp; DateTime.Now.Ticks\n\n        &#39; Increment count of unique anonymous users\n        Application(&quot;UserCount&quot;) = Int32.Parse(Application(&quot;UserCount&quot;).ToString()) + 1\n\n    End Sub\n</code></pre><p>The second part of the code example shows how to display the new AnonymousID that is created by the <code>AnonymousIdentification_Creating</code> event handler in the preceding example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_AnonymousID#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n  void Page_Load(object sender, EventArgs e)\n    {\n      if (Application[&quot;UserCount&quot;] != null)\n      {\n          lblUserCount.Text = Application[&quot;UserCount&quot;].ToString();\n          lblCurrentUser.Text = Request.AnonymousID;\n      }\n  }    \n&lt;/script&gt;\n\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;AnonymousID Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        Number of users: \n        &lt;asp:Label ID=&quot;lblUserCount&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;&lt;br /&gt;\n    Current user:\n        &lt;asp:Label ID=&quot;lblCurrentUser&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_AnonymousID#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n\n    If (Application(&quot;UserCount&quot;) IsNot Nothing) Then\n      lblUserCount.Text = Application(&quot;UserCount&quot;).ToString()\n      lblCurrentUser.Text = Request.AnonymousID\n    End If\n      \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;AnonymousID Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        Number of users: \n        &lt;asp:Label ID=&quot;lblUserCount&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;&lt;br /&gt;\n    Current user:\n        &lt;asp:Label ID=&quot;lblCurrentUser&quot; Runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;&lt;br /&gt;\n    &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ApplicationPath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ApplicationPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ASP.NET application&#39;s virtual application root path on the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ApplicationPath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual path of the current application.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory. This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.io.streamwriter#System_IO_StreamWriter_Write_\" data-linktype=\"relative-path\">Write</a> method to HTML-encode and then write the value of the ApplicationPath property to a text file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class. It assumes the existence of a <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a> object named <code>sw</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#2\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()))\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.Path))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#2\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()));\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.Path));\n</code></pre><p> The following example uses the ApplicationPath property to programmatically construct a path to a resource that is in a fixed location in the application. The page that references the resource does not have to be located in the same directory as the resource.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest.ApplicationPath#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        Label1.Text = Request.ApplicationPath;\n        Image1.ImageUrl = Request.ApplicationPath + &quot;/images/Image1.gif&quot;;\n        Label2.Text = Image1.ImageUrl;\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest.ApplicationPath Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        ApplicationPath:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n\n        &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;&lt;br /&gt;\n\n        ImageUrl:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label2&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;br /&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest.ApplicationPath#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n        Label1.Text = Request.ApplicationPath\n        Image1.ImageUrl = Request.ApplicationPath + &quot;/images/Image1.gif&quot;\n        Label2.Text = Image1.ImageUrl\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest.ApplicationPath Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        ApplicationPath:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n\n        &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;\n\n        ImageUrl:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label2&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;br /&gt;\n     &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> If you run this example in a Web application that is named WebSite1,  <code>/WebSite1</code> will be displayed as the value of the ApplicationPath property and <code>/WebSite1/images/Image1.gif</code> will be displayed as the complete path of the image.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_AppRelativeCurrentExecutionFilePath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_AppRelativeCurrentExecutionFilePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppRelativeCurrentExecutionFilePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in &quot;~/page.aspx&quot;).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AppRelativeCurrentExecutionFilePath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual path of the application root for the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to provide URL information that will stay the same even if the application changes location. This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AppRelativeCurrentExecutionFilePath property to set the URL of an <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> control to an image in the same directory as the page. Run this page at different levels of a directory structure to see the resulting AppRelativeCurrentExecutionFilePath property values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1\">&lt;%@ Page Language=&quot;VB&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n  \n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n        &#39; Get an image that is in the same directory as the currently executing control.\n        Image1.ImageUrl = VirtualPathUtility.GetDirectory( _\n            Request.AppRelativeCurrentExecutionFilePath) + &quot;image1.jpg&quot;\n        Label1.Text = &quot;App-relative Image URL = &quot; + Image1.ImageUrl\n    End Sub\n    \n&lt;/script&gt;\n\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest AppRelativeCurrentExecutionFilePath&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;div&gt;\n          &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;&lt;br /&gt;\n            &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1\">&lt;%@ Page Language=&quot;C#&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n  \n    protected void Page_Load(object sender, EventArgs e)\n    {\n        // Get an image that is in the same directory as the currently executing control.\n        Image1.ImageUrl = \n            VirtualPathUtility.GetDirectory(Request.AppRelativeCurrentExecutionFilePath) \n            + &quot;image1.jpg&quot;;\n        Label1.Text = &quot;App-relative Image URL = &quot; + Image1.ImageUrl;\n    }\n&lt;/script&gt;\n\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest AppRelativeCurrentExecutionFilePath&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;div&gt;\n          &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;&lt;br /&gt;\n            &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; /&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p> The following example uses the AppRelativeCurrentExecutionFilePath property to programmatically set the path to a resource, based on the current path of the page.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest.ApplicationPath#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        Label1.Text = Request.ApplicationPath;\n        Image1.ImageUrl = Request.ApplicationPath + &quot;/images/Image1.gif&quot;;\n        Label2.Text = Image1.ImageUrl;\n        \n        Label3.Text = Request.AppRelativeCurrentExecutionFilePath;\n        if (VirtualPathUtility.GetDirectory(\n            Request.AppRelativeCurrentExecutionFilePath).Equals(&quot;~/Members/&quot;))\n        {\n            Image2.ImageUrl = Request.ApplicationPath +\n                &quot;/memberimages/Image1.gif&quot;;\n        }\n        else\n        {\n            Image2.ImageUrl = Request.ApplicationPath +\n            &quot;/guestimages/Image1.gif&quot;;\n        }\n        Label4.Text = Image2.ImageUrl;\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest.ApplicationPath Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        This is the ApplicationPath from the current page:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n        Use it to link to resources at fixed locations in the application.&lt;br /&gt;\n        &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:Label ID=&quot;Label2&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;br /&gt;&lt;br /&gt;\n        This is the AppRelativeCurrentExecutionFilePath to the current page:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label3&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n        Use it to help programatically construct links to resources based on the location of the current page.&lt;br /&gt;\n        &lt;asp:Image ID=&quot;Image2&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:Label ID=&quot;Label4&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest.ApplicationPath#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n        Label1.Text = Request.ApplicationPath\n        Image1.ImageUrl = Request.ApplicationPath + &quot;/images/Image1.gif&quot;\n        Label2.Text = Image1.ImageUrl\n        \n        Label3.Text = Request.AppRelativeCurrentExecutionFilePath\n        If (VirtualPathUtility.GetDirectory( _\n            Request.AppRelativeCurrentExecutionFilePath).Equals( _\n            &quot;~/Members/&quot;)) _\n        Then\n            Image2.ImageUrl = Request.ApplicationPath &amp; _\n                &quot;/memberimages/Image1.gif&quot;\n        Else\n            Image2.ImageUrl = Request.ApplicationPath &amp; _\n                &quot;/guestimages/Image1.gif&quot;\n        End If\n        Label4.Text = Image2.ImageUrl\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;HttpRequest.ApplicationPath Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;div&gt;\n        This is the ApplicationPath from the current page:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label1&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n        Use it to link to resources at fixed locations in the application.&lt;br /&gt;\n        &lt;asp:Image ID=&quot;Image1&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:Label ID=&quot;Label2&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;br /&gt;&lt;br /&gt;\n        This is the AppRelativeCurrentExecutionFilePath to the current page:&lt;br /&gt;\n        &lt;asp:Label ID=&quot;Label3&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;&lt;br /&gt;\n        Use it to help programatically construct links to resources based on the location of the current page.&lt;br /&gt;\n        &lt;asp:Image ID=&quot;Image2&quot; runat=&quot;server&quot; /&gt;\n        &lt;asp:Label ID=&quot;Label4&quot; runat=&quot;server&quot; ForeColor=&quot;Brown&quot; /&gt;\n        &lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Browser\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Browser_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Browser</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets information about the requesting client&#39;s browser capabilities.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpBrowserCapabilities Browser { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpbrowsercapabilities\" data-linktype=\"relative-path\">HttpBrowserCapabilities</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpbrowsercapabilities\" data-linktype=\"relative-path\">HttpBrowserCapabilities</a> object listing the capabilities of the client&#39;s browser.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sends a list of the browser&#39;s capabilities back to the client in an HTML page.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Browser Example#1\"> Dim bc As HttpBrowserCapabilities = Request.Browser\n Response.Write(&quot;&lt;p&gt;Browser Capabilities:&lt;/p&gt;&quot;)\n Response.Write(&quot;Type = &quot; &amp; bc.Type &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Name = &quot; &amp; bc.Browser &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Version = &quot; &amp; bc.Version &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Major Version = &quot; &amp; bc.MajorVersion &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Minor Version = &quot; &amp; bc.MinorVersion &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Platform = &quot; &amp; bc.Platform &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Is Beta = &quot; &amp; bc.Beta &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Is Crawler = &quot; &amp; bc.Crawler &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Is AOL = &quot; &amp; bc.AOL &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Is Win16 = &quot; &amp; bc.Win16 &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Is Win32 = &quot; &amp; bc.Win32 &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports Frames = &quot; &amp; bc.Frames &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports Tables = &quot; &amp; bc.Tables &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports Cookies = &quot; &amp; bc.Cookies &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports VB Script = &quot; &amp; bc.VBScript &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports JavaScript = &quot; &amp; bc.JavaScript &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports Java Applets = &quot; &amp; bc.JavaApplets &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Supports ActiveX Controls = &quot; &amp; bc.ActiveXControls &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;CDF = &quot; &amp; bc.CDF &amp; &quot;&lt;br&gt;&quot;)\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Browser Example#1\">HttpBrowserCapabilities bc = Request.Browser;\nResponse.Write(&quot;&lt;p&gt;Browser Capabilities:&lt;/p&gt;&quot;);\nResponse.Write(&quot;Type = &quot; + bc.Type + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Name = &quot; + bc.Browser + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Version = &quot; + bc.Version + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Major Version = &quot; + bc.MajorVersion + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Minor Version = &quot; + bc.MinorVersion + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Platform = &quot; + bc.Platform + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Is Beta = &quot; + bc.Beta + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Is Crawler = &quot; + bc.Crawler + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Is AOL = &quot; + bc.AOL + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Is Win16 = &quot; + bc.Win16 + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Is Win32 = &quot; + bc.Win32 + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports Frames = &quot; + bc.Frames + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports Tables = &quot; + bc.Tables + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports Cookies = &quot; + bc.Cookies + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports VB Script = &quot; + bc.VBScript + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports JavaScript = &quot; + bc.JavaScript + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports Java Applets = &quot; + bc.JavaApplets + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;Supports ActiveX Controls = &quot; + bc.ActiveXControls + &quot;&lt;br&gt;&quot;);\nResponse.Write(&quot;CDF = &quot; + bc.CDF + &quot;&lt;br&gt;&quot;);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ClientCertificate\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ClientCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientCertificate</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current request&#39;s client security certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpClientCertificate ClientCertificate { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpclientcertificate\" data-linktype=\"relative-path\">HttpClientCertificate</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpclientcertificate\" data-linktype=\"relative-path\">HttpClientCertificate</a> object containing information about the client&#39;s security certificate settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sends the client&#39;s certificate settings back to the client in an HTML page.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.ClientCertificate Example#1\">    Dim cs As HttpClientCertificate = Request.ClientCertificate\n \n    Response.Write(&quot;&lt;p&gt;Client Certificate settings:&lt;/p&gt;&quot;)\n    Response.Write(&quot;Certificate = &quot; &amp; cs.Certificate.ToString() &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;Cookie = &quot; &amp; cs.Cookie &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;Flags = &quot; &amp; cs.Flags &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;IsPresent = &quot; &amp; cs.IsPresent &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;Issuer = &quot; &amp; cs.Issuer &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;IsValid = &quot; &amp; cs.IsValid &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;KeySize = &quot; &amp; cs.KeySize &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;SecretKeySize = &quot; &amp; cs.SecretKeySize &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;SerialNumber = &quot; &amp; cs.SerialNumber &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;ServerIssuer = &quot; &amp; cs.ServerIssuer &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;ServerSubject = &quot; &amp; cs.ServerSubject &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;Subject = &quot; &amp; cs.Subject &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;ValidFrom = &quot; &amp; cs.ValidFrom &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;ValidUntil = &quot; &amp; cs.ValidUntil &amp; &quot;&lt;br&gt;&quot;)\n    Response.Write(&quot;What&#39;s this = &quot; &amp; cs.ToString() &amp; &quot;&lt;br&gt;&quot;)\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.ClientCertificate Example#1\">   HttpClientCertificate cs = Request.ClientCertificate;\n \n   Response.Write(&quot;ClientCertificate Settings:&lt;br&gt;&quot;);\n   Response.Write(&quot;Certificate = &quot; + cs.Certificate + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;Cookie = &quot; + cs.Cookie + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;Flags = &quot; + cs.Flags + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;IsPresent = &quot; + cs.IsPresent + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;Issuer = &quot; + cs.Issuer + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;IsValid = &quot; + cs.IsValid + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;KeySize = &quot; + cs.KeySize + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;SecretKeySize = &quot; + cs.SecretKeySize + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;SerialNumber = &quot; + cs.SerialNumber + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;ServerIssuer = &quot; + cs.ServerIssuer + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;ServerSubject = &quot; + cs.ServerSubject + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;Subject = &quot; + cs.Subject + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;ValidFrom = &quot; + cs.ValidFrom + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;ValidUntil = &quot; + cs.ValidUntil + &quot;&lt;br&gt;&quot;);\n   Response.Write(&quot;What&#39;s this = &quot; + cs.ToString() + &quot;&lt;br&gt;&quot;);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ContentEncoding\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ContentEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the character set of the entity-body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding ContentEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object representing the client&#39;s character set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default content encoding can be specified in the <a href=\"http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7\" data-linktype=\"external\">globalization Element (ASP.NET Settings Schema)</a> of a configuration file. If content encoding is also specified by the client, the default configuration settings are overridden.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example assigns a value representing the description of the current HTTP encoding to a string variable.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.ContentEncoding Example#1\">String EncodingType;\n EncodingType = Request.ContentEncoding.EncodingName;\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.ContentEncoding Example#1\">Dim EncodingType As String\n EncodingType = Request.ContentEncoding.EncodingName\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ContentLength\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ContentLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentLength</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the length, in bytes, of content sent by the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ContentLength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The length, in bytes, of content sent by the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example assigns the value representing the content length of the incoming request to an integer variable.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.ContentLength Example#1\">Dim len As Integer\nlen = Request.ContentLength\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.ContentLength Example#1\">int len;\nlen = Request.ContentLength;\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ContentType\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ContentType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the MIME content type of the incoming request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ContentType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representing the MIME content type of the incoming request, for example, &quot;text/html&quot;. Additional common MIME types include &quot;audio.wav&quot;, &quot;image/gif&quot;, and &quot;application/pdf&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example assigns the value representing the content type of the incoming request to a string variable.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.ContentType Example#1\">Dim str As String\n str = Request.ContentType\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.ContentType Example#1\">String str;\n str = Request.ContentType;\n   \n</code></pre><p> The following example shows output that might be produced by this code.  </p>\n<p> <code>GET</code>  </p>\n<p> <code>127.0.0.1</code>  </p>\n<p> <code>127.0.0.1</code>  </p>\n<p> <code>GET</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Cookies\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Cookies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cookies</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of cookies sent by the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpCookieCollection Cookies { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcookiecollection\" data-linktype=\"relative-path\">HttpCookieCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpcookiecollection\" data-linktype=\"relative-path\">HttpCookieCollection</a> object representing the client&#39;s cookie variables.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET includes two intrinsic cookie collections. The collection accessed through the Cookies collection of <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> contains cookies transmitted by the client to the server in the <code>Cookie</code> header. The collection accessed through the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cookies_\" data-linktype=\"relative-path\">Cookies</a> collection of <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> contains new cookies created on the server and transmitted to the client in the <code>Set-Cookie</code> header.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> After you add a cookie by using the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cookies_\" data-linktype=\"relative-path\">Cookies</a> collection, the cookie is immediately available in the Cookies collection, even if the response has not been sent to the client.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Cookies Example#1\">int loop1, loop2;\nHttpCookieCollection MyCookieColl;\nHttpCookie MyCookie;\n \nMyCookieColl = Request.Cookies;\n\n// Capture all cookie names into a string array.\nString[] arr1 = MyCookieColl.AllKeys;\n\n// Grab individual cookie objects by cookie name.\nfor (loop1 = 0; loop1 &lt; arr1.Length; loop1++) \n{\n   MyCookie = MyCookieColl[arr1[loop1]];\n   Response.Write(&quot;Cookie: &quot; + MyCookie.Name + &quot;&lt;br&gt;&quot;);\n   Response.Write (&quot;Secure:&quot; + MyCookie.Secure + &quot;&lt;br&gt;&quot;);\n \n   //Grab all values for single cookie into an object array.\n   String[] arr2 = MyCookie.Values.AllKeys;\n\n   //Loop through cookie Value collection and print all values.\n   for (loop2 = 0; loop2 &lt; arr2.Length; loop2++) \n   {\n      Response.Write(&quot;Value&quot; + loop2 + &quot;: &quot; + Server.HtmlEncode(arr2[loop2]) + &quot;&lt;br&gt;&quot;);\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Cookies Example#1\"> Dim loop1, loop2 As Integer\n Dim arr1(), arr2() As String\n Dim MyCookieColl As HttpCookieCollection \n Dim MyCookie As HttpCookie\n \n MyCookieColl = Request.Cookies\n &#39; Capture all cookie names into a string array.\n arr1 = MyCookieColl.AllKeys\n &#39; Grab individual cookie objects by cookie name     \n for loop1 = 0 To arr1.GetUpperBound(0)\n    MyCookie = MyCookieColl(arr1(loop1))\n    Response.Write(&quot;Cookie: &quot; &amp; MyCookie.Name &amp; &quot;&lt;br&gt;&quot;)\n            Response.Write(&quot;Secure:&quot; &amp; MyCookie.Secure &amp; &quot;&lt;br&gt;&quot;)\n \n    &#39; Grab all values for single cookie into an object array.\n    arr2 = MyCookie.Values.AllKeys\n    &#39; Loop through cookie value collection and print all values.\n    for loop2 = 0 To arr2.GetUpperBound(0)\n       Response.Write(&quot;Value &quot; &amp; CStr(loop2) + &quot;: &quot; &amp; Server.HtmlEncode(arr2(loop2)) &amp; &quot;&lt;br&gt;&quot;)\n    Next loop2\n Next loop1\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_CurrentExecutionFilePath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_CurrentExecutionFilePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentExecutionFilePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the virtual path of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CurrentExecutionFilePath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual path of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CurrentExecutionFilePath returns the file path to the currently executing page handler. For redirect scenarios using <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Execute_\" data-linktype=\"relative-path\">Execute</a> and <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a> methods this means that the CurrentExecutionFilePath property returns the path to the page redirected to (child page). However, when the client is redirected to another page, the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_FilePath_\" data-linktype=\"relative-path\">FilePath</a> property returns the path to the original page.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the CurrentExecutionFilePath property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#2\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()))\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.Path))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#2\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()));\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.Path));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_CurrentExecutionFilePathExtension\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_CurrentExecutionFilePathExtension_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentExecutionFilePathExtension</div>        \r\n          </div>\r\n    \r\n            <p>Gets the extension of the file name that is specified in the <span class=\"xref\">stem.Web.HttpRequest.CurrentExecutionFilePath*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CurrentExecutionFilePathExtension { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The extension of the file name that is specified in the <span class=\"xref\">stem.Web.HttpRequest.CurrentExecutionFilePath*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_FilePath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_FilePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the virtual path of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FilePath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual path of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FilePath property does not include the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_PathInfo_\" data-linktype=\"relative-path\">PathInfo</a> trailer. For example, for the URL <a href=\"http://www.contoso.com/virdir/page.html/tail\" data-linktype=\"external\">http://www.contoso.com/virdir/page.html/tail</a>, the FilePath value is /virdir/page.html.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the FilePath property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#2\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()))\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.Path))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#2\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()));\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.Path));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Files\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Files_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Files</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of files uploaded by the client, in multipart MIME format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpFileCollection Files { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpfilecollection\" data-linktype=\"relative-path\">HttpFileCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpfilecollection\" data-linktype=\"relative-path\">HttpFileCollection</a> object representing a collection of files uploaded by the client. The items of the <a class=\"xref\" href=\"system.web.httpfilecollection\" data-linktype=\"relative-path\">HttpFileCollection</a> object are of type <a class=\"xref\" href=\"system.web.httppostedfile\" data-linktype=\"relative-path\">HttpPostedFile</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The file collection is populated only when the HTTP request <code>Content-Type</code> value is &quot;multipart/form-data&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the names of all files in the Files collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Files Example#1\">int loop1;\nHttpFileCollection Files;\n \nFiles = Request.Files; // Load File collection into HttpFileCollection variable.\narr1 = Files.AllKeys;  // This will get names of all files into a string array.\nfor (loop1 = 0; loop1 &lt; arr1.Length; loop1++) \n{\n    Response.Write(&quot;File: &quot; + Server.HtmlEncode(arr1[loop1]) + &quot;&lt;br /&gt;&quot;);\n    Response.Write(&quot;  size = &quot; + Files[loop1].ContentLength + &quot;&lt;br /&gt;&quot;);\n    Response.Write(&quot;  content type = &quot; + Files[loop1].ContentType + &quot;&lt;br /&gt;&quot;);\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Files Example#1\">Dim loop1 As Integer\n Dim arr1() As String\n Dim Files As HttpFileCollection\n \n Files = Request.Files &#39; Load File collection into HttpFileCollection variable.\n arr1 = Files.AllKeys &#39; This will get names of all files into a string array.\n        For loop1 = 0 To arr1.GetUpperBound(0)\n            Response.Write(&quot;File: &quot; &amp; Server.HtmlEncode(arr1(loop1)) &amp; &quot;&lt;br&gt;&quot;)\n            Response.Write(&quot;  size = &quot; + Files(loop1).ContentLength + &quot;&lt;br /&gt;&quot;)\n            Response.Write(&quot;  content type = &quot; + Files(loop1).ContentType + &quot;&lt;br /&gt;&quot;)\n        Next loop1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Filter\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Filter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Filter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the filter to use when reading the current input stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream Filter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object to be used as the filter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates two new classes, <code>QQQ1</code> and <code>QQQ2</code> that filter the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_InputStream_\" data-linktype=\"relative-path\">InputStream</a>. Put the classes into the Global.asax file in an ASP.NET application&#39;s directory so that all input for all ASP.NET Web pages in the application will be filtered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest.Filter#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.Text&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n&#39; This example is meant to be added to a Global.asax file.\n\nSub Application_BeginRequest()\n   Request.Filter = New QQQ1(Request.Filter)\n   Request.Filter = New QQQ2(Request.Filter)\nEnd Sub\n\n&#39; The class QQQ1 changes all lower case alpha chars to upper case.\nPublic Class QQQ1\n   Inherits Stream\n\n   Private _sink As Stream\n\n   Public Sub New(sink As Stream)\n      _sink = sink\n   End Sub\n\n   &#39; All MustOverride interface members must be included.\n   Public Overrides ReadOnly Property CanRead() As Boolean\n      Get \n         Return True\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property CanSeek() As Boolean\n      Get\n         Return False\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property CanWrite() As Boolean\n      Get\n         Return False\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property Length() As Long\n      Get\n         Return _sink.Length\n      End Get\n   End Property\n\n   Public Overrides Property Position() As Long\n      Get\n         Return _sink.Position\n      End Get\n      Set \n         Throw New NotSupportedException()\n      End Set\n   End Property\n\n   Public Overrides Function Read(ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer) As Integer\n      Dim c As Integer = _sink.Read(buffer, offset, count)\n      Dim i As Integer\n      For i = 0 To count - 1\n         If buffer(offset+i) &gt;= Asc(&quot;a&quot;) And buffer(offset+i) &lt;= Asc(&quot;z&quot;) Then\n            buffer(offset+i) = buffer(offset+i) - (Asc(&quot;a&quot;)-Asc(&quot;A&quot;))\n         End If\n      Next i\n      Return c\n   End Function\n\n   Public Overrides Function Seek(ByVal offset As Long, ByVal direction As System.IO.SeekOrigin) As Long\n        Throw New NotSupportedException()\n   End Function\n\n   Public Overrides Sub SetLength(ByVal length As Long)\n      Throw New NotSupportedException()\n   End Sub\n\n   Public Overrides Sub Close()\n      _sink.Close()\n   End Sub\n\n   Public Overrides Sub Flush()\n      _sink.Flush()\n   End Sub\n\n   Public Overrides Sub Write(ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer)\n      Throw New NotSupportedException()\n   End Sub\nEnd Class\n\n\n&#39; The class QQQ2 changes all E characters to asterisks.\nclass QQQ2 \n   Inherits Stream\n    \n   Private _sink As Stream\n\n   Public Sub New(sink As Stream)\n      _sink = sink\n   End Sub\n\n   &#39; All MustOverride interface members must be included.\n   Public Overrides ReadOnly Property CanRead() As Boolean\n      Get  \n         Return true\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property CanSeek() As Boolean\n      Get\n         Return False\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property CanWrite() As Boolean\n      Get \n         Return False\n      End Get\n   End Property\n\n   Public Overrides ReadOnly Property Length() As Long\n      Get\n         Return _sink.Length\n      End Get\n   End Property\n\n   Public Overrides Property Position() As Long\n      Get\n         Return _sink.Position\n      End Get  \n      Set \n         Throw New NotSupportedException()\n      End Set\n   End Property\n\n   Public Overrides Function Read(ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer) As Integer\n      Dim c As Integer = _sink.Read(buffer, offset, count)\n      Dim i As Integer\n      For i = 0 To count-1\n         If buffer(i) = Asc(&quot;E&quot;) Then\n            buffer(i) = Asc(&quot;*&quot;)\n         End If\n      Next i\n      Return c\n   End Function\n\n   Public Overrides Function Seek(ByVal offset As Long, ByVal direction As System.IO.SeekOrigin) As Long\n      Throw New NotSupportedException()\n   End Function\n\n   Public Overrides Sub SetLength(length As Long)\n      Throw New NotSupportedException()\n   End Sub\n\n   Public Overrides Sub Close()\n      _sink.Close()\n   End Sub\n\n   Public Overrides Sub Flush()\n      _sink.Flush()\n   End Sub\n\n   Public Overrides Sub Write(ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer)\n      Throw New NotSupportedException()\n   End Sub\nEnd Class\n\n\n&#39;____________________________________________________________________\n\n&#39; This ASP.NET page uses the request filter to modify all text sent by the \n&#39; browser in Request.InputStream. To test the filter, use this page to take\n&#39; the POSTed output from a data entry page using a tag such as: \n&#39; &lt;form method=&quot;POST&quot; action=&quot;ThisTestPage.aspx&quot;&gt;\n\n&#39;&lt;%@ PAGE LANGUAGE = VB %&gt;\n&#39;&lt;%@ IMPORT namespace=&quot;System.IO&quot; %&gt;\n\n&#39;&lt;html&gt;\n&#39;&lt;Script runat=server&gt;\n\n&#39;   Sub Page_Load()\n&#39;      Dim str As Stream, strmContents As String\n&#39;      Dim counter, strLen As Integer\n \n      &#39; Create a Stream object.\n&#39;      str = Request.InputStream\n\n      &#39; Find number of bytes in stream.\n&#39;      strLen = CInt(str.Length)\n\n      &#39; Create a byte array.\n&#39;      Dim strArr(strLen) As Byte \n\n      &#39; Read stream into byte array.\n&#39;      str.Read(strArr,0,strLen) \n \n      &#39; Convert byte array to a text string.\n&#39;      For counter = 0 To strLen-1\n&#39;         strmContents = strmContents &amp; Chr(strArr(counter))\n&#39;      Next counter\n\n&#39;      Response.Write(&quot;Contents of Filtered InputStream: &quot; &amp; strmContents)\n&#39;   End Sub\n\n&#39; &lt;/html&gt;\n\n&lt;/script&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest.Filter#1\">\n&lt;%@ Page language=&quot;c#&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.Text&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n// This code is to be added to a Global.asax file.\n\npublic void Application_BeginRequest() \n{\n   Request.Filter = new QQQ1(Request.Filter);\n   Request.Filter = new QQQ2(Request.Filter);\n}\n\nclass QQQ1 : Stream\n{\n    private Stream _sink;\n\n    public QQQ1(Stream sink)\n    {\n        _sink = sink;\n    }\n\n    public override bool CanRead\n    {\n        get { return true; }\n    }\n\n    public override bool CanSeek\n    {\n        get { return false; }\n    }\n\n    public override bool CanWrite\n    {\n        get { return false; }\n    }\n\n    public override long Length\n    {\n        get { return _sink.Length; }\n    }\n\n    public override long Position\n    {\n        get { return _sink.Position; }\n        set { throw new NotSupportedException(); }\n    }\n\n    public override int Read(byte[] buffer, int offset, int count)\n    {\n\tint c = _sink.Read(buffer, offset, count);\n\n        for (int i = 0; i &lt; count; i++)\n        {\n            if (buffer[offset+i] &gt;= &#39;a&#39; &amp;&amp; buffer[offset+i] &lt;= &#39;z&#39;)\n                buffer[offset+i] -= (&#39;a&#39;-&#39;A&#39;);\n        }\n\n        return c;\n    }\n\n    public override long Seek(long offset, System.IO.SeekOrigin direction)\n    {\n        throw new NotSupportedException();\n    }\n\n    public override void SetLength(long length)\n    {\n        throw new NotSupportedException();\n    }\n\n    public override void Close()\n    {\n        _sink.Close();\n    }\n\n    public override void Flush()\n    {\n        _sink.Flush();\n    }\n\n    public override void Write(byte[] buffer, int offset, int count)\n    {\n\tthrow new NotSupportedException();\n    }\n}\n\nclass QQQ2 : Stream\n{\n    private Stream _sink;\n\n    public QQQ2(Stream sink)\n    {\n        _sink = sink;\n    }\n\n    public override bool CanRead\n    {\n        get { return true; }\n    }\n\n    public override bool CanSeek\n    {\n        get { return false; }\n    }\n\n    public override bool CanWrite\n    {\n        get { return false; }\n    }\n\n    public override long Length\n    {\n        get { return _sink.Length; }\n    }\n\n    public override long Position\n    {\n        get { return _sink.Position; }\n        set { throw new NotSupportedException(); }\n    }\n\n    public override int Read(byte[] buffer, int offset, int count)\n    {\n\tint c = _sink.Read(buffer, offset, count);\n\n        for (int i = 0; i &lt; count; i++)\n        {\n            if (buffer[i] == &#39;E&#39;)\n                buffer[i] = (byte)&#39;*&#39;;\n            else if (buffer[i] == &#39;e&#39;)\n                buffer[i] = (byte)&#39;#&#39;;\n        }\n        return c;\n    }\n\n    public override long Seek(long offset, System.IO.SeekOrigin direction)\n    {\n        throw new NotSupportedException();\n    }\n\n    public override void SetLength(long length)\n    {\n        throw new NotSupportedException();\n    }\n\n    public override void Close()\n    {\n        _sink.Close();\n    }\n\n    public override void Flush()\n    {\n        _sink.Flush();\n    }\n\n    public override void Write(byte[] buffer, int offset, int count)\n    {\n\tthrow new NotSupportedException();\n    }\n}\n\n\n/*____________________________________________________________________\n\nThis ASP.NET page uses the request filter to modify all text sent by the \nbrowser in Request.InputStream. To test the filter, use this page to take\nthe POSTed output from a data entry page using a tag such as: \n&lt;form method=&quot;POST&quot; action=&quot;ThisTestPage.aspx&quot;&gt;\n\n\n&lt;%@ PAGE LANGUAGE = C# %&gt;\n&lt;%@ IMPORT namespace=&quot;System.IO&quot; %&gt;\n\n&lt;html&gt;\n&lt;Script runat=server&gt;\n   void Page_Load()\n   {\n \n      // Create a Stream object to capture entire InputStream from browser.\n      Stream str = Request.InputStream;\n   \n      // Find number of bytes in stream.\n      int strLen = (int)str.Length;\n\n      // Create a byte array to hold stream.\n      byte[] bArr = new byte[strLen];\n\n      // Read stream into byte array.\n      str.Read(bArr,0,strLen);\n \n      // Convert byte array to a text string.\n      String strmContents=&quot;&quot;;\n      for(int i = 0; i &lt; strLen; i++)\n         strmContents = strmContents + (Char)bArr[i];\n     \n      // Display filtered stream in browser.\n      Response.Write(&quot;Contents of Filtered InputStream: &lt;br&gt;&quot; + strmContents);\n   }\n______________________________________________________________________*/\n\n&lt;/script&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Form\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Form_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Form</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of form variables.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection Form { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> representing a collection of form variables.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Form property is populated when the HTTP request <code>Content-Type</code> value is either &quot;application/x-www-form-urlencoded&quot; or &quot;multipart/form-data&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to read the values in the form collection posted from a browser. Each name/value pair in the collection represents a control in the form and its value.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Form Example#1\">Dim loop1 As Integer\nDim arr1() As String\nDim coll As NameValueCollection\n \n&#39; Load Form variables into NameValueCollection variable.\ncoll=Request.Form\n\n&#39; Get names of all forms into a string array.\narr1 = coll.AllKeys\nFor loop1 = 0 To arr1.GetUpperBound(0)\n   Response.Write(&quot;Form: &quot; &amp; arr1(loop1) &amp; &quot;&lt;br&gt;&quot;)\nNext loop1\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Form Example#1\">int loop1;\nNameValueCollection coll;\n \n//Load Form variables into NameValueCollection variable.\ncoll=Request.Form;\n// Get names of all forms into a string array.\nString[] arr1 = coll.AllKeys;\nfor (loop1 = 0; loop1 &lt; arr1.Length; loop1++) \n{\n   Response.Write(&quot;Form: &quot; + arr1[loop1] + &quot;&lt;br&gt;&quot;);\n}\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Headers\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of HTTP headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> of headers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a listing of all possible headers, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=73147\" data-linktype=\"external\">Request Header Fields</a> on the W3C Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the names and values of all headers in the HTTP request.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Headers Example#1\">int loop1, loop2;\nNameValueCollection coll;\n \n// Load Header collection into NameValueCollection object.\ncoll=Request.Headers;\n\n// Put the names of all keys into a string array.\nString[] arr1 = coll.AllKeys; \nfor (loop1 = 0; loop1&lt;arr1.Length; loop1++) \n{\n   Response.Write(&quot;Key: &quot; + arr1[loop1] + &quot;&lt;br&gt;&quot;);\n   // Get all values under this key.\n   String[] arr2=coll.GetValues(arr1[loop1]);\n   for (loop2 = 0; loop2&lt;arr2.Length; loop2++) \n   {\n      Response.Write(&quot;Value &quot; + loop2 + &quot;: &quot; + Server.HtmlEncode(arr2[loop2]) + &quot;&lt;br&gt;&quot;);\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Headers Example#1\">Dim loop1, loop2 As Integer\n Dim arr1(), arr2() As String\n Dim coll As NameValueCollection\n \n\n&#39; Load Header collection into NameValueCollection object.\ncoll=Request.Headers\n\n&#39; Put the names of all keys into a string array.\narr1 = coll.AllKeys \nFor loop1 = 0 To arr1.GetUpperBound(0)\n   Response.Write(&quot;Key: &quot; &amp; arr1(loop1) &amp; &quot;&lt;br&gt;&quot;)\n   arr2 = coll.GetValues(loop1) \n   &#39; Get all values under this key.\n   For loop2 = 0 To arr2.GetUpperBound(0)\n      Response.Write(&quot;Value &quot; &amp; CStr(loop2) &amp; &quot;: &quot; &amp; Server.HtmlEncode(arr2(loop2)) &amp; &quot;&lt;br&gt;&quot;)\n    Next loop2\n Next loop1\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_HttpChannelBinding\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_HttpChannelBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpChannelBinding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.security.authentication.extendedprotection.channelbinding\" data-linktype=\"relative-path\">ChannelBinding</a> object of the current <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.authentication.extendedprotection.channelbinding\" data-linktype=\"relative-path\">ChannelBinding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.authentication.extendedprotection.channelbinding\" data-linktype=\"relative-path\">ChannelBinding</a> object of the current <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> object is not a <code>System.Web.Hosting.IIS7WorkerRequest</code> object or a <code>System.Web.Hosting.ISAPIWorkerRequestInProc</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_HttpMethod\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_HttpMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets the HTTP data transfer method (such as <code>GET</code>, <code>POST</code>, or <code>HEAD</code>) used by the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string HttpMethod { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The HTTP data transfer method used by the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the HttpMethod property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#7\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName))\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#7\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName));\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod));\n</code></pre><p> The following example shows output that is produced by this code.  </p>\n<p> <code>GET</code>  </p>\n<p> <code>127.0.0.1</code>  </p>\n<p> <code>127.0.0.1</code>  </p>\n<p> <code>GET</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_InputStream\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_InputStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputStream</div>        \r\n          </div>\r\n    \r\n            <p>Gets the contents of the incoming HTTP entity body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream InputStream { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object representing the contents of the incoming HTTP content body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example copies the contents of an InputStream into a string.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.InputStream Example#1\">\n        System.IO.Stream str; String strmContents;\n        Int32 counter, strLen, strRead;\n        // Create a Stream object.\n        str = Request.InputStream;\n        // Find number of bytes in stream.\n        strLen = Convert.ToInt32(str.Length);\n        // Create a byte array.\n        byte[] strArr = new byte[strLen];\n        // Read stream into byte array.\n        strRead = str.Read(strArr, 0, strLen);\n                        \n        // Convert byte array to a text string.\n        strmContents = &quot;&quot;;\n        for (counter = 0; counter &lt; strLen; counter++)\n        {\n            strmContents = strmContents + strArr[counter].ToString();            \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.InputStream Example#1\">Dim str As System.IO.Stream, strmContents As String\nDim counter, strLen, strRead As Integer\n \n&#39; Create a Stream object.\nstr = Request.InputStream\n&#39; Find number of bytes in stream.\nstrLen = CInt(str.Length)\n&#39; Create a byte array.\nDim strArr(strLen) As Byte \n&#39; Read stream into byte array.\nstrRead = str.Read(strArr,0,strLen) \n \n&#39; Convert byte array to a text string.\nFor counter = 0 To strLen-1\n   strmContents = strmContents &amp; strArr(counter).ToString()\nNext counter\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_IsAuthenticated\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_IsAuthenticated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAuthenticated</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the request has been authenticated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAuthenticated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the request is authenticated; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the IsAuthenticated property to determine whether the current request has been authenticated. If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application. This is a common technique used in the default page for an application.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample3#1\">    Private Sub Page_Load(sender As Object, e As EventArgs)\n        &#39; Check whether the current request has been\n        &#39; authenticated. If it has not, redirect the \n        &#39; user to the Login.aspx page.\n        If (Request.IsAuthenticated = False) Then\n            Response.Redirect(&quot;Login.aspx&quot;)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample3#1\">    private void Page_Load(object sender, EventArgs e)\n    {\n        // Check whether the current request has been\n        // authenticated. If it has not, redirect the \n        // user to the Login.aspx page.\n        if (!Request.IsAuthenticated)\n        {\n            Response.Redirect(&quot;Login.aspx&quot;);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_IsLocal\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_IsLocal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLocal</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the request is from the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsLocal { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the request is from the local computer; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsLocal property returns <code>true</code> if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server&#39;s IP address.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_IsSecureConnection\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_IsSecureConnection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSecureConnection</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSecureConnection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the connection is an SSL connection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether the IsSecureConnection property is set to false. If it is, the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_SuppressContent_\" data-linktype=\"relative-path\">SuppressContent</a> property is set to true to stop the response from being sent.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#3\">        // Check whether the request is sent\n        // over HTTPS. If not, do not send \n        // content to the client.    \n        if (!Request.IsSecureConnection)\n        {\n            Response.SuppressContent = true;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#3\">        &#39; Check whether the request is sent\n        &#39; over HTTPS. If not, do not return\n        &#39; content to the client.\n        If (Request.IsSecureConnection = False) Then      \n            Response.SuppressContent = True\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Item_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the specified object from the <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, or <span class=\"xref\">stem.Web.HttpRequest.ServerVariables*</span> collections.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string this[string key] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the collection member to get.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, or <span class=\"xref\">stem.Web.HttpRequest.ServerVariables*</span> collection member specified in the <code>key</code> parameter. If the specified <code>key</code> is not found, then <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_LogonUserIdentity\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_LogonUserIdentity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogonUserIdentity</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> type for the current user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object for the current Microsoft Internet Information Services (IIS) authentication settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The Web application is running in IIS 7 integrated mode and the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_PostAuthenticateRequest\" data-linktype=\"relative-path\">PostAuthenticateRequest</a> event has not yet been raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LogonUserIdentity property exposes the properties and methods of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object for the currently connected user to Microsoft Internet Information Services (IIS). The instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class that is exposed by LogonUserIdentity tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET. An instance of the <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to retrieve the LogonUserIdentity property for the current user and write out the values of each item in a text file. Place this code on the ASP.NET page referenced by the form&#39;s <code>ACTION</code> attribute.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_LogonUserIdentity#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    \n    &#39; * NOTE: To use this sample, create a c:&nbsp;&nbsp;&nbsp;&nbsp;emp  folder,\n    &#39; *  add the ASP.NET account (in IIS 5.x &lt;machinename&gt;\\ASPNET,\n    &#39; *  in IIS 6.x NETWORK SERVICE), and give it write permissions\n    &#39; *  to the folder.\n\n    Private Const INFO_DIR As String = &quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp\\&quot;\n\n    Private Sub Page_Load(sender As Object, e As System.EventArgs)\n   \n        &#39; Validate that user is authenticated\n        If Not (Request.LogonUserIdentity.IsAuthenticated) Then\n            Response.Redirect(&quot;LoginPage.aspx&quot;)\n        End If\n        \n        &#39; Create a string that contains the file path\n        Dim strFilePath As String = INFO_DIR &amp; &quot;VB_Log.txt&quot;\n        \n        Response.Write(&quot;Writing log file to &quot; &amp; strFilePath &amp; &quot;...&quot;)\n        \n        &#39; Create stream writer object and pass it the file path\n        Dim sw As StreamWriter = File.CreateText(strFilePath)\n        \n        &#39; Write user info to log\n        sw.WriteLine(&quot;Access log from &quot; &amp; DateTime.Now.ToString())\n        sw.WriteLine(&quot;User: &quot; &amp; Request.LogonUserIdentity.User.ToString())\n        sw.WriteLine(&quot;Name: &quot; &amp; Request.LogonUserIdentity.Name)\n        sw.WriteLine(&quot;AuthenticationType: &quot; &amp; Request.LogonUserIdentity.AuthenticationType)\n        sw.WriteLine(&quot;ImpersonationLevel: &quot; &amp; Request.LogonUserIdentity.ImpersonationLevel)\n        sw.WriteLine(&quot;IsAnonymous: &quot; &amp; Request.LogonUserIdentity.IsAnonymous)\n        sw.WriteLine(&quot;IsGuest: &quot; &amp; Request.LogonUserIdentity.IsGuest)\n        sw.WriteLine(&quot;IsSystem: &quot; &amp; Request.LogonUserIdentity.IsSystem)\n        sw.WriteLine(&quot;Owner: &quot; &amp; Request.LogonUserIdentity.Owner.ToString())\n        sw.WriteLine(&quot;Token: &quot; &amp; Request.LogonUserIdentity.Token.ToString())\n\n        &#39; Close the stream to the file.\n        sw.Close()\n    End Sub\n\n&lt;/script&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_LogonUserIdentity#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    \n    /* NOTE: To use this sample, create a c:&nbsp;&nbsp;&nbsp;&nbsp;emp  folder,\n    *  add the ASP.NET account (in IIS 5.x &lt;machinename&gt;\\ASPNET,\n    *  in IIS 6.x NETWORK SERVICE), and give it write permissions\n    *  to the folder.*/\n\n    private const string INFO_DIR = @&quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp\\&quot;;\n\n    private void Page_Load(object sender, System.EventArgs e)\n    {\n        // Validate that user is authenticated\n        if (!Request.LogonUserIdentity.IsAuthenticated)\n            Response.Redirect(&quot;LoginPage.aspx&quot;);\n        \n        // Create a string that contains the file path\n        string strFilePath = INFO_DIR + &quot;CS_Log.txt&quot;;\n        \n        Response.Write(&quot;Writing log file to &quot; + strFilePath + &quot;...&quot;);\n        \n        // Create stream writer object and pass it the file path\n        StreamWriter sw = File.CreateText(strFilePath);\n        \n        // Write user info to log\n        sw.WriteLine(&quot;Access log from &quot; + DateTime.Now.ToString());\n        sw.WriteLine(&quot;User: &quot; + Request.LogonUserIdentity.User);\n        sw.WriteLine(&quot;Name: &quot; + Request.LogonUserIdentity.Name);\n        sw.WriteLine(&quot;AuthenticationType: &quot; + Request.LogonUserIdentity.AuthenticationType);\n        sw.WriteLine(&quot;ImpersonationLevel: &quot; + Request.LogonUserIdentity.ImpersonationLevel);\n        sw.WriteLine(&quot;IsAnonymous: &quot; + Request.LogonUserIdentity.IsAnonymous);\n        sw.WriteLine(&quot;IsGuest: &quot; + Request.LogonUserIdentity.IsGuest);\n        sw.WriteLine(&quot;IsSystem: &quot; + Request.LogonUserIdentity.IsSystem);\n        sw.WriteLine(&quot;Owner: &quot; + Request.LogonUserIdentity.Owner);\n        sw.WriteLine(&quot;Token: &quot; + Request.LogonUserIdentity.Token);\n\n        // Close the stream to the file.\n        sw.Close();\n    }  \n&lt;/script&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Params\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Params_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Params</div>        \r\n          </div>\r\n    \r\n            <p>Gets a combined collection of <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, and <span class=\"xref\">stem.Web.HttpRequest.ServerVariables*</span> items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection Params { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Name-value pairs are added to the collection in the following order:  </p>\n<ol>\n<li><p>Query-string parameters.  </p>\n</li>\n<li><p>Form fields.  </p>\n</li>\n<li><p>Cookies.  </p>\n</li>\n<li><p>Server variables.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to loop through the Params property for a page and how to display each key/value pair.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest.Params#1\">&lt;%@ Page Language=&quot;C#&quot;%&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n        // Create a string to contain the paramaters&#39;\n        // information.\n        string paramInfo = &quot;&quot;;\n\n        // Obtain a reference to the Request.Params\n        // collection.\n        NameValueCollection pColl = Request.Params;\n\n        // Iterate through the collection and add\n        // each key to the string variable.\n        for(int i = 0; i &lt;= pColl.Count - 1; i++)\n        {\n            paramInfo += &quot;Key: &quot; + pColl.GetKey(i) + &quot;&lt;br /&gt;&quot;;\n\n            // Create a string array that contains\n            // the values associated with each key.\n            string[] pValues = pColl.GetValues(i);\n\n            // Iterate through the array and add\n            // each value to the string variable.\n            for(int j = 0; j &lt;= pValues.Length - 1; j++)\n            {\n                paramInfo += &quot;Value:&quot; + pValues[j] + &quot;&lt;br /&gt;&lt;br /&gt;&quot;;\n\n            }\n        }\n\n        // Set a Label&#39;s Text property to the values\n        // contained in the string variable.\n        lblValues.Text = paramInfo;\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;asp:Label id=&quot;lblValues&quot; runat=&quot;server&quot; /&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest.Params#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Private Sub Page_Load(sender As Object, e As EventArgs)\n\n        &#39; Create a string to contain the paramaters&#39;\n        &#39; information.\n        Dim paramInfo As String = &quot;&quot;\n\n        Dim i, j As Integer\n\n        &#39; Obtain a reference to the Request.Params\n        &#39; collection.\n        Dim pColl As NameValueCollection = Request.Params\n\n        &#39; Iterate through the collection and add\n        &#39; each key to the string variable.\n        For i = 0 To pColl.Count - 1\n\n            paramInfo += &quot;Key: &quot; + pColl.GetKey(i) + &quot;&lt;br /&gt;&quot;\n\n            &#39; Create a string array that contains\n            &#39; the values associated with each key.\n            Dim pValues() As String  = pColl.GetValues(i)\n\n            &#39; Iterate through the array and add\n            &#39; each value to the string variable.\n            For j = 0 To pValues.Length - 1\n\n                paramInfo += &quot;Value:&quot; + pValues(j) + &quot;&lt;br /&gt;&lt;br /&gt;&quot;\n\n            Next j\n        Next i\n\n        &#39; Set a Label&#39;s Text property to the values\n        &#39; contained in the string variable.\n        lblValues.Text = paramInfo\n    End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;asp:Label id=&quot;lblValues&quot; runat=&quot;server&quot; /&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Path\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Path_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Path</div>        \r\n          </div>\r\n    \r\n            <p>Gets the virtual path of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Path { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The virtual path of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Path is the concatenation of the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_FilePath_\" data-linktype=\"relative-path\">FilePath</a> and the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_PathInfo_\" data-linktype=\"relative-path\">PathInfo</a> trailer. For example, for the URL <a href=\"http://www.contoso.com/virdir/page.html/tail\" data-linktype=\"external\">http://www.contoso.com/virdir/page.html/tail</a>, the Path is /virdir/page.html/tail.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the Path property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#2\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()))\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath))\n            sw.WriteLine(Server.HtmlEncode(Request.Path))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#2\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(DateTime.Now.ToString()));\n            sw.WriteLine(Server.HtmlEncode(Request.CurrentExecutionFilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.ApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.FilePath));\n            sw.WriteLine(Server.HtmlEncode(Request.Path));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_PathInfo\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_PathInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PathInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets the additional path information for a resource with a URL extension.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PathInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The additional path information for a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the URL Http://www.contoso.com/virdir/page.html/tail, the PathInfo value is /tail.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether the PathInfo property contains an empty string. If it does, the <a class=\"xref\" href=\"system.io.streamwriter#System_IO_StreamWriter_Write_\" data-linktype=\"relative-path\">Write</a> method writes a string indicating this to a file. If it does not, the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method HTML-encodes the value of the PathInfo property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method writes the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#4\">            &#39; Write the PathInfo property value\n            &#39; or a string if it is empty.\n            If Request.PathInfo = String.Empty Then\n                sw.WriteLine(&quot;The PathInfo property contains no information.&quot;)\n            Else\n                sw.WriteLine(Server.HtmlEncode(Request.PathInfo))\n            End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#4\">            // Write the PathInfo property value\n            // or a string if it is empty.\n            if (Request.PathInfo == String.Empty)\n            {\n                sw.WriteLine(&quot;The PathInfo property contains no information.&quot;);\n            }\n            else\n            {\n                sw.WriteLine(Server.HtmlEncode(Request.PathInfo));\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_PhysicalApplicationPath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_PhysicalApplicationPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PhysicalApplicationPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the physical file system path of the currently executing server application&#39;s root directory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PhysicalApplicationPath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file system path of the current application&#39;s root directory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the PhysicalApplicationPath property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#5\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath))\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#5\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath));\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_PhysicalPath\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_PhysicalPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PhysicalPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the physical file system path corresponding to the requested URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PhysicalPath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file system path of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In redirect scenarios using <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Execute_\" data-linktype=\"relative-path\">Execute</a> and <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a>, the PhysicalPath property returns the path to the original page. To find the physical path of the currently executing page use the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_MapPath_\" data-linktype=\"relative-path\">MapPath</a> method with the input argument set as the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_CurrentExecutionFilePath_\" data-linktype=\"relative-path\">CurrentExecutionFilePath</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the PhysicalPath property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#5\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath))\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#5\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath));\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_QueryString\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_QueryString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">QueryString</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of HTTP query string variables.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection QueryString { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>The query string variables sent by the client. Keys and values are URL-decoded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows two ways to get the value of a query string variable named â€œfullnameâ€. In each case, if the URL is <code>http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri</code>, then the value returned is &quot;Fadi Fakhouri&quot; because the <code>%20</code> is URL-decoded into a space character. If the URL doesnâ€™t have a <code>fullname</code> query string ID, the returned value would be <code>null</code>.  </p>\n<p> The first line of code looks for the key â€œfullnameâ€ only in the query string; the second line looks for the key â€œfullnameâ€ in all of the HTTP request collections. For more information about the second line, see <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Item_\" data-linktype=\"relative-path\">Item</a>.  </p>\n<pre><code class=\"lang-c#\">string fullname1 = Request.QueryString[&quot;fullname&quot;];  \nstring fullname2 = Request[&quot;fullname&quot;];\n</code></pre><pre><code class=\"lang-vb\">Dim fullname1 As String = Request.QueryString(&quot;fullname&quot;)  \nDim fullname2 As String = Request(&quot;fullname&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_RawUrl\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_RawUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RawUrl</div>        \r\n          </div>\r\n    \r\n            <p>Gets the raw URL of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string RawUrl { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The raw URL of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The raw URL is defined as the part of the URL following the domain information. In the URL string <a href=\"http://www.contoso.com/articles/recent.aspx\" data-linktype=\"external\">http://www.contoso.com/articles/recent.aspx</a>, the raw URL is /articles/recent.aspx. The raw URL includes the query string, if present.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the RawUrl property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#5\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath))\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath))\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#5\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalApplicationPath));\n            sw.WriteLine(Server.HtmlEncode(Request.PhysicalPath));\n            sw.WriteLine(Server.HtmlEncode(Request.RawUrl));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ReadEntityBodyMode\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ReadEntityBodyMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadEntityBodyMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.readentitybodymode\" data-linktype=\"relative-path\">ReadEntityBodyMode</a></div>\r\n                  </div>\r\n                  <p>The value that indicates how the request entity body was read, or that it has not been read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method. Methods and properties that read the entity body include the following:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Form_\" data-linktype=\"relative-path\">Form</a> property.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Files_\" data-linktype=\"relative-path\">Files</a> property.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_InputStream_\" data-linktype=\"relative-path\">InputStream</a> property.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_GetBufferedInputStream_\" data-linktype=\"relative-path\">GetBufferedInputStream</a> method.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_GetBufferlessInputStream_\" data-linktype=\"relative-path\">GetBufferlessInputStream</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_RequestContext\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_RequestContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequestContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.routing.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> instance of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Routing.RequestContext RequestContext { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.requestcontext\" data-linktype=\"relative-path\">RequestContext</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.routing.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> instance of the current request. For non-routed requests, the <a class=\"xref\" href=\"system.web.routing.requestcontext\" data-linktype=\"relative-path\">RequestContext</a> object that is returned is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property provides access to the <a class=\"xref\" href=\"system.web.routing.routedata\" data-linktype=\"relative-path\">RouteData</a> object for the current request. For more information about ASP.NET routing, see.<a href=\"../Topic/ASP.NET%20Routing.md\" data-linktype=\"relative-path\">ASP.NET Routing</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_RequestType\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_RequestType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequestType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP data transfer method (<code>GET</code> or <code>POST</code>) used by the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string RequestType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representing the HTTP invocation type sent by the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the RequestType property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#7\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName))\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#7\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName));\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ServerVariables\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ServerVariables_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServerVariables</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of Web server variables.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection ServerVariables { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> of server variables.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a list of server variables supported by IIS, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=52471\" data-linktype=\"external\">IIS Server Variables</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the names and values of all named server variables.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.ServerVariables Example#1\">int loop1, loop2;\nNameValueCollection coll;\n \n// Load ServerVariable collection into NameValueCollection object.\ncoll=Request.ServerVariables; \n// Get names of all keys into a string array. \nString[] arr1 = coll.AllKeys; \nfor (loop1 = 0; loop1 &lt; arr1.Length; loop1++) \n{\n   Response.Write(&quot;Key: &quot; + arr1[loop1] + &quot;&lt;br&gt;&quot;);\n   String[] arr2=coll.GetValues(arr1[loop1]);\n   for (loop2 = 0; loop2 &lt; arr2.Length; loop2++) {\n      Response.Write(&quot;Value &quot; + loop2 + &quot;: &quot; + Server.HtmlEncode(arr2[loop2]) + &quot;&lt;br&gt;&quot;);\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.ServerVariables Example#1\">Dim loop1, loop2 As Integer\nDim arr1(), arr2() As String\nDim coll As NameValueCollection\n \n&#39; Load ServerVariable collection into NameValueCollection object.\ncoll=Request.ServerVariables \n&#39; Get names of all keys into a string array.\narr1 = coll.AllKeys \nFor loop1 = 0 To arr1.GetUpperBound(0)\n   Response.Write(&quot;Key: &quot; &amp; arr1(loop1) &amp; &quot;&lt;br&gt;&quot;)\n   arr2 = coll.GetValues(loop1) &#39; Get all values under this key.\n   For loop2 = 0 To arr2.GetUpperBound(0)\n      Response.Write(&quot;Value &quot; &amp; CStr(loop2) &amp; &quot;: &quot; &amp; Server.HtmlEncode(arr2(loop2)) &amp; &quot;&lt;br&gt;&quot;)\n   Next loop2\nNext loop1\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_TimedOutToken\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_TimedOutToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimedOutToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> object that is tripped when a request times out.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationToken TimedOutToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </div>\r\n                  <p>The cancellation token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The timeout period can be specified in the Web.config file (see <a class=\"xref\" href=\"system.web.configuration.httpruntimesection#System_Web_Configuration_HttpRuntimeSection_ExecutionTimeout_\" data-linktype=\"relative-path\">ExecutionTimeout</a>) or programmatically (see <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_ScriptTimeout_\" data-linktype=\"relative-path\">ScriptTimeout</a>). The timeout period is measured from the time the request comes in. If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins. You can change the <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_ScriptTimeout_\" data-linktype=\"relative-path\">ScriptTimeout</a> property value, and as long this token hasn&#39;t tripped yet, the new timeout value will be respected.  </p>\n<p> Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins. The granularity may change in the future.  </p>\n<p> Even though this property is thread-safe, there are restrictions on its use. For more information, see <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ClientDisconnectedToken_\" data-linktype=\"relative-path\">ClientDisconnectedToken</a>.  </p>\n<p> This property is meaningless if WebSockets request processing has started.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_TlsTokenBindingInfo\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_TlsTokenBindingInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TlsTokenBindingInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets the TLS token binding information. The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.itlstokenbindinginfo\" data-linktype=\"relative-path\">ITlsTokenBindingInfo</a></div>\r\n                  </div>\r\n                  <p>The binding token for the current connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns <code>null</code> on non-windows10 platforms.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_TotalBytes\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_TotalBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TotalBytes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of bytes in the current input stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TotalBytes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes in the input stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether the TotalBytes property value is greater than 1000 bytes and writes that information to a file.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#6\">            &#39; Write a message to the file dependent upon\n            &#39; the value of the TotalBytes property.\n            If Request.TotalBytes &gt; 1000 Then\n                sw.WriteLine(&quot;The request is 1KB or greater&quot;)\n            Else\n                sw.WriteLine(&quot;The request is less than 1KB&quot;)\n            End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#6\">            // Write a message to the file dependent upon\n            // the value of the TotalBytes property.\n            if (Request.TotalBytes &gt; 1000)\n            {\n                sw.WriteLine(&quot;The request is 1KB or greater&quot;);\n            }\n            else\n            {\n                sw.WriteLine(&quot;The request is less than 1KB&quot;);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Unvalidated\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Unvalidated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unvalidated</div>        \r\n          </div>\r\n    \r\n            <p>Gets the HTTP request values without triggering request validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UnvalidatedRequestValues Unvalidated { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.unvalidatedrequestvalues\" data-linktype=\"relative-path\">UnvalidatedRequestValues</a></div>\r\n                  </div>\r\n                  <p>The HTTP request values that have not been checked using request validation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack. By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <a class=\"xref\" href=\"system.web.httprequestvalidationexception\" data-linktype=\"relative-path\">HttpRequestValidationException</a> exception. Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If you use this property, you must manually check the data for potential cross-site scripting attacks.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Url\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Url_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Url</div>        \r\n          </div>\r\n    \r\n            <p>Gets information about the URL of the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri Url { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object that contains the URL of the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example assigns the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.Url Example#1\">Uri MyUrl = Request.Url;\n Response.Write(&quot;URL Port: &quot; + MyUrl.Port + &quot;&lt;br&gt;&quot;);\n Response.Write(&quot;URL Protocol: &quot; + Server.HtmlEncode(MyUrl.Scheme) + &quot;&lt;br&gt;&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.Url Example#1\">Dim MyUrl As Uri = Request.Url\n Response.Write(&quot;URL Port: &quot; &amp; MyUrl.Port &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;URL Protocol: &quot; &amp; Server.HtmlEncode(MyUrl.Scheme) &amp; &quot;&lt;br&gt;&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_UrlReferrer\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_UrlReferrer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UrlReferrer</div>        \r\n          </div>\r\n    \r\n            <p>Gets information about the URL of the client&#39;s previous request that linked to the current URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri UrlReferrer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The HTTP <code>Referer</code> request header is malformed and cannot be converted to a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of two properties of the URL that referred the client to the current application.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.UrlReferrer Example#1\">Uri MyUrl = Request.UrlReferrer;\n Response.Write(&quot;Referrer URL Port: &quot; + Server.HtmlEncode(MyUrl.Port.ToString()) + &quot;&lt;br&gt;&quot;);\n Response.Write(&quot;Referrer URL Protocol: &quot; + Server.HtmlEncode(MyUrl.Scheme) + &quot;&lt;br&gt;&quot;);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.UrlReferrer Example#1\">Dim MyUrl As Uri = Request.UrlReferrer\n Response.Write(&quot;Referrer URL Port: &quot; &amp; Server.HtmlEncode(MyUrl.Port.ToString()) &amp; &quot;&lt;br&gt;&quot;)\n Response.Write(&quot;Referrer URL Protocol: &quot; &amp; Server.HtmlEncode(MyUrl.Scheme) &amp; &quot;&lt;br&gt;&quot;)\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_UserAgent\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_UserAgent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserAgent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the raw user agent string of the client browser.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserAgent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The raw user agent string of the client browser.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example assigns the type identification of the requesting browser to a string variable.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpRequest.UserAgent Example#1\">String userAgent;\nuserAgent = Request.UserAgent;\nif (userAgent.IndexOf(&quot;MSIE 6.0&quot;) &gt; -1) \n{\n   // The browser is Microsoft Internet Explorer Version 6.0.\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpRequest.UserAgent Example#1\">Dim userAgent As String\n userAgent= Request.UserAgent\n If userAgent.IndexOf(&quot;MSIE 6.0&quot;) &gt; -1 Then\n    &#39; The browser is Microsoft Internet Explorer 6.0.\n End If\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_UserHostAddress\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_UserHostAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserHostAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets the IP host address of the remote client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserHostAddress { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The IP address of the remote client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the UserHostAddress property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#7\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName))\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#7\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName));\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_UserHostName\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_UserHostName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserHostName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the DNS name of the remote client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserHostName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The DNS name of the remote client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.web.httputility#System_Web_HttpUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML-encode the value of the UserHostName property and the <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method to write the encoded value to the file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample1#7\">            &#39; Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress))\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName))\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample1#7\">            // Write request information to the file with HTML encoding.\n            sw.WriteLine(Server.HtmlEncode(Request.RequestType));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostAddress));\n            sw.WriteLine(Server.HtmlEncode(Request.UserHostName));\n            sw.WriteLine(Server.HtmlEncode(Request.HttpMethod));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_UserLanguages\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_UserLanguages_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserLanguages</div>        \r\n          </div>\r\n    \r\n            <p>Gets a sorted string array of client language preferences.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] UserLanguages { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>A sorted string array of client language preferences, or <code>null</code> if empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example captures the multiple values returned by the UserLanguages property into a string array and writes each language name to a separate line of HTTP output.  </p>\n<p> The language names are provided by the browser, and there is no definitive list of all possible codes.  Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as &quot;en-us&quot; for U.S. English and &quot;fr-ca&quot; for Canadian French.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpRequest.UserLanguages Example#1\">Dim userLang() As String\n Dim count As Integer\n \n userLang = Request.UserLanguages\n For count = 0 To userLang.GetUpperBound(0)\n    Response.Write(&quot;User Language: &quot; &amp; Cstr(userLang(count)) &amp; &quot;&lt;br&gt;&quot;)\n Next count\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpRequest.UserLanguages Example#1\">int count;\nString[] userLang = Request.UserLanguages;    \n \nfor (count = 0; count &lt; userLang.Length; count++) \n{\n   Response.Write(&quot;User Language &quot; + count +&quot;: &quot; + userLang[count] + &quot;&lt;br&gt;&quot;);\n}\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_Abort\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_Abort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Abort()</div>        \r\n          </div>\r\n    \r\n            <p>Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail. You might use this method in response to an attack by a malicious HTTP client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Abort ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is thread-safe. Any thread may call it at any time.  </p>\n<p> This method can only be used in integrated mode. If you invoke it in classic mode, an exception is thrown. To determine the pipeline mode, use <a class=\"xref\" href=\"system.web.httpruntime#System_Web_HttpRuntime_UsingIntegratedPipeline_\" data-linktype=\"relative-path\">UsingIntegratedPipeline</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_BinaryRead_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_BinaryRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BinaryRead(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a binary read of a specified number of bytes from the current input stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] BinaryRead (int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>count</code> is 0.  </p>\n<p> - or -  </p>\n<p> <code>count</code> is greater than the number of bytes available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BinaryRead method is provided for compatibility with ASP.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_GetBufferedInputStream\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_GetBufferedInputStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBufferedInputStream()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream GetBufferedInputStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The request&#39;s entity body has already been loaded and parsed. Examples of properties that cause the entity body to be loaded and parsed include the following:  </p>\n<ul>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.Form*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.Files*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.InputStream*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.GetBufferlessInputStream*</span> method.  </p>\n<p>To avoid this exception, call the <span class=\"xref\">stem.Web.HttpRequest.ReadEntityBodyMode*</span> method first. This exception is also thrown if the client disconnects while the entity body is being read.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is identical to <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_GetBufferlessInputStream_\" data-linktype=\"relative-path\">GetBufferlessInputStream</a> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Form_\" data-linktype=\"relative-path\">Form</a>, <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Files_\" data-linktype=\"relative-path\">Files</a>, and <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_InputStream_\" data-linktype=\"relative-path\">InputStream</a> properties. Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully. This is not the case with the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_GetBufferlessInputStream_\" data-linktype=\"relative-path\">GetBufferlessInputStream</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_GetBufferlessInputStream\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_GetBufferlessInputStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBufferlessInputStream()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream GetBufferlessInputStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The request&#39;s entity body has already been loaded and parsed. Examples of properties that cause the entity body to be loaded and parsed include the following:  </p>\n<ul>\n<li><span class=\"xref\">stem.Web.HttpRequest.Form*</span>  \n</li>\n<li><span class=\"xref\">stem.Web.HttpRequest.InputStream*</span>  \n</li>\n<li><span class=\"xref\">stem.Web.HttpRequest.Files*</span>  \n</li>\n<li><span class=\"xref\">stem.Web.HttpRequest.GetBufferedInputStream*</span>  \n\n<p>To avoid this exception, call the <span class=\"xref\">stem.Web.HttpRequest.ReadEntityBodyMode*</span> method first. This exception is also thrown if the client disconnects while the entity body is being read.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides an alternative to using the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_InputStream_\" data-linktype=\"relative-path\">InputStream</a> property. The <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_InputStream_\" data-linktype=\"relative-path\">InputStream</a> property waits until the whole request has been received before it returns a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object. In contrast, the GetBufferlessInputStream method returns the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object immediately. You can use the method to begin processing the entity body before the complete contents of the body have been received.  </p>\n<p> The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Read_\" data-linktype=\"relative-path\">Read</a> method. You use parameters of the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Read_\" data-linktype=\"relative-path\">Read</a> method to specify how much of the entity body to read.  </p>\n<p> The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods. The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object implements both the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> methods. The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.  </p>\n<p> This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished. However, you should only use this method for scenarios where you want to take over all processing of the entity body. This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_GetBufferlessInputStream_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_GetBufferlessInputStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBufferlessInputStream(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <span class=\"xref\">stem.Web.Configuration.HttpRuntimeSection.MaxRequestLength*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disableMaxRequestLength</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to disable the request-length limit; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that can be used to read the incoming HTTP entity body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The request&#39;s entity body has already been loaded and parsed. Examples of properties that cause the entity body to be loaded and parsed include the following:  </p>\n<ul>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.Form*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.Files*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.InputStream*</span> property.  </p>\n</li>\n<li><p>The <span class=\"xref\">stem.Web.HttpRequest.GetBufferedInputStream*</span> method.  </p>\n<p>To avoid this exception, call the <span class=\"xref\">stem.Web.HttpRequest.ReadEntityBodyMode*</span> method first. This exception is also thrown if the client disconnects while the entity body is being read.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about this method, see the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_GetBufferlessInputStream\" data-linktype=\"relative-path\">GetBufferlessInputStream()</a> overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_InsertEntityBody\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_InsertEntityBody_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertEntityBody()</div>        \r\n          </div>\r\n    \r\n            <p>Provides IIS with a copy of the HTTP request entity body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InsertEntityBody ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method was invoked on a version of IIS earlier than IIS 7.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IIS does not maintain a copy of the request after it has been read. Therefore, it is recommended that only the handler for an HTTP request should read the request entity.  </p>\n<p> The InsertEntityBody method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET. This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_InsertEntityBody_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_InsertEntityBody_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertEntityBody(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InsertEntityBody (byte[] buffer, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that contains the request entity data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based position in <code>buffer</code> at which to begin storing the request entity data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to read into the <code>buffer</code> array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The method was invoked on a version of IIS earlier than IIS 7.0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is a negative value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The number of items in <code>count</code> is larger than the available space in <code>buffer</code>, given the <code>offset</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IIS does not maintain a copy of the request after it has been read. Therefore, it is recommended that only the handler for an HTTP request should read the request entity.  </p>\n<p> The InsertEntityBody method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_MapImageCoordinates_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_MapImageCoordinates_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MapImageCoordinates(String)</div>        \r\n          </div>\r\n    \r\n            <p>Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int[] MapImageCoordinates (string imageFieldName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageFieldName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the form image map.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </div>\r\n                  <p>A two-dimensional array of integers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_MapPath_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_MapPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MapPath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Maps the specified virtual path to a physical path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MapPath (string virtualPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>virtualPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path (absolute or relative) for the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The physical path on the server specified by <code>virtualPath</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>No <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object is defined for the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the MapPath method to convert a virtual path to a fully qualified physical path on the server. This example has two parts:  </p>\n<ul>\n<li><p>An .aspx page maps the path, reads the file, and displays results of the read operation.  </p>\n</li>\n<li><p>A class, <code>UpperCaseFilterStream</code>, that changes all characters passed through it to uppercase.  </p>\n<p>The first part of the example shows how to convert a virtual path to a fully qualified physical path using the MapPath method. This physical path is then passed to a <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> object, which obtains the contents of the file. The <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Write_\" data-linktype=\"relative-path\">Write</a> method is then called to display the content of the file on the page. The <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Filter_\" data-linktype=\"relative-path\">Filter</a> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Samples2#1\">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;Samples.AspNet.VB.Controls&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n     \n  Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Filter the text to be rendered as all uppercase.\n    Response.Filter = New UpperCaseFilterStream(Response.Filter)\n    \n    &#39; Convert a virtual path to a fully qualified physical path.\n    Dim fullpath As String = Request.MapPath(&quot;~\\&nbsp;&nbsp;&nbsp;&nbsp;estFile.txt&quot;)\n    \n    Try\n      \n      Dim sr As StreamReader = New StreamReader(fullpath)\n      \n      Do While sr.Peek() &gt;= 0\n        Response.Write(Convert.ToChar(sr.Read()))\n      Loop\n      sr.Close()\n      Message.Text = &quot;Reading the file was successful.&quot;\n      \n    Catch ex As Exception\n      \n      Message.Text = &quot;The process failed.&quot;\n\n    End Try\n\n    \n  End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;HttpResponse.MapPath Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; \n                 runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Samples2#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ import Namespace=&quot;Samples.AspNet.CS.Controls&quot;  %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n\n      // Filter the text to be rendered as all uppercase.\n      Response.Filter = new UpperCaseFilterStream(Response.Filter);\n\n      // Convert a virtual path to a fully qualified physical path.\n      string fullpath = Request.MapPath(&quot;~\\&nbsp;&nbsp;&nbsp;&nbsp;estFile.txt&quot;);\n\n      try\n      {\n        // Read the contents of the file using a StreamReader.\n        using (StreamReader sr = new StreamReader(fullpath))\n        while (sr.Peek() &gt;= 0)\n        {\n          Response.Write((char)sr.Read());\n        }\n        Message.Text = &quot;Reading the file was successful.&quot;;\n        \n      }\n      catch (Exception ex)\n      {\n        Message.Text = &quot;The process failed.&quot;;\n      }    \n     }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;HttpResponse.MapPath Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; \n                 runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>The second part of the example shows a class that inherits from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and converts all characters in a stream to uppercase. Put this code in the <code>App_Code</code> folder for your application.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Samples2#2\">\nusing System;\nusing System.IO;\nusing System.Text;\n\nnamespace Samples.AspNet.CS.Controls\n{\n\n   public class UpperCaseFilterStream : Stream\n   // This filter changes all characters passed through it to uppercase.\n   {\n      private Stream strSink;\n      private long lngPosition;\n\n      public UpperCaseFilterStream(Stream sink)\n      {\n          strSink = sink;\n      }\n\n      // The following members of Stream must be overriden.\n      public override bool CanRead\n      {\n         get { return true; }\n      }\n\n      public override bool CanSeek\n      {\n         get { return true; }\n      }\n\n      public override bool CanWrite\n      {\n         get { return true; }\n      }\n\n      public override long Length\n      {\n         get { return 0; }\n      }\n\n      public override long Position\n      {\n         get { return lngPosition; }\n         set { lngPosition = value; }\n      }\n\n      public override long Seek(long offset, System.IO.SeekOrigin direction)\n      {\n         return strSink.Seek(offset, direction);\n      }\n\n      public override void SetLength(long length)\n      {\n         strSink.SetLength(length);\n      }\n\n      public override void Close()\n      {\n         strSink.Close();\n      }\n\n      public override void Flush()\n      {\n         strSink.Flush();\n      }\n\n      public override int Read(byte[] buffer, int offset, int count)\n      {\n         return strSink.Read(buffer, offset, count);\n      }\n\n      // The Write method actually does the filtering.\n      public override void Write(byte[] buffer, int offset, int count)\n      {\n\t\t byte[] data = new byte[count];\n\t     Buffer.BlockCopy(buffer, offset, data, 0, count);\n\t\t string inputstring = Encoding.ASCII.GetString(data).ToUpper();\n\t\t data = Encoding.ASCII.GetBytes(inputstring);\n\t     strSink.Write(data, 0, count);\n       \n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Samples2#2\">Imports System\nImports System.IO\nImports System.Text\n\n\nNamespace Samples.AspNet.VB.Controls\n\n    Public Class UpperCaseFilterStream\n        Inherits Stream\n\n        &#39; This filter changes all characters passed through it to uppercase.\n        Private strSink As Stream\n        Private lngPosition As Long\n\n\n        Public Sub New(ByVal sink As Stream)\n            strSink = sink\n        End Sub &#39;New\n\n        &#39; The following members of Stream must be overriden.  \n        Public Overrides ReadOnly Property CanRead() As Boolean\n            Get\n                Return True\n            End Get\n        End Property\n\n        Public Overrides ReadOnly Property CanSeek() As Boolean\n            Get\n                Return True\n            End Get\n        End Property\n\n        Public Overrides ReadOnly Property CanWrite() As Boolean\n            Get\n                Return True\n            End Get\n        End Property\n\n        Public Overrides ReadOnly Property Length() As Long\n            Get\n                Return 0\n            End Get\n        End Property\n\n        Public Overrides Property Position() As Long\n            Get\n                Return lngPosition\n            End Get\n            Set(ByVal value As Long)\n                lngPosition = Value\n            End Set\n        End Property\n\n        Public Overrides Function Seek( _\n        ByVal offset As Long, ByVal direction As System.IO.SeekOrigin) As Long\n            Return strSink.Seek(offset, direction)\n        End Function &#39;Seek\n\n\n        Public Overrides Sub SetLength(ByVal length As Long)\n            strSink.SetLength(length)\n        End Sub &#39;SetLength\n\n\n        Public Overrides Sub Close()\n            strSink.Close()\n        End Sub &#39;Close\n\n\n        Public Overrides Sub Flush()\n            strSink.Flush()\n        End Sub &#39;Flush\n\n\n        Public Overrides Function Read( _\n        ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer) As Integer\n            Return strSink.Read(buffer, offset, count)\n        End Function &#39;Read\n\n\n        &#39; The Write method actually does the filtering.\n        Public Overrides Sub Write( _\n        ByVal buffer() As Byte, ByVal offset As Integer, ByVal count As Integer)\n\n            Dim data(count) As Byte\n            System.Buffer.BlockCopy(buffer, offset, data, 0, count)\n            Dim inputstring As String = Encoding.ASCII.GetString(data).ToUpper()\n            data = Encoding.ASCII.GetBytes(InputString)\n            strSink.Write(data, 0, count)\n\n        End Sub &#39;Write \n\n    End Class &#39;UpperCaseFilter\n\nEnd Namespace\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_MapPath_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_MapPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MapPath(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Maps the specified virtual path to a physical path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>virtualPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path (absolute or relative) for the current request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseVirtualDir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual base directory path used for relative resolution.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowCrossAppMapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that <code>virtualPath</code> may belong to another application; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The physical path on the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>No <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object is defined for the request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The MapPath property potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_MapRawImageCoordinates_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_MapRawImageCoordinates_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MapRawImageCoordinates(String)</div>        \r\n          </div>\r\n    \r\n            <p>Maps an incoming image field form parameter into appropriate x and y coordinate values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double[] MapRawImageCoordinates (string imageFieldName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageFieldName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the image field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>[]</div>\r\n                  </div>\r\n                  <p>The x and y coordinate values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_SaveAs_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_SaveAs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveAs(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Saves an HTTP request to disk.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SaveAs (string filename, bool includeHeaders);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The physical drive path.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeHeaders</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value specifying whether an HTTP header should be saved to disk.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*</span> property of the <a class=\"xref\" href=\"system.web.configuration.httpruntimesection\" data-linktype=\"relative-path\">HttpRuntimeSection</a> is set to <code>true</code> but <code>filename</code> is not an absolute path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Saving the request context to disk can be useful in debugging.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls the SaveAs method when a page is loaded. The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Sample6#1\">    Request.SaveAs(&quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\HttpRequest.txt&quot;, true);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Sample6#1\">    Request.SaveAs(&quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\HttpRequest.txt&quot;, True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpRequest_ValidateInput\">\r\n    \r\n            <a id=\"System_Web_HttpRequest_ValidateInput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateInput()</div>        \r\n          </div>\r\n    \r\n            <p>Causes validation to occur for the collections accessed through the <span class=\"xref\">stem.Web.HttpRequest.Cookies*</span>, <span class=\"xref\">stem.Web.HttpRequest.Form*</span>, and <span class=\"xref\">stem.Web.HttpRequest.QueryString*</span> properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateInput ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httprequestvalidationexception\" data-linktype=\"relative-path\">HttpRequestValidationException</a></div>\r\n                  </div>\r\n                  <p>Potentially dangerous data was received from the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> class uses input validation flags to track whether to perform validation on the request collections accessed through the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Cookies_\" data-linktype=\"relative-path\">Cookies</a>, <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Form_\" data-linktype=\"relative-path\">Form</a>, and <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_QueryString_\" data-linktype=\"relative-path\">QueryString</a> properties. The ValidateInput method sets these flags so that when the get accessors for the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Cookies_\" data-linktype=\"relative-path\">Cookies</a>, <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Form_\" data-linktype=\"relative-path\">Form</a>, or <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_QueryString_\" data-linktype=\"relative-path\">QueryString</a> property are invoked, input validation is performed. Validation works by checking all input data against a hard-coded list of potentially dangerous data.  </p>\n<p> If the validation feature is enabled by page directive or configuration, this method is called during the page&#39;s <code>ProcessRequest</code> processing phase. The ValidateInput method can be called by your code if the validation feature is not enabled.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.HttpRequest.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.HttpRequest.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Abort\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.AcceptTypes\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.AnonymousID\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ApplicationPath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.BinaryRead\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Browser\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ClientCertificate\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ContentEncoding\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ContentLength\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ContentType\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Cookies\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.CurrentExecutionFilePath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.CurrentExecutionFilePathExtension\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.FilePath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Files\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Filter\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Form\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.GetBufferedInputStream\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.GetBufferlessInputStream\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Headers\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.HttpChannelBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.HttpMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.InputStream\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.InsertEntityBody\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.IsAuthenticated\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.IsLocal\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.IsSecureConnection\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Item\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.LogonUserIdentity\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.MapImageCoordinates\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.MapPath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.MapRawImageCoordinates\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Params\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Path\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.PathInfo\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.PhysicalApplicationPath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.PhysicalPath\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.QueryString\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.RawUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ReadEntityBodyMode\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.RequestContext\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.RequestType\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.SaveAs\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ServerVariables\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.TimedOutToken\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.TlsTokenBindingInfo\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.TotalBytes\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Unvalidated\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.Url\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.UrlReferrer\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.UserAgent\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.UserHostAddress\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.UserHostName\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.UserLanguages\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpRequest.ValidateInput\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0987cc6a-3715-c29b-de4f-c413d765f520\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\HttpRequest.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables ASP.NET to read the HTTP values sent by a client during a Web request.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.HttpRequest\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.HttpRequest.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.HttpRequest.yml","open_to_public_contributors":true,"api_name":["System.Web.HttpRequest","System.Web.HttpRequest..ctor","System.Web.HttpRequest.Abort","System.Web.HttpRequest.AcceptTypes","System.Web.HttpRequest.AnonymousID","System.Web.HttpRequest.ApplicationPath","System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath","System.Web.HttpRequest.BinaryRead","System.Web.HttpRequest.Browser","System.Web.HttpRequest.ClientCertificate","System.Web.HttpRequest.ContentEncoding","System.Web.HttpRequest.ContentLength","System.Web.HttpRequest.ContentType","System.Web.HttpRequest.Cookies","System.Web.HttpRequest.CurrentExecutionFilePath","System.Web.HttpRequest.CurrentExecutionFilePathExtension","System.Web.HttpRequest.FilePath","System.Web.HttpRequest.Files","System.Web.HttpRequest.Filter","System.Web.HttpRequest.Form","System.Web.HttpRequest.GetBufferedInputStream","System.Web.HttpRequest.GetBufferlessInputStream","System.Web.HttpRequest.Headers","System.Web.HttpRequest.HttpChannelBinding","System.Web.HttpRequest.HttpMethod","System.Web.HttpRequest.InputStream","System.Web.HttpRequest.InsertEntityBody","System.Web.HttpRequest.IsAuthenticated","System.Web.HttpRequest.IsLocal","System.Web.HttpRequest.IsSecureConnection","System.Web.HttpRequest.Item","System.Web.HttpRequest.LogonUserIdentity","System.Web.HttpRequest.MapImageCoordinates","System.Web.HttpRequest.MapPath","System.Web.HttpRequest.MapRawImageCoordinates","System.Web.HttpRequest.Params","System.Web.HttpRequest.Path","System.Web.HttpRequest.PathInfo","System.Web.HttpRequest.PhysicalApplicationPath","System.Web.HttpRequest.PhysicalPath","System.Web.HttpRequest.QueryString","System.Web.HttpRequest.RawUrl","System.Web.HttpRequest.ReadEntityBodyMode","System.Web.HttpRequest.RequestContext","System.Web.HttpRequest.RequestType","System.Web.HttpRequest.SaveAs","System.Web.HttpRequest.ServerVariables","System.Web.HttpRequest.TimedOutToken","System.Web.HttpRequest.TlsTokenBindingInfo","System.Web.HttpRequest.TotalBytes","System.Web.HttpRequest.Unvalidated","System.Web.HttpRequest.Url","System.Web.HttpRequest.UrlReferrer","System.Web.HttpRequest.UserAgent","System.Web.HttpRequest.UserHostAddress","System.Web.HttpRequest.UserHostName","System.Web.HttpRequest.UserLanguages","System.Web.HttpRequest.ValidateInput"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.HttpRequest","System::Web::HttpRequest","System.Web.HttpRequest.#ctor","System::Web::HttpRequest::#ctor","System.Web.HttpRequest.Abort","System::Web::HttpRequest::Abort","System.Web.HttpRequest.AcceptTypes","System::Web::HttpRequest::AcceptTypes","System.Web.HttpRequest.AnonymousID","System::Web::HttpRequest::AnonymousID","System.Web.HttpRequest.ApplicationPath","System::Web::HttpRequest::ApplicationPath","System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath","System::Web::HttpRequest::AppRelativeCurrentExecutionFilePath","System.Web.HttpRequest.BinaryRead","System::Web::HttpRequest::BinaryRead","System.Web.HttpRequest.Browser","System::Web::HttpRequest::Browser","System.Web.HttpRequest.ClientCertificate","System::Web::HttpRequest::ClientCertificate","System.Web.HttpRequest.ContentEncoding","System::Web::HttpRequest::ContentEncoding","System.Web.HttpRequest.ContentLength","System::Web::HttpRequest::ContentLength","System.Web.HttpRequest.ContentType","System::Web::HttpRequest::ContentType","System.Web.HttpRequest.Cookies","System::Web::HttpRequest::Cookies","System.Web.HttpRequest.CurrentExecutionFilePath","System::Web::HttpRequest::CurrentExecutionFilePath","System.Web.HttpRequest.CurrentExecutionFilePathExtension","System::Web::HttpRequest::CurrentExecutionFilePathExtension","System.Web.HttpRequest.FilePath","System::Web::HttpRequest::FilePath","System.Web.HttpRequest.Files","System::Web::HttpRequest::Files","System.Web.HttpRequest.Filter","System::Web::HttpRequest::Filter","System.Web.HttpRequest.Form","System::Web::HttpRequest::Form","System.Web.HttpRequest.GetBufferedInputStream","System::Web::HttpRequest::GetBufferedInputStream","System.Web.HttpRequest.GetBufferlessInputStream","System::Web::HttpRequest::GetBufferlessInputStream","System.Web.HttpRequest.Headers","System::Web::HttpRequest::Headers","System.Web.HttpRequest.HttpChannelBinding","System::Web::HttpRequest::HttpChannelBinding","System.Web.HttpRequest.HttpMethod","System::Web::HttpRequest::HttpMethod","System.Web.HttpRequest.InputStream","System::Web::HttpRequest::InputStream","System.Web.HttpRequest.InsertEntityBody","System::Web::HttpRequest::InsertEntityBody","System.Web.HttpRequest.IsAuthenticated","System::Web::HttpRequest::IsAuthenticated","System.Web.HttpRequest.IsLocal","System::Web::HttpRequest::IsLocal","System.Web.HttpRequest.IsSecureConnection","System::Web::HttpRequest::IsSecureConnection","System.Web.HttpRequest.Item","System::Web::HttpRequest::Item","System.Web.HttpRequest.LogonUserIdentity","System::Web::HttpRequest::LogonUserIdentity","System.Web.HttpRequest.MapImageCoordinates","System::Web::HttpRequest::MapImageCoordinates","System.Web.HttpRequest.MapPath","System::Web::HttpRequest::MapPath","System.Web.HttpRequest.MapRawImageCoordinates","System::Web::HttpRequest::MapRawImageCoordinates","System.Web.HttpRequest.Params","System::Web::HttpRequest::Params","System.Web.HttpRequest.Path","System::Web::HttpRequest::Path","System.Web.HttpRequest.PathInfo","System::Web::HttpRequest::PathInfo","System.Web.HttpRequest.PhysicalApplicationPath","System::Web::HttpRequest::PhysicalApplicationPath","System.Web.HttpRequest.PhysicalPath","System::Web::HttpRequest::PhysicalPath","System.Web.HttpRequest.QueryString","System::Web::HttpRequest::QueryString","System.Web.HttpRequest.RawUrl","System::Web::HttpRequest::RawUrl","System.Web.HttpRequest.ReadEntityBodyMode","System::Web::HttpRequest::ReadEntityBodyMode","System.Web.HttpRequest.RequestContext","System::Web::HttpRequest::RequestContext","System.Web.HttpRequest.RequestType","System::Web::HttpRequest::RequestType","System.Web.HttpRequest.SaveAs","System::Web::HttpRequest::SaveAs","System.Web.HttpRequest.ServerVariables","System::Web::HttpRequest::ServerVariables","System.Web.HttpRequest.TimedOutToken","System::Web::HttpRequest::TimedOutToken","System.Web.HttpRequest.TlsTokenBindingInfo","System::Web::HttpRequest::TlsTokenBindingInfo","System.Web.HttpRequest.TotalBytes","System::Web::HttpRequest::TotalBytes","System.Web.HttpRequest.Unvalidated","System::Web::HttpRequest::Unvalidated","System.Web.HttpRequest.Url","System::Web::HttpRequest::Url","System.Web.HttpRequest.UrlReferrer","System::Web::HttpRequest::UrlReferrer","System.Web.HttpRequest.UserAgent","System::Web::HttpRequest::UserAgent","System.Web.HttpRequest.UserHostAddress","System::Web::HttpRequest::UserHostAddress","System.Web.HttpRequest.UserHostName","System::Web::HttpRequest::UserHostName","System.Web.HttpRequest.UserLanguages","System::Web::HttpRequest::UserLanguages","System.Web.HttpRequest.ValidateInput","System::Web::HttpRequest::ValidateInput"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0987cc6a-3715-c29b-de4f-c413d765f520","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\HttpRequest.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web/HttpRequest.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpRequest class | Microsoft Docs","_op_ogTitle":"HttpRequest class","description":"Enables ASP.NET to read the HTTP values sent by a client during a Web request.\n","toc_asset_id":"_splitted/System.Web/toc.json","toc_rel":"_splitted/System.Web/toc.json","source_url":"","ms.assetid":"System.Web.HttpRequest","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.httprequest","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.httprequest","fileRelativePath":"System.Web.HttpRequest.html"},"themesRelativePathToOutputRoot":"_themes/"}