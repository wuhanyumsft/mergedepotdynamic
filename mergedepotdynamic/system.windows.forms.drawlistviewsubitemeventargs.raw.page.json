{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DrawListViewSubItemEventArgs\">\r\n      <span class=\"lang-csharp\">DrawListViewSubItemEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DrawListViewSubItemEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DrawListViewSubItemEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event enables you to customize (or owner-draw) the appearance of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control in the details view.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event is raised by a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when its <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property is set to <code>true</code> and its <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The DrawListViewSubItemEventArgs passed to the event handler contains information about the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw and also provides methods to help you draw the subitem.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState_\" data-linktype=\"relative-path\">ItemState</a> or <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> properties to retrieve information about the parent item of the subitem to draw. To retrieve the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> itself, use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_SubItem_\" data-linktype=\"relative-path\">SubItem</a> property. Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_Header_\" data-linktype=\"relative-path\">Header</a> property to retrieve the <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> representing the header of the column in which the subitem is displayed.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property to do the actual drawing within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. To draw standard <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> elements that do not need customization, use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawBackground_\" data-linktype=\"relative-path\">DrawBackground</a>, <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a>, and <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawFocusRectangle_\" data-linktype=\"relative-path\">DrawFocusRectangle</a> methods.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawDefault_\" data-linktype=\"relative-path\">DrawDefault</a> property when you want the operating system to draw the subitem. This is useful when you want to customize only specific subitems.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid issues with graphics flickering when owner drawing, override the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> property to <code>true</code>. This feature is available only on Windows XP and the Windows Server 2003 family when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_ListViewItem_System_Windows_Forms_ListViewItem_ListViewSubItem_System_Int32_System_Int32_System_Windows_Forms_ColumnHeader_System_Windows_Forms_ListViewItemStates_\" data-linktype=\"self-bookmark\">DrawListViewSubItemEventArgs(Graphics,Rectangle,ListViewItem,ListViewItem+ListViewSubItem,Int32,Int32,ColumnHeader,ListViewItemStates)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_Bounds\" data-linktype=\"self-bookmark\">Bounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size and location of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_ColumnIndex\" data-linktype=\"self-bookmark\">ColumnIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawDefault\" data-linktype=\"self-bookmark\">DrawDefault</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> should be drawn by the operating system instead of owner-drawn.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_Graphics\" data-linktype=\"self-bookmark\">Graphics</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_Header\" data-linktype=\"self-bookmark\">Header</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the header of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_Item\" data-linktype=\"self-bookmark\">Item</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_ItemIndex\" data-linktype=\"self-bookmark\">ItemIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState\" data-linktype=\"self-bookmark\">ItemState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current state of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_SubItem\" data-linktype=\"self-bookmark\">SubItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawBackground\" data-linktype=\"self-bookmark\">DrawBackground()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the background of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current background color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawFocusRectangle_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">DrawFocusRectangle(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws a focus rectangle for the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> if the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> has focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText\" data-linktype=\"self-bookmark\">DrawText()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current foreground color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_System_Windows_Forms_TextFormatFlags_\" data-linktype=\"self-bookmark\">DrawText(TextFormatFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current foreground color and formatting it with the specified <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs__ctor_System_Drawing_Graphics_System_Drawing_Rectangle_System_Windows_Forms_ListViewItem_System_Windows_Forms_ListViewItem_ListViewSubItem_System_Int32_System_Int32_System_Windows_Forms_ColumnHeader_System_Windows_Forms_ListViewItemStates_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawListViewSubItemEventArgs(Graphics,Rectangle,ListViewItem,ListViewItem+ListViewSubItem,Int32,Int32,ColumnHeader,ListViewItemStates)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DrawListViewSubItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Windows.Forms.ListViewItem item, System.Windows.Forms.ListViewItem.ListViewSubItem subItem, int itemIndex, int columnIndex, System.Windows.Forms.ColumnHeader header, System.Windows.Forms.ListViewItemStates itemState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> surface on which to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> within which to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> parent of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>subItem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> within the <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span> collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> column within the <span class=\"xref\">stem.Windows.Forms.ListView.Columns*</span> collection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>header</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> for the column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a> values indicating the current state of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> parent of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Bounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Bounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size and location of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle Bounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The location specified by this property is relative to the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Bounds property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ColumnIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ColumnIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> column within the <span class=\"xref\">stem.Windows.Forms.ListView.Columns*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ColumnIndex property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawDefault\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawDefault</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> should be drawn by the operating system instead of owner-drawn.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DrawDefault { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the subitem should be drawn by the operating system; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property when handling the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event for subitems that you do not want to customize. If you set this property to <code>true</code>, the subitem will be drawn normally using the current values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_BackColor_\" data-linktype=\"relative-path\">BackColor</a>, <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a>, and <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_Font_\" data-linktype=\"relative-path\">Font</a> properties  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_UseItemStyleForSubItems_\" data-linktype=\"relative-path\">UseItemStyleForSubItems</a> property of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> must be set to <code>false</code> to prevent the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_BackColor_\" data-linktype=\"relative-path\">BackColor</a> value of the parent item from overriding the subitem value.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#472\">private void ListView1_DrawSubItem(Object sender, DrawListViewSubItemEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;DrawSubItem Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#472\">Private Sub ListView1_DrawSubItem(sender as Object, e as DrawListViewSubItemEventArgs) _ \n     Handles ListView1.DrawSubItem\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;DrawSubItem Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Graphics\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Graphics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Graphics</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> class provides properties and methods useful for drawing on the display device.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Graphics property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Header\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Header_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Header</div>        \r\n          </div>\r\n    \r\n            <p>Gets the header of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ColumnHeader Header { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> for the column in which the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> is displayed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Header property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Item\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem Item { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that represents the parent of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to access the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> parent of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw. This is useful when the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState_\" data-linktype=\"relative-path\">ItemState</a> property does not provide adequate information to meet your needs. The <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState_\" data-linktype=\"relative-path\">ItemState</a> property provides only basic state information that you can use, for example, to determine whether the parent item is selected, checked, or focused. The Item property, on the other hand, allows you to access all members of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.  </p>\n<p> To access the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> being drawn, use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_SubItem_\" data-linktype=\"relative-path\">SubItem</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#472\">private void ListView1_DrawSubItem(Object sender, DrawListViewSubItemEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;DrawSubItem Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#472\">Private Sub ListView1_DrawSubItem(sender as Object, e as DrawListViewSubItemEventArgs) _ \n     Handles ListView1.DrawSubItem\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;DrawSubItem Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ItemIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ItemIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ItemIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> within the <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#472\">private void ListView1_DrawSubItem(Object sender, DrawListViewSubItemEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;DrawSubItem Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#472\">Private Sub ListView1_DrawSubItem(sender as Object, e as DrawListViewSubItemEventArgs) _ \n     Handles ListView1.DrawSubItem\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;DrawDefault&quot;, e.DrawDefault)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Bounds&quot;, e.Bounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;SubItem&quot;, e.SubItem)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemState&quot;, e.ItemState)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;DrawSubItem Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_ItemState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemState</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current state of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItemStates ItemState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.listviewitemstates\" data-linktype=\"relative-path\">ListViewItemStates</a> values indicating the current state of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to check whether the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> parent of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw is in a particular state. This property provides only basic state information about the parent item. You can use this property, for example, to determine whether the parent item is selected, checked, or focused. If you need to know more, retrieve the parent item through the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> property and check its properties directly.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemState property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_SubItem\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_SubItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem.ListViewSubItem SubItem { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> to draw.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful when the other <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> properties do not provide adequate information to meet your needs. The SubItem property allows you to access all members of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> being drawn. You must access this object directly, for example, to draw the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_Text_\" data-linktype=\"relative-path\">Text</a> value yourself rather than using the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SubItem property in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawBackground\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawBackground_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawBackground()</div>        \r\n          </div>\r\n    \r\n            <p>Draws the background of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current background color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawBackground ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to draw a standard background that uses the current value of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property. The background is drawn to fill the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_UseItemStyleForSubItems_\" data-linktype=\"relative-path\">UseItemStyleForSubItems</a> property of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> must be set to <code>false</code> to prevent the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_BackColor_\" data-linktype=\"relative-path\">BackColor</a> value of the parent item from overriding the subitem value.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DrawBackground method in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawFocusRectangle_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawFocusRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawFocusRectangle(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Draws a focus rectangle for the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> if the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> has focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawFocusRectangle (System.Drawing.Rectangle bounds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The area within which to draw the focus rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to draw a standard focus rectangle around the subitem. The focus rectangle is drawn one pixel inside the area specified by the <code>bounds</code> parameter. It is drawn only when the parent item has focus, so you do not need to check the focus state of the item before you call this method.  </p>\n<p> You might want to draw the focus rectangle only around the first subitem (that is, the parent item, which is displayed in the first column) rather than drawing it around every subitem of an item. This corresponds to the normal behavior of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> property is set to <code>false</code>. To draw the focus rectangle around the first subitem, call the DrawFocusRectangle method only when the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> value is 0.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not provide the ability to select individual subitems, but if you want to implement subitem selection yourself, you can use this method to draw the focus rectangle around a subitem other than the first one.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawText()</div>        \r\n          </div>\r\n    \r\n            <p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current foreground color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawText ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to draw the subitem text using the current values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_Font_\" data-linktype=\"relative-path\">Font</a> properties. The text is drawn within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_UseItemStyleForSubItems_\" data-linktype=\"relative-path\">UseItemStyleForSubItems</a> property of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> must be set to <code>false</code> to prevent the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Font_\" data-linktype=\"relative-path\">Font</a> values of the parent item from overriding the subitem values.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_System_Windows_Forms_TextFormatFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawText(TextFormatFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the text of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> using its current foreground color and formatting it with the specified <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawText (System.Windows.Forms.TextFormatFlags flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to draw the subitem text using the current values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_Font_\" data-linktype=\"relative-path\">Font</a> properties. The text is drawn within the area specified by the <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs#System_Windows_Forms_DrawListViewItemEventArgs_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property. The <a class=\"xref\" href=\"system.windows.forms.textformatflags\" data-linktype=\"relative-path\">TextFormatFlags</a> values specified in the <code>flags</code> parameter let you provide formatting properties for the node label, such as text alignment.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_UseItemStyleForSubItems_\" data-linktype=\"relative-path\">UseItemStyleForSubItems</a> property of the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> must be set to <code>false</code> to prevent the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Font_\" data-linktype=\"relative-path\">Font</a> values of the parent item from overriding the subitem values.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_DrawText_\" data-linktype=\"relative-path\">DrawText</a> method in an application that provides custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. In the example, a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">System.Windows.Forms.ListView.DrawSubItem</a> event draws the subitem text values and both the text and background for subitems that have negative values.  </p>\n<p> For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> overview reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DrawListViewSubItemEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DrawListViewSubItemEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.Header\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.Item\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"aebccb02-e4cc-8366-32f0-68a40238925c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DrawListViewSubItemEventArgs\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DrawListViewSubItemEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DrawListViewSubItemEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DrawListViewSubItemEventArgs","System.Windows.Forms.DrawListViewSubItemEventArgs..ctor","System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds","System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText","System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics","System.Windows.Forms.DrawListViewSubItemEventArgs.Header","System.Windows.Forms.DrawListViewSubItemEventArgs.Item","System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex","System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState","System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DrawListViewSubItemEventArgs","System::Windows::Forms::DrawListViewSubItemEventArgs","System.Windows.Forms.DrawListViewSubItemEventArgs.#ctor","System::Windows::Forms::DrawListViewSubItemEventArgs::#ctor","System.Windows.Forms.DrawListViewSubItemEventArgs.Bounds","System::Windows::Forms::DrawListViewSubItemEventArgs::Bounds","System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex","System::Windows::Forms::DrawListViewSubItemEventArgs::ColumnIndex","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawBackground","System::Windows::Forms::DrawListViewSubItemEventArgs::DrawBackground","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawDefault","System::Windows::Forms::DrawListViewSubItemEventArgs::DrawDefault","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawFocusRectangle","System::Windows::Forms::DrawListViewSubItemEventArgs::DrawFocusRectangle","System.Windows.Forms.DrawListViewSubItemEventArgs.DrawText","System::Windows::Forms::DrawListViewSubItemEventArgs::DrawText","System.Windows.Forms.DrawListViewSubItemEventArgs.Graphics","System::Windows::Forms::DrawListViewSubItemEventArgs::Graphics","System.Windows.Forms.DrawListViewSubItemEventArgs.Header","System::Windows::Forms::DrawListViewSubItemEventArgs::Header","System.Windows.Forms.DrawListViewSubItemEventArgs.Item","System::Windows::Forms::DrawListViewSubItemEventArgs::Item","System.Windows.Forms.DrawListViewSubItemEventArgs.ItemIndex","System::Windows::Forms::DrawListViewSubItemEventArgs::ItemIndex","System.Windows.Forms.DrawListViewSubItemEventArgs.ItemState","System::Windows::Forms::DrawListViewSubItemEventArgs::ItemState","System.Windows.Forms.DrawListViewSubItemEventArgs.SubItem","System::Windows::Forms::DrawListViewSubItemEventArgs::SubItem"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"aebccb02-e4cc-8366-32f0-68a40238925c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DrawListViewSubItemEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DrawListViewSubItemEventArgs class | Microsoft Docs","_op_ogTitle":"DrawListViewSubItemEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DrawListViewSubItemEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.drawlistviewsubitemeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.drawlistviewsubitemeventargs","fileRelativePath":"System.Windows.Forms.DrawListViewSubItemEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}