{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_XmlSerializer\">\r\n      <span class=\"lang-csharp\">XmlSerializer</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Serializes and deserializes objects into and from XML documents. The XmlSerializer enables you to control how objects are encoded into XML.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlSerializer</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlSerializer</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XML serialization is the process of converting an object&#39;s public properties and fields to a serial format (in this case, XML) for storage or transport. Deserialization re-creates the object in its original state from the XML output. You can think of serialization as a way of saving the state of an object into a stream or buffer. For example, ASP.NET uses the XmlSerializer class to encode XML Web service messages.  </p>\n<p> The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> or <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> objects. You have the option of creating your own classes, annotated with attributes, or using the <a href=\"../Topic/XML%20Schema%20Definition%20Tool%20(Xsd.exe).md\" data-linktype=\"relative-path\">XML Schema Definition Tool (Xsd.exe)</a> to generate the classes based on an existing XML Schema definition (XSD) document. If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.  </p>\n<p> To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs. The XmlSerializer and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime. At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema. In either case, the classes are annotated with custom attributes to instruct the XmlSerializer how to map between the XML schema system and the common language runtime. At runtime, instances of the classes can be serialized into XML documents that follow the given schema. Likewise, these XML documents can be deserialized into runtime objects. Note that the XML schema is optional, and not required at design time or runtime.  </p>\n<h2 id=\"controlling-generated-xml\">Controlling Generated XML</h2>\n<p> To control the generated XML, you can apply special attributes to classes and members. For example, to specify a different XML element name, apply an <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to a public field or property, and set the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property. For a complete list of similar attributes, see <a href=\"../Topic/Attributes%20That%20Control%20XML%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control XML Serialization</a>. You can also implement the <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface to control the XML output.  </p>\n<p> If the XML generated must conform to section 5 of the World Wide Consortium (www.w3.org) document, &quot;Simple Object Access Protocol (SOAP) 1.1&quot;, you must construct the XmlSerializer with an <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a>. To further control the encoded SOAP XML, use the attributes listed in <a href=\"../Topic/Attributes%20That%20Control%20Encoded%20SOAP%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control Encoded SOAP Serialization</a>.  </p>\n<p> With the XmlSerializer you can take advantage of working with strongly typed classes and still have the flexibility of XML. Using fields or properties of type <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a>, <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> or <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> in your strongly typed classes, you can read parts of the XML document directly into XML objects.  </p>\n<p> If you work with extensible XML schemas, you can also use the <a class=\"xref\" href=\"system.xml.serialization.xmlanyelementattribute\" data-linktype=\"relative-path\">XmlAnyElementAttribute</a> and <a class=\"xref\" href=\"system.xml.serialization.xmlanyattributeattribute\" data-linktype=\"relative-path\">XmlAnyAttributeAttribute</a> attributes to serialize and deserialize elements or attributes that are not found in the original schema. To use the objects, apply an <a class=\"xref\" href=\"system.xml.serialization.xmlanyelementattribute\" data-linktype=\"relative-path\">XmlAnyElementAttribute</a> to a field that returns an array of <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> objects, or apply an <a class=\"xref\" href=\"system.xml.serialization.xmlanyattributeattribute\" data-linktype=\"relative-path\">XmlAnyAttributeAttribute</a> to a field that returns an array of <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> objects.  </p>\n<p> If a property or field returns a complex object (such as an array or a class instance), the XmlSerializer converts it to an element nested within the main XML document. For example, the first class in the following code returns an instance of the second class.  </p>\n<pre><code class=\"lang-vb#\">Public Class MyClass  \n    Public MyObjectProperty As MyObject  \nEnd Class  \n\nPublic Class MyObject  \n    Public ObjectName As String  \nEnd Class  \n</code></pre><pre><code class=\"lang-c#\">public class MyClass  \n{  \n    public MyObject MyObjectProperty;  \n}  \npublic class MyObject  \n{  \n    public string ObjectName;  \n}  \n</code></pre><p> The serialized, XML output looks like this:  </p>\n<pre><code>&lt;MyClass&gt;  \n  &lt;MyObjectProperty&gt;  \n  &lt;ObjectName&gt;My String&lt;/ObjectName&gt;  \n  &lt;/MyObjectProperty&gt;  \n&lt;/MyClass&gt;  \n</code></pre><p> If a schema includes an element that is optional (minOccurs = &#39;0&#39;), or if the schema includes a default value, you have two options. One option is to use <a class=\"xref\" href=\"system.componentmodel.defaultvalueattribute\" data-linktype=\"relative-path\">System.ComponentModel.DefaultValueAttribute</a> to specify the default value, as shown in the following code.  </p>\n<pre><code class=\"lang-vb#\">Public Class PurchaseOrder  \n    &lt;System.ComponentModel.DefaultValueAttribute (&quot;2002&quot;)&gt; _  \n    Public Year As String  \nEnd Class  \n</code></pre><pre><code class=\"lang-c#\">public class PurchaseOrder  \n{  \n    [System.ComponentModel.DefaultValueAttribute (&quot;2002&quot;)]  \n    public string Year;  \n}  \n</code></pre><p> Another option is to use a special pattern to create a Boolean field recognized by the XmlSerializer, and to apply the <a class=\"xref\" href=\"system.xml.serialization.xmlignoreattribute\" data-linktype=\"relative-path\">XmlIgnoreAttribute</a> to the field. The pattern is created in the form of <code>propertyNameSpecified</code>. For example, if there is a field named &quot;MyFirstName&quot; you would also create a field named &quot;MyFirstNameSpecified&quot; that instructs the XmlSerializer whether to generate the XML element named &quot;MyFirstName&quot;. This is shown in the following example.  </p>\n<pre><code class=\"lang-vb#\">Public Class OptionalOrder  \n    &#39; This field&#39;s value should not be serialized   \n    &#39; if it is uninitialized.  \n    Public FirstOrder As String  \n\n    &#39; Use the XmlIgnoreAttribute to ignore the   \n    &#39; special field named &quot;FirstOrderSpecified&quot;.  \n    &lt;System.Xml.Serialization.XmlIgnoreAttribute&gt; _  \n    Public FirstOrderSpecified As Boolean  \nEnd Class  \n</code></pre><pre><code class=\"lang-c#\">public class OptionalOrder  \n{  \n    // This field should not be serialized   \n    // if it is uninitialized.  \n    public string FirstOrder;  \n\n    // Use the XmlIgnoreAttribute to ignore the   \n    // special field named &quot;FirstOrderSpecified&quot;.  \n    [System.Xml.Serialization.XmlIgnoreAttribute]  \n    public bool FirstOrderSpecified;  \n}  \n</code></pre><h2 id=\"overriding-default-serialization\">Overriding Default Serialization</h2>\n<p> You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlattributes\" data-linktype=\"relative-path\">XmlAttributes</a> class. Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways. For more details, see the <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a> class and <a href=\"../Topic/How%20to:%20Control%20Serialization%20of%20Derived%20Classes.md\" data-linktype=\"relative-path\">How to: Control Serialization of Derived Classes</a>.  </p>\n<p> To serialize an object, call the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method. To deserialize an object, call the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method.  </p>\n<p> To add XML namespaces to an XML document, see <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The XmlSerializer gives special treatment to classes that implement <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> or <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. A class that implements <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> must implement a public <code>Add</code> method that takes a single parameter. The <code>Add</code> method&#39;s parameter must be of the same type as is returned from the <code>Current</code> property on the value returned from <code>GetEnumerator</code>, or one of that type&#39;s bases. A class that implements <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> (such as <a class=\"xref\" href=\"system.collections.collectionbase\" data-linktype=\"relative-path\">CollectionBase</a>) in addition to <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> must have a public <code>Item</code> indexed property (indexer in C#) that takes an integer, and it must have a public <code>Count</code> property of type integer. The parameter to the <code>Add</code> method must be the same type as is returned from the <code>Item</code> property, or one of that type&#39;s bases. For classes that implement <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>, values to be serialized are retrieved from the indexed <code>Item</code> property, not by calling <code>GetEnumerator</code>.  </p>\n</div>\n<p> You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.  </p>\n<h2 id=\"dynamically-generated-assemblies\">Dynamically Generated Assemblies</h2>\n<p> To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types. The infrastructure finds and reuses those assemblies. This behavior occurs only when using the following constructors:  </p>\n <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer__ctor_System_Type_\" data-linktype=\"relative-path\">System.Xml.Serialization.XmlSerializer.XmlSerializer(Type)</a>  \n\n <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_String_\" data-linktype=\"relative-path\">System.Xml.Serialization.XmlSerializer.XmlSerializer(Type,String)</a>  \n\n<p> If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance. The easiest solution is to use one of the previously mentioned two constructors. Otherwise, you must cache the assemblies in a <a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a>, as shown in the following example.  </p>\n<pre><code class=\"lang-c#\">Hashtable serializers = new Hashtable();  \n\n// Use the constructor that takes a type and XmlRootAttribute.  \nXmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  \n\n// Implement a method named GenerateKey that creates unique keys   \n// for each instance of the XmlSerializer. The code should take   \n// into account all parameters passed to the XmlSerializer   \n// constructor.  \nobject key = GenerateKey(typeof(MyClass), myRoot);  \n\n// Check the local cache for a matching serializer.  \nXmlSerializer ser = (XmlSerializer)serializers[key];  \nif (ser == null)   \n{  \n    ser = new XmlSerializer(typeof(MyClass), myRoot);  \n    // Cache the serializer.  \n    serializers[key] = ser;  \n}  \nelse  \n{  \n    // Use the serializer to serialize, or deserialize.  \n}  \n</code></pre><pre><code class=\"lang-vb#\">Dim serializers As New Hashtable()  \n\n&#39; Use the constructor that takes a type and XmlRootAttribute.  \nDim s As New XmlSerializer(GetType([MyClass]), myRoot)  \n\n&#39; Implement a method named GenerateKey that creates unique keys   \n&#39; for each instance of the XmlSerializer. The code should take   \n&#39; into account all parameters passed to the XmlSerializer   \n&#39; constructor.  \nDim key As Object = GenerateKey(GetType([MyClass]), myRoot)  \n\n&#39; Check the local cache for a matching serializer.  \nDim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  \n\nIf ser Is Nothing Then  \n    ser = New XmlSerializer(GetType([MyClass]), myRoot)  \n    &#39; Cache the serializer.  \n    serializers(key) = ser  \nElse   \n    &#39; Use the serializer to serialize, or deserialize.  \nEnd If  \n</code></pre><h2 id=\"serialization-of-arraylist-and-generic-list\">Serialization of ArrayList and Generic List</h2>\n<p> The XmlSerializer cannot serialize or deserialize the following:  </p>\n<ul>\n<li><p>Arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>  </p>\n</li>\n<li><p>Arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>  </p>\n</li>\n</ul>\n<h2 id=\"serialization-of-enumerations-of-unsigned-long\">Serialization of Enumerations of Unsigned Long</h2>\n<p> The XmlSerializer cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (<code>ulong</code> in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807. For example, the following cannot be serialized.  </p>\n<p><codecontentplaceholder>9</codecontentplaceholder>  </p>\n<h2 id=\"objects-marked-with-the-obsolete-attribute-no-longer-serialized\">Objects marked with the Obsolete Attribute no longer serialized</h2>\n<p> In the .NET Framework 3.5 the XmlSerializer class no longer serializes objects that are marked as <code>[Obsolete]</code>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor\" data-linktype=\"self-bookmark\">XmlSerializer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_\" data-linktype=\"self-bookmark\">XmlSerializer(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Xml_Serialization_XmlTypeMapping_\" data-linktype=\"self-bookmark\">XmlSerializer(XmlTypeMapping)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class using an object that maps one type to another.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_String_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Type___\" data-linktype=\"self-bookmark\">XmlSerializer(Type,Type[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the <code>extraTypes</code> parameter specifies objects that can be inserted into the array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,XmlAttributeOverrides)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlRootAttribute_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,XmlRootAttribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> into XML document instances, and deserialize XML document instances into objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> into XML document instances, and deserialize XML document instances into objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_System_String_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type. This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_CanDeserialize_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">CanDeserialize(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can deserialize a specified XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_CreateReader\" data-linktype=\"self-bookmark\">CreateReader()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an object used to read the XML document to be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_CreateWriter\" data-linktype=\"self-bookmark\">CreateWriter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns a writer used to serialize the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_IO_Stream_\" data-linktype=\"self-bookmark\">Deserialize(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_IO_TextReader_\" data-linktype=\"self-bookmark\">Deserialize(TextReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_Serialization_XmlSerializationReader_\" data-linktype=\"self-bookmark\">Deserialize(XmlSerializationReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">Deserialize(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_String_\" data-linktype=\"self-bookmark\">Deserialize(XmlReader,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and encoding style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_Xml_Serialization_XmlDeserializationEvents_\" data-linktype=\"self-bookmark\">Deserialize(XmlReader,XmlDeserializationEvents)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes an XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and allows the overriding of events that occur during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_String_System_Xml_Serialization_XmlDeserializationEvents_\" data-linktype=\"self-bookmark\">Deserialize(XmlReader,String,XmlDeserializationEvents)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deserializes the object using the data contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___\" data-linktype=\"self-bookmark\">FromMappings(XmlMapping[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects created from an array of <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">FromMappings(XmlMapping[],Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class created from mappings of one XML type to another.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___System_Type_\" data-linktype=\"self-bookmark\">FromMappings(XmlMapping[],Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class from the specified mappings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_FromTypes_System_Type___\" data-linktype=\"self-bookmark\">FromTypes(Type[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects created from an array of types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_GenerateSerializer_System_Type___System_Xml_Serialization_XmlMapping___\" data-linktype=\"self-bookmark\">GenerateSerializer(Type[],XmlMapping[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_GenerateSerializer_System_Type___System_Xml_Serialization_XmlMapping___System_CodeDom_Compiler_CompilerParameters_\" data-linktype=\"self-bookmark\">GenerateSerializer(Type[],XmlMapping[],CompilerParameters)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_System_Type_\" data-linktype=\"self-bookmark\">GetXmlSerializerAssemblyName(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the assembly that contains one or more versions of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> especially created to serialize or deserialize the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_System_Type_System_String_\" data-linktype=\"self-bookmark\">GetXmlSerializerAssemblyName(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_IO_Stream_System_Object_\" data-linktype=\"self-bookmark\">Serialize(Stream,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_IO_TextWriter_System_Object_\" data-linktype=\"self-bookmark\">Serialize(TextWriter,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_Object_System_Xml_Serialization_XmlSerializationWriter_\" data-linktype=\"self-bookmark\">Serialize(Object,XmlSerializationWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_\" data-linktype=\"self-bookmark\">Serialize(XmlWriter,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_IO_Stream_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\" data-linktype=\"self-bookmark\">Serialize(Stream,Object,XmlSerializerNamespaces)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>that references the specified namespaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_IO_TextWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\" data-linktype=\"self-bookmark\">Serialize(TextWriter,Object,XmlSerializerNamespaces)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and references the specified namespaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\" data-linktype=\"self-bookmark\">Serialize(XmlWriter,Object,XmlSerializerNamespaces)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and references the specified namespaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_System_String_\" data-linktype=\"self-bookmark\">Serialize(XmlWriter,Object,XmlSerializerNamespaces,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified object and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and references the specified namespaces and encoding style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_System_String_System_String_\" data-linktype=\"self-bookmark\">Serialize(XmlWriter,Object,XmlSerializerNamespaces,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, XML namespaces, and encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_UnknownAttribute\" data-linktype=\"self-bookmark\">UnknownAttribute</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML attribute of unknown type during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"self-bookmark\">UnknownElement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML element of unknown type during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_UnknownNode\" data-linktype=\"self-bookmark\">UnknownNode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML node of unknown type during deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlSerializer_UnreferencedObject\" data-linktype=\"self-bookmark\">UnreferencedObject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs during deserialization of a SOAP-encoded XML stream, when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters a recognized type that is not used or is unreferenced.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected XmlSerializer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Commonly, an application defines several classes that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> converts into a single XML-instance document. However, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must know only one type--the type of the class that represents the XML root element. The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> automatically serializes all subordinate class instances. Similarly, only the type of the XML root element is required for deserialization.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example constructs an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> that serializes an object named <code>Widget</code>. The example sets various properties of the object before calling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer6 Example#1\">    Private Sub SerializeObject(ByVal filename As String)\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        \n        &#39; Create an instance of the class to be serialized.\n        Dim i As New OrderedItem()\n        \n        &#39; Set the public property values.\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n        End With\n        \n        &#39; Writing the document requires a TextWriter.\n        Dim writer As New StreamWriter(filename)\n        \n        &#39; Serialize the object, and close the TextWriter.\n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\n    \n    \n    &#39; This is the class that will be serialized.\n    Public Class OrderedItem\n        Public ItemName As String\n        Public Description As String\n        Public UnitPrice As Decimal\n        Public Quantity As Integer\n    End Class\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer6 Example#1\">private void SerializeObject(string filename)\n{\n   XmlSerializer serializer = \n   new XmlSerializer(typeof(OrderedItem));\n\n   // Create an instance of the class to be serialized.\n   OrderedItem i = new OrderedItem();\n\n   // Set the public property values.\n   i.ItemName = &quot;Widget&quot;;\n   i.Description = &quot;Regular Widget&quot;;\n   i.Quantity = 10;\n   i.UnitPrice = (decimal) 2.30;\n\n   // Writing the document requires a TextWriter.\n   TextWriter writer = new StreamWriter(filename);\n\n   // Serialize the object, and close the TextWriter.\n   serializer.Serialize(writer, i);\n   writer.Close();\n}\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   public string ItemName;\n   public string Description;\n   public decimal UnitPrice;\n   public int Quantity;\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer6 Example#1\">private:\n   void SerializeObject( String^ filename )\n   {\n      XmlSerializer^ serializer =\n         gcnew XmlSerializer( OrderedItem::typeid );\n\n      // Create an instance of the class to be serialized.\n      OrderedItem^ i = gcnew OrderedItem;\n\n      // Set the public property values.\n      i-&gt;ItemName = &quot;Widget&quot;;\n      i-&gt;Description = &quot;Regular Widget&quot;;\n      i-&gt;Quantity = 10;\n      i-&gt;UnitPrice = (Decimal)2.30;\n\n      // Writing the document requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n\n      // Serialize the object, and close the TextWriter.\n      serializer-&gt;Serialize( writer, i );\n      writer-&gt;Close();\n   }\n\npublic:\n   // This is the class that will be serialized.\n   ref class OrderedItem\n   {\n   public:\n      String^ ItemName;\n      String^ Description;\n      Decimal UnitPrice;\n      int Quantity;\n   };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Xml_Serialization_XmlTypeMapping_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(XmlTypeMapping)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class using an object that maps one type to another.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlTypeMapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> that maps one type to another.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is used to create an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when you serialize an object into a SOAP message. To control the SOAP messages generated, use the special attributes (beginning with the word &quot;Soap&quot;) found in the <a class=\"xref\" href=\"system.xml.serialization\" data-linktype=\"relative-path\">System.Xml.Serialization</a> namespace.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>. The serialization of the <code>GroupName</code>, <code>IgnoreThis</code> fields, and the members of the <code>GroupType</code> enumeration are overridden. In the <code>CreateOverrideSerializer</code> method, a <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> object is created, and for each overridden member or enumeration, a <a class=\"xref\" href=\"system.xml.serialization.soapattributes\" data-linktype=\"relative-path\">SoapAttributes</a> object is created with the appropriate property set and added to the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> object. An <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> object is created using the <a class=\"xref\" href=\"system.xml.serialization.soapattributeoverrides\" data-linktype=\"relative-path\">SoapAttributeOverrides</a> object, and that <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> object is used to create the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> that overrides the default serialization.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapAttributesOverrides#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\nref class Car;\n\n// SoapInclude allows Vehicle to accept Car type.\n\n[SoapInclude(Car::typeid)]\npublic ref class Vehicle abstract\n{\npublic:\n   String^ licenseNumber;\n   DateTime makeDate;\n};\n\npublic ref class Car: public Vehicle{};\n\npublic enum class GroupType\n{\n   // These enums can be overridden.\n   [SoapEnum(&quot;Small&quot;)]\n   A,\n   [SoapEnum(&quot;Large&quot;)]\n   B\n};\n\npublic ref class Group\n{\npublic:\n\n   [SoapAttributeAttribute(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ GroupName;\n\n   [SoapAttributeAttribute(DataType=&quot;base64Binary&quot;)]\n   array&lt;Byte&gt;^GroupNumber;\n\n   [SoapAttributeAttribute(DataType=&quot;date&quot;,AttributeName=&quot;CreationDate&quot;)]\n   DateTime Today;\n\n   [SoapElement(DataType=&quot;nonNegativeInteger&quot;,ElementName=&quot;PosInt&quot;)]\n   String^ PostitiveInt;\n\n   // This is ignored when serialized unless it&#39;s overridden.\n\n   [SoapIgnore]\n   bool IgnoreThis;\n   GroupType Grouptype;\n   Vehicle^ MyVehicle;\n\n   // The SoapInclude allows the method to return a Car.\n\n   [SoapInclude(Car::typeid)]\n   Vehicle^ myCar( String^ licNumber )\n   {\n      Vehicle^ v;\n      if ( licNumber-&gt;Equals( &quot;&quot; ) )\n      {\n         v = gcnew Car;\n         v-&gt;licenseNumber = &quot;!!!!!!&quot;;\n      }\n      else\n      {\n         v = gcnew Car;\n         v-&gt;licenseNumber = licNumber;\n      }\n\n      return v;\n   }\n};\n\npublic ref class Run\n{\npublic:\n   static void main()\n   {\n      Run^ test = gcnew Run;\n      test-&gt;SerializeOriginal( &quot;SoapOriginal.xml&quot; );\n      test-&gt;SerializeOverride( &quot;SoapOverrides.xml&quot; );\n      test-&gt;DeserializeOriginal( &quot;SoapOriginal.xml&quot; );\n      test-&gt;DeserializeOverride( &quot;SoapOverrides.xml&quot; );\n   }\n\n   void SerializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      mySerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\n   void SerializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class\n      // that overrides the serialization.\n      XmlSerializer^ overRideSerializer = CreateOverrideSerializer();\n      Group^ myGroup = MakeGroup();\n\n      // Writing the file requires a TextWriter.\n      XmlTextWriter^ writer = gcnew XmlTextWriter( filename,Encoding::UTF8 );\n      writer-&gt;Formatting = Formatting::Indented;\n      writer-&gt;WriteStartElement( &quot;wrapper&quot; );\n\n      // Serialize the class, and close the TextWriter.\n      overRideSerializer-&gt;Serialize( writer, myGroup );\n      writer-&gt;WriteEndElement();\n      writer-&gt;Close();\n   }\n\nprivate:\n   Group^ MakeGroup()\n   {\n      // Create an instance of the class that will be serialized.\n      Group^ myGroup = gcnew Group;\n\n      // Set the object properties.\n      myGroup-&gt;GroupName = &quot;.NET&quot;;\n      array&lt;Byte&gt;^hexByte = {Convert::ToByte( 100 ),Convert::ToByte( 50 )};\n      myGroup-&gt;GroupNumber = hexByte;\n      DateTime myDate = DateTime(2002,5,2);\n      myGroup-&gt;Today = myDate;\n      myGroup-&gt;PostitiveInt = &quot;10000&quot;;\n      myGroup-&gt;IgnoreThis = true;\n      myGroup-&gt;Grouptype = GroupType::B;\n      Car^ thisCar = dynamic_cast&lt;Car^&gt;(myGroup-&gt;myCar( &quot;1234566&quot; ));\n      myGroup-&gt;MyVehicle = thisCar;\n      return myGroup;\n   }\n\npublic:\n   void DeserializeOriginal( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\n   void DeserializeOverride( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer^ overRideSerializer = CreateOverrideSerializer();\n\n      // Reading the file requires an XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement( &quot;wrapper&quot; );\n\n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(overRideSerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n      ReadGroup( myGroup );\n   }\n\nprivate:\n   void ReadGroup( Group^ myGroup )\n   {\n      Console::WriteLine( myGroup-&gt;GroupName );\n      Console::WriteLine( myGroup-&gt;GroupNumber[ 0 ] );\n      Console::WriteLine( myGroup-&gt;GroupNumber[ 1 ] );\n      Console::WriteLine( myGroup-&gt;Today );\n      Console::WriteLine( myGroup-&gt;PostitiveInt );\n      Console::WriteLine( myGroup-&gt;IgnoreThis );\n      Console::WriteLine();\n   }\n\n   XmlSerializer^ CreateOverrideSerializer()\n   {\n      SoapAttributeOverrides^ mySoapAttributeOverrides = gcnew SoapAttributeOverrides;\n      SoapAttributes^ soapAtts = gcnew SoapAttributes;\n      SoapElementAttribute^ mySoapElement = gcnew SoapElementAttribute;\n      mySoapElement-&gt;ElementName = &quot;xxxx&quot;;\n      soapAtts-&gt;SoapElement = mySoapElement;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, &quot;PostitiveInt&quot;, soapAtts );\n\n      // Override the IgnoreThis property.\n      SoapIgnoreAttribute^ myIgnore = gcnew SoapIgnoreAttribute;\n      soapAtts = gcnew SoapAttributes;\n      soapAtts-&gt;SoapIgnore = false;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, &quot;IgnoreThis&quot;, soapAtts );\n\n      // Override the GroupType enumeration. \n      soapAtts = gcnew SoapAttributes;\n      SoapEnumAttribute^ xSoapEnum = gcnew SoapEnumAttribute;\n      xSoapEnum-&gt;Name = &quot;Over1000&quot;;\n      soapAtts-&gt;GroupType::SoapEnum = xSoapEnum;\n\n      // Add the SoapAttributes to the \n      // mySoapAttributeOverridesrides object.\n      mySoapAttributeOverrides-&gt;Add( GroupType::typeid, &quot;A&quot;, soapAtts );\n\n      // Create second enumeration and add it.\n      soapAtts = gcnew SoapAttributes;\n      xSoapEnum = gcnew SoapEnumAttribute;\n      xSoapEnum-&gt;Name = &quot;ZeroTo1000&quot;;\n      soapAtts-&gt;GroupType::SoapEnum = xSoapEnum;\n      mySoapAttributeOverrides-&gt;Add( GroupType::typeid, &quot;B&quot;, soapAtts );\n\n      // Override the Group type.\n      soapAtts = gcnew SoapAttributes;\n      SoapTypeAttribute^ soapType = gcnew SoapTypeAttribute;\n      soapType-&gt;TypeName = &quot;Team&quot;;\n      soapAtts-&gt;SoapType = soapType;\n      mySoapAttributeOverrides-&gt;Add( Group::typeid, soapAtts );\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping^ myMapping = (gcnew SoapReflectionImporter( mySoapAttributeOverrides ))-&gt;ImportTypeMapping( Group::typeid );\n      XmlSerializer^ ser = gcnew XmlSerializer( myMapping );\n      return ser;\n   }\n};\n\nint main()\n{\n   Run::main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapAttributesOverrides#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\nPublic Class Group\n   &lt;SoapAttribute (Namespace:= &quot;http:&#39;www.cpandl.com&quot;)&gt; _\n   Public GroupName As String \n   \n   &lt;SoapAttribute(DataType:= &quot;base64Binary&quot;)&gt; _\n   Public GroupNumber() As Byte\n\n   &lt;SoapAttribute(DataType:= &quot;date&quot;, _\n   AttributeName:= &quot;CreationDate&quot;)&gt; _\n   Public Today As DateTime \n   &lt;SoapElement(DataType:= &quot;nonNegativeInteger&quot;, _\n   ElementName:= &quot;PosInt&quot;)&gt; _\n   Public PostitiveInt As String \n   &#39; This is ignored when serialized unless it&#39;s overridden.\n   &lt;SoapIgnore&gt; _ \n   Public IgnoreThis As Boolean \n   \n   Public Grouptype As GroupType \n\n   Public MyVehicle As Vehicle \n\n   &#39;  The SoapInclude allows the method to return a Car.\n   &lt;SoapInclude(GetType(Car))&gt; _\n   Public Function myCar(licNumber As String ) As Vehicle \n      Dim v As Vehicle \n      if licNumber = &quot;&quot; Then\n         v = New Car()\n         v.licenseNumber = &quot;!!!!!!&quot;\n      else  \n   \t   v = New Car()\n   \t   v.licenseNumber = licNumber\n      End If\n      \n      return v\n   End Function\nEnd Class\n  \n&#39; SoapInclude allows Vehicle to accept Car type.\n&lt;SoapInclude(GetType(Car))&gt; _\nPublic MustInherit  class Vehicle\n   Public licenseNumber As String \n   Public makeDate As DateTime \nEnd Class\n\nPublic Class Car\n   Inherits Vehicle\n\nEnd Class\n\nPublic enum GroupType\n   &#39; These enums can be overridden.\n   &lt;SoapEnum(&quot;Small&quot;)&gt; _\n   A\n   &lt;SoapEnum(&quot;Large&quot;)&gt; _ \n   B\nEnd Enum\n \nPublic Class Run\n\n   Shared Sub Main()\n      Dim test As Run = New Run()\n      test.SerializeOriginal(&quot;SoapOriginal.xml&quot;)\n      test.SerializeOverride(&quot;SoapOverrides.xml&quot;)\n      test.DeserializeOriginal(&quot;SoapOriginal.xml&quot;)\n      test.DeserializeOverride(&quot;SoapOverrides.xml&quot;)\n   End SUb\n   \n   Public Sub SerializeOriginal(filename As String)\n\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(myMapping)\n      \n      Dim myGroup As Group =MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter  = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n   End Sub\n\n   Public Sub SerializeOverride(filename As String)\n      &#39; Create an instance of the XmlSerializer class\n      &#39; that overrides the serialization.\n      Dim overRideSerializer As XmlSerializer = _\n      CreateOverrideSerializer()\n      Dim myGroup As Group =MakeGroup()\n      &#39; Writing the file requires a TextWriter.\n      Dim writer As XmlTextWriter  = _\n      New XmlTextWriter(filename, Encoding.UTF8)\n      writer.Formatting = Formatting.Indented\n      writer.WriteStartElement(&quot;wrapper&quot;)\n      &#39; Serialize the class, and close the TextWriter.\n      overRideSerializer.Serialize(writer, myGroup)\n      writer.WriteEndElement()\n      writer.Close()\n    End Sub\n\n   private Function MakeGroup() As Group \n      &#39; Create an instance of the class that will be serialized.\n      Dim myGroup As Group  = New Group()\n\n      &#39; Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;\n\n      Dim hexByte()As Byte = new Byte(1){Convert.ToByte(100), _\n      Convert.ToByte(50)}\n      myGroup.GroupNumber = hexByte\n\n      Dim myDate As DateTime  = new DateTime(2002,5,2)\n      myGroup.Today = myDate\n\n      myGroup.PostitiveInt = &quot;10000&quot;\n\tmyGroup.IgnoreThis = true\n\tmyGroup.Grouptype = GroupType.B\n\tDim thisCar As Car \n\tthisCar =CType(myGroup.myCar(&quot;1234566&quot;), Car)\n\tmyGroup.myVehicle=thisCar\n      return myGroup\n   End Function   \t\n\n   Public Sub DeserializeOriginal(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (New SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      New XmlSerializer(myMapping)\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  = _\n      CType(mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n\n   Public Sub DeserializeOverride(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim overRideSerializer As XmlSerializer  = _\n      CreateOverrideSerializer()\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      New XmlTextReader(filename)\n      reader.ReadStartElement(&quot;wrapper&quot;)\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group = _\n      CType(overRideSerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n      ReadGroup(myGroup)\n   End Sub\n\n   private Sub ReadGroup(myGroup As Group)\n      Console.WriteLine(myGroup.GroupName)\n      Console.WriteLine(myGroup.GroupNumber(0))\n      Console.WriteLine(myGroup.GroupNumber(1))\n      Console.WriteLine(myGroup.Today)\n      Console.WriteLine(myGroup.PostitiveInt)\n      Console.WriteLine(myGroup.IgnoreThis)\n      Console.WriteLine()\n   End Sub\n   \n   Private Function CreateOverrideSerializer() As XmlSerializer\n      Dim soapOver As SoapAttributeOverrides = New SoapAttributeOverrides()\n      Dim soapAtts As SoapAttributes = New SoapAttributes()\n\n      Dim mySoapElement As SoapElementAttribute = New SoapElementAttribute()\n      mySoapElement.ElementName = &quot;xxxx&quot;\n      soapAtts.SoapElement = mySoapElement\n      soapOver.Add(GetType(Group), &quot;PostitiveInt&quot;, soapAtts)\n\n      &#39; Override the IgnoreThis property.\n      Dim myIgnore As SoapIgnoreAttribute  = new SoapIgnoreAttribute()\n      soapAtts = New SoapAttributes()\n      soapAtts.SoapIgnore = false\n      soapOver.Add(GetType(Group), &quot;IgnoreThis&quot;, soapAtts)\n\n      &#39; Override the GroupType enumeration.\n      soapAtts = New SoapAttributes()\n      Dim xSoapEnum As SoapEnumAttribute = new SoapEnumAttribute()\n      xSoapEnum.Name = &quot;Over1000&quot;\n      soapAtts.SoapEnum = xSoapEnum\n      &#39; Add the SoapAttributes to the SoapOverrides object.\n      soapOver.Add(GetType(GroupType), &quot;A&quot;, soapAtts)\n\n      &#39; Create second enumeration and add it.\n      soapAtts = New SoapAttributes()\n      xSoapEnum = New SoapEnumAttribute()\n      xSoapEnum.Name = &quot;ZeroTo1000&quot;\n      soapAtts.SoapEnum = xSoapEnum\n      soapOver.Add(GetType(GroupType), &quot;B&quot;, soapAtts)\n\n      &#39; Override the Group type.\n      soapAtts = New SoapAttributes()\n      Dim soapType As SoapTypeAttribute = New SoapTypeAttribute()\n      soapType.TypeName = &quot;Team&quot;\n      soapAtts.SoapType = soapType\n      soapOver.Add(GetType(Group),soapAtts)\n\t\n      Dim myMapping As XmlTypeMapping = (New SoapReflectionImporter( _\n      soapOver)).ImportTypeMapping(GetType(Group))\n\t\n       Dim ser As XmlSerializer = new XmlSerializer(myMapping)\n      return ser\n   End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapAttributesOverrides#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\npublic class Group\n{\n   [SoapAttribute (Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string GroupName;\n   \n   [SoapAttribute(DataType = &quot;base64Binary&quot;)]\n   public Byte [] GroupNumber;\n\n   [SoapAttribute(DataType = &quot;date&quot;, AttributeName = &quot;CreationDate&quot;)]\n   public DateTime Today;\n   [SoapElement(DataType = &quot;nonNegativeInteger&quot;, ElementName = &quot;PosInt&quot;)]\n   public string PostitiveInt;\n   // This is ignored when serialized unless it&#39;s overridden.\n   [SoapIgnore] \n   public bool IgnoreThis;\n   \n   public GroupType Grouptype;\n\n   public Vehicle MyVehicle;\n\n   // The SoapInclude allows the method to return a Car.\n   [SoapInclude(typeof(Car))]\n   public Vehicle myCar(string licNumber)\n   {\n      Vehicle v;\n      if(licNumber == &quot;&quot;)\n         {\n            v = new Car();\n   \t    v.licenseNumber = &quot;!!!!!!&quot;;\n   \t }\n      else\n   \t {\n   \t   v = new Car();\n   \t   v.licenseNumber = licNumber;\n   \t }\n      return v;\n   }\n}\n  \n// SoapInclude allows Vehicle to accept Car type.\n[SoapInclude(typeof(Car))]\npublic abstract class Vehicle\n{\n   public string licenseNumber;\n   public DateTime makeDate;\n}\n\npublic class Car: Vehicle\n{\n}\n\npublic enum GroupType\n{\n   // These enums can be overridden.\n   [SoapEnum(&quot;Small&quot;)]\n   A,\n   [SoapEnum(&quot;Large&quot;)]\n   B\n}\n \npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOriginal(&quot;SoapOriginal.xml&quot;);\n      test.SerializeOverride(&quot;SoapOverrides.xml&quot;);\n      test.DeserializeOriginal(&quot;SoapOriginal.xml&quot;);\n      test.DeserializeOverride(&quot;SoapOverrides.xml&quot;);\n   \n   }\n   public void SerializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      mySerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n   }\n\n   public void SerializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class\n      // that overrides the serialization.\n      XmlSerializer overRideSerializer = CreateOverrideSerializer();\n      Group myGroup=MakeGroup();\n      // Writing the file requires a TextWriter.\n      XmlTextWriter writer = \n      new XmlTextWriter(filename, Encoding.UTF8);\n      writer.Formatting = Formatting.Indented;\n      writer.WriteStartElement(&quot;wrapper&quot;);\n      // Serialize the class, and close the TextWriter.\n      overRideSerializer.Serialize(writer, myGroup);\n      writer.WriteEndElement();\n      writer.Close();\n\n   }\n\n   private Group MakeGroup(){\n      // Create an instance of the class that will be serialized.\n      Group myGroup = new Group();\n\n      // Set the object properties.\n      myGroup.GroupName = &quot;.NET&quot;;\n\n      Byte [] hexByte = new Byte[2]{Convert.ToByte(100),\n      Convert.ToByte(50)};\n      myGroup.GroupNumber = hexByte;\n\n      DateTime myDate = new DateTime(2002,5,2);\n      myGroup.Today = myDate;\n      myGroup.PostitiveInt= &quot;10000&quot;;\n      myGroup.IgnoreThis=true;\n      myGroup.Grouptype= GroupType.B;\n      Car thisCar =(Car)  myGroup.myCar(&quot;1234566&quot;);\n      myGroup.MyVehicle=thisCar;\n      return myGroup;\n   }   \t\n\n   public void DeserializeOriginal(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n\n   }\n\n   public void DeserializeOverride(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlSerializer overRideSerializer = CreateOverrideSerializer();\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement(&quot;wrapper&quot;);\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) overRideSerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n      ReadGroup(myGroup);\n   }\n\n   private void ReadGroup(Group myGroup){\n      Console.WriteLine(myGroup.GroupName);\n      Console.WriteLine(myGroup.GroupNumber[0]);\n      Console.WriteLine(myGroup.GroupNumber[1]);\n      Console.WriteLine(myGroup.Today);\n      Console.WriteLine(myGroup.PostitiveInt);\n      Console.WriteLine(myGroup.IgnoreThis);\n      Console.WriteLine();\n   }\n   private XmlSerializer CreateOverrideSerializer()\n   {\n      SoapAttributeOverrides mySoapAttributeOverrides = \n      new SoapAttributeOverrides();\n      SoapAttributes soapAtts = new SoapAttributes();\n\n      SoapElementAttribute mySoapElement = new SoapElementAttribute();\n      mySoapElement.ElementName = &quot;xxxx&quot;;\n      soapAtts.SoapElement = mySoapElement;\n      mySoapAttributeOverrides.Add(typeof(Group), &quot;PostitiveInt&quot;, \n      soapAtts);\n\n      // Override the IgnoreThis property.\n      SoapIgnoreAttribute myIgnore = new SoapIgnoreAttribute();\n      soapAtts = new SoapAttributes();\n      soapAtts.SoapIgnore = false;      \n      mySoapAttributeOverrides.Add(typeof(Group), &quot;IgnoreThis&quot;, \n      soapAtts);\n\n      // Override the GroupType enumeration.\t\n      soapAtts = new SoapAttributes();\n      SoapEnumAttribute xSoapEnum = new SoapEnumAttribute();\n      xSoapEnum.Name = &quot;Over1000&quot;;\n      soapAtts.SoapEnum = xSoapEnum;\n\n      // Add the SoapAttributes to the \n      // mySoapAttributeOverridesrides object.\n      mySoapAttributeOverrides.Add(typeof(GroupType), &quot;A&quot;, \n      soapAtts);\n\n      // Create second enumeration and add it.\n      soapAtts = new SoapAttributes();\n      xSoapEnum = new SoapEnumAttribute();\n      xSoapEnum.Name = &quot;ZeroTo1000&quot;;\n      soapAtts.SoapEnum = xSoapEnum;\n      mySoapAttributeOverrides.Add(typeof(GroupType), &quot;B&quot;, \n      soapAtts);\n\n      // Override the Group type.\n      soapAtts = new SoapAttributes();\n      SoapTypeAttribute soapType = new SoapTypeAttribute();\n      soapType.TypeName = &quot;Team&quot;;\n      soapAtts.SoapType = soapType;\n      mySoapAttributeOverrides.Add(typeof(Group),soapAtts);\n\n      // Create an XmlTypeMapping that is used to create an instance \n      // of the XmlSerializer. Then return the XmlSerializer object.\n      XmlTypeMapping myMapping = (new SoapReflectionImporter(\n      mySoapAttributeOverrides)).ImportTypeMapping(typeof(Group));\n\t\n      XmlSerializer ser = new XmlSerializer(myMapping);\n      return ser;\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, string defaultNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default namespace to use for all the XML elements.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example constructs an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> that serializes an object named <code>Widget</code>. The example sets various properties of the object before calling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer1 Example#1\">    private void SerializeObject(string filename) {\n        XmlSerializer serializer = new XmlSerializer\n            (typeof(OrderedItem), &quot;http://www.cpandl.com&quot;);\n         \n        // Create an instance of the class to be serialized.\n        OrderedItem i = new OrderedItem();\n         \n        // Insert code to set property values.\n         \n        // Writing the document requires a TextWriter.\n        TextWriter writer = new StreamWriter(filename);\n        // Serialize the object, and close the TextWriter\n        serializer.Serialize(writer, i);\n        writer.Close();\n    }\n \n    private void DeserializeObject(string filename) {\n        XmlSerializer serializer = new XmlSerializer\n            (typeof(OrderedItem), &quot;http://www.cpandl.com&quot;);\n        // A FileStream is needed to read the XML document.\n        FileStream fs = new FileStream(filename, FileMode.Open);\n         \n        // Declare an object variable of the type to be deserialized.\n        OrderedItem i;\n         \n        // Deserialize the object.\n        i = (OrderedItem) serializer.Deserialize(fs);\n         \n        // Insert code to use the properties and methods of the object.\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer1 Example#1\">private:\n   void SerializeObject( String^ filename )\n   {\n      XmlSerializer^ serializer = gcnew XmlSerializer(\n         OrderedItem::typeid,&quot;http://www.cpandl.com&quot; );\n\n      // Create an instance of the class to be serialized.\n      OrderedItem^ i = gcnew OrderedItem;\n\n      // Insert code to set property values.\n\n      // Writing the document requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n      // Serialize the object, and close the TextWriter\n      serializer-&gt;Serialize( writer, i );\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ serializer = gcnew XmlSerializer(\n         OrderedItem::typeid,&quot;http://www.cpandl.com&quot; );\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n\n      // Declare an object variable of the type to be deserialized.\n      OrderedItem^ i;\n\n      // Deserialize the object.\n      i = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize( fs ));\n\n      // Insert code to use the properties and methods of the object.\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer1 Example#1\">    Private Sub SerializeObject(ByVal filename As String)\n        Dim serializer As New XmlSerializer(GetType(OrderedItem), _\n                                              &quot;http://www.cpandl.com&quot;)\n        \n        &#39; Create an instance of the class to be serialized.\n        Dim i As New OrderedItem()\n        \n        &#39; Insert code to set property values.\n        &#39; Writing the document requires a TextWriter.\n        Dim writer As New StreamWriter(filename)\n        &#39; Serialize the object, and close the TextWriter.\n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\n    \n    \n    Private Sub DeserializeObject(ByVal filename As String)\n        Dim serializer As New XmlSerializer(GetType(OrderedItem), _\n                                              &quot;http://www.cpandl.com&quot;)\n        &#39; A FileStream is needed to read the XML document.\n        Dim fs As New FileStream(filename, FileMode.Open)\n        \n        &#39; Declare an object variable of the type to be deserialized.\n        Dim i As OrderedItem\n        \n        &#39; Deserialize the object.\n        i = CType(serializer.Deserialize(fs), OrderedItem)\n        &#39; Insert code to use the properties and methods of the object.\n    End Sub\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Type___\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,Type[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the <code>extraTypes</code> parameter specifies objects that can be inserted into the array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, Type[] extraTypes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>extraTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> array of additional object types to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized. However, if a class contains a field or property that returns an array of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>, any object can be inserted into that array. In that case, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be instructed to expect all the possible object types that are inserted into the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> array. To do this, use the <code>extraTypes</code> parameter to specify the extra object types to serialize or deserialize.  </p>\n<p> You can also use the <code>extraTypes</code> parameter to specify types derived from a base class. For example, suppose a base class named <code>Phone</code> exists, and a class named <code>InternationalPhone</code> derives from it. Use the <code>extraTypes</code> parameter to specify the derived type as well.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an instance of a class that contains a public field that returns an array of objects. The <code>extraTypes</code> parameter of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> constructor specifies the types of the objects that can be serialized in the array.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer3 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nref class Address;\nref class Phone;\n\n// This defines the object that will be serialized.\npublic ref class Teacher\n{\npublic:\n   String^ Name;\n   Teacher(){}\n\n   /* Note that the Info field returns an array of objects.\n         Any object can be added to the array by adding the\n         object type to the array passed to the extraTypes argument. */\n\n   [XmlArray(ElementName=&quot;ExtraInfo&quot;,IsNullable=true)]\n   array&lt;Object^&gt;^Info;\n   Phone^ PhoneInfo;\n};\n\n\n// This defines one of the extra types to be included.\npublic ref class Address\n{\npublic:\n   String^ City;\n   Address(){}\n\n   Address( String^ city )\n   {\n      City = city;\n   }\n};\n\n// Another extra type to include.\npublic ref class Phone\n{\npublic:\n   String^ PhoneNumber;\n   Phone(){}\n\n   Phone( String^ phoneNumber )\n   {\n      PhoneNumber = phoneNumber;\n   }\n};\n\n// Another type, derived from Phone\npublic ref class InternationalPhone: public Phone\n{\npublic:\n   String^ CountryCode;\n   InternationalPhone(){}\n\n   InternationalPhone( String^ countryCode )\n   {\n      CountryCode = countryCode;\n   }\n};\n\npublic ref class Run\n{\npublic:\n   static void main()\n   {\n      Run^ test = gcnew Run;\n      test-&gt;SerializeObject( &quot;Teacher.xml&quot; );\n      test-&gt;DeserializeObject( &quot;Teacher.xml&quot; );\n   }\n\nprivate:\n   void SerializeObject( String^ filename )\n   {\n      // Writing the file requires a TextWriter.\n      TextWriter^ myStreamWriter = gcnew StreamWriter( filename );\n\n      // Create a Type array.\n      array&lt;Type^&gt;^extraTypes = gcnew array&lt;Type^&gt;(3);\n      extraTypes[ 0 ] = Address::typeid;\n      extraTypes[ 1 ] = Phone::typeid;\n      extraTypes[ 2 ] = InternationalPhone::typeid;\n\n      // Create the XmlSerializer instance.\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( Teacher::typeid,extraTypes );\n      Teacher^ teacher = gcnew Teacher;\n      teacher-&gt;Name = &quot;Mike&quot;;\n\n      // Add extra types to the Teacher object\n      array&lt;Object^&gt;^info = gcnew array&lt;Object^&gt;(2);\n      info[ 0 ] = gcnew Address( &quot;Springville&quot; );\n      info[ 1 ] = gcnew Phone( &quot;555-0100&quot; );\n      teacher-&gt;Info = info;\n      teacher-&gt;PhoneInfo = gcnew InternationalPhone( &quot;000&quot; );\n      mySerializer-&gt;Serialize( myStreamWriter, teacher );\n      myStreamWriter-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create a Type array.\n      array&lt;Type^&gt;^extraTypes = gcnew array&lt;Type^&gt;(3);\n      extraTypes[ 0 ] = Address::typeid;\n      extraTypes[ 1 ] = Phone::typeid;\n      extraTypes[ 2 ] = InternationalPhone::typeid;\n\n      // Create the XmlSerializer instance.\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( Teacher::typeid,extraTypes );\n\n      // Reading a file requires a FileStream.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Teacher^ teacher = dynamic_cast&lt;Teacher^&gt;(mySerializer-&gt;Deserialize( fs ));\n\n      // Read the extra information.\n      Address^ a = dynamic_cast&lt;Address^&gt;(teacher-&gt;Info[ 0 ]);\n      Phone^ p = dynamic_cast&lt;Phone^&gt;(teacher-&gt;Info[ 1 ]);\n      InternationalPhone^ Ip = dynamic_cast&lt;InternationalPhone^&gt;(teacher-&gt;PhoneInfo);\n      Console::WriteLine( teacher-&gt;Name );\n      Console::WriteLine( a-&gt;City );\n      Console::WriteLine( p-&gt;PhoneNumber );\n      Console::WriteLine( Ip-&gt;CountryCode );\n   }\n};\n\nint main()\n{\n   Run::main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer3 Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// This defines the object that will be serialized.\npublic class Teacher\n{  \n   public string Name;\n   public Teacher(){}\n   /* Note that the Info field returns an array of objects.\n      Any object can be added to the array by adding the\n      object type to the array passed to the extraTypes argument. */\n   [XmlArray (ElementName = &quot;ExtraInfo&quot;, IsNullable = true)]\n   public object[] Info;\n   public Phone PhoneInfo;\n}\n \n// This defines one of the extra types to be included.\npublic class Address\n{  \n   public string City;\n\n   public Address(){}\n   public Address(string city)\n   {\n      City = city;\n   }\n\n}\n\n// Another extra type to include.\npublic class Phone\n{\n   public string PhoneNumber;\n   public Phone(){}\n   public Phone(string phoneNumber)\n   {\n      PhoneNumber = phoneNumber;\n   }\n}\n\n// Another type, derived from Phone\npublic class InternationalPhone:Phone\n{\n   public string CountryCode;\n\n   public InternationalPhone(){}\n\n   public InternationalPhone(string countryCode)\n   {\n      CountryCode = countryCode;\n   }\n}\n    \npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;Teacher.xml&quot;);\n      test.DeserializeObject(&quot;Teacher.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      // Writing the file requires a TextWriter.\n      TextWriter myStreamWriter = new StreamWriter(filename);\n \n      // Create a Type array.\n      Type [] extraTypes= new Type[3];\n      extraTypes[0] = typeof(Address);\n      extraTypes[1] = typeof(Phone);\n      extraTypes[2] = typeof(InternationalPhone);\n\n      // Create the XmlSerializer instance.\n      XmlSerializer mySerializer = new XmlSerializer\n      (typeof(Teacher),extraTypes);\n          \n      Teacher teacher = new Teacher();\n      teacher.Name = &quot;Mike&quot;;\n      // Add extra types to the Teacher object\n      object [] info = new object[2];\n      info[0] = new Address(&quot;Springville&quot;);\n      info[1] = new Phone(&quot;555-0100&quot;);\n         \n      teacher.Info = info;\n\n      teacher.PhoneInfo = new InternationalPhone(&quot;000&quot;); \n\n      mySerializer.Serialize(myStreamWriter,teacher);\n      myStreamWriter.Close();\n   }\n \n   private void DeserializeObject(string filename)\n   {\n      // Create a Type array.\n      Type [] extraTypes= new Type[3];\n      extraTypes[0] = typeof(Address);\n      extraTypes[1] = typeof(Phone);\n      extraTypes[2] = typeof(InternationalPhone);\n\n      // Create the XmlSerializer instance.\n      XmlSerializer mySerializer = new XmlSerializer\n      (typeof(Teacher),extraTypes);\n      \n      // Reading a file requires a FileStream.\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      Teacher teacher = (Teacher) mySerializer.Deserialize(fs);\n         \n      // Read the extra information.\n      Address a = (Address)teacher.Info[0];\n      Phone p = (Phone) teacher.Info[1];\n      InternationalPhone Ip = \n      (InternationalPhone) teacher.PhoneInfo;\n\n      Console.WriteLine(teacher.Name);\n      Console.WriteLine(a.City);\n      Console.WriteLine(p.PhoneNumber);\n      Console.WriteLine(Ip.CountryCode);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer3 Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\n\n&#39; This defines the object that will be serialized.\nPublic Class Teacher\n    Public Name As String\n    \n    Public Sub New()\n    End Sub &#39;New \n    &#39; Note that the Info field returns an array of objects.\n    &#39; Any object can be added to the array by adding the\n    &#39; object type to the array passed to the extraTypes argument. \n    &lt;XmlArray(ElementName := &quot;ExtraInfo&quot;, IsNullable := True)&gt; _\n    Public Info() As Object\n    Public PhoneInfo As Phone\nEnd Class &#39;Teacher\n\n\n&#39; This defines one of the extra types to be included.\nPublic Class Address\n    Public City As String\n    \n    Public Sub New()\n    End Sub &#39;New\n    \n    Public Sub New(city As String)\n        me.City = city\n    End Sub &#39;New\nEnd Class &#39;Address\n \n\n&#39; Another extra type to include.\nPublic Class Phone\n    Public PhoneNumber As String\n    \n    Public Sub New()\n    End Sub &#39;New\n    \n    Public Sub New(phoneNumber As String)\n        me.PhoneNumber = phoneNumber\n    End Sub &#39;New\nEnd Class &#39;Phone\n\n\n&#39; Another type, derived from Phone.\nPublic Class InternationalPhone\n    Inherits Phone\n    Public CountryCode As String\n    \n    \n    Public Sub New()\n    End Sub &#39;New\n     \n    Public Sub New(countryCode As String)\n        me.CountryCode = countryCode\n    End Sub &#39;New\nEnd Class &#39;InternationalPhone\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;Teacher.xml&quot;)\n        test.DeserializeObject(&quot;Teacher.xml&quot;)\n    End Sub &#39;Main\n    \n    \n    Private Sub SerializeObject(filename As String)\n        &#39; Writing the file requires a TextWriter.\n        Dim myStreamWriter As New StreamWriter(filename)\n        \n        &#39; Create a Type array.\n        Dim extraTypes(2) As Type\n        extraTypes(0) = GetType(Address)\n        extraTypes(1) = GetType(Phone)\n        extraTypes(2) = GetType(InternationalPhone)\n        \n        &#39; Create the XmlSerializer instance.\n        Dim mySerializer As New XmlSerializer(GetType(Teacher), extraTypes)\n        \n        Dim teacher As New Teacher()\n        teacher.Name = &quot;Mike&quot;\n        &#39; Add extra types to the Teacher object.\n        Dim info(1) As Object\n        info(0) = New Address(&quot;Springville&quot;)\n        info(1) = New Phone(&quot;555-0100&quot;)\n        \n        teacher.Info = info\n        \n        teacher.PhoneInfo = New InternationalPhone(&quot;000&quot;)\n        \n        mySerializer.Serialize(myStreamWriter, teacher)\n        myStreamWriter.Close()\n    End Sub &#39;SerializeObject\n    \n    \n    Private Sub DeserializeObject(filename As String)\n        &#39; Create a Type array.\n        Dim extraTypes(2) As Type\n        extraTypes(0) = GetType(Address)\n        extraTypes(1) = GetType(Phone)\n        extraTypes(2) = GetType(InternationalPhone)\n        \n        &#39; Create the XmlSerializer instance.\n        Dim mySerializer As New XmlSerializer(GetType(Teacher), extraTypes)\n        \n        &#39; Reading a file requires a FileStream.\n        Dim fs As New FileStream(filename, FileMode.Open)\n        Dim teacher As Teacher = CType(mySerializer.Deserialize(fs), Teacher)\n        \n        &#39; Read the extra information.\n        Dim a As Address = CType(teacher.Info(0), Address)\n        Dim p As Phone = CType(teacher.Info(1), Phone)\n        Dim Ip As InternationalPhone = CType(teacher.PhoneInfo, InternationalPhone)\n        \n        Console.WriteLine(teacher.Name)\n        Console.WriteLine(a.City)\n        Console.WriteLine(p.PhoneNumber)\n        Console.WriteLine(Ip.CountryCode)\n    End Sub &#39;DeserializeObject\nEnd Class &#39;Run\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,XmlAttributeOverrides)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>overrides</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>overrides</code> parameter can be used to control how fields and properties are encoded in XML. These settings override any attributes that already exist on the objects. This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer4 Example#1\">// Beginning of HighSchool.dll\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\nnamespace HighSchool\n{\n   public ref class Student\n   {\n   public:\n      String^ Name;\n      int ID;\n   };\n\n   public ref class MyClass\n   {\n   public:\n      array&lt;Student^&gt;^Students;\n   };\n}\n\nnamespace College\n{\n\nusing namespace HighSchool;\n   public ref class Graduate: public HighSchool::Student\n   {\n   public:\n      Graduate(){}\n\n      // Add a new field named University.\n      String^ University;\n   };\n\n   public ref class Run\n   {\n   public:\n      static void main()\n      {\n         Run^ test = gcnew Run;\n         test-&gt;WriteOverriddenAttributes( &quot;College.xml&quot; );\n         test-&gt;ReadOverriddenAttributes( &quot;College.xml&quot; );\n      }\n\n   private:\n      void WriteOverriddenAttributes( String^ filename )\n      {\n         // Writing the file requires a TextWriter.\n         TextWriter^ myStreamWriter = gcnew StreamWriter( filename );\n\n         // Create an XMLAttributeOverrides class.\n         XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n\n         // Create the XmlAttributes class.\n         XmlAttributes^ attrs = gcnew XmlAttributes;\n\n         /* Override the Student class. &quot;Alumni&quot; is the name\n               of the overriding element in the XML output. */\n         XmlElementAttribute^ attr = gcnew XmlElementAttribute( &quot;Alumni&quot;,Graduate::typeid );\n\n         /* Add the XmlElementAttribute to the collection of\n               elements in the XmlAttributes object. */\n         attrs-&gt;XmlElements-&gt;Add( attr );\n\n         /* Add the XmlAttributes to the XmlAttributeOverrides. \n               &quot;Students&quot; is the name being overridden. */\n         attrOverrides-&gt;Add( HighSchool::MyClass::typeid, &quot;Students&quot;, attrs );\n\n         // Create the XmlSerializer. \n         XmlSerializer^ mySerializer = gcnew XmlSerializer( HighSchool::MyClass::typeid,attrOverrides );\n         MyClass ^ myClass = gcnew MyClass;\n         Graduate^ g1 = gcnew Graduate;\n         g1-&gt;Name = &quot;Jackie&quot;;\n         g1-&gt;ID = 1;\n         g1-&gt;University = &quot;Alma Mater&quot;;\n         Graduate^ g2 = gcnew Graduate;\n         g2-&gt;Name = &quot;Megan&quot;;\n         g2-&gt;ID = 2;\n         g2-&gt;University = &quot;CM&quot;;\n         array&lt;Student^&gt;^myArray = {g1,g2};\n         myClass-&gt;Students = myArray;\n         mySerializer-&gt;Serialize( myStreamWriter, myClass );\n         myStreamWriter-&gt;Close();\n      }\n\n      void ReadOverriddenAttributes( String^ filename )\n      {\n         /* The majority of the code here is the same as that in the\n               WriteOverriddenAttributes method. Because the XML being read\n               doesn&#39;t conform to the schema defined by the DLL, the\n               XMLAttributesOverrides must be used to create an \n               XmlSerializer instance to read the XML document.*/\n         XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n         XmlAttributes^ attrs = gcnew XmlAttributes;\n         XmlElementAttribute^ attr = gcnew XmlElementAttribute( &quot;Alumni&quot;,Graduate::typeid );\n         attrs-&gt;XmlElements-&gt;Add( attr );\n         attrOverrides-&gt;Add( HighSchool::MyClass::typeid, &quot;Students&quot;, attrs );\n         XmlSerializer^ readSerializer = gcnew XmlSerializer( HighSchool::MyClass::typeid,attrOverrides );\n         \n         // To read the file, a FileStream object is required. \n         FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n         MyClass ^ myClass;\n         myClass = dynamic_cast&lt;MyClass^&gt;(readSerializer-&gt;Deserialize( fs ));\n\n         /* Here is the difference between reading and writing an \n               XML document: You must declare an object of the derived \n               type (Graduate) and cast the Student instance to it.*/\n         Graduate^ g;\n         System::Collections::IEnumerator^ myEnum = myClass-&gt;Students-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Graduate^ grad = safe_cast&lt;Graduate^&gt;(myEnum-&gt;Current);\n            g = dynamic_cast&lt;Graduate^&gt;(grad);\n            Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;&quot;, g-&gt;Name );\n            Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;&quot;, g-&gt;ID );\n            Console::Write( &quot;{0}<br>&quot;, g-&gt;University );\n         }\n      }\n   };\n}\n\nint main()\n{\n   College::Run::main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer4 Example#1\">&#39; Beginning of HighSchool.dll\nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\nImports HighSchool\n\nNamespace HighSchool\n    \n    Public Class Student\n        Public Name As String\n        Public ID As Integer\n    End Class &#39;Student\n    \n    \n    Public Class MyClass1\n        Public Students() As Student\n    End Class &#39;MyClass1\nEnd Namespace &#39;HighSchool\n\nNamespace College\n    Public Class Graduate\n        Inherits HighSchool.Student\n        \n        Public Sub New()\n        End Sub &#39;New &#39; Add a new field named University.\n        Public University As String\n    End Class &#39;Graduate\n    \n    \n    \n    Public Class Run\n        \n        Public Shared Sub Main()\n            Dim test As New Run()\n            test.WriteOverriddenAttributes(&quot;College.xml&quot;)\n            test.ReadOverriddenAttributes(&quot;College.xml&quot;)\n        End Sub &#39;Main\n        \n        \n        Private Sub WriteOverriddenAttributes(filename As String)\n            &#39; Writing the file requires a TextWriter.\n            Dim myStreamWriter As New StreamWriter(filename)\n            &#39; Create an XMLAttributeOverrides class.\n            Dim attrOverrides As New XmlAttributeOverrides()\n            &#39; Create the XmlAttributes class.\n            Dim attrs As New XmlAttributes()\n            \n            &#39; Override the Student class. &quot;Alumni&quot; is the name\n            &#39; of the overriding element in the XML output. \n            Dim attr As New XmlElementAttribute(&quot;Alumni&quot;, GetType(Graduate))\n            \n            &#39; Add the XmlElementAttribute to the collection of\n            &#39; elements in the XmlAttributes object. \n            attrs.XmlElements.Add(attr)\n            \n            &#39; Add the XmlAttributes to the XmlAttributeOverrides. \n            &#39; &quot;Students&quot; is the name being overridden. \n            attrOverrides.Add(GetType(HighSchool.MyClass1), &quot;Students&quot;, attrs)\n            \n            &#39; Create the XmlSerializer. \n            Dim mySerializer As New XmlSerializer(GetType(HighSchool.MyClass1), attrOverrides)\n            \n            Dim oMyClass As New MyClass1()\n            \n            Dim g1 As New Graduate()\n            g1.Name = &quot;Jackie&quot;\n            g1.ID = 1\n            g1.University = &quot;Alma Mater&quot;\n            \n            Dim g2 As New Graduate()\n            g2.Name = &quot;Megan&quot;\n            g2.ID = 2\n            g2.University = &quot;CM&quot;\n            \n            Dim myArray As Student() =  {g1, g2}\n            oMyClass.Students = myArray\n            \n            mySerializer.Serialize(myStreamWriter, oMyClass)\n            myStreamWriter.Close()\n        End Sub &#39;WriteOverriddenAttributes\n        \n        \n        Private Sub ReadOverriddenAttributes(filename As String)\n            &#39; The majority of the code here is the same as that in the\n            &#39; WriteOverriddenAttributes method. Because the XML being read\n            &#39; doesn&#39;t conform to the schema defined by the DLL, the\n            &#39; XMLAttributesOverrides must be used to create an\n            &#39; XmlSerializer instance to read the XML document.\n            \n            Dim attrOverrides As New XmlAttributeOverrides()\n            Dim attrs As New XmlAttributes()\n            Dim attr As New XmlElementAttribute(&quot;Alumni&quot;, GetType(Graduate))\n            attrs.XmlElements.Add(attr)\n            attrOverrides.Add(GetType(HighSchool.MyClass1), &quot;Students&quot;, attrs)\n            \n            Dim readSerializer As New XmlSerializer(GetType(HighSchool.MyClass1), attrOverrides)\n            \n            &#39; To read the file, a FileStream object is required. \n            Dim fs As New FileStream(filename, FileMode.Open)\n            \n            Dim oMyClass As MyClass1\n            \n            oMyClass = CType(readSerializer.Deserialize(fs), MyClass1)\n            \n            &#39; Here is the difference between reading and writing an\n            &#39; XML document: You must declare an object of the derived\n            &#39; type (Graduate) and cast the Student instance to it.\n            Dim g As Graduate\n            \n            Dim grad As Graduate\n            For Each grad In  oMyClass.Students\n                g = CType(grad, Graduate)\n                Console.Write((g.Name &amp; ControlChars.Tab))\n                Console.Write((g.ID.ToString &amp; ControlChars.Tab))\n                Console.Write((g.University &amp; ControlChars.Cr))\n            Next grad\n        End Sub &#39;ReadOverriddenAttributes\n    End Class &#39;Run\nEnd Namespace &#39;College\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer4 Example#1\">// Beginning of HighSchool.dll\nnamespace HighSchool\n{\n   public class Student\n   {\n      public string Name;\n      public int ID;\n   }\n    \n   public class MyClass\n   {\n      public Student[] Students;\n   }\n}\n\nnamespace College\n   {\n   using System;\n   using System.IO;\n   using System.Xml;\n   using System.Xml.Serialization; \n   using HighSchool;\n\n    public class Graduate:HighSchool.Student\n    {\n       public Graduate(){}\n       // Add a new field named University.\n       public string University;\n    }\n \n    \n   public class Run\n   {\n      public static void Main()\n      {\n         Run test = new Run();\n         test.WriteOverriddenAttributes(&quot;College.xml&quot;);\n         test.ReadOverriddenAttributes(&quot;College.xml&quot;);\n      }\n \n      private void WriteOverriddenAttributes(string filename)\n      {\n         // Writing the file requires a TextWriter.\n         TextWriter myStreamWriter = new StreamWriter(filename);\n         // Create an XMLAttributeOverrides class.\n         XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n         // Create the XmlAttributes class.\n         XmlAttributes attrs = new XmlAttributes();\n\n         /* Override the Student class. &quot;Alumni&quot; is the name\n         of the overriding element in the XML output. */\n         XmlElementAttribute attr = \n         new XmlElementAttribute(&quot;Alumni&quot;, typeof(Graduate));\n\n         /* Add the XmlElementAttribute to the collection of\n         elements in the XmlAttributes object. */\n         attrs.XmlElements.Add(attr);\n\n         /* Add the XmlAttributes to the XmlAttributeOverrides. \n         &quot;Students&quot; is the name being overridden. */\n         attrOverrides.Add(typeof(HighSchool.MyClass), \n         &quot;Students&quot;, attrs);\n          \n         // Create the XmlSerializer. \n         XmlSerializer mySerializer = new XmlSerializer\n         (typeof(HighSchool.MyClass), attrOverrides);\n \n         MyClass myClass = new MyClass();\n\n         Graduate g1 = new Graduate();\n         g1.Name = &quot;Jackie&quot;;\n         g1.ID = 1;\n         g1.University = &quot;Alma Mater&quot;;\n\n         Graduate g2 = new Graduate();\n         g2.Name = &quot;Megan&quot;;\n         g2.ID = 2;\n         g2.University = &quot;CM&quot;;\n\n         Student[] myArray = {g1,g2};\n         myClass.Students = myArray;\n \n         mySerializer.Serialize(myStreamWriter, myClass);\n         myStreamWriter.Close();\n      }\n\n      private void ReadOverriddenAttributes(string filename)\n      {\n         /* The majority of the code here is the same as that in the\n         WriteOverriddenAttributes method. Because the XML being read\n         doesn&#39;t conform to the schema defined by the DLL, the\n         XMLAttributesOverrides must be used to create an \n         XmlSerializer instance to read the XML document.*/\n          \n         XmlAttributeOverrides attrOverrides = new \n         XmlAttributeOverrides();\n         XmlAttributes attrs = new XmlAttributes();\n         XmlElementAttribute attr = \n         new XmlElementAttribute(&quot;Alumni&quot;, typeof(Graduate));\n         attrs.XmlElements.Add(attr);\n         attrOverrides.Add(typeof(HighSchool.MyClass), \n         &quot;Students&quot;, attrs);\n\n         XmlSerializer readSerializer = new XmlSerializer\n         (typeof(HighSchool.MyClass), attrOverrides);\n\n         // To read the file, a FileStream object is required. \n         FileStream fs = new FileStream(filename, FileMode.Open);\n          \n         MyClass myClass;\n\n         myClass = (MyClass) readSerializer.Deserialize(fs);\n\n         /* Here is the difference between reading and writing an \n         XML document: You must declare an object of the derived \n         type (Graduate) and cast the Student instance to it.*/\n         Graduate g;\n\n         foreach(Graduate grad in myClass.Students)\n         {\n            g = (Graduate) grad;\n            Console.Write(g.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;);\n            Console.Write(g.ID + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;);\n            Console.Write(g.University + &quot;<br>&quot;);\n         }\n      }\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlRootAttribute_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,XmlRootAttribute)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>root</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a> that represents the XML root element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The root element of an XML document encloses all the other elements. By default, the object specified by the <code>type</code> parameter is serialized as the root element. Properties, such as the XML element name of the root element, are taken from the <code>type</code> object. However, the <code>root</code> parameter allows you to replace the default object&#39;s information by specifying an <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a>; the object allows you to set a different namespace, element name, and so on.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example constructs an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> that uses an <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a> that contains various properties of the XML root element, such as its namespace and element name.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer2 Example#1\">    private void SerializeObject(string filename) {\n        // Create an XmlRootAttribute, and set its properties.\n        XmlRootAttribute xRoot = new XmlRootAttribute();\n        xRoot.ElementName = &quot;CustomRoot&quot;;\n        xRoot.Namespace = &quot;http://www.cpandl.com&quot;;\n        xRoot.IsNullable = true;\n         \n        // Construct the XmlSerializer with the XmlRootAttribute.\n        XmlSerializer serializer = new XmlSerializer\n            (typeof(OrderedItem),xRoot);\n         \n        // Create an instance of the object to serialize.\n        OrderedItem i = new OrderedItem();\n        // Insert code to set properties of the ordered item.\n         \n        // Writing the document requires a TextWriter.\n        TextWriter writer = new StreamWriter(filename);\n         \n        serializer.Serialize(writer, i);\n        writer.Close();\n    }\n\n    private void DeserializeObject(string filename) {\n        // Create an XmlRootAttribute, and set its properties.\n        XmlRootAttribute xRoot = new XmlRootAttribute();\n        xRoot.ElementName = &quot;CustomRoot&quot;;\n        xRoot.Namespace = &quot;http://www.cpandl.com&quot;;\n        xRoot.IsNullable = true;\n         \n        XmlSerializer serializer = new XmlSerializer\n            (typeof(OrderedItem),xRoot);\n         \n        // A FileStream is needed to read the XML document.\n        FileStream fs = new FileStream(filename, FileMode.Open);\n        // Deserialize the object.\n        OrderedItem i = (OrderedItem) serializer.Deserialize(fs);\n        // Insert code to use the object&#39;s properties and methods.\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer2 Example#1\">    Private Sub SerializeObject(ByVal filename As String)\n        &#39; Create an XmlRootAttribute, and set its properties.\n        Dim xRoot As New XmlRootAttribute()\n        xRoot.ElementName = &quot;CustomRoot&quot;\n        xRoot.Namespace = &quot;http://www.cpandl.com&quot;\n        xRoot.IsNullable = True\n        \n        &#39; Construct the XmlSerializer with the XmlRootAttribute.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem), xRoot)\n        \n        &#39; Create an instance of the object to serialize.\n        Dim i As New OrderedItem()\n        &#39; Insert code to set properties of the ordered item.\n        &#39; Writing the document requires a TextWriter.\n        Dim writer As New StreamWriter(filename)\n        \n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\n        \n    Private Sub DeserializeObject(ByVal filename As String)\n        &#39; Create an XmlRootAttribute, and set its properties.\n        Dim xRoot As New XmlRootAttribute()\n        xRoot.ElementName = &quot;CustomRoot&quot;\n        xRoot.Namespace = &quot;http://www.cpandl.com&quot;\n        xRoot.IsNullable = True\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem), xRoot)\n        \n        &#39; A FileStream is needed to read the XML document.\n        Dim fs As New FileStream(filename, FileMode.Open)\n        &#39; Deserialize the object.\n        Dim i As OrderedItem = CType(serializer.Deserialize(fs), OrderedItem)\n        &#39; Insert code to use the object&#39;s properties and methods.\n    End Sub\n         \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer2 Example#1\">private:\n   void SerializeObject( String^ filename )\n   {\n      // Create an XmlRootAttribute, and set its properties.\n      XmlRootAttribute^ xRoot = gcnew XmlRootAttribute;\n      xRoot-&gt;ElementName = &quot;CustomRoot&quot;;\n      xRoot-&gt;Namespace = &quot;http://www.cpandl.com&quot;;\n      xRoot-&gt;IsNullable = true;\n\n      // Construct the XmlSerializer with the XmlRootAttribute.\n      XmlSerializer^ serializer = gcnew XmlSerializer(\n         OrderedItem::typeid,xRoot );\n\n      // Create an instance of the object to serialize.\n      OrderedItem^ i = gcnew OrderedItem;\n      // Insert code to set properties of the ordered item.\n\n      // Writing the document requires a TextWriter.\n      TextWriter^ writer = gcnew StreamWriter( filename );\n      serializer-&gt;Serialize( writer, i );\n      writer-&gt;Close();\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      // Create an XmlRootAttribute, and set its properties.\n      XmlRootAttribute^ xRoot = gcnew XmlRootAttribute;\n      xRoot-&gt;ElementName = &quot;CustomRoot&quot;;\n      xRoot-&gt;Namespace = &quot;http://www.cpandl.com&quot;;\n      xRoot-&gt;IsNullable = true;\n\n      XmlSerializer^ serializer = gcnew XmlSerializer(\n         OrderedItem::typeid,xRoot );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      // Deserialize the object.\n      OrderedItem^ i = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize( fs ));\n      // Insert code to use the object&#39;s properties and methods.\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> into XML document instances, and deserialize XML document instances into objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>overrides</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a> that extends or overrides the behavior of the class specified in the <code>type</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>extraTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> array of additional object types to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>root</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a> that defines the XML root element properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default namespace of all XML elements in the XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>overrides</code> parameter allows for the creation of an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> that serializes a class that extends or overrides the behavior of a base class. For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL. To serialize such a class, you must use an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a> class when constructing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. For more details, see <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a>.  </p>\n<p> By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized. However, if a class contains a field or property that returns an array of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>, any object can be inserted into that array. In that case, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be instructed to expect all the possible object types that are inserted into the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> array. To do this, use the <code>extraTypes</code> parameter to specify the extra object types to serialize or deserialize.  </p>\n<p> The root element of an XML document encloses all the other elements. By default, the object specified by the <code>type</code> parameter is serialized as the root element. Properties, such as the XML element name of the root element are taken from the <code>type</code> object. However, the <code>root</code> parameter allows you to replace the default object&#39;s information by specifying an <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a>; the object allows you to set a different namespace, element name, and so on.  </p>\n<p> Use the <code>defaultName</code> parameter to specify the default namespace of all XML elements generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class. The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information. The example assumes that the code at the beginning has been compiled into a DLL named <code>HighSchool</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.XmlSerializer Example#1\">// Beginning of the HighSchool.dll \n#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\nnamespace HighSchool\n{\n   public ref class Student\n   {\n   public:\n      String^ Name;\n      int ID;\n   };\n\n   public ref class MyClass\n   {\n   public:\n      array&lt;Student^&gt;^Students;\n   };\n}\n\nnamespace College\n{\n\nusing namespace HighSchool;\n   public ref class Graduate: public HighSchool::Student\n   {\n   public:\n      Graduate(){}\n\n      // Add a new field named University.\n      String^ University;\n\n      // Use extra types to use this field.\n      array&lt;Object^&gt;^Info;\n   };\n\n   public ref class Address\n   {\n   public:\n      String^ City;\n   };\n\n   public ref class Phone\n   {\n   public:\n      String^ Number;\n   };\n\n   public ref class Run\n   {\n   public:\n      static void main()\n      {\n         Run^ test = gcnew Run;\n         test-&gt;WriteOverriddenAttributes( &quot;College.xml&quot; );\n         test-&gt;ReadOverriddenAttributes( &quot;College.xml&quot; );\n      }\n\n   private:\n      void WriteOverriddenAttributes( String^ filename )\n      {\n         // Writing the file requires a TextWriter.\n         TextWriter^ myStreamWriter = gcnew StreamWriter( filename );\n\n         // Create an XMLAttributeOverrides class.\n         XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n\n         // Create the XmlAttributes class.\n         XmlAttributes^ attrs = gcnew XmlAttributes;\n\n         /* Override the Student class. &quot;Alumni&quot; is the name\n               of the overriding element in the XML output. */\n         XmlElementAttribute^ attr = gcnew XmlElementAttribute( &quot;Alumni&quot;,Graduate::typeid );\n\n         /* Add the XmlElementAttribute to the collection of\n               elements in the XmlAttributes object. */\n         attrs-&gt;XmlElements-&gt;Add( attr );\n\n         /* Add the XmlAttributes to the XmlAttributeOverrides. \n               &quot;Students&quot; is the name being overridden. */\n         attrOverrides-&gt;Add( HighSchool::MyClass::typeid, &quot;Students&quot;, attrs );\n\n         // Create array of extra types.\n         array&lt;Type^&gt;^extraTypes = gcnew array&lt;Type^&gt;(2);\n         extraTypes[ 0 ] = Address::typeid;\n         extraTypes[ 1 ] = Phone::typeid;\n\n         // Create an XmlRootAttribute.\n         XmlRootAttribute^ root = gcnew XmlRootAttribute( &quot;Graduates&quot; );\n\n         /* Create the XmlSerializer with the \n               XmlAttributeOverrides object. */\n         XmlSerializer^ mySerializer = gcnew XmlSerializer( HighSchool::MyClass::typeid,attrOverrides,extraTypes,root,&quot;http://www.microsoft.com&quot; );\n         MyClass ^ myClass = gcnew MyClass;\n         Graduate^ g1 = gcnew Graduate;\n         g1-&gt;Name = &quot;Jacki&quot;;\n         g1-&gt;ID = 1;\n         g1-&gt;University = &quot;Alma&quot;;\n         Graduate^ g2 = gcnew Graduate;\n         g2-&gt;Name = &quot;Megan&quot;;\n         g2-&gt;ID = 2;\n         g2-&gt;University = &quot;CM&quot;;\n         array&lt;Student^&gt;^myArray = {g1,g2};\n         myClass-&gt;Students = myArray;\n\n         // Create extra information.\n         Address^ a1 = gcnew Address;\n         a1-&gt;City = &quot;Ionia&quot;;\n         Address^ a2 = gcnew Address;\n         a2-&gt;City = &quot;Stamford&quot;;\n         Phone^ p1 = gcnew Phone;\n         p1-&gt;Number = &quot;555-0101&quot;;\n         Phone^ p2 = gcnew Phone;\n         p2-&gt;Number = &quot;555-0100&quot;;\n         array&lt;Object^&gt;^o1 = {a1,p1};\n         array&lt;Object^&gt;^o2 = {a2,p2};\n         g1-&gt;Info = o1;\n         g2-&gt;Info = o2;\n         mySerializer-&gt;Serialize( myStreamWriter, myClass );\n         myStreamWriter-&gt;Close();\n      }\n\n      void ReadOverriddenAttributes( String^ filename )\n      {\n         /* The majority of the code here is the same as that in the\n               WriteOverriddenAttributes method. Because the XML being read\n               doesn&#39;t conform to the schema defined by the DLL, the\n               XMLAttributesOverrides must be used to create an \n               XmlSerializer instance to read the XML document.*/\n         XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n         XmlAttributes^ attrs = gcnew XmlAttributes;\n         XmlElementAttribute^ attr = gcnew XmlElementAttribute( &quot;Alumni&quot;,Graduate::typeid );\n         attrs-&gt;XmlElements-&gt;Add( attr );\n         attrOverrides-&gt;Add( HighSchool::MyClass::typeid, &quot;Students&quot;, attrs );\n         array&lt;Type^&gt;^extraTypes = gcnew array&lt;Type^&gt;(2);\n         extraTypes[ 0 ] = Address::typeid;\n         extraTypes[ 1 ] = Phone::typeid;\n         XmlRootAttribute^ root = gcnew XmlRootAttribute( &quot;Graduates&quot; );\n         XmlSerializer^ readSerializer = gcnew XmlSerializer( HighSchool::MyClass::typeid,attrOverrides,extraTypes,root,&quot;http://www.microsoft.com&quot; );\n\n         // A FileStream object is required to read the file. \n         FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n         MyClass ^ myClass;\n         myClass = dynamic_cast&lt;MyClass^&gt;(readSerializer-&gt;Deserialize( fs ));\n         \n         /* Here is the difference between reading and writing an \n               XML document: You must declare an object of the derived \n               type (Graduate) and cast the Student instance to it.*/\n         Graduate^ g;\n         Address^ a;\n         Phone^ p;\n         System::Collections::IEnumerator^ myEnum = myClass-&gt;Students-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            Graduate^ grad = safe_cast&lt;Graduate^&gt;(myEnum-&gt;Current);\n            g = dynamic_cast&lt;Graduate^&gt;(grad);\n            Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;&quot;, g-&gt;Name );\n            Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;&quot;, g-&gt;ID );\n            Console::Write( &quot;{0}<br>&quot;, g-&gt;University );\n            a = dynamic_cast&lt;Address^&gt;(g-&gt;Info[ 0 ]);\n            Console::WriteLine( a-&gt;City );\n            p = dynamic_cast&lt;Phone^&gt;(g-&gt;Info[ 1 ]);\n            Console::WriteLine( p-&gt;Number );\n         }\n      }\n   };\n}\n\nint main()\n{\n   College::Run::main();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.XmlSerializer Example#1\">// Beginning of the HighSchool.dll \n\nnamespace HighSchool\n{\n   public class Student\n   {\n      public string Name;\n      public int ID;\n   }\n    \n   public class MyClass\n   {\n      public Student[] Students;\n   }\n}\n\nnamespace College\n   {\n   using System;\n   using System.IO;\n   using System.Xml;\n   using System.Xml.Serialization; \n   using HighSchool;\n\n    public class Graduate:HighSchool.Student\n    {\n       public Graduate(){}\n       // Add a new field named University.\n       public string University;\n       // Use extra types to use this field.\n       public object[]Info;\n    }\n \n    public class Address\n    {\n       public string City;\n    }\n \n    public class Phone\n    {\n       public string Number;\n    }\n    \n   public class Run\n   {\n      public static void Main()\n      {\n         Run test = new Run();\n         test.WriteOverriddenAttributes(&quot;College.xml&quot;);\n         test.ReadOverriddenAttributes(&quot;College.xml&quot;);\n      }\n \n      private void WriteOverriddenAttributes(string filename)\n      {\n         // Writing the file requires a TextWriter.\n         TextWriter myStreamWriter = new StreamWriter(filename);\n         // Create an XMLAttributeOverrides class.\n         XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n         // Create the XmlAttributes class.\n         XmlAttributes attrs = new XmlAttributes();\n         /* Override the Student class. &quot;Alumni&quot; is the name\n         of the overriding element in the XML output. */\n\n         XmlElementAttribute attr = \n         new XmlElementAttribute(&quot;Alumni&quot;, typeof(Graduate));\n         /* Add the XmlElementAttribute to the collection of\n         elements in the XmlAttributes object. */\n         attrs.XmlElements.Add(attr);\n         /* Add the XmlAttributes to the XmlAttributeOverrides. \n         &quot;Students&quot; is the name being overridden. */\n         attrOverrides.Add(typeof(HighSchool.MyClass), \n         &quot;Students&quot;, attrs);\n \n         // Create array of extra types.\n         Type [] extraTypes = new Type[2];\n         extraTypes[0]=typeof(Address);\n         extraTypes[1]=typeof(Phone);\n \n         // Create an XmlRootAttribute.\n         XmlRootAttribute root = new XmlRootAttribute(&quot;Graduates&quot;);\n          \n         /* Create the XmlSerializer with the \n         XmlAttributeOverrides object. */\n         XmlSerializer mySerializer = new XmlSerializer\n         (typeof(HighSchool.MyClass), attrOverrides, extraTypes,\n         root, &quot;http://www.microsoft.com&quot;);\n \n         MyClass myClass= new MyClass();\n\n         Graduate g1 = new Graduate();\n         g1.Name = &quot;Jacki&quot;;\n         g1.ID = 1;\n         g1.University = &quot;Alma&quot;;\n\n         Graduate g2 = new Graduate();\n         g2.Name = &quot;Megan&quot;;\n         g2.ID = 2;\n         g2.University = &quot;CM&quot;;\n\n         Student[] myArray = {g1,g2};\n\n         myClass.Students = myArray;\n \n         // Create extra information.\n         Address a1 = new Address();\n         a1.City = &quot;Ionia&quot;;\n         Address a2 = new Address();\n         a2.City = &quot;Stamford&quot;;\n         Phone p1 = new Phone();\n         p1.Number = &quot;555-0101&quot;;\n         Phone p2 = new Phone();\n         p2.Number = &quot;555-0100&quot;;\n \n         Object[]o1 = new Object[2]{a1, p1};\n         Object[]o2 = new Object[2]{a2,p2};\n \n         g1.Info = o1;\n         g2.Info = o2;\n         mySerializer.Serialize(myStreamWriter,myClass);\n         myStreamWriter.Close();\n      }\n\n      private void ReadOverriddenAttributes(string filename)\n      {\n         /* The majority of the code here is the same as that in the\n         WriteOverriddenAttributes method. Because the XML being read\n         doesn&#39;t conform to the schema defined by the DLL, the\n         XMLAttributesOverrides must be used to create an \n         XmlSerializer instance to read the XML document.*/\n          \n         XmlAttributeOverrides attrOverrides = new \n         XmlAttributeOverrides();\n         XmlAttributes attrs = new XmlAttributes();\n         XmlElementAttribute attr = \n         new XmlElementAttribute(&quot;Alumni&quot;, typeof(Graduate));\n         attrs.XmlElements.Add(attr);\n         attrOverrides.Add(typeof(HighSchool.MyClass), \n         &quot;Students&quot;, attrs);\n\n         Type [] extraTypes = new Type[2];\n         extraTypes[0] = typeof(Address);\n         extraTypes[1] = typeof(Phone);\n \n         XmlRootAttribute root = new XmlRootAttribute(&quot;Graduates&quot;);\n          \n         XmlSerializer readSerializer = new XmlSerializer\n         (typeof(HighSchool.MyClass), attrOverrides, extraTypes,\n         root, &quot;http://www.microsoft.com&quot;);\n\n         // A FileStream object is required to read the file. \n         FileStream fs = new FileStream(filename, FileMode.Open);\n          \n         MyClass myClass;\n         myClass = (MyClass) readSerializer.Deserialize(fs);\n\n         /* Here is the difference between reading and writing an \n         XML document: You must declare an object of the derived \n         type (Graduate) and cast the Student instance to it.*/\n         Graduate g;\n         Address a;\n         Phone p;\n         foreach(Graduate grad in myClass.Students)\n         {\n            g = (Graduate) grad;\n            Console.Write(g.Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;);\n            Console.Write(g.ID + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;);\n            Console.Write(g.University + &quot;<br>&quot;);\n            a = (Address) g.Info[0];\n            Console.WriteLine(a.City);\n            p = (Phone) g.Info[1];\n            Console.WriteLine(p.Number);\n         }\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.XmlSerializer Example#1\">&#39;Beginning of the HighSchool.dll \nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n&#39; Imports HighSchool\n\nNamespace HighSchool\n\n    Public Class Student\n        Public Name As String\n        Public ID As Integer\n    End Class &#39;Student\n\n\n    Public Class ClassRoom\n        Public Students() As Student\n    End Class &#39;ClassRoom\nEnd Namespace &#39;HighSchool\n\nNamespace College\n    Public Class Graduate\n        Inherits HighSchool.Student\n\n        Public Sub New()\n        End Sub &#39;New\n        &#39; Add a new field named University.\n        Public University As String\n        &#39; Use extra types to use this field.\n        Public Info() As Object\n    End Class &#39;Graduate\n\n\n    Public Class Address\n        Public City As String\n    End Class &#39;Address\n\n\n    Public Class Phone\n        Public Number As String\n    End Class &#39;Phone\n\n\n    Public Class Run\n\n        Public Shared Sub Main()\n            Dim test As New Run()\n            test.WriteOverriddenAttributes(&quot;College.xml&quot;)\n            test.ReadOverriddenAttributes(&quot;College.xml&quot;)\n        End Sub &#39;Main\n\n\n        Private Sub WriteOverriddenAttributes(ByVal filename As String)\n            &#39; Writing the file requires a TextWriter.\n            Dim myStreamWriter As New StreamWriter(filename)\n            &#39; Create an XMLAttributeOverrides class.\n            Dim attrOverrides As New XmlAttributeOverrides()\n            &#39; Create the XmlAttributes class.\n            Dim attrs As New XmlAttributes()\n            &#39; Override the Student class. &quot;Alumni&quot; is the name\n            &#39; of the overriding element in the XML output. \n\n            Dim attr As New XmlElementAttribute(&quot;Alumni&quot;, GetType(Graduate))\n            &#39; Add the XmlElementAttribute to the collection of\n            &#39; elements in the XmlAttributes object. \n            attrs.XmlElements.Add(attr)\n            &#39; Add the XmlAttributes to the XmlAttributeOverrides.\n            &#39; &quot;Students&quot; is the name being overridden. \n            attrOverrides.Add(GetType(HighSchool.ClassRoom), &quot;Students&quot;, attrs)\n\n            &#39; Create array of extra types.\n            Dim extraTypes(1) As Type\n            extraTypes(0) = GetType(Address)\n            extraTypes(1) = GetType(Phone)\n\n            &#39; Create an XmlRootAttribute.\n            Dim root As New XmlRootAttribute(&quot;Graduates&quot;)\n\n            &#39; Create the XmlSerializer with the\n            &#39; XmlAttributeOverrides object. \n            Dim mySerializer As New XmlSerializer(GetType(HighSchool.ClassRoom), _\n                attrOverrides, extraTypes, root, &quot;http://www.microsoft.com&quot;)\n\n            Dim oMyClass As New HighSchool.ClassRoom()\n\n            Dim g1 As New Graduate()\n            g1.Name = &quot;Jacki&quot;\n            g1.ID = 1\n            g1.University = &quot;Alma&quot;\n\n            Dim g2 As New Graduate()\n            g2.Name = &quot;Megan&quot;\n            g2.ID = 2\n            g2.University = &quot;CM&quot;\n\n            Dim myArray As HighSchool.Student() = {g1, g2}\n\n            oMyClass.Students = myArray\n\n            &#39; Create extra information.\n            Dim a1 As New Address()\n            a1.City = &quot;Ionia&quot;\n            Dim a2 As New Address()\n            a2.City = &quot;Stamford&quot;\n            Dim p1 As New Phone()\n            p1.Number = &quot;555-0101&quot;\n            Dim p2 As New Phone()\n            p2.Number = &quot;555-0100&quot;\n\n            Dim o1() As Object = {a1, p1}\n            Dim o2() As Object = {a2, p2}\n\n            g1.Info = o1\n            g2.Info = o2\n            mySerializer.Serialize(myStreamWriter, oMyClass)\n            myStreamWriter.Close()\n        End Sub &#39;WriteOverriddenAttributes\n\n\n        Private Sub ReadOverriddenAttributes(ByVal filename As String)\n            &#39; The majority of the code here is the same as that in the\n            &#39; WriteOverriddenAttributes method. Because the XML being read\n            &#39; doesn&#39;t conform to the schema defined by the DLL, the\n            &#39; XMLAttributesOverrides must be used to create an\n            &#39; XmlSerializer instance to read the XML document.\n\n            Dim attrOverrides As New XmlAttributeOverrides()\n            Dim attrs As New XmlAttributes()\n            Dim attr As New XmlElementAttribute(&quot;Alumni&quot;, GetType(Graduate))\n            attrs.XmlElements.Add(attr)\n            attrOverrides.Add(GetType(HighSchool.ClassRoom), &quot;Students&quot;, attrs)\n\n            Dim extraTypes(1) As Type\n            extraTypes(0) = GetType(Address)\n            extraTypes(1) = GetType(Phone)\n\n            Dim root As New XmlRootAttribute(&quot;Graduates&quot;)\n\n            Dim readSerializer As New XmlSerializer(GetType(HighSchool.ClassRoom), _\n                attrOverrides, extraTypes, root, &quot;http://www.microsoft.com&quot;)\n\n            &#39; A FileStream object is required to read the file. \n            Dim fs As New FileStream(filename, FileMode.Open)\n\n            Dim oMyClass As HighSchool.ClassRoom\n            oMyClass = CType(readSerializer.Deserialize(fs), HighSchool.ClassRoom)\n\n            &#39; Here is the difference between reading and writing an\n            &#39; XML document: You must declare an object of the derived\n            &#39; type (Graduate) and cast the Student instance to it.\n            Dim g As Graduate\n            Dim a As Address\n            Dim p As Phone\n            Dim grad As Graduate\n            For Each grad In oMyClass.Students\n                g = CType(grad, Graduate)\n                Console.Write((g.Name &amp; ControlChars.Tab))\n                Console.Write((g.ID &amp; ControlChars.Tab))\n                Console.Write((g.University &amp; ControlChars.Cr))\n                a = CType(g.Info(0), Address)\n                Console.WriteLine(a.City)\n                p = CType(g.Info(1), Phone)\n                Console.WriteLine(p.Number)\n            Next grad\n        End Sub &#39;ReadOverriddenAttributes\n    End Class &#39;Run\nEnd Namespace &#39;College\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> into XML document instances, and deserialize XML document instances into objects of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>overrides</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a> that extends or overrides the behavior of the class specified in the <code>type</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>extraTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> array of additional object types to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>root</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a> that defines the XML root element properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default namespace of all XML elements in the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>location</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer__ctor_System_Type_System_Xml_Serialization_XmlAttributeOverrides_System_Type___System_Xml_Serialization_XmlRootAttribute_System_String_System_String_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type. This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the object that this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>overrides</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlattributeoverrides\" data-linktype=\"relative-path\">XmlAttributeOverrides</a> that extends or overrides the behavior of the class specified in the <code>type</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>extraTypes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> array of additional object types to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>root</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlrootattribute\" data-linktype=\"relative-path\">XmlRootAttribute</a> that defines the XML root element properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default namespace of all XML elements in the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>location</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the types.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class that contains credentials required to access types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Allows more precise control over access to a temporary directory and prevents code injection and exploitation. To use this method, specify a location and give access only to specific users. Administrators can set up policies with evidence lists that match evidence to permissions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_CanDeserialize_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_CanDeserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanDeserialize(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can deserialize a specified XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that points to the document to deserialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can deserialize the object that the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> points to; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the CanDeserialize method to check whether an XML document can be deserialized.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.CanDeserialize Example#1\">private void TestDocument(string filename, Type objType)\n{\n   // Using a FileStream, create an XmlTextReader.\n   Stream fs = new FileStream(filename, FileMode.Open);\n   XmlReader reader = new XmlTextReader(fs);\n   XmlSerializer serializer = new XmlSerializer(objType);\n   if(serializer.CanDeserialize(reader))\n      {\n         Object o = serializer.Deserialize(reader);\n      }\n   fs.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.CanDeserialize Example#1\">private:\n   void TestDocument( String^ filename, Type^ objType )\n   {\n      // Using a FileStream, create an XmlTextReader.\n      Stream^ fs = gcnew FileStream( filename,FileMode::Open );\n      XmlReader^ reader = gcnew XmlTextReader( fs );\n      XmlSerializer^ serializer = gcnew XmlSerializer( objType );\n      if ( serializer-&gt;CanDeserialize( reader ) )\n      {\n         Object^ o = serializer-&gt;Deserialize( reader );\n      }\n      fs-&gt;Close();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.CanDeserialize Example#1\">    Private Sub TestDocument _\n                    (ByVal filename As String, _\n                     ByVal objType As Type)\n        &#39; Using a FileStream, create an XmlTextReader.\n        Dim fs As New FileStream(filename, FileMode.Open)\n        Dim reader As New XmlTextReader(fs)\n        Dim serializer As New XmlSerializer(objType)\n        If serializer.CanDeserialize(reader) Then\n            Dim o As Object = serializer.Deserialize(reader)\n        End If\n        fs.Close()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_CreateReader\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_CreateReader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateReader()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an object used to read the XML document to be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a> used to read the XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_CreateWriter\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_CreateWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateWriter()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns a writer used to serialize the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a></div>\r\n                  </div>\r\n                  <p>An instance that implements the <a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains the XML document to deserialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> being deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.  </p>\n<p> Before deserializing, an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be constructed using the type of the object that is being deserialized.  </p>\n<p> Use the <code>stream</code> parameter to specify an object that derives from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class, which is designed to write to streams. Classes that derive from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.cryptography.cryptostream\" data-linktype=\"relative-path\">CryptoStream</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot deserialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes an object using a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Deserialize Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Deserialize Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be deserialized.\npublic ref class OrderedItem\n{\npublic:\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ ItemName;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ Description;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal UnitPrice;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   int Quantity;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid DeserializeObject(String^ filename)\n{\n\tConsole::WriteLine(&quot;Reading with Stream&quot;);\n\n\t// Create an instance of the XmlSerializer.\n\tXmlSerializer^ serializer = gcnew XmlSerializer(OrderedItem::typeid);\n\n\t// Declare an object variable of the type to be deserialized.\n\tOrderedItem^ i;\n\t\n\t// Reading the XML document requires a FileStream.\n\tStream^ reader = gcnew FileStream(filename, FileMode::Open);\n\n\ttry\n\t{\n\t\t// Call the Deserialize method to restore the object&#39;s state.\n\t\ti = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize(reader));\n\t}\n\tfinally\n\t{\n\t\tdelete reader;\n\t}\n\n\t// Write out the properties of the object.\n\tConsole::Write(&quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&nbsp;&nbsp;&nbsp;&nbsp;{2}&nbsp;&nbsp;&nbsp;&nbsp;{3}&nbsp;&nbsp;&nbsp;&nbsp;{4}&quot;, i-&gt;ItemName, i-&gt;Description, i-&gt;UnitPrice, i-&gt;Quantity, i-&gt;LineTotal);\n}\n\nint main()\n{\n   // Read a purchase order.\n   DeserializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Deserialize Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n\n&#39; This is the class that will be deserialized.\nPublic Class OrderedItem\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public ItemName As String\n\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Description As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public UnitPrice As Decimal\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Quantity As Integer\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public LineTotal As Decimal\n    \n    &#39;A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Read a purchase order.\n        t.DeserializeObject(&quot;simple.xml&quot;)\n    End Sub\n        \n    Private Sub DeserializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Reading with Stream&quot;)\n        &#39; Create an instance of the XmlSerializer.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))       \n        \n        &#39; Declare an object variable of the type to be deserialized.\n        Dim i As OrderedItem\n\n        Using reader As New Filestream(filename, FileMode.Open)\n\n            &#39; Call the Deserialize method to restore the object&#39;s state.\n            i = CType(serializer.Deserialize(reader), OrderedItem)\n        End Using\n\n        &#39; Write out the properties of the object.\n        Console.Write(i.ItemName &amp; ControlChars.Tab &amp; _\n                      i.Description &amp; ControlChars.Tab &amp; _\n                      i.UnitPrice &amp; ControlChars.Tab &amp; _\n                      i.Quantity &amp; ControlChars.Tab &amp; _\n                      i.LineTotal)\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Deserialize Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n// This is the class that will be deserialized.\npublic class OrderedItem\n{\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string ItemName;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string Description;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal UnitPrice;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public int Quantity;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal LineTotal;\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test\n{\n   public static void Main()\n   {\n      Test t = new Test();\n      // Read a purchase order.\n      t.DeserializeObject(&quot;simple.xml&quot;);\n   }\n\n   private void DeserializeObject(string filename)\n   {   \n      Console.WriteLine(&quot;Reading with Stream&quot;);\n      // Create an instance of the XmlSerializer.\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n          \n      // Declare an object variable of the type to be deserialized.\n      OrderedItem i;\n\n      using (Stream reader = new FileStream(filename, FileMode.Open))\n      {\n          // Call the Deserialize method to restore the object&#39;s state.\n          i = (OrderedItem)serializer.Deserialize(reader);          \n      }\n\n      // Write out the properties of the object.\n      Console.Write(\n      i.ItemName + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.Description + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.UnitPrice + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.Quantity + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.LineTotal);\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_IO_TextReader_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(TextReader)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.IO.TextReader textReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> that contains the XML document to deserialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> being deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during deserialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.  </p>\n<p> Before deserializing, an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be constructed using the type of the object that is being deserialized.  </p>\n<p> Classes that inherit from <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> include <a class=\"xref\" href=\"system.io.stringreader\" data-linktype=\"relative-path\">StringReader</a> and <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a>. If you are using a <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> to deserialize an object, you must construct the <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> with an appropriate <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a>. The encoding specified by the XML document is ignored.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To use the encoding specified by the XML document, use the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> overload that takes an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> instead. The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> automatically detects and uses the encoding specified by the XML document.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot deserialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes an object using a <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Deserialize1 Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml.Serialization;\n\n// This is the class that will be deserialized.\npublic class OrderedItem\n{\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public string ItemName;\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public string Description;\n    [XmlElement(Namespace = &quot;http://www.cohowinery.com&quot;)]\n    public decimal UnitPrice;\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public int Quantity;\n    [XmlElement(Namespace = &quot;http://www.cohowinery.com&quot;)]\n    public decimal LineTotal;\n    // A custom method used to calculate price per item.\n    public void Calculate()\n    {\n        LineTotal = UnitPrice * Quantity;\n    }\n}\n \npublic class Test\n{\n   public static void Main()\n   {\n      Test t = new Test();\n      // Read a purchase order.\n      t.DeserializeObject(&quot;simple.xml&quot;);\n   }\n   private void DeserializeObject(string filename)\n   {   \n      Console.WriteLine(&quot;Reading with TextReader&quot;);\n\n      // Create an instance of the XmlSerializer specifying type.\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n\n      // Create a TextReader to read the file. \n      FileStream fs = new FileStream(filename, FileMode.OpenOrCreate);\n      TextReader reader = new StreamReader(fs);\n      \n      // Declare an object variable of the type to be deserialized.\n      OrderedItem i;\n\n      // Use the Deserialize method to restore the object&#39;s state.\n      i = (OrderedItem) serializer.Deserialize(reader);\n\n      // Write out the properties of the object.\n      Console.Write(\n      i.ItemName + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.Description + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.UnitPrice + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.Quantity + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n      i.LineTotal);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Deserialize1 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be deserialized.\npublic ref class OrderedItem\n{\npublic:\n   String^ ItemName;\n   String^ Description;\n   Decimal UnitPrice;\n   int Quantity;\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid DeserializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Reading with TextReader&quot; );\n\n   // Create an instance of the XmlSerializer specifying type.\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n\n   /* Create a TextReader to read the file. Specify an\n      Encoding to use. */\n   TextReader^ reader = gcnew StreamReader( filename,Encoding::Unicode );\n\n   // Declare an object variable of the type to be deserialized.\n   OrderedItem^ i;\n\n   // Use the Deserialize method to restore the object&#39;s state.\n   i = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize( reader ));\n\n   // Write out the properties of the object.\n   Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&nbsp;&nbsp;&nbsp;&nbsp;{2}&nbsp;&nbsp;&nbsp;&nbsp;{3}&nbsp;&nbsp;&nbsp;&nbsp;{4}&quot;, i-&gt;ItemName, i-&gt;Description, i-&gt;UnitPrice, i-&gt;Quantity, i-&gt;LineTotal );\n}\n\nint main()\n{\n   // Read a purchase order.\n   DeserializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Deserialize1 Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n&#39; This is the class that will be deserialized.\nPublic Class OrderedItem\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public ItemName As String\n\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Description As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public UnitPrice As Decimal\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Quantity As Integer\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public LineTotal As Decimal\n    &#39; A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Read a purchase order.\n        t.DeserializeObject(&quot;simple.xml&quot;)\n    End Sub\n    \n    Private Sub DeserializeObject(filename As String)\n        Console.WriteLine(&quot;Reading with TextReader&quot;)\n        \n        &#39; Create an instance of the XmlSerializer specifying type.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        \n        &#39; Create a TextReader to read the file. \n        Dim fs as New FileStream(filename, FileMode.OpenOrCreate)\n        Dim reader As New StreamReader(fs)\n        \n        &#39; Declare an object variable of the type to be deserialized.\n        Dim i As OrderedItem\n        \n        &#39; Use the Deserialize method to restore the object&#39;s state.\n        i = CType(serializer.Deserialize(reader), OrderedItem)\n        \n        &#39; Write out the properties of the object.\n        Console.Write(i.ItemName &amp; ControlChars.Tab &amp; _\n                      i.Description &amp; ControlChars.Tab &amp; _\n                      i.UnitPrice &amp; ControlChars.Tab &amp; _\n                      i.Quantity &amp; ControlChars.Tab &amp; _\n                      i.LineTotal)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_Serialization_XmlSerializationReader_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(XmlSerializationReader)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializationreader\" data-linktype=\"relative-path\">XmlSerializationReader</a> that contains the XML document to deserialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.Xml.XmlReader xmlReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that contains the XML document to deserialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> being deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during deserialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.  </p>\n<p> Before deserializing, an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be constructed using the type of the object that is being deserialized.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> automatically detects and uses the encoding specified by the XML document.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot deserialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes an object using an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Deserialize2 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be deserialized.\npublic ref class OrderedItem\n{\npublic:\n   String^ ItemName;\n   String^ Description;\n   Decimal UnitPrice;\n   int Quantity;\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid DeserializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Reading with XmlReader&quot; );\n\n   // Create an instance of the XmlSerializer specifying type and namespace.\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n\n   // A FileStream is needed to read the XML document.\n   FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n   XmlReader^ reader = gcnew XmlTextReader( fs );\n\n   // Declare an object variable of the type to be deserialized.\n   OrderedItem^ i;\n\n   // Use the Deserialize method to restore the object&#39;s state.\n   i = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize( reader ));\n\n   // Write out the properties of the object.\n   Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&nbsp;&nbsp;&nbsp;&nbsp;{2}&nbsp;&nbsp;&nbsp;&nbsp;{3}&nbsp;&nbsp;&nbsp;&nbsp;{4}&quot;, i-&gt;ItemName, i-&gt;Description, i-&gt;UnitPrice, i-&gt;Quantity, i-&gt;LineTotal );\n}\n\nint main()\n{\n   // Read a purchase order.\n   DeserializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Deserialize2 Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Deserialize2 Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// This is the class that will be deserialized.\npublic class OrderedItem\n{\n    public string ItemName;\n    public string Description;\n    public decimal UnitPrice;\n    public int Quantity;\n    public decimal LineTotal;\n\n    // A custom method used to calculate price per item.\n    public void Calculate()\n    {\n        LineTotal = UnitPrice * Quantity;\n    }\n}\npublic class Test\n{\n    public static void Main(string[] args)\n    {\n        Test t = new Test();\n        // Read a purchase order.\n        t.DeserializeObject(&quot;simple.xml&quot;);\n    }\n\n    private void DeserializeObject(string filename)\n    {\n        Console.WriteLine(&quot;Reading with XmlReader&quot;);\n\n        // Create an instance of the XmlSerializer specifying type and namespace.\n        XmlSerializer serializer = new\n        XmlSerializer(typeof(OrderedItem));\n\n        // A FileStream is needed to read the XML document.\n        FileStream fs = new FileStream(filename, FileMode.Open);\n        XmlReader reader = XmlReader.Create(fs);\n\n        // Declare an object variable of the type to be deserialized.\n        OrderedItem i;\n\n        // Use the Deserialize method to restore the object&#39;s state.\n        i = (OrderedItem)serializer.Deserialize(reader);\n        fs.Close();\n\n        // Write out the properties of the object.\n        Console.Write(\n        i.ItemName + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n        i.Description + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n        i.UnitPrice + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n        i.Quantity + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n        i.LineTotal);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Deserialize2 Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n\n&#39; This is the class that will be deserialized.\nPublic Class OrderedItem\n    Public ItemName As String\n    Public Description As String\n    Public UnitPrice As Decimal\n    Public Quantity As Integer\n    Public LineTotal As Decimal\n        \n    &#39; A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Read a purchase order.\n        t.DeserializeObject(&quot;simple.xml&quot;)\n    End Sub\n      \n    Private Sub DeserializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Reading with XmlReader&quot;)\n        \n        &#39; Create an instance of the XmlSerializer specifying type and namespace.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        \n        &#39; A FileStream is needed to read the XML document.\n        Dim fs As New FileStream(filename, FileMode.Open)\n        Dim reader As XmlReader = XmlReader.Create(fs)\n        \n        &#39; Declare an object variable of the type to be deserialized.\n        Dim i As OrderedItem\n        \n        &#39; Use the Deserialize method to restore the object&#39;s state.\n        i = CType(serializer.Deserialize(reader), OrderedItem)\n        fs.Close()\n\n        &#39; Write out the properties of the object.\n        Console.Write(i.ItemName &amp; ControlChars.Tab &amp; _\n                      i.Description &amp; ControlChars.Tab &amp; _\n                      i.UnitPrice &amp; ControlChars.Tab &amp; _\n                      i.Quantity &amp; ControlChars.Tab &amp; _\n                      i.LineTotal)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(XmlReader,String)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and encoding style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that contains the XML document to deserialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodingStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The encoding style of the serialized XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The deserialized object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during deserialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.  </p>\n<p> Before deserializing, an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must be constructed using the type of the object that is being deserialized.  </p>\n<p> Set the <code>encodingStyle</code> parameter to &quot;<a href=\"http://schemas.xmlsoap.org/soap/encoding/\" data-linktype=\"external\">http://schemas.xmlsoap.org/soap/encoding/</a> &quot; for SOAP version 1.1 encoding; otherwise, set it to &quot;<a href=\"http://www.w3.org/2001/12/soap-encoding\" data-linktype=\"external\">http://www.w3.org/2001/12/soap-encoding</a>&quot; for SOAP version 1.2 encoding.  </p>\n<p> <strong>Note</strong> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot deserialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_Xml_Serialization_XmlDeserializationEvents_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(XmlReader,XmlDeserializationEvents)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes an XML document contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and allows the overriding of events that occur during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that contains the document to deserialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>events</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmldeserializationevents\" data-linktype=\"relative-path\">XmlDeserializationEvents</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.xml.serialization.xmldeserializationevents\" data-linktype=\"relative-path\">XmlDeserializationEvents</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> being deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object being deserialized.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Deserialize_System_Xml_XmlReader_System_String_System_Xml_Serialization_XmlDeserializationEvents_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Deserialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deserialize(XmlReader,String,XmlDeserializationEvents)</div>        \r\n          </div>\r\n    \r\n            <p>Deserializes the object using the data contained by the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> class used to read the document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodingStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The encoding used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>events</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmldeserializationevents\" data-linktype=\"relative-path\">XmlDeserializationEvents</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.xml.serialization.xmldeserializationevents\" data-linktype=\"relative-path\">XmlDeserializationEvents</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object being deserialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is required for deserialization of unknown headers for Web Service scenarios only. This method allows you to avoid event synchronization in Web Service methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_FromMappings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromMappings(XmlMapping[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects created from an array of <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mappings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.serialization.xmltypemapping\" data-linktype=\"relative-path\">XmlTypeMapping</a> that maps one type to another.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_FromMappings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromMappings(XmlMapping[],Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class created from mappings of one XML type to another.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mappings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> objects used to map one type to another.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> class that contains host and assembly data presented to the common language runtime policy system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>[]</div>\r\n                  </div>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_FromMappings_System_Xml_Serialization_XmlMapping___System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_FromMappings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromMappings(XmlMapping[],Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class from the specified mappings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mappings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the deserialized object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>[]</div>\r\n                  </div>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_FromTypes_System_Type___\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_FromTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromTypes(Type[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects created from an array of types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FromTypes method allows you to efficiently create an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects for processing an array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the FromTypes method to return an array of <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> objects. The code includes three class definitions that are each used to create an array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.FromTypes Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\n/* Three classes are included here. Each one will\nbe used to create three XmlSerializer objects. */\npublic ref class Instrument\n{\npublic:\n   String^ InstrumentName;\n};\n\npublic ref class Player\n{\npublic:\n   String^ PlayerName;\n};\n\npublic ref class Piece\n{\npublic:\n   String^ PieceName;\n};\n\nvoid GetSerializers()\n{\n   // Create an array of types.\n   array&lt;Type^&gt;^types = gcnew array&lt;Type^&gt;(3);\n   types[ 0 ] = Instrument::typeid;\n   types[ 1 ] = Player::typeid;\n   types[ 2 ] = Piece::typeid;\n\n   // Create an array for XmlSerializer objects.\n   array&lt;XmlSerializer^&gt;^serializers = gcnew array&lt;XmlSerializer^&gt;(3);\n   serializers = XmlSerializer::FromTypes( types );\n\n   // Create one Instrument and serialize it.\n   Instrument^ i = gcnew Instrument;\n   i-&gt;InstrumentName = &quot;Piano&quot;;\n\n   // Create a TextWriter to write with.\n   TextWriter^ writer = gcnew StreamWriter( &quot;Inst.xml&quot; );\n   serializers[ 0 ]-&gt;Serialize( writer, i );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   GetSerializers();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.FromTypes Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\n\n\n&#39; Three classes are included here. Each one will\n&#39; be used to create three XmlSerializer objects. \n\nPublic Class Instrument\n    Public InstrumentName As String\nEnd Class\n\nPublic Class Player\n    Public PlayerName As String\nEnd Class\n\nPublic Class Piece\n    Public PieceName As String\nEnd Class\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        t.GetSerializers()\n    End Sub    \n    \n    Public Sub GetSerializers()\n        &#39; Create an array of types.\n        Dim types(3) As Type\n        types(0) = GetType(Instrument)\n        types(1) = GetType(Player)\n        types(2) = GetType(Piece)\n        \n        &#39; Create an array for XmlSerializer objects.\n        Dim serializers(3) As XmlSerializer\n        serializers = XmlSerializer.FromTypes(types)\n        &#39; Create one Instrument and serialize it.\n        Dim i As New Instrument()\n        i.InstrumentName = &quot;Piano&quot;\n        &#39; Create a TextWriter to write with.\n        Dim writer As New StreamWriter(&quot;Inst.xml&quot;)\n        serializers(0).Serialize(writer, i)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.FromTypes Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n/* Three classes are included here. Each one will\nbe used to create three XmlSerializer objects. */\n\npublic class Instrument\n{\n   public string InstrumentName;\n}\n\npublic class Player\n{\n   public string PlayerName;\n}\n\npublic class Piece\n{\n   public string PieceName;\n}\n \npublic class Test\n{\n   public static void Main()\n   {\n      Test t = new Test();\n      t.GetSerializers();\n   }\n\n   public void GetSerializers()\n   {\n      // Create an array of types.\n      Type[]types = new Type[3];\n      types[0] = typeof(Instrument);\n      types[1] = typeof(Player);\n      types[2] = typeof(Piece);\n \n      // Create an array for XmlSerializer objects.\n      XmlSerializer[]serializers= new XmlSerializer[3];\n      serializers = XmlSerializer.FromTypes(types);\n      // Create one Instrument and serialize it.\n      Instrument i = new Instrument();\n      i.InstrumentName = &quot;Piano&quot;;\n      // Create a TextWriter to write with.\n      TextWriter writer = new StreamWriter(&quot;Inst.xml&quot;);\n      serializers[0].Serialize(writer,i);\n      writer.Close();\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_GenerateSerializer_System_Type___System_Xml_Serialization_XmlMapping___\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_GenerateSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateSerializer(Type[],XmlMapping[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of types.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mappings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> objects used to convert one type to another.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a> object that contains serializers for the supplied types and mappings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_GenerateSerializer_System_Type___System_Xml_Serialization_XmlMapping___System_CodeDom_Compiler_CompilerParameters_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_GenerateSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateSerializer(Type[],XmlMapping[],CompilerParameters)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that contains objects used to serialize and deserialize data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mappings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.xml.serialization.xmlmapping\" data-linktype=\"relative-path\">XmlMapping</a> that maps the XML data to the type data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.compilerparameters\" data-linktype=\"relative-path\">CompilerParameters</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.codedom.compiler.compilerparameters\" data-linktype=\"relative-path\">CompilerParameters</a> class that represents the parameters used to invoke a compiler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a> that contains special versions of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlSerializerAssemblyName(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the assembly that contains one or more versions of the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> especially created to serialize or deserialize the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetXmlSerializerAssemblyName (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> you are deserializing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the assembly that contains an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> for the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a href=\"../Topic/XML%20Serializer%20Generator%20Tool%20(Sgen.exe).md\" data-linktype=\"relative-path\">XML Serializer Generator Tool (Sgen.exe)</a> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when it serializes or deserializes objects of the specified types. Use the GetXmlSerializerAssemblyName to return the name of such an assembly.  </p>\n<p> If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <a class=\"xref\" href=\"system.xml.serialization.xmlserializerassemblyattribute\" data-linktype=\"relative-path\">XmlSerializerAssemblyAttribute</a> to the client type to specify the location and name of the assembly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlSerializerAssemblyName(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> you are interested in.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace of the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the assembly that contains specially built serializers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a href=\"../Topic/XML%20Serializer%20Generator%20Tool%20(Sgen.exe).md\" data-linktype=\"relative-path\">XML Serializer Generator Tool (Sgen.exe)</a> creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when it serializes or deserializes objects of the specified types. Use the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_GetXmlSerializerAssemblyName_\" data-linktype=\"relative-path\">GetXmlSerializerAssemblyName</a> to return the name of such an assembly.  </p>\n<p> If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <a class=\"xref\" href=\"system.xml.serialization.xmlserializerassemblyattribute\" data-linktype=\"relative-path\">XmlSerializerAssemblyAttribute</a> to the client type to specify the location and name of the assembly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_IO_Stream_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(Stream,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.Stream stream, object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method converts the public fields and read/write properties of an object into XML. It does not convert methods, indexers, private fields, or read-only properties. To serialize all of an object&#39;s fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> In the <code>stream</code> parameter, specify an object that derives from the abstract <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class. Classes that derive from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.cryptography.cryptostream\" data-linktype=\"relative-path\">CryptoStream</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object using a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize2 Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   public string ItemName;\n   public string Description;\n   public decimal UnitPrice;\n   public int Quantity;\n   public decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test{\n   public static void Main(string[] args)\n   {\n      Test t = new Test();\n      // Write a purchase order.\n      t.SerializeObject(&quot;simple.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      Console.WriteLine(&quot;Writing With Stream&quot;);\n \n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n      OrderedItem i = new OrderedItem();\n      i.ItemName = &quot;Widget&quot;;\n      i.Description = &quot;Regular Widget&quot;;\n      i.Quantity = 10;\n      i.UnitPrice = (decimal) 2.30;\n      i.Calculate();\n \n      // Create a FileStream to write with.\n      Stream writer = new FileStream(filename, FileMode.Create);\n      // Serialize the object, and close the TextWriter\n      serializer.Serialize(writer, i);\n      writer.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Serialize2 Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize2 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n   String^ ItemName;\n   String^ Description;\n   Decimal UnitPrice;\n   int Quantity;\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With Stream&quot; );\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   // Create a FileStream to write with.\n   Stream^ writer = gcnew FileStream( filename,FileMode::Create );\n\n   // Serialize the object, and close the TextWriter\n   serializer-&gt;Serialize( writer, i );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize2 Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    Public ItemName As String\n    Public Description As String\n    Public UnitPrice As Decimal\n    Public Quantity As Integer\n    Public LineTotal As Decimal\n    \n    \n    &#39; A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n    End Sub\n    \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With Stream&quot;)\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        Dim i As New OrderedItem()\n\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n            .Calculate()\n        End With\n        \n        &#39; Create a FileStream to write with.\n        Dim writer As New FileStream(filename, FileMode.Create)\n        &#39; Serialize the object, and close the TextWriter\n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_IO_TextWriter_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(TextWriter,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.TextWriter textWriter, object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Serialize method converts the public fields and read/write properties of an object into XML. It does not convert methods, indexers, private fields, or read-only properties. To serialize all an object&#39;s fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> In the <code>textWriter</code> parameter, specify an object that derives from the abstract <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> class. Classes that derive from <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object using a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   public string ItemName;\n   public string Description;\n   public decimal UnitPrice;\n   public int Quantity;\n   public decimal LineTotal;\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test{\n   public static void Main(string[] args)\n   {\n      Test t = new Test();\n      // Write a purchase order.\n      t.SerializeObject(&quot;simple.xml&quot;);\n   }\n \n  private void SerializeObject(string filename)\n  {\n      Console.WriteLine(&quot;Writing With TextWriter&quot;);\n \n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n      OrderedItem i = new OrderedItem();\n      i.ItemName = &quot;Widget&quot;;\n      i.Description = &quot;Regular Widget&quot;;\n      i.Quantity = 10;\n      i.UnitPrice = (decimal) 2.30;\n      i.Calculate();\n \n      /* Create a StreamWriter to write with. First create a FileStream\n         object, and create the StreamWriter specifying an Encoding to use. */\n      FileStream fs = new FileStream(filename, FileMode.Create);\n      TextWriter writer = new StreamWriter(fs, new UTF8Encoding());\n      // Serialize using the XmlTextWriter.\n      serializer.Serialize(writer, i);\n      writer.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml.Serialization\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    Public ItemName As String\n    Public Description As String\n    Public UnitPrice As Decimal\n    Public Quantity As Integer\n    Public LineTotal As Decimal\n    \n    &#39;A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n    End Sub\n    \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With TextWriter&quot;)\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        Dim i As New OrderedItem()\n\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n            .Calculate()\n        End With\n        \n        &#39; Create a StreamWriter to write with. First create a FileStream\n        &#39; object, and create the StreamWriter specifying an Encoding to use. \n        Dim fs As New FileStream(filename, FileMode.Create)\n        Dim writer As New StreamWriter(fs, New UTF8Encoding())\n        &#39; Serialize using the XmlTextWriter.\n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n   String^ ItemName;\n   String^ Description;\n   Decimal UnitPrice;\n   int Quantity;\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With TextWriter&quot; );\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   /* Create a StreamWriter to write with. First create a FileStream\n      object, and create the StreamWriter specifying an Encoding to use. */\n   FileStream^ fs = gcnew FileStream( filename,FileMode::Create );\n   TextWriter^ writer = gcnew StreamWriter( fs,gcnew UTF8Encoding );\n\n   // Serialize using the XmlTextWriter.\n   serializer-&gt;Serialize( writer, i );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Serialize Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_Object_System_Xml_Serialization_XmlSerializationWriter_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(Object,XmlSerializationWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializationwriter\" data-linktype=\"relative-path\">XmlSerializationWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Any attempt is made to access the method when the method is not overridden in a descendant class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(XmlWriter,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.Xml.XmlWriter xmlWriter, object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method converts the public fields and read/write properties of an object into XML. It does not convert methods, indexers, private fields, or read-only properties. To serialize all an object&#39;s fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> In the <code>xmlWriter</code> parameter, specify an object that derives from the abstract <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class. The <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> derives from the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object using an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize4 Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   public string ItemName;\n   public string Description;\n   public decimal UnitPrice;\n   public int Quantity;\n   public decimal LineTotal;\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test{\n   public static void Main()\n   {\n      Test t = new Test();\n      // Write a purchase order.\n      t.SerializeObject(&quot;simple.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      Console.WriteLine(&quot;Writing With XmlTextWriter&quot;);\n \n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n      OrderedItem i = new OrderedItem();\n      i.ItemName = &quot;Widget&quot;;\n      i.Description = &quot;Regular Widget&quot;;\n      i.Quantity = 10;\n      i.UnitPrice = (decimal) 2.30;\n      i.Calculate();\n      // Create an XmlTextWriter using a FileStream.\n      Stream fs = new FileStream(filename, FileMode.Create);\n      XmlWriter writer = \n      new XmlTextWriter(fs, Encoding.Unicode);\n      // Serialize using the XmlTextWriter.\n      serializer.Serialize(writer, i);\n      writer.Close();\n   }\n}\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize4 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n   String^ ItemName;\n   String^ Description;\n   Decimal UnitPrice;\n   int Quantity;\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With XmlTextWriter&quot; );\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   // Create an XmlTextWriter using a FileStream.\n   Stream^ fs = gcnew FileStream( filename,FileMode::Create );\n   XmlWriter^ writer = gcnew XmlTextWriter( fs,Encoding::Unicode );\n\n   // Serialize using the XmlTextWriter.\n   serializer-&gt;Serialize( writer, i );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Serialize4 Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize4 Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    Public ItemName As String\n    Public Description As String\n    Public UnitPrice As Decimal\n    Public Quantity As Integer\n    Public LineTotal As Decimal\n    \n    &#39; A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n    End Sub\n        \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With XmlTextWriter&quot;)\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        Dim i As New OrderedItem()\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n            .Calculate()\n        End With\n        &#39; Create an XmlTextWriter using a FileStream.\n        Dim fs As New FileStream(filename, FileMode.Create)\n        Dim writer As New XmlTextWriter(fs, Encoding.Unicode)\n        &#39; Serialize using the XmlTextWriter.\n        serializer.Serialize(writer, i)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_IO_Stream_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(Stream,Object,XmlSerializerNamespaces)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>that references the specified namespaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> referenced by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method is invoked, the public fields and read/write properties of an object are converted into XML. Methods, indexers, private fields, and read-only properties are not serialized. To serialize all fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> Use the <code>stream</code> parameter to specify an object that derives from the abstract <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class, which is designed to write to streams. Classes that derive from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.cryptography.cryptostream\" data-linktype=\"relative-path\">CryptoStream</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object with a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object. The example also creates an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> and adds two namespaces to the object. The class that defines the serialized object is also attributed with <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> attributes to specify the namespace for each element.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize3 Example#1\">\nusing System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem {\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public string ItemName;\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public string Description;\n    [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n    public decimal UnitPrice;\n    [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n    public int Quantity;\n    [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n    public decimal LineTotal;\n\n    // A custom method used to calculate price per item.\n    public void Calculate() {\n        LineTotal = UnitPrice * Quantity;\n    }\n}\n \npublic class Test {\n    \n   public static void Main() {\n        Test t = new Test();\n        // Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;);\n        t.DeserializeObject(&quot;simple.xml&quot;);\n   }\n \n   private void SerializeObject(string filename) {\n        Console.WriteLine(&quot;Writing With Stream&quot;);\n \n        XmlSerializer serializer = \n            new XmlSerializer(typeof(OrderedItem));\n\n        OrderedItem i = new OrderedItem();\n        i.ItemName = &quot;Widget&quot;;\n        i.Description = &quot;Regular Widget&quot;;\n        i.Quantity = 10;\n        i.UnitPrice = (decimal) 2.30;\n        i.Calculate();\n \n        // Create an XmlSerializerNamespaces object.\n        XmlSerializerNamespaces ns = new XmlSerializerNamespaces();\n\n        // Add two prefix-namespace pairs.\n        ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;);\n        ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;);\n\n        // Create a FileStream to write with.\n        Stream writer = new FileStream(filename, FileMode.Create);\n\n        // Serialize the object, and close the TextWriter\n        serializer.Serialize(writer, i, ns);\n        writer.Close();\n    }\n \n    private void DeserializeObject(string filename) {\n        Console.WriteLine(&quot;Reading with Stream&quot;);\n        // Create an instance of the XmlSerializer.\n        XmlSerializer serializer = new XmlSerializer(typeof(OrderedItem));\n\n        // Writing the file requires a Stream.\n        Stream reader= new FileStream(filename,FileMode.Open);\n          \n        // Declare an object variable of the type to be deserialized.\n        OrderedItem i;\n\n        /* Use the Deserialize method to restore the object&#39;s state \n           using data from the XML document. */\n        i = (OrderedItem) serializer.Deserialize(reader);\n\n        // Write out the properties of the object.\n        Console.Write(\n            i.ItemName + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n            i.Description + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n            i.UnitPrice + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n            i.Quantity + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; +\n            i.LineTotal);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize3 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ ItemName;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ Description;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal UnitPrice;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   int Quantity;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With Stream&quot; );\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   // Create an XmlSerializerNamespaces object.\n   XmlSerializerNamespaces^ ns = gcnew XmlSerializerNamespaces;\n\n   // Add two prefix-namespace pairs.\n   ns-&gt;Add( &quot;inventory&quot;, &quot;http://www.cpandl.com&quot; );\n   ns-&gt;Add( &quot;money&quot;, &quot;http://www.cohowinery.com&quot; );\n\n   // Create a FileStream to write with.\n   Stream^ writer = gcnew FileStream( filename,FileMode::Create );\n\n   // Serialize the object, and close the TextWriter\n   serializer-&gt;Serialize( writer, i, ns );\n   writer-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Reading with Stream&quot; );\n\n   // Create an instance of the XmlSerializer.\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n\n   // Writing the file requires a Stream.\n   Stream^ reader = gcnew FileStream( filename,FileMode::Open );\n\n   // Declare an object variable of the type to be deserialized.\n   OrderedItem^ i;\n\n   /* Use the Deserialize method to restore the object&#39;s state \n      using data from the XML document. */\n   i = dynamic_cast&lt;OrderedItem^&gt;(serializer-&gt;Deserialize( reader ));\n\n   // Write out the properties of the object.\n   Console::Write( &quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&nbsp;&nbsp;&nbsp;&nbsp;{2}&nbsp;&nbsp;&nbsp;&nbsp;{3}&nbsp;&nbsp;&nbsp;&nbsp;{4}&quot;, i-&gt;ItemName, i-&gt;Description, i-&gt;UnitPrice, i-&gt;Quantity, i-&gt;LineTotal );\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n   DeserializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize3 Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public ItemName As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Description As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public UnitPrice As Decimal\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Quantity As Integer\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public LineTotal As Decimal\n    \n    &#39; A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\nPublic Class Test\n        \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n        t.DeserializeObject(&quot;simple.xml&quot;)\n    End Sub    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With Stream&quot;)\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        \n        Dim i As New OrderedItem()\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n            .Calculate()\n        End With\n        \n        &#39; Create an XmlSerializerNamespaces object.\n        Dim ns As New XmlSerializerNamespaces()\n        \n        &#39; Add two prefix-namespace pairs.\n        ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;)\n        ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;)\n        \n        &#39; Create a FileStream to write with.\n        Dim writer As New FileStream(filename, FileMode.Create)\n        \n        &#39; Serialize the object, and close the TextWriter\n        serializer.Serialize(writer, i, ns)\n        writer.Close()\n    End Sub\n        \n    Private Sub DeserializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Reading with Stream&quot;)\n        &#39; Create an instance of the XmlSerializer.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        \n        &#39; Writing the file requires a Stream.\n        Dim reader As New FileStream(filename, FileMode.Open)\n        \n        &#39; Declare an object variable of the type to be deserialized.\n        Dim i As OrderedItem\n        \n        &#39; Use the Deserialize method to restore the object&#39;s state\n        &#39; using data from the XML document. \n        i = CType(serializer.Deserialize(reader), OrderedItem)\n        \n        &#39; Write out the properties of the object.\n        Console.Write(i.ItemName &amp; ControlChars.Tab &amp; _\n                      i.Description &amp; ControlChars.Tab &amp; _\n                      i.UnitPrice &amp; ControlChars.Tab &amp; _\n                      i.Quantity &amp; ControlChars.Tab &amp; _\n                      i.LineTotal)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_IO_TextWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(TextWriter,Object,XmlSerializerNamespaces)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and references the specified namespaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> that contains namespaces for the generated XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method is invoked the public fields and read/write properties of an object are converted into XML. Methods, indexers, private fields, and read-only properties are not serialized. To serialize all fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> Use the <code>textWriter</code> parameter to specify an object that derives from the abstract <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> class. Classes that derive from <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> class include:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">StreamWriter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">StringWriter</a>  \n</li>\n<li><a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a>  \n\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object with a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>. The example also creates an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> object and adds two namespaces to the object. The class that defines the serialized object is also attributed with <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> attributes to specify the namespace for each element.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Serialize1 Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize1 Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string ItemName;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string Description;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal UnitPrice;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public int Quantity;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal LineTotal;\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test{\n   public static void Main(string[] args)\n   {\n      Test t = new Test();\n      // Write a purchase order.\n      t.SerializeObject(&quot;simple.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      Console.WriteLine(&quot;Writing With TextWriter&quot;);\n      // Create an XmlSerializer instance using the type.\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n      OrderedItem i = new OrderedItem();\n      i.ItemName = &quot;Widget&quot;;\n      i.Description = &quot;Regular Widget&quot;;\n      i.Quantity = 10;\n      i.UnitPrice = (decimal) 2.30;\n      i.Calculate();\n \n      // Create an XmlSerializerNamespaces object.\n      XmlSerializerNamespaces ns = \n      new XmlSerializerNamespaces();\n      // Add two namespaces with prefixes.\n      ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;);\n      ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;);\n      // Create a StreamWriter to write with.\n      TextWriter writer = new StreamWriter(filename);\n      /* Serialize using the object using the TextWriter \n      and namespaces. */\n      serializer.Serialize(writer, i, ns);\n      writer.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize1 Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public ItemName As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Description As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public UnitPrice As Decimal\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Quantity As Integer\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public LineTotal As Decimal\n    \n    &#39;A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n    End Sub\n    \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With TextWriter&quot;)\n        &#39; Create an XmlSerializer instance using the type.\n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        Dim i As New OrderedItem()\n        i.ItemName = &quot;Widget&quot;\n        i.Description = &quot;Regular Widget&quot;\n        i.Quantity = 10\n        i.UnitPrice = CDec(2.3)\n        i.Calculate()\n        \n        &#39; Create an XmlSerializerNamespaces object.\n        Dim ns As New XmlSerializerNamespaces()\n        &#39; Add two namespaces with prefixes.\n        ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;)\n        ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;)\n        &#39; Create a StreamWriter to write with.\n        Dim writer As New StreamWriter(filename)\n        &#39; Serialize using the object using the TextWriter\n        &#39; and namespaces. \n        serializer.Serialize(writer, i, ns)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize1 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ ItemName;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ Description;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal UnitPrice;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   int Quantity;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With TextWriter&quot; );\n\n   // Create an XmlSerializer instance using the type.\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   // Create an XmlSerializerNamespaces object.\n   XmlSerializerNamespaces^ ns = gcnew XmlSerializerNamespaces;\n\n   // Add two namespaces with prefixes.\n   ns-&gt;Add( &quot;inventory&quot;, &quot;http://www.cpandl.com&quot; );\n   ns-&gt;Add( &quot;money&quot;, &quot;http://www.cohowinery.com&quot; );\n\n   // Create a StreamWriter to write with.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n\n   /* Serialize using the object using the TextWriter \n      and namespaces. */\n   serializer-&gt;Serialize( writer, i, ns );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(XmlWriter,Object,XmlSerializerNamespaces)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and references the specified namespaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> referenced by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method is invoked, the public fields and read/write properties of an object are converted into XML. Methods, indexers, private fields, and read-only properties are not serialized. To serialize all fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> Use the <code>xmlWriter</code> parameter to specify an object that derives from the abstract <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class, which is designed to write XML documents. The <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> derives from the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an object with an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. The example also creates an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> and adds two namespaces to the object. Several instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class are applied to the class members to specify the namespace for each element.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.Serialize5 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\n// This is the class that will be serialized.\npublic ref class OrderedItem\n{\npublic:\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ ItemName;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   String^ Description;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal UnitPrice;\n\n   [XmlElement(Namespace=&quot;http://www.cpandl.com&quot;)]\n   int Quantity;\n\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   Decimal LineTotal;\n\n   // A custom method used to calculate price per item.\n   void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n};\n\nvoid SerializeObject( String^ filename )\n{\n   Console::WriteLine( &quot;Writing With XmlTextWriter&quot; );\n   XmlSerializer^ serializer = gcnew XmlSerializer( OrderedItem::typeid );\n   OrderedItem^ i = gcnew OrderedItem;\n   i-&gt;ItemName = &quot;Widget&quot;;\n   i-&gt;Description = &quot;Regular Widget&quot;;\n   i-&gt;Quantity = 10;\n   i-&gt;UnitPrice = (Decimal)2.30;\n   i-&gt;Calculate();\n\n   // Create an XmlSerializerNamespaces object.\n   XmlSerializerNamespaces^ ns = gcnew XmlSerializerNamespaces;\n\n   // Add two namespaces with prefixes.\n   ns-&gt;Add( &quot;inventory&quot;, &quot;http://www.cpandl.com&quot; );\n   ns-&gt;Add( &quot;money&quot;, &quot;http://www.cohowinery.com&quot; );\n\n   // Create an XmlTextWriter using a FileStream.\n   Stream^ fs = gcnew FileStream( filename,FileMode::Create );\n   XmlWriter^ writer = gcnew XmlTextWriter( fs,gcnew UTF8Encoding );\n\n   // Serialize using the XmlTextWriter.\n   serializer-&gt;Serialize( writer, i, ns );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   // Write a purchase order.\n   SerializeObject( &quot;simple.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.Serialize5 Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\n// This is the class that will be serialized.\npublic class OrderedItem\n{\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string ItemName;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public string Description;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal UnitPrice;\n   [XmlElement(Namespace = &quot;http://www.cpandl.com&quot;)]\n   public int Quantity;\n   [XmlElement(Namespace=&quot;http://www.cohowinery.com&quot;)]\n   public decimal LineTotal;\n   // A custom method used to calculate price per item.\n   public void Calculate()\n   {\n      LineTotal = UnitPrice * Quantity;\n   }\n}\n \npublic class Test{\n   public static void Main()\n   {\n      Test t = new Test();\n   // Write a purchase order.\n   t.SerializeObject(&quot;simple.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      Console.WriteLine(&quot;Writing With XmlTextWriter&quot;);\n\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(OrderedItem));\n      OrderedItem i = new OrderedItem();\n      i.ItemName = &quot;Widget&quot;;\n      i.Description = &quot;Regular Widget&quot;;\n      i.Quantity = 10;\n      i.UnitPrice = (decimal) 2.30;\n      i.Calculate();\n \n      // Create an XmlSerializerNamespaces object.\n      XmlSerializerNamespaces ns = \n      new XmlSerializerNamespaces();\n      // Add two namespaces with prefixes.\n      ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;);\n      ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;);\n      // Create an XmlTextWriter using a FileStream.\n      Stream fs = new FileStream(filename, FileMode.Create);\n      XmlWriter writer = \n      new XmlTextWriter(fs, new UTF8Encoding());\n      // Serialize using the XmlTextWriter.\n      serializer.Serialize(writer, i, ns);\n      writer.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.Serialize5 Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\n\n\n&#39; This is the class that will be serialized.\nPublic Class OrderedItem\n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public ItemName As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Description As String\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public UnitPrice As Decimal\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public Quantity As Integer\n    \n    &lt;XmlElement(Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public LineTotal As Decimal\n    \n    &#39;A custom method used to calculate price per item.\n    Public Sub Calculate()\n        LineTotal = UnitPrice * Quantity\n    End Sub\nEnd Class\n\n\nPublic Class Test\n    \n    Public Shared Sub Main()\n        Dim t As New Test()\n        &#39; Write a purchase order.\n        t.SerializeObject(&quot;simple.xml&quot;)\n    End Sub    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        Console.WriteLine(&quot;Writing With XmlTextWriter&quot;)\n        \n        Dim serializer As New XmlSerializer(GetType(OrderedItem))\n        Dim i As New OrderedItem()\n        With i\n            .ItemName = &quot;Widget&quot;\n            .Description = &quot;Regular Widget&quot;\n            .Quantity = 10\n            .UnitPrice = CDec(2.3)\n            .Calculate()\n        End With\n        \n        &#39; Create an XmlSerializerNamespaces object.\n        Dim ns As New XmlSerializerNamespaces()\n        &#39; Add two namespaces with prefixes.\n        ns.Add(&quot;inventory&quot;, &quot;http://www.cpandl.com&quot;)\n        ns.Add(&quot;money&quot;, &quot;http://www.cohowinery.com&quot;)\n        &#39; Create an XmlTextWriter using a FileStream.\n        Dim fs As New FileStream(filename, FileMode.Create)\n        Dim writer As New XmlTextWriter(fs, New UTF8Encoding())\n        &#39; Serialize using the XmlTextWriter.\n        serializer.Serialize(writer, i, ns)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-xml\" name=\"Classic XmlSerializer.Serialize5 Example#1\">&lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;OrderedItem xmlns:inventory=&quot;http://www.cpandl.com&quot; xmlns:money=&quot;http://www.cohowinery.com&quot;&gt;\n   &lt;inventory:ItemName&gt;Widget&lt;/inventory:ItemName&gt;\n   &lt;inventory:Description&gt;Regular Widget&lt;/inventory:Description&gt;\n   &lt;money:UnitPrice&gt;2.3&lt;/money:UnitPrice&gt;\n   &lt;inventory:Quantity&gt;10&lt;/inventory:Quantity&gt;\n   &lt;money:LineTotal&gt;23&lt;/money:LineTotal&gt;\n &lt;/OrderedItem&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(XmlWriter,Object,XmlSerializerNamespaces,String)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified object and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and references the specified namespaces and encoding style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> referenced by the object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodingStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The encoding style of the serialized XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An error occurred during serialization. The original exception is available using the <span class=\"xref\">stem.Exception.InnerException*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Serialize_\" data-linktype=\"relative-path\">Serialize</a> method is invoked, the public fields and read/write properties of an object are converted into XML. Methods, indexers, private fields, and read-only properties are not serialized. To serialize all fields and properties, both public and private, use the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>.  </p>\n<p> Use the <code>xmlWriter</code> parameter to specify an object that derives from the abstract <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class, which is designed to write XML documents. The <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> derives from the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.  </p>\n<p> Set the <code>encodingStyle</code> parameter to &quot;<a href=\"http://schemas.xmlsoap.org/soap/encoding/\" data-linktype=\"external\">http://schemas.xmlsoap.org/soap/encoding/</a>&quot; for SOAP version 1.1 encoding; otherwise, set it to &quot;<a href=\"http://www.w3.org/2001/12/soap-encoding\" data-linktype=\"external\">http://www.w3.org/2001/12/soap-encoding</a>&quot; for SOAP version 1.2 encoding.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> cannot serialize the following: arrays of <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> and arrays of <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_Serialize_System_Xml_XmlWriter_System_Object_System_Xml_Serialization_XmlSerializerNamespaces_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlSerializer_Serialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Serialize(XmlWriter,Object,XmlSerializerNamespaces,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Serializes the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> and writes the XML document to a file using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, XML namespaces, and encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlWriter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> used to write the XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <code>XmlSerializaerNamespaces</code> that contains namespaces and prefixes to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodingStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The encoding used in the document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>For SOAP encoded messages, the base used to generate id attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <em>id</em> parameter supplies the base string used to create SOAP ids. By default, these are &quot;id1&quot;, &quot;id2&quot; and so on. But if the parameter is set to &quot;myBase&quot; the generated values are &quot;myBaseid1&quot;, &quot;myBaseid2&quot; and so on. This functionality is used to create unique id values across the whole SOAP message.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_UnknownAttribute\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnknownAttribute</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML attribute of unknown type during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, after calling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> ignores XML attributes of unknown types. However, you can use this event to handle such node types.  </p>\n<p> If the instance of the class being deserialized contains a field that returns an array of <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> objects and an <a class=\"xref\" href=\"system.xml.serialization.xmlanyattributeattribute\" data-linktype=\"relative-path\">XmlAnyAttributeAttribute</a> has been applied to the field, the UnknownAttribute event does not occur. Instead, all unknown XML attributes are collected into the array.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example prints information about any unknown attributes encountered while deserializing an XML document.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.UnknownAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml;\nusing namespace System::Xml::Schema;\n\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n};\n\npublic ref class Test\n{\npublic:\n   static void main()\n   {\n      Test^ t = gcnew Test;\n      \n      // Deserialize the file containing unknown elements.\n      t-&gt;DeserializeObject( &quot;UnknownAttributes.xml&quot; );\n   }\n\nprivate:\n   void Serializer_UnknownAttribute( Object^ sender, XmlAttributeEventArgs^ e )\n   {\n      Console::WriteLine( &quot;Unknown Attribute&quot; );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} {1}&quot;, e-&gt;Attr-&gt;Name, e-&gt;Attr-&gt;InnerXml );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: {0}&quot;, e-&gt;LineNumber );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: {0}&quot;, e-&gt;LinePosition );\n      Group^ x = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( x-&gt;GroupName );\n      Console::WriteLine( sender );\n   }\n\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ ser = gcnew XmlSerializer( Group::typeid );\n\n      // Add a delegate to handle unknown element events.\n      ser-&gt;UnknownAttribute += gcnew XmlAttributeEventHandler( this, &amp;Test::Serializer_UnknownAttribute );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Group^ g = dynamic_cast&lt;Group^&gt;(ser-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n};\n\nint main()\n{\n   Test::main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.UnknownAttribute Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports System.Xml\nImports System.Xml.Schema\nImports Microsoft.VisualBasic\n\nPublic Class Group\n   Public GroupName As String \nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = new Test()\n      &#39; Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownAttributes.xml&quot;)\n   End Sub\n\n   Private Sub Serializer_UnknownAttribute _\n   (sender As Object , e As XmlAttributeEventArgs)\n      Console.WriteLine(&quot;Unknown Attribute&quot;)\n      Console.WriteLine(ControlChars.Tab &amp; e.Attr.Name + &quot; &quot; &amp; e.Attr.InnerXml)\n      Console.WriteLine(ControlChars.Tab &amp; e.LineNumber &amp; &quot;:&quot;  &amp; e.LineNumber)\n      Console.WriteLine(ControlChars.Tab &amp; e.LinePosition &amp; &quot;:&quot;   &amp; e.LinePosition)\n      \n      Dim x As Group = CType( e.ObjectBeingDeserialized, Group)\n      Console.WriteLine (x.GroupName)\n      Console.WriteLine (sender.ToString())\n   End Sub\n   \n   Private Sub DeserializeObject(filename As String)\n      Dim ser As XmlSerializer = new XmlSerializer(GetType(Group))\n      &#39; Add a delegate to handle unknown element events.\n      AddHandler ser.UnknownAttribute, _\n      AddressOf Serializer_UnknownAttribute \n      &#39; A FileStream is needed to read the XML document.\n     Dim fs As FileStream  = new FileStream(filename, FileMode.Open)\n     Dim g  As Group = CType(ser.Deserialize(fs),Group)\n     fs.Close()\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.UnknownAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\nusing System.Xml;\nusing System.Xml.Schema;\n\npublic class Group{\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      // Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownAttributes.xml&quot;);\n   }\n   private void Serializer_UnknownAttribute(object sender, XmlAttributeEventArgs e){\n      Console.WriteLine(&quot;Unknown Attribute&quot;);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + e.Attr.Name + &quot; &quot; + e.Attr.InnerXml);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: &quot; + e.LineNumber);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: &quot; + e.LinePosition);\n      \n      Group x  = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine (x.GroupName);\n      Console.WriteLine (sender.ToString());\n   }\n   private void DeserializeObject(string filename){\n      XmlSerializer ser = new XmlSerializer(typeof(Group));\n      // Add a delegate to handle unknown element events.\n      ser.UnknownAttribute+=new XmlAttributeEventHandler(Serializer_UnknownAttribute);\n      // A FileStream is needed to read the XML document.\n     FileStream fs = new FileStream(filename, FileMode.Open);\n     Group g = (Group) ser.Deserialize(fs);\n     fs.Close();\n   \t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_UnknownElement\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnknownElement</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML element of unknown type during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, after calling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> ignores XML attributes of unknown types. However, you can use this event to handle such node types.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.xml.serialization.xmlanyelementattribute\" data-linktype=\"relative-path\">XmlAnyElementAttribute</a> is applied to a field that returns an array of <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> objects, all unknown elements are collected in the array. In that case, the UnknownElement event does not occur.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes a class named <code>Group</code> from a file named UnknownElements.xml. Whenever an element is found in the file that has no corresponding member in the class, the UnknownElement event occurs. To try the example, paste the following XML code into a file named UnknownElements.xml.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;GroupName&gt;MyGroup&lt;/GroupName&gt;  \n  &lt;GroupSize&gt;Large&lt;/GroupSize&gt;  \n  &lt;GroupNumber&gt;444&lt;/GroupNumber&gt;  \n  &lt;GroupBase&gt;West&lt;/GroupBase&gt;  \n&lt;/Group&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlSerializer.UnknownElement Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\nusing System.Xml;\nusing System.Xml.Schema;\n\npublic class Group{\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      // Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;);\n   }\n   private void Serializer_UnknownElement(object sender, XmlElementEventArgs e){\n      Console.WriteLine(&quot;Unknown Element&quot;);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + e.Element.Name + &quot; &quot; + e.Element.InnerXml);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: &quot; + e.LineNumber);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: &quot; + e.LinePosition);\n      \n      Group x  = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine (x.GroupName);\n      Console.WriteLine (sender.ToString());\n   }\n   private void DeserializeObject(string filename){\n      XmlSerializer ser = new XmlSerializer(typeof(Group));\n      // Add a delegate to handle unknown element events.\n      ser.UnknownElement+=new XmlElementEventHandler(Serializer_UnknownElement);\n      // A FileStream is needed to read the XML document.\n     FileStream fs = new FileStream(filename, FileMode.Open);\n     Group g = (Group) ser.Deserialize(fs);\n     fs.Close();\n   \t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSerializer.UnknownElement Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml;\nusing namespace System::Xml::Schema;\n\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n};\n\npublic ref class Test\n{\nprivate:\n   void Serializer_UnknownElement( Object^ sender, XmlElementEventArgs^ e )\n   {\n      Console::WriteLine( &quot;Unknown Element&quot; );\n      Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;, e-&gt;Element-&gt;Name );\n      Console::WriteLine( &quot; {0}&quot;, e-&gt;Element-&gt;InnerXml );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: {0}&quot;, e-&gt;LineNumber );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: {0}&quot;, e-&gt;LinePosition );\n      Group^ x = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( x-&gt;GroupName );\n      Console::WriteLine( sender );\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ ser = gcnew XmlSerializer( Group::typeid );\n\n      // Add a delegate to handle unknown element events.\n      ser-&gt;UnknownElement += gcnew XmlElementEventHandler( this, &amp;Test::Serializer_UnknownElement );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Group^ g = dynamic_cast&lt;Group^&gt;(ser-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n};\n\nint main()\n{\n   Test^ t = gcnew Test;\n\n   // Deserialize the file containing unknown elements.\n   t-&gt;DeserializeObject( &quot;UnknownElements.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSerializer.UnknownElement Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports System.Xml\nImports System.Xml.Schema\nImports Microsoft.VisualBasic\n\nPublic Class Group\n   Public GroupName As String \nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = new Test()\n      &#39; Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;)\n   End Sub\n\n   Private Sub Serializer_UnknownElement _\n   (sender As Object , e As XmlElementEventArgs)\n      Console.WriteLine(&quot;Unknown Element&quot;)\n      Console.WriteLine(ControlChars.Tab &amp; e.Element.Name + &quot; &quot; &amp; e.Element.InnerXml)\n      Console.WriteLine(ControlChars.Tab &amp; e.LineNumber &amp; &quot;:&quot;  &amp; e.LineNumber)\n      Console.WriteLine(ControlChars.Tab &amp; e.LinePosition &amp; &quot;:&quot;   &amp; e.LinePosition)\n      \n      Dim x As Group = CType( e.ObjectBeingDeserialized, Group)\n      Console.WriteLine (x.GroupName)\n      Console.WriteLine (sender.ToString())\n   End Sub\n   \n   Private Sub DeserializeObject(filename As String)\n      Dim ser As XmlSerializer = new XmlSerializer(GetType(Group))\n      &#39; Add a delegate to handle unknown element events.\n      AddHandler ser.UnknownElement, _\n      AddressOf Serializer_UnknownElement \n      &#39; A FileStream is needed to read the XML document.\n     Dim fs As FileStream  = new FileStream(filename, FileMode.Open)\n     Dim g  As Group = CType(ser.Deserialize(fs),Group)\n     fs.Close()\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_UnknownNode\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnknownNode</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters an XML node of unknown type during deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, after calling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> ignores XML nodes of unknown types. However, you can use this event to handle such node types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example prints the type of any encountered unknown node.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlSerializer.UnknownNode Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\npublic class Group{\n   // Only the GroupName field will be known.\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      t.DeserializeObject(&quot;UnknownNodes.xml&quot;);\n   }\n\n   private void DeserializeObject(string filename){\n      XmlSerializer mySerializer = new XmlSerializer(typeof(Group));\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      mySerializer.UnknownNode += new \n      XmlNodeEventHandler(serializer_UnknownNode);\n      Group myGroup = (Group) mySerializer.Deserialize(fs);\n      fs.Close();\n   }\n   private void serializer_UnknownNode\n   (object sender, XmlNodeEventArgs e){\n      Console.WriteLine\n      (&quot;UnknownNode Name: {0}&quot;, e.Name);\n      Console.WriteLine\n      (&quot;UnknownNode LocalName: {0}&quot; ,e.LocalName);\n      Console.WriteLine\n      (&quot;UnknownNode Namespace URI: {0}&quot;, e.NamespaceURI);\n      Console.WriteLine\n      (&quot;UnknownNode Text: {0}&quot;, e.Text);\n\n      XmlNodeType myNodeType = e.NodeType;\n      Console.WriteLine(&quot;NodeType: {0}&quot;, myNodeType);\n \n      Group myGroup = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine(&quot;GroupName: {0}&quot;, myGroup.GroupName);\n      Console.WriteLine();\n   }\n}\n/* Paste this XML into a file named UnknownNodes:\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n\nxmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:coho = &quot;http://www.cohowinery.com&quot; \n\nxmlns:cp=&quot;http://www.cpandl.com&quot;&gt;\n   &lt;coho:GroupName&gt;MyGroup&lt;/coho:GroupName&gt;\n   &lt;cp:GroupSize&gt;Large&lt;/cp:GroupSize&gt;\n   &lt;cp:GroupNumber&gt;444&lt;/cp:GroupNumber&gt;\n   &lt;coho:GroupBase&gt;West&lt;/coho:GroupBase&gt;\n   &lt;coho:ThingInfo&gt;\n      &lt;Number&gt;1&lt;/Number&gt;\n      &lt;Name&gt;Thing1&lt;/Name&gt;\n      &lt;Elmo&gt;\n         &lt;Glue&gt;element&lt;/Glue&gt;\n      &lt;/Elmo&gt;\n   &lt;/coho:ThingInfo&gt;\n&lt;/Group&gt;\n*/   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlSerializer.UnknownNode Example#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\nPublic Class Group\n   &#39; Only the GroupName field will be known.\n   Public GroupName As String\nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = New Test()\n      t.DeserializeObject(&quot;UnknownNodes.xml&quot;)\n   End Sub\n\n   Private Sub DeserializeObject(filename As String )\n      Dim mySerializer As XmlSerializer  = New XmlSerializer(GetType(Group))\n      Dim fs As FileStream = New FileStream(filename, FileMode.Open)\n      AddHandler mySerializer.UnknownNode, _\n      AddressOf serializer_UnknownNode\n      Dim myGroup As Group = _\n      CType(mySerializer.Deserialize(fs), Group)\n      fs.Close()\n   End Sub\n   \n   Private Sub serializer_UnknownNode _\n   (sender As object , e As XmlNodeEventArgs )\n      Console.WriteLine _\n      (&quot;UnknownNode Name: {0}&quot;, e.Name)\n      Console.WriteLine _\n      (&quot;UnknownNode LocalName: {0}&quot; ,e.LocalName)\n      Console.WriteLine _\n      (&quot;UnknownNode Namespace URI: {0}&quot;, e.NamespaceURI)\n      Console.WriteLine _\n      (&quot;UnknownNode Text: {0}&quot;, e.Text)\n\n      Dim myNodeType As XmlNodeType = e.NodeType\n      Console.WriteLine(&quot;NodeType: {0}&quot;, myNodeType)\n \n      Dim myGroup As Group = CType(e.ObjectBeingDeserialized, Group)\n      Console.WriteLine(&quot;GroupName: {0}&quot;, myGroup.GroupName)\n      Console.WriteLine()\n   End Sub\nEnd Class\n&#39; Paste this XML into a file named UnknownNodes:\n&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&#39;&lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n\n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; xmlns:coho = &quot;http:&#39;www.cohowinery.com&quot; \n\n&#39;xmlns:cp=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;coho:GroupName&gt;MyGroup&lt;/coho:GroupName&gt;\n&#39;   &lt;cp:GroupSize&gt;Large&lt;/cp:GroupSize&gt;\n&#39;   &lt;cp:GroupNumber&gt;444&lt;/cp:GroupNumber&gt;\n&#39;   &lt;coho:GroupBase&gt;West&lt;/coho:GroupBase&gt;\n&#39;   &lt;coho:ThingInfo&gt;\n&#39;      &lt;Number&gt;1&lt;/Number&gt;\n&#39;      &lt;Name&gt;Thing1&lt;/Name&gt;\n&#39;      &lt;Elmo&gt;\n&#39;         &lt;Glue&gt;element&lt;/Glue&gt;\n&#39;      &lt;/Elmo&gt;\n&#39;  &lt;/coho:ThingInfo&gt;\n&#39;/Group&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlSerializer.UnknownNode Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\npublic ref class Group\n{\npublic:\n\n   // Only the GroupName field will be known.\n   String^ GroupName;\n};\n\npublic ref class Test\n{\npublic:\n   static void main()\n   {\n      Test^ t = gcnew Test;\n      t-&gt;DeserializeObject( &quot;UnknownNodes.xml&quot; );\n   }\n\nprivate:\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( Group::typeid );\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      mySerializer-&gt;UnknownNode += gcnew XmlNodeEventHandler( this, &amp;Test::serializer_UnknownNode );\n      Group^ myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n\nprivate:\n   void serializer_UnknownNode( Object^ /*sender*/, XmlNodeEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnknownNode Name: {0}&quot;, e-&gt;Name );\n      Console::WriteLine( &quot;UnknownNode LocalName: {0}&quot;, e-&gt;LocalName );\n      Console::WriteLine( &quot;UnknownNode Namespace URI: {0}&quot;, e-&gt;NamespaceURI );\n      Console::WriteLine( &quot;UnknownNode Text: {0}&quot;, e-&gt;Text );\n      XmlNodeType myNodeType = e-&gt;NodeType;\n      Console::WriteLine( &quot;NodeType: {0}&quot;, myNodeType );\n      Group^ myGroup = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( &quot;GroupName: {0}&quot;, myGroup-&gt;GroupName );\n      Console::WriteLine();\n   }\n};\n\nint main()\n{\n   Test::main();\n}\n\n/* Paste this XML into a file named UnknownNodes:\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n\nxmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:coho = &quot;http://www.cohowinery.com&quot; \n\nxmlns:cp=&quot;http://www.cpandl.com&quot;&gt;\n   &lt;coho:GroupName&gt;MyGroup&lt;/coho:GroupName&gt;\n   &lt;cp:GroupSize&gt;Large&lt;/cp:GroupSize&gt;\n   &lt;cp:GroupNumber&gt;444&lt;/cp:GroupNumber&gt;\n   &lt;coho:GroupBase&gt;West&lt;/coho:GroupBase&gt;\n   &lt;coho:ThingInfo&gt;\n      &lt;Number&gt;1&lt;/Number&gt;\n      &lt;Name&gt;Thing1&lt;/Name&gt;\n      &lt;Elmo&gt;\n         &lt;Glue&gt;element&lt;/Glue&gt;\n      &lt;/Elmo&gt;\n   &lt;/coho:ThingInfo&gt;\n&lt;/Group&gt;\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlSerializer_UnreferencedObject\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnreferencedObject</div>        \r\n          </div>\r\n    \r\n            <p>Occurs during deserialization of a SOAP-encoded XML stream, when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> encounters a recognized type that is not used or is unreferenced.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UnreferencedObject event only occurs when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, &quot;Simple Object Access Protocol (SOAP) 1.1&quot;.  </p>\n<p> Documents that conform to section 5 are in a special format. At the very least, such a document includes the main body of the SOAP message. However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document. Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition. To correlate the referencing element and the type definition, the type definition has an <code>id</code> attribute set to a unique string ID and the referencing element has an <code>href</code> attribute that references the same ID.  </p>\n<pre><code>&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; GroupNumber=&quot;ZDI=&quot; CreationDate=&quot;2002-05-02&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;  \n    &lt;PosInt xsi:type=&quot;xsd:nonNegativeInteger&quot;&gt;10000&lt;/PosInt&gt;  \n    &lt;GroupVehicle href=&quot;#id2&quot; /&gt;  \n  &lt;/Group&gt;  \n  &lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n</code></pre><p> The UnreferencedObject event occur when there is a type definition found in the document, but no parameter in the main body references it. When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventargs#System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedObject_\" data-linktype=\"relative-path\">UnreferencedObject</a> property of the <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventargs\" data-linktype=\"relative-path\">UnreferencedObjectEventArgs</a> class. The XML ID of the object is returned by the <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventargs#System_Xml_Serialization_UnreferencedObjectEventArgs_UnreferencedId_\" data-linktype=\"relative-path\">UnreferencedId</a> property.  </p>\n<p> The UnreferencedObject event should not be confused with the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> and <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownNode\" data-linktype=\"relative-path\">UnknownNode</a> events, which occur when there is no class member that corresponds to the XML node or element type.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds an <a class=\"xref\" href=\"system.xml.serialization.unreferencedobjecteventhandler\" data-linktype=\"relative-path\">UnreferencedObjectEventHandler</a> to an <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>. The event is handled by the <code>Serializer``_``UnreferencedObject</code> method. To run the example, cut and paste the following XML into a file named &quot;UnrefObj.xml&quot;.  </p>\n<pre><code>&lt;wrapper&gt;  \n  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;  \n   &lt;/Group&gt;  \n&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;  \n    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;  \n  &lt;/Vehicle&gt;  \n&lt;/wrapper&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"UnreferencedObject Event Example#1\">using System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.Xml.Schema;\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n[SoapInclude(typeof(Vehicle))]\npublic class Group\n{\n   public string GroupName;\n   public Vehicle GroupVehicle;\n}\n [SoapInclude(typeof(Vehicle))]\npublic class Vehicle\n{\n   public string licenseNumber;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;);\n   }\n   \n   public void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping myMapping = \n      (new SoapReflectionImporter().ImportTypeMapping(\n      typeof(Group)));\n      XmlSerializer mySerializer =  \n      new XmlSerializer(myMapping);\n \n      mySerializer.UnreferencedObject += \n      new UnreferencedObjectEventHandler\n      (Serializer_UnreferencedObject);\n\n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader reader= \n      new XmlTextReader(filename);\n      reader.ReadStartElement();\n\n      // Deserialize and cast the object.\n      Group myGroup; \n      myGroup = (Group) mySerializer.Deserialize(reader);\n      reader.ReadEndElement();\n      reader.Close();\n   }\n\n   private void Serializer_UnreferencedObject\n   (object sender, UnreferencedObjectEventArgs e){\n      Console.WriteLine(&quot;UnreferencedObject:&quot;);\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId);\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject);\n      Vehicle myVehicle = (Vehicle) e.UnreferencedObject;\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber);\n   }\n}\n\n// The file named &quot;UnrefObj.xml&quot; should contain this XML:\n\n// &lt;wrapper&gt;\n\n//  &lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n//n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n\n//&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n\n//&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n//xmlns:n1=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-cpp\" name=\"UnreferencedObject Event Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Text;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml::Schema;\n\nref class Vehicle;\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Vehicle\n{\npublic:\n   String^ licenseNumber;\n};\n\n\n// You must use the SoapIncludeAttribute to inform the XmlSerializer\n// that the Vehicle type should be recognized when deserializing.\n\n[SoapInclude(Vehicle::typeid)]\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n   Vehicle^ GroupVehicle;\n};\n\npublic ref class Run\n{\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      // Create an instance of the XmlSerializer class.\n      XmlTypeMapping^ myMapping = ((gcnew SoapReflectionImporter)-&gt;ImportTypeMapping( Group::typeid ));\n      XmlSerializer^ mySerializer = gcnew XmlSerializer( myMapping );\n      mySerializer-&gt;UnreferencedObject += gcnew UnreferencedObjectEventHandler( this, &amp;Run::Serializer_UnreferencedObject );\n      \n      // Reading the file requires an  XmlTextReader.\n      XmlTextReader^ reader = gcnew XmlTextReader( filename );\n      reader-&gt;ReadStartElement();\n      \n      // Deserialize and cast the object.\n      Group^ myGroup;\n      myGroup = dynamic_cast&lt;Group^&gt;(mySerializer-&gt;Deserialize( reader ));\n      reader-&gt;ReadEndElement();\n      reader-&gt;Close();\n   }\n\nprivate:\n   void Serializer_UnreferencedObject( Object^ /*sender*/, UnreferencedObjectEventArgs^ e )\n   {\n      Console::WriteLine( &quot;UnreferencedObject:&quot; );\n      Console::WriteLine( &quot;ID: {0}&quot;, e-&gt;UnreferencedId );\n      Console::WriteLine( &quot;UnreferencedObject: {0}&quot;, e-&gt;UnreferencedObject );\n      Vehicle^ myVehicle = dynamic_cast&lt;Vehicle^&gt;(e-&gt;UnreferencedObject);\n      Console::WriteLine( &quot;License: {0}&quot;, myVehicle-&gt;licenseNumber );\n   }\n};\n\nint main()\n{\n   Run^ test = gcnew Run;\n   test-&gt;DeserializeObject( &quot;UnrefObj.xml&quot; );\n}\n\n// The file named S&quot;UnrefObj.xml&quot; should contain this XML:\n// &lt;wrapper&gt;\n//  &lt;Group xmlns:xsi=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot; \n//xmlns:xsd=S&quot;http://www.w3.org/2001/XMLSchema&quot; id=S&quot;id1&quot; \n//n1:GroupName=S&quot;.NET&quot; xmlns:n1=S&quot;http://www.cpandl.com&quot;&gt;\n//   &lt;/Group&gt;\n//&lt;Vehicle id=S&quot;id2&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//   &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;ABCD&lt;/licenseNumber&gt;\n//   &lt;/Vehicle&gt;\n//&lt;Vehicle id=S&quot;id3&quot; n1:type=S&quot;Vehicle&quot; \n//xmlns:n1=S&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;\n//    &lt;licenseNumber xmlns:q1=S&quot;http://www.w3.org/2001/XMLSchema&quot; \n//n1:type=S&quot;q1:String*&quot;&gt;1234&lt;/licenseNumber&gt;\n//  &lt;/Vehicle&gt;\n//&lt;/wrapper&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"UnreferencedObject Event Example#1\">Imports System\nImports System.IO\nImports System.Text\nImports System.Xml\nImports System.Xml.Serialization\nImports System.Xml.Schema\n\n&#39; You must use the SoapIncludeAttribute to inform the XmlSerializer\n&#39; that the Vehicle type should be recognized when deserializing.\n&lt;SoapInclude(GetType(Vehicle))&gt; _\nPublic Class Group\n    Public GroupName As String \n   public GroupVehicle As Vehicle \nEnd Class\n\nPublic Class Vehicle\n   Public licenseNumber As String \nEnd Class\n\n \nPublic Class Run\n   Shared Sub Main()\n      Dim test As Run = new Run()\n      test.DeserializeObject(&quot;UnrefObj.xml&quot;)\n   End Sub\n   \n   Public Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class.\n      Dim myMapping As XmlTypeMapping = _\n      (new SoapReflectionImporter().ImportTypeMapping _\n      (GetType(Group)))\n      Dim mySerializer As XmlSerializer =  _\n      new XmlSerializer(myMapping)\n\n      AddHandler mySerializer.UnreferencedObject, _\n      AddressOf Serializer_UnreferencedObject\n\n      &#39; Reading the file requires an  XmlTextReader.\n      Dim reader As XmlTextReader = _\n      new XmlTextReader(filename)\n      reader.ReadStartElement()\n\n      &#39; Deserialize and cast the object.\n      Dim myGroup As Group  \n      myGroup = CType( mySerializer.Deserialize(reader), Group)\n      reader.ReadEndElement()\n      reader.Close()\n   End Sub\n   \n   Private Sub Serializer_UnreferencedObject _\n   (sender As object , e As UnreferencedObjectEventArgs)\n      Console.WriteLine(&quot;UnreferencedObject:&quot;)\n      Console.WriteLine(&quot;ID: &quot; + e.UnreferencedId)\n      Console.WriteLine(&quot;UnreferencedObject: &quot; + e.UnreferencedObject)\n      Dim myVehicle As Vehicle = CType(e.UnreferencedObject, Vehicle)\n      Console.WriteLine(&quot;License: &quot; + myVehicle.licenseNumber)\n       End Sub\n End Class\n \n&#39; The XML document should contain this information:\n\n&#39;&lt;wrapper&gt;\n\n&#39;  &lt;Group xmlns:xsi=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot; \n&#39;xmlns:xsd=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; id=&quot;id1&quot; \n&#39;n1:GroupName=&quot;.NET&quot; xmlns:n1=&quot;http:&#39;www.cpandl.com&quot;&gt;\n&#39;   &lt;/Group&gt;\n\n&#39;&lt;Vehicle id=&quot;id2&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;ABCD&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;Vehicle id=&quot;id3&quot; n1:type=&quot;Vehicle&quot; \n&#39;xmlns:n1=&quot;http:&#39;www.w3.org/2001/XMLSchema-instance&quot;&gt;\n&#39;    &lt;licenseNumber xmlns:q1=&quot;http:&#39;www.w3.org/2001/XMLSchema&quot; \n&#39;n1:type=&quot;q1:string&quot;&gt;1234&lt;/licenseNumber&gt;\n&#39;  &lt;/Vehicle&gt;\n\n&#39;&lt;/wrapper&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlSerializer.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlSerializer.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.CanDeserialize\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.CreateReader\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.CreateWriter\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.Deserialize\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.FromMappings\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.FromTypes\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.GenerateSerializer\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.Serialize\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.UnknownAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.add_UnknownAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.remove_UnknownAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.UnknownElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.add_UnknownElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.remove_UnknownElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.UnknownNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.add_UnknownNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.remove_UnknownNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.UnreferencedObject\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.add_UnreferencedObject\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlSerializer.remove_UnreferencedObject\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ab973529-a562-9ffa-5f09-2575339a65da\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Serializes and deserializes objects into and from XML documents. The XmlSerializer enables you to control how objects are encoded into XML.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.XmlSerializer\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlSerializer.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlSerializer.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.XmlSerializer","System.Xml.Serialization.XmlSerializer..ctor","System.Xml.Serialization.XmlSerializer.CanDeserialize","System.Xml.Serialization.XmlSerializer.CreateReader","System.Xml.Serialization.XmlSerializer.CreateWriter","System.Xml.Serialization.XmlSerializer.Deserialize","System.Xml.Serialization.XmlSerializer.FromMappings","System.Xml.Serialization.XmlSerializer.FromTypes","System.Xml.Serialization.XmlSerializer.GenerateSerializer","System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName","System.Xml.Serialization.XmlSerializer.Serialize","System.Xml.Serialization.XmlSerializer.UnknownAttribute","System.Xml.Serialization.XmlSerializer.add_UnknownAttribute","System.Xml.Serialization.XmlSerializer.remove_UnknownAttribute","System.Xml.Serialization.XmlSerializer.UnknownElement","System.Xml.Serialization.XmlSerializer.add_UnknownElement","System.Xml.Serialization.XmlSerializer.remove_UnknownElement","System.Xml.Serialization.XmlSerializer.UnknownNode","System.Xml.Serialization.XmlSerializer.add_UnknownNode","System.Xml.Serialization.XmlSerializer.remove_UnknownNode","System.Xml.Serialization.XmlSerializer.UnreferencedObject","System.Xml.Serialization.XmlSerializer.add_UnreferencedObject","System.Xml.Serialization.XmlSerializer.remove_UnreferencedObject"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.XmlSerializer","System::Xml::Serialization::XmlSerializer","System.Xml.Serialization.XmlSerializer.#ctor","System::Xml::Serialization::XmlSerializer::#ctor","System.Xml.Serialization.XmlSerializer.CanDeserialize","System::Xml::Serialization::XmlSerializer::CanDeserialize","System.Xml.Serialization.XmlSerializer.CreateReader","System::Xml::Serialization::XmlSerializer::CreateReader","System.Xml.Serialization.XmlSerializer.CreateWriter","System::Xml::Serialization::XmlSerializer::CreateWriter","System.Xml.Serialization.XmlSerializer.Deserialize","System::Xml::Serialization::XmlSerializer::Deserialize","System.Xml.Serialization.XmlSerializer.FromMappings","System::Xml::Serialization::XmlSerializer::FromMappings","System.Xml.Serialization.XmlSerializer.FromTypes","System::Xml::Serialization::XmlSerializer::FromTypes","System.Xml.Serialization.XmlSerializer.GenerateSerializer","System::Xml::Serialization::XmlSerializer::GenerateSerializer","System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName","System::Xml::Serialization::XmlSerializer::GetXmlSerializerAssemblyName","System.Xml.Serialization.XmlSerializer.Serialize","System::Xml::Serialization::XmlSerializer::Serialize","System.Xml.Serialization.XmlSerializer.UnknownAttribute","System::Xml::Serialization::XmlSerializer::UnknownAttribute","System.Xml.Serialization.XmlSerializer.UnknownElement","System::Xml::Serialization::XmlSerializer::UnknownElement","System.Xml.Serialization.XmlSerializer.UnknownNode","System::Xml::Serialization::XmlSerializer::UnknownNode","System.Xml.Serialization.XmlSerializer.UnreferencedObject","System::Xml::Serialization::XmlSerializer::UnreferencedObject"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ab973529-a562-9ffa-5f09-2575339a65da","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/XmlSerializer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlSerializer class | Microsoft Docs","_op_ogTitle":"XmlSerializer class","description":"Serializes and deserializes objects into and from XML documents. The XmlSerializer enables you to control how objects are encoded into XML.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.XmlSerializer","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlserializer","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlserializer","fileRelativePath":"System.Xml.Serialization.XmlSerializer.html"},"themesRelativePathToOutputRoot":"_themes/"}