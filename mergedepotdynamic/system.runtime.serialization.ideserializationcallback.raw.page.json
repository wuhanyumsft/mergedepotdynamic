{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_IDeserializationCallback\">\r\n      <span class=\"lang-csharp\">IDeserializationCallback</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.Xml.Serialization.XmlSerializer).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IDeserializationCallback</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs when the entire object graph has been deserialized.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Runs when the entire object graph has been deserialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that initiated the callback. The functionality for this parameter is not currently implemented.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"IDeserializationCallback Interface Example#1\">Imports System\nImports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\n\n&#39; This class is serializable and will have its OnDeserialization method\n&#39; called after each instance of this class is deserialized.\n&lt;Serializable()&gt; Class Circle\n   Implements IDeserializationCallback\n   Private m_radius As Double\n\n   &#39; To reduce the size of the serialization stream, the field below is \n   &#39; not serialized. This field is calculated when an object is constructed\n   &#39; or after an instance of this class is deserialized.\n   &lt;NonSerialized()&gt; Public m_area As Double\n\n   Public Sub New(ByVal radius As Double)\n      m_radius = radius\n      m_area = Math.PI * radius * radius\n   End Sub\n\n   Private Sub OnDeserialization(ByVal sender As Object) _\n      Implements IDeserializationCallback.OnDeserialization\n      &#39; After being deserialized, initialize the m_area field \n      &#39; using the deserialized m_radius value.\n      m_area = Math.PI * m_radius * m_radius\n   End Sub\n\n   Public Overrides Function ToString() As String\n      Return String.Format(&quot;radius={0}, area={1}&quot;, m_radius, m_area)\n   End Function\nEnd Class\n\n\nClass Class1\n   &lt;STAThread()&gt; Shared Sub Main()\n      Serialize()\n      Deserialize()\n   End Sub\n\n   Shared Sub Serialize()\n      Dim c As New Circle(10)\n      Console.WriteLine(&quot;Object being serialized: &quot; + c.ToString())\n\n      &#39; To serialize the Circle, you must first open a stream for \n      &#39; writing. Use a file stream here.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n      &#39; Construct a BinaryFormatter and use it \n      &#39; to serialize the data to the stream.\n      Dim formatter As New BinaryFormatter\n      Try\n         formatter.Serialize(fs, c)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n   End Sub\n\n\n   Shared Sub Deserialize()\n      &#39; Declare the Circle reference\n      Dim c As Circle = Nothing\n\n      &#39; Open the file containing the data that you want to deserialize.\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Open)\n      Try\n         Dim formatter As New BinaryFormatter\n\n         &#39; Deserialize the Circle from the file and \n         &#39; assign the reference to the local variable.\n         c = CType(formatter.Deserialize(fs), Circle)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n\n      &#39; To prove that the Circle deserialized correctly, display its area.\n      Console.WriteLine(&quot;Object being deserialized: &quot; + c.ToString())\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IDeserializationCallback Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\n// This class is serializable and will have its OnDeserialization method\n// called after each instance of this class is deserialized.\n\n[Serializable]\nref class Circle: public IDeserializationCallback\n{\nprivate:\n   Double m_radius;\n\npublic:\n\n   // To reduce the size of the serialization stream, the field below is \n   // not serialized. This field is calculated when an object is constructed\n   // or after an instance of this class is deserialized.\n\n   [NonSerialized]\n   Double m_area;\n   Circle( Double radius )\n   {\n      m_radius = radius;\n      m_area = Math::PI * radius * radius;\n   }\n\n   virtual void OnDeserialization( Object^ /*sender*/ )\n   {\n      // After being deserialized, initialize the m_area field \n      // using the deserialized m_radius value.\n      m_area = Math::PI * m_radius * m_radius;\n   }\n\n   virtual String^ ToString() override\n   {\n      return String::Format( &quot;radius= {0}, area= {1}&quot;, m_radius, m_area );\n   }\n};\n\nvoid Serialize()\n{\n   Circle^ c = gcnew Circle( 10 );\n   Console::WriteLine( &quot;Object being serialized: {0}&quot;, c );\n\n   // To serialize the Circle, you must first open a stream for \n   // writing. We will use a file stream here.\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n\n   // Construct a BinaryFormatter and use it to serialize the data to the stream.\n   BinaryFormatter^ formatter = gcnew BinaryFormatter;\n   try\n   {\n      formatter-&gt;Serialize( fs, c );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n}\n\nvoid Deserialize()\n{\n   // Declare the Circle reference.\n   Circle^ c = nullptr;\n\n   // Open the file containing the data that we want to deserialize.\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Open );\n   try\n   {\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Deserialize the Circle from the file and \n      // assign the reference to our local variable.\n      c = dynamic_cast&lt;Circle^&gt;(formatter-&gt;Deserialize( fs ));\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to deserialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   // To prove that the Circle deserialized correctly, display its area.\n   Console::WriteLine( &quot;Object being deserialized: {0}&quot;, c );\n}\n\n[STAThread]\nint main()\n{\n   Serialize();\n   Deserialize();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"IDeserializationCallback Interface Example#1\">using System;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\n\n// This class is serializable and will have its OnDeserialization method\n// called after each instance of this class is deserialized.\n[Serializable]\nclass Circle : IDeserializationCallback \n{\n    Double m_radius;\n\n    // To reduce the size of the serialization stream, the field below is \n    // not serialized. This field is calculated when an object is constructed\n    // or after an instance of this class is deserialized.\n    [NonSerialized] public Double m_area;\n\n    public Circle(Double radius) \n    {\n        m_radius = radius;\n        m_area = Math.PI * radius * radius;\n    }\n\n    void IDeserializationCallback.OnDeserialization(Object sender) \n    {\n        // After being deserialized, initialize the m_area field \n        // using the deserialized m_radius value.\n        m_area = Math.PI * m_radius * m_radius;\n    }\n\n    public override String ToString() \n    {\n        return String.Format(&quot;radius={0}, area={1}&quot;, m_radius, m_area);\n    }\n}\n\n\nclass Class1 \n{\n    [STAThread]\n    static void Main(string[] args) \n    {\n        Serialize();\n        Deserialize();\n    }\n\n    static void Serialize() \n    {\n        Circle c = new Circle(10);\n        Console.WriteLine(&quot;Object being serialized: &quot; + c.ToString());\n\n        // To serialize the Circle, you must first open a stream for \n        // writing. Use a file stream here.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        // Construct a BinaryFormatter and use it \n        // to serialize the data to the stream.\n        BinaryFormatter formatter = new BinaryFormatter();\n        try \n        {\n            formatter.Serialize(fs, c);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n\n   \n    static void Deserialize() \n    {\n        // Declare the Circle reference.\n        Circle c = null;\n\n        // Open the file containing the data that you want to deserialize.\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Open);\n        try \n        {\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Deserialize the Circle from the file and \n            // assign the reference to the local variable.\n            c = (Circle) formatter.Deserialize(fs);\n        }\n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to deserialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n\n        // To prove that the Circle deserialized correctly, display its area.\n        Console.WriteLine(&quot;Object being deserialized: &quot; + c.ToString());\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IDeserializationCallback.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IDeserializationCallback.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDeserializationCallback\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"60dfdb18-95e0-93cb-9b52-8d8130e39ea0\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Runtime.Serialization\\IDeserializationCallback.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.Xâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.IDeserializationCallback\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.IDeserializationCallback.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.IDeserializationCallback.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.IDeserializationCallback","System.Runtime.Serialization.IDeserializationCallback.OnDeserialization"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.IDeserializationCallback","System::Runtime::Serialization::IDeserializationCallback","System.Runtime.Serialization.IDeserializationCallback.OnDeserialization","System::Runtime::Serialization::IDeserializationCallback::OnDeserialization"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"60dfdb18-95e0-93cb-9b52-8d8130e39ea0","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Runtime.Serialization\\IDeserializationCallback.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/IDeserializationCallback.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDeserializationCallback interface | Microsoft Docs","_op_ogTitle":"IDeserializationCallback interface","description":"Indicates that a class is to be notified when deserialization of the entire object graph has been completed. Note that this interface is not called when deserializing with the XmlSerializer (System.Xâ€¦","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.IDeserializationCallback","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.ideserializationcallback","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.ideserializationcallback","fileRelativePath":"System.Runtime.Serialization.IDeserializationCallback.html"},"themesRelativePathToOutputRoot":"_themes/"}