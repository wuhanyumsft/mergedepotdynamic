{"content":"    \r\n    <h1 id=\"System_AddIn_Hosting_AddInToken\">\r\n      <span class=\"lang-csharp\">AddInToken</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an add-in that can be activated.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AddInToken</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An AddInToken object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.  </p>\n<p> Use the <a class=\"xref\" href=\"system.addin.hosting.addinstore#System_AddIn_Hosting_AddInStore_FindAddIns_\" data-linktype=\"relative-path\">FindAddIns</a> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <a class=\"xref\" href=\"system.addin.hosting.addinstore#System_AddIn_Hosting_AddInStore_FindAddIn_\" data-linktype=\"relative-path\">FindAddIn</a> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.  </p>\n<p> To activate an add-in, pass the token that represents the desired add-in to the &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method. This method returns an instance of the type that represents the host view of the add-in.  </p>\n<p> The &lt;xref:System.AddIn.Hosting.AddInToken.Activate%2A&gt; method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.  </p>\n<p> You can use Language-Integrated Query (LINQ) extension methods to perform queries on an AddInToken, treating the token as a collection of <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a> structures.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_AddInFullName\" data-linktype=\"self-bookmark\">AddInFullName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the namespace and type of the add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_AssemblyName\" data-linktype=\"self-bookmark\">AssemblyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the assembly that contains the add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Description\" data-linktype=\"self-bookmark\">Description</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the description of the add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_EnableDirectConnect\" data-linktype=\"self-bookmark\">EnableDirectConnect</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Publisher\" data-linktype=\"self-bookmark\">Publisher</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the publisher of the add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_QualificationData\" data-linktype=\"self-bookmark\">QualificationData</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary of data about the segments in the pipeline associated with the current token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the version of the add-in, as specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInEnvironment_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AddInEnvironment)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in in the environment of another add-in.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AddInSecurityLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in with a specified trust level in a new application domain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AppDomain_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AppDomain)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in in an existing application domain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in with a specified permission set in a new application domain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInProcess_System_AddIn_Hosting_AddInSecurityLevel_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AddInProcess,AddInSecurityLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in in an external process, in a new application domain, and with a specified trust level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInProcess_System_Security_PermissionSet_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AddInProcess,PermissionSet)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in in an external process, in a new application domain, and with a specified permission set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_System_String_\" data-linktype=\"self-bookmark\">Activate&lt;T&gt;(AddInSecurityLevel,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates an add-in in a new application domain with a specified name and trust level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified object is equal to the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serves as a hash function for a token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that represents the token.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Hosting_AddInToken_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_AddInFullName\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_AddInFullName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddInFullName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the namespace and type of the add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AddInFullName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The type of the add-in, fully qualified by its namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property obtains the full name of the add-in as it would be returned by the <a class=\"xref\" href=\"system.type#System_Type_FullName_\" data-linktype=\"relative-path\">FullName</a> property. This value is always available on an instance of an <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Name_\" data-linktype=\"relative-path\">Name</a>, AddInFullName, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Description_\" data-linktype=\"relative-path\">Description</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Publisher_\" data-linktype=\"relative-path\">Publisher</a>, and <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Version_\" data-linktype=\"relative-path\">Version</a> properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a>class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_AssemblyName\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_AssemblyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the assembly that contains the add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.AssemblyName AssemblyName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assemblyname\" data-linktype=\"relative-path\">AssemblyName</a></div>\r\n                  </div>\r\n                  <p>The name of the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <a class=\"xref\" href=\"system.reflection.assembly#System_Reflection_Assembly_FullName_\" data-linktype=\"relative-path\">FullName</a> property. This value is always available on an instance of an <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Name_\" data-linktype=\"relative-path\">Name</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AddInFullName_\" data-linktype=\"relative-path\">AddInFullName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Description_\" data-linktype=\"relative-path\">Description</a>, AssemblyName, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Publisher_\" data-linktype=\"relative-path\">Publisher</a>, and <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Version_\" data-linktype=\"relative-path\">Version</a> properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Description\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Description_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Description</div>        \r\n          </div>\r\n    \r\n            <p>Gets the description of the add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Description { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A description of the add-in, or <code>null</code> if the description is not specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property obtains the description of the add-in as specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Name_\" data-linktype=\"relative-path\">Name</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AddInFullName_\" data-linktype=\"relative-path\">AddInFullName</a>, Description, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Publisher_\" data-linktype=\"relative-path\">Publisher</a>, and <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Version_\" data-linktype=\"relative-path\">Version</a> properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_EnableDirectConnect\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_EnableDirectConnect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableDirectConnect</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool EnableDirectConnect { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the add-in should be directly connected to the host; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following conditions must exist for the direct connection to occur:  </p>\n<ul>\n<li><p>This property must be set to <code>true</code>.  </p>\n</li>\n<li><p>The add-in must be in the same application domain as the host.  </p>\n</li>\n<li><p>The add-in view and the host view of the add-in must be the same type.  </p>\n</li>\n<li><p>All the segments of the pipeline must be available.  </p>\n<p>When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Name\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property obtains the name of the add-in as specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute. This value is always available on an instance of an <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the Name, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AddInFullName_\" data-linktype=\"relative-path\">AddInFullName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Description_\" data-linktype=\"relative-path\">Description</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Publisher_\" data-linktype=\"relative-path\">Publisher</a>, and <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Version_\" data-linktype=\"relative-path\">Version</a> properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Publisher\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Publisher_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Publisher</div>        \r\n          </div>\r\n    \r\n            <p>Gets the publisher of the add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Publisher { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The publisher of the add-in, or <code>null</code> if the publisher is not specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property obtains the publisher of the add-in as specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Name_\" data-linktype=\"relative-path\">Name</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AddInFullName_\" data-linktype=\"relative-path\">AddInFullName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Description_\" data-linktype=\"relative-path\">Description</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>, Publisher, and <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Version_\" data-linktype=\"relative-path\">Version</a> properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_QualificationData\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_QualificationData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">QualificationData</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary of data about the segments in the pipeline associated with the current token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary</a>&lt;<a class=\"xref\" href=\"system.addin.hosting.addinsegmenttype\" data-linktype=\"relative-path\">AddInSegmentType</a>,<a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;&gt;</div>\r\n                  </div>\r\n                  <p>A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to obtain data that has been applied to pipeline segments with the <a class=\"xref\" href=\"system.addin.pipeline.qualificationdataattribute\" data-linktype=\"relative-path\">QualificationDataAttribute</a> attribute. You can use this data to identify and work with the types that compose your pipelines.  </p>\n<p> This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <a class=\"xref\" href=\"system.addin.hosting.addinsegmenttype\" data-linktype=\"relative-path\">AddInSegmentType</a> value for a segment in the pipeline. Each value is a generic <a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary&lt;TKey,TValue&gt;</a>of strings with string keys that contains the segment&#39;s qualification data.  </p>\n<p> The keys and values of these inner dictionaries are the names and values specified in the <a class=\"xref\" href=\"system.addin.pipeline.qualificationdataattribute\" data-linktype=\"relative-path\">QualificationDataAttribute</a> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <a class=\"xref\" href=\"system.addin.hosting.addinsegmenttype\" data-linktype=\"relative-path\">System.AddIn.Hosting.AddInSegmentType</a> is always empty.  </p>\n</div>\n<p> Alternatively, you can obtain qualification data by enumerating an <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> as if it were a collection of <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a> structures, using a <code>foreach</code> statement (<code>For Each</code> in Visual Basic, <code>for each</code> in Visual C++). See the example provided for the <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a> structure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to examine an add-in&#39;s qualification data.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#11\">&#39; Use qualification data to control\n&#39; how an add-in should be activated.\n\nIf selectedToken.QualificationData(AddInSegmentType.AddIn)(&quot;Isolation&quot;).Equals(&quot;NewProcess&quot;) Then\n    &#39; Create an external process.\n    Dim external As AddInProcess = New AddInProcess\n\n    &#39; Activate an add-in in an automatically generated\n    &#39; application domain with a full trust security level.\n    Dim CalcAddin5 As Calculator = _\n        selectedToken.Activate(Of Calculator)(external, _\n            AddInSecurityLevel.FullTrust)\n    Console.WriteLine(&quot;Add-in activated per qualification data.&quot;)\nElse\n    Console.WriteLine(&quot;This add-in is not designated to be activated in a new process.&quot;)\nEnd If\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#11\">// Use qualification data to control \n// how an add-in should be activated.\n\nif (selectedToken.QualificationData[AddInSegmentType.AddIn][&quot;Isolation&quot;].Equals(&quot;NewProcess&quot;))\n{\n\t// Create an external process.\n\tAddInProcess external = new AddInProcess();\n\n    // Activate an add-in in the new process\n    // with the full trust security level.\n    Calculator CalcAddIn5 =\n\t\tselectedToken.Activate&lt;Calculator&gt;(external,\n\t\tAddInSecurityLevel.FullTrust);\n\tConsole.WriteLine(&quot;Add-in activated per qualification data.&quot;);\n}\nelse\n\tConsole.WriteLine(&quot;This add-in is not designated to be activated in a new process.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Version\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>Gets the version of the add-in, as specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Version { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The version of the add-in, or <code>null</code> if the version number is not specified in the <a class=\"xref\" href=\"system.addin.addinattribute\" data-linktype=\"relative-path\">AddInAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The version number is a free-form string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the value of the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Name_\" data-linktype=\"relative-path\">Name</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AddInFullName_\" data-linktype=\"relative-path\">AddInFullName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Description_\" data-linktype=\"relative-path\">Description</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>, <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Publisher_\" data-linktype=\"relative-path\">Publisher</a>, and Version properties to the console. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#7\">&#39; Show the token properties for each token \n&#39; in the AddInToken collection (tokens),\n&#39; preceded by the add-in number in [] brackets.\n\nDim tokNumber As Integer = 1\nFor Each tok As AddInToken In tokens\n    Console.WriteLine(vbTab &amp; &quot;{0}: {1} - {2}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{3}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{4}&quot; &amp; _\n            vbLf &amp; vbTab &amp; &quot;{5} - {6}&quot;, _\n            tokNumber.ToString, tok.Name, _\n            tok.AddInFullName, tok.AssemblyName, _\n            tok.Description, tok.Version, tok.Publisher)\n    tokNumber = tokNumber + 1\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#7\">// Show the token properties for each token \n// in the AddInToken collection (tokens),\n// preceded by the add-in number in [] brackets.\n   int tokNumber = 1;\nforeach (AddInToken tok in tokens)\n{\n\tConsole.WriteLine(String.Format(&quot;&nbsp;&nbsp;&nbsp;&nbsp;[{0}]: {1} - {2}<br>&nbsp;&nbsp;&nbsp;&nbsp;{3}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {4}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {5} - {6}&quot;,\n\t\ttokNumber.ToString(), \n\t\ttok.Name,\n\t\ttok.AddInFullName,\n\t\ttok.AssemblyName,\n\t\ttok.Description,\n\t\ttok.Version,\n\t\ttok.Publisher));\n       tokNumber++;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInEnvironment_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AddInEnvironment)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in in the environment of another add-in.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>environment</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinenvironment\" data-linktype=\"relative-path\">AddInEnvironment</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application domain and process that contains the original add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overload activates the add-in in the same application domain and process as the add-in from which <code>environment</code> was obtained.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example activates one add-in in an automatically generated application domain with a specified security level. It then activates a second add-in in the same application domain and process as the first by using the first add-in&#39;s <a class=\"xref\" href=\"system.addin.hosting.addinenvironment\" data-linktype=\"relative-path\">AddInEnvironment</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#8\">&#39; Get the AddInController of a \n&#39; currently activated add-in (CalcAddIn).\nDim aiController As AddInController = AddInController.GetAddInController(CalcAddIn)\n\n&#39; Select another token.\nDim selectedToken2 As AddInToken = ChooseAddIn(tokens)\n\n&#39; Activate a second add-in, CalcAddIn2, in the same\n&#39; appliation domain and process as the first add-in by passing\n&#39; the first add-in&#39;s AddInEnvironment object to the Activate method.\n\nDim aiEnvironment As AddInEnvironment = aiController.AddInEnvironment\nDim CalcAddIn2 As Calculator = _\n    selectedToken2.Activate(Of Calculator)(aiEnvironment)\n\n&#39; Get the AddInController for the second add-in to compare environments.\nDim aiController2 As AddInController = AddInController.GetAddInController(CalcAddIn2)\n\nConsole.WriteLine(&quot;Add-ins in same application domain: {0}&quot;, _\n    aiController.AppDomain.Equals(aiController2.AppDomain))\nConsole.WriteLine(&quot;Add-ins in same process: {0}&quot;, _\n    aiEnvironment.Process.Equals(aiController2.AddInEnvironment.Process))\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#8\">// Get the AddInController of a \n// currently actived add-in (CalcAddIn).\nAddInController aiController = AddInController.GetAddInController(CalcAddIn);\n\n// Select another token.\nAddInToken selectedToken2 = ChooseAddIn(tokens);\n\n// Activate a second add-in, CalcAddIn2, in the same\n// appliation domain and process as the first add-in by passing\n// the first add-in&#39;s AddInEnvironment object to the Activate method.\nAddInEnvironment aiEnvironment = aiController.AddInEnvironment;\nCalculator CalcAddIn2 =\n\tselectedToken2.Activate&lt;Calculator&gt;(aiEnvironment);\n\n// Get the AddInController for the second add-in to compare environments.\nAddInController aiController2 = AddInController.GetAddInController(CalcAddIn2);\nConsole.WriteLine(&quot;Add-ins in same application domain: {0}&quot;, aiController.AppDomain.Equals(aiController2.AppDomain));\nConsole.WriteLine(&quot;Add-ins in same process: {0}&quot;, aiEnvironment.Process.Equals(aiController2.AddInEnvironment.Process));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AddInSecurityLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in with a specified trust level in a new application domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>trustLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinsecuritylevel\" data-linktype=\"relative-path\">AddInSecurityLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the trust level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overload loads the add-in into an automatically generated application domain. If you want to specify a name for the new application domain, use the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_System_String_\" data-linktype=\"relative-path\">Activate&lt;T&gt;(AddInSecurityLevel,String)</a> overload.  </p>\n<p> This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file [addinassemblyname].dll.config and, if found, sets it to be the configuration file for the new application domain.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to activate an add-in, identified by the chosen token, in an automatically generated application domain with a specified security level.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#5\">&#39;Ask the user which add-in they would like to use.\nDim selectedToken As AddInToken = ChooseAddIn(tokens)\n&#39;Activate the selected AddInToken in a new\n&#39;application domain with the Internet trust level.\nDim CalcAddIn As Calculator = selectedToken.Activate(Of Calculator)(AddInSecurityLevel.Internet)\n&#39;Run the add-in using a custom method.\nRunCalculator(CalcAddIn)\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#5\">//Ask the user which add-in they would like to use.\nAddInToken selectedToken = ChooseAddIn(tokens);\n\n//Activate the selected AddInToken in a new\n//application domain with the Internet trust level.\nCalculator CalcAddIn = selectedToken.Activate&lt;Calculator&gt;(AddInSecurityLevel.Internet);\n            \n//Run the add-in using a custom method.\nRunCalculator(CalcAddIn);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AppDomain_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AppDomain)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in in an existing application domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (AppDomain target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The application domain that the add-in should be activated in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>Full-trust permission is demanded. A caller in the call chain does not have sufficient permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To activate an add-in in an automatically generated application domain, use the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_\" data-linktype=\"relative-path\">Activate&lt;T&gt;(AddInSecurityLevel)</a> overload to generate a new application domain with a specified security level or the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_System_String_\" data-linktype=\"relative-path\">Activate&lt;T&gt;(AddInSecurityLevel,String)</a> overload to include a friendly name for the application domain.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example activates an add-in in an application domain that is being used by another add-in. The code for the first add-in is provided in the <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#9\">&#39; Get the application domain\n&#39; of an existing add-in (CalcAddIn).\n\nDim aiCtrl As AddInController = AddInController.GetAddInController(CalcAddIn)\nDim AddInAppDom As AppDomain = aiCtrl.AppDomain\n\n&#39; Activate another add-in in the same appliation domain.\nDim CalcAddIn3 As Calculator = selectedToken2.Activate(Of Calculator)(AddInAppDom)\n\n&#39; Show that the CalcAddIn3 was loaded\n&#39; into CalcCaddIn&#39;s application domain.\nDim aic As AddInController = AddInController.GetAddInController(CalcAddIn3)\nConsole.WriteLine(&quot;Add-in loaded into existing application domain: {0}&quot;, _\n aic.AppDomain.Equals(AddInAppDom))\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#9\">// Get the application domain\n// of an existing add-in (CalcAddIn).\nAddInController aiCtrl = AddInController.GetAddInController(CalcAddIn);\nAppDomain AddInAppDom = aiCtrl.AppDomain;\n\n// Activate another add-in in the same application domain.\nCalculator CalcAddIn3 =\n\tselectedToken2.Activate&lt;Calculator&gt;(AddInAppDom);\n\n// Show that CalcAddIn3 was loaded\n// into CalcAddIn&#39;s application domain.\nAddInController aic = AddInController.GetAddInController(CalcAddIn3);\nConsole.WriteLine(&quot;Add-in loaded into existing application domain: {0}&quot;,\n\taic.AppDomain.Equals(AddInAppDom));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in with a specified permission set in a new application domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>permissions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The permissions granted for the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>permissions</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overload loads the add-in into an automatically generated application domain. It sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file <code>[addinassemblyname].dll.config</code> and, if found, sets it to be the configuration file for the new application domain.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInProcess_System_AddIn_Hosting_AddInSecurityLevel_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AddInProcess,AddInSecurityLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in in an external process, in a new application domain, and with a specified trust level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>process</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinprocess\" data-linktype=\"relative-path\">AddInProcess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The external process in which to activate the add-in.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinsecuritylevel\" data-linktype=\"relative-path\">AddInSecurityLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the trust level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file <code>[addinassemblyname].dll.config</code> and, if found, sets it to be the configuration file for the new application domain.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new process and activates an add-in in that process with a full trust security level.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#10\">&#39; Create an external process.\nDim pExternal As New AddInProcess()\n\n&#39; Activate an add-in in the external process\n&#39; with a full trust security level.\nDim CalcAddIn4 As Calculator = _\n    selectedToken.Activate(Of Calculator)(pExternal, _\n        AddInSecurityLevel.FullTrust)\n\n&#39; Show that the add-in is an an external process\n&#39; by verifying that it is not in the current (host&#39;s) process.\nDim AddinCtl As AddInController = AddInController.GetAddInController(CalcAddIn4)\nConsole.WriteLine(&quot;Add-in in host&#39;s process: {0}&quot;, _\n AddinCtl.AddInEnvironment.Process.IsCurrentProcess)\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#10\">// Create an external process.\nAddInProcess pExternal = new AddInProcess();\n\n// Activate an add-in in the external process\n// with a full trust security level.\nCalculator CalcAddIn4 =\n\tselectedToken.Activate&lt;Calculator&gt;(pExternal,\n\tAddInSecurityLevel.FullTrust);\n\n// Show that the add-in is an an external process\n// by verifying that it is not in the current (host&#39;s) process.\nAddInController AddinCtl = AddInController.GetAddInController(CalcAddIn4);\nConsole.WriteLine(&quot;Add-in in host&#39;s process: {0}&quot;,\n\tAddinCtl.AddInEnvironment.Process.IsCurrentProcess);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInProcess_System_Security_PermissionSet_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AddInProcess,PermissionSet)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in in an external process, in a new application domain, and with a specified permission set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>process</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinprocess\" data-linktype=\"relative-path\">AddInProcess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The external process in which to activate the add-in.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>permissionSet</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissionset\" data-linktype=\"relative-path\">PermissionSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The required permission set granted for the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file <code>[addinassemblyname].dll.config</code> and, if found, sets it to be the configuration file for the new application domain.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_System_String_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Activate_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate&lt;T&gt;(AddInSecurityLevel,String)</div>        \r\n          </div>\r\n    \r\n            <p>Activates an add-in in a new application domain with a specified name and trust level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>trustLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.hosting.addinsecuritylevel\" data-linktype=\"relative-path\">AddInSecurityLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the trust level.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>appDomainName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The friendly name to assign to the new application domain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The host view of the add-in.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you do not need to specify an application domain name, use the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_Activate__1_System_AddIn_Hosting_AddInSecurityLevel_\" data-linktype=\"relative-path\">Activate&lt;T&gt;(AddInSecurityLevel)</a> overload.  </p>\n<p> This method sets the base directory for the application domain to be the location of the add-in assembly. It also looks for the configuration file <code>[addinassemblyname].dll.config</code> and, if found, sets it to be the configuration file for the new application domain.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified object is equal to the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified object and the current instance are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_GetEnumerator\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator</a>&lt;<a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a>&gt;</div>\r\n                  </div>\r\n                  <p>An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to treat a token as if it were a collection of qualification data items, for example, in a <code>foreach</code> statement (<code>For Each</code> in Visual Basic, <code>for each</code> in Visual C++).  </p>\n<p> Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a> structure that identifies the pipeline segment and contains a name/value pair from a <a class=\"xref\" href=\"system.addin.pipeline.qualificationdataattribute\" data-linktype=\"relative-path\">QualificationDataAttribute</a> attribute applied to that segment.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem#System_AddIn_Hosting_QualificationDataItem_Segment_\" data-linktype=\"relative-path\">Segment</a> property is <a class=\"xref\" href=\"system.addin.hosting.addinsegmenttype\" data-linktype=\"relative-path\">System.AddIn.Hosting.AddInSegmentType</a>.  </p>\n</div>\n<p> Alternatively, you can use the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_QualificationData_\" data-linktype=\"relative-path\">QualificationData</a> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example lists the qualification data for the pipeline segments associated with each <a class=\"xref\" href=\"system.addin.hosting.addintoken\" data-linktype=\"relative-path\">AddInToken</a> in a collection of tokens.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInP3Host#12\">&#39; Show the qualification data for each\n&#39; token in an AddInToken collection.\nFor Each token As AddInToken In tokens\n    For Each qdi As QualificationDataItem In token\n        Console.WriteLine(&quot;{0} {1}<br>&nbsp;&nbsp;&nbsp;&nbsp; QD Name: {2}, QD Value: {3}&quot;, _\n            token.Name, qdi.Segment, qdi.Name, qdi.Value)\n    Next\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInP3Host#12\">// Show the qualification data for each\n// token in an AddInToken collection.\nforeach (AddInToken token in tokens)\n{\n    foreach (QualificationDataItem qdi in token)\n    {\n        Console.WriteLine(&quot;{0} {1}<br>&nbsp;&nbsp;&nbsp;&nbsp; QD Name: {2}, QD Value: {3}&quot;,\n            token.Name,\n            qdi.Segment, \n            qdi.Name, \n            qdi.Value);\n    }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_GetHashCode\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Serves as a hash function for a token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the current token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_ToString\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that represents the token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Hosting_AddInToken_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_AddIn_Hosting_AddInToken_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator for the qualification data of the pipeline segments that are associated with this token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows a token to be treated like a collection of qualification data items, for example in a <code>foreach</code> statement (<code>For Each</code> in Visual Basic, <code>for each</code> in Visual C++).  </p>\n<p> Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem\" data-linktype=\"relative-path\">QualificationDataItem</a> structure that identifies the pipeline segment and contains the name/value pair from a <a class=\"xref\" href=\"system.addin.pipeline.qualificationdataattribute\" data-linktype=\"relative-path\">QualificationDataAttribute</a> attribute applied to that segment.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <a class=\"xref\" href=\"system.addin.hosting.qualificationdataitem#System_AddIn_Hosting_QualificationDataItem_Segment_\" data-linktype=\"relative-path\">Segment</a> property is <a class=\"xref\" href=\"system.addin.hosting.addinsegmenttype\" data-linktype=\"relative-path\">System.AddIn.Hosting.AddInSegmentType</a>.  </p>\n</div>\n<p> Alternatively, you can use the <a class=\"xref\" href=\"system.addin.hosting.addintoken#System_AddIn_Hosting_AddInToken_QualificationData_\" data-linktype=\"relative-path\">QualificationData</a> property to get a nested set of dictionaries containing the qualification data of the pipeline segments.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AddIn.Hosting.AddInToken.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AddIn.Hosting.AddInToken.yml\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Activate&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.AddInFullName\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.AssemblyName\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Description\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.EnableDirectConnect\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Equals\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Name\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Publisher\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.QualificationData\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.ToString\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Hosting.AddInToken.Version\">\r\n<meta name=\"APILocation\" content=\"System.AddIn.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f16d6ce2-c077-e650-494e-74c015261c06\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an add-in that can be activated.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.AddIn.Hosting/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.AddIn.Hosting.AddInToken\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AddIn.Hosting.AddInToken.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AddIn.Hosting.AddInToken.yml","open_to_public_contributors":true,"api_name":["System.AddIn.Hosting.AddInToken","System.AddIn.Hosting.AddInToken.Activate<T>","System.AddIn.Hosting.AddInToken.AddInFullName","System.AddIn.Hosting.AddInToken.AssemblyName","System.AddIn.Hosting.AddInToken.Description","System.AddIn.Hosting.AddInToken.EnableDirectConnect","System.AddIn.Hosting.AddInToken.Equals","System.AddIn.Hosting.AddInToken.GetEnumerator","System.AddIn.Hosting.AddInToken.GetHashCode","System.AddIn.Hosting.AddInToken.Name","System.AddIn.Hosting.AddInToken.Publisher","System.AddIn.Hosting.AddInToken.QualificationData","System.AddIn.Hosting.AddInToken.IEnumerable.GetEnumerator","System.AddIn.Hosting.AddInToken.ToString","System.AddIn.Hosting.AddInToken.Version"],"api_location":["System.AddIn.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.AddIn.Hosting.AddInToken","System::AddIn::Hosting::AddInToken","System.AddIn.Hosting.AddInToken.Activate``1","System::AddIn::Hosting::AddInToken::Activate``1","System.AddIn.Hosting.AddInToken.AddInFullName","System::AddIn::Hosting::AddInToken::AddInFullName","System.AddIn.Hosting.AddInToken.AssemblyName","System::AddIn::Hosting::AddInToken::AssemblyName","System.AddIn.Hosting.AddInToken.Description","System::AddIn::Hosting::AddInToken::Description","System.AddIn.Hosting.AddInToken.EnableDirectConnect","System::AddIn::Hosting::AddInToken::EnableDirectConnect","System.AddIn.Hosting.AddInToken.Equals","System::AddIn::Hosting::AddInToken::Equals","System.AddIn.Hosting.AddInToken.GetEnumerator","System::AddIn::Hosting::AddInToken::GetEnumerator","System.AddIn.Hosting.AddInToken.GetHashCode","System::AddIn::Hosting::AddInToken::GetHashCode","System.AddIn.Hosting.AddInToken.Name","System::AddIn::Hosting::AddInToken::Name","System.AddIn.Hosting.AddInToken.Publisher","System::AddIn::Hosting::AddInToken::Publisher","System.AddIn.Hosting.AddInToken.QualificationData","System::AddIn::Hosting::AddInToken::QualificationData","System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator","System::AddIn::Hosting::AddInToken::System#Collections#IEnumerable#GetEnumerator","System.AddIn.Hosting.AddInToken.ToString","System::AddIn::Hosting::AddInToken::ToString","System.AddIn.Hosting.AddInToken.Version","System::AddIn::Hosting::AddInToken::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f16d6ce2-c077-e650-494e-74c015261c06","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.AddIn.Hosting/AddInToken.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AddInToken class | Microsoft Docs","_op_ogTitle":"AddInToken class","description":"Represents an add-in that can be activated.\n","toc_asset_id":"_splitted/System.AddIn.Hosting/toc.json","toc_rel":"_splitted/System.AddIn.Hosting/toc.json","source_url":"","ms.assetid":"System.AddIn.Hosting.AddInToken","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.addin.hosting.addintoken","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.addin.hosting.addintoken","fileRelativePath":"System.AddIn.Hosting.AddInToken.html"},"themesRelativePathToOutputRoot":"_themes/"}