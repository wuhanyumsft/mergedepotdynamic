{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">XamlTypeInvoker</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public class XamlTypeInvoker</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">XamlTypeInvoker</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The purpose of XamlTypeInvoker is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>, and so on. Subclasses of XamlTypeInvoker are used as input parameters for the alternate constructors of XAML schema classes such as <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>. You subclass <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> and pass the XamlTypeInvoker through to the base constructor. Along with defining a XamlTypeInvoker for the constructor, you must also provide overrides for at least some of the <code>Lookup</code> methods of <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.  </p>\n<p> XamlTypeInvoker has a default implementation. The default implementation follows a similar model to the default implementation of XAML schema types <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> and <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>, and so on.  </p>\n<p> XamlTypeInvoker provides methods for basic instantiation (<a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a>) and methods that are relevant for types where the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> represents a collection, dictionary or array (<a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_AddToCollection_\" data-linktype=\"relative-path\">AddToCollection</a>; <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_AddToDictionary_\" data-linktype=\"relative-path\">AddToDictionary</a>; <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_GetAddMethod_\" data-linktype=\"relative-path\">GetAddMethod</a>; <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_GetEnumeratorMethod_\" data-linktype=\"relative-path\">GetEnumeratorMethod</a>; <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_GetItems_\" data-linktype=\"relative-path\">GetItems</a>).</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XamlTypeInvoker()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected XamlTypeInvoker ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The default implementation is empty.  </p>\n<p> This constructor is invoked internally to provide a value for <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker_UnknownInvoker_\" data-linktype=\"relative-path\">UnknownInvoker</a>. For a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> subclass, it is expected that you either use the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker__ctor_System_Xaml_XamlType_\" data-linktype=\"relative-path\">XamlTypeInvoker(XamlType)</a> signature for construction or provide an override that calls <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker#System_Xaml_Schema_XamlTypeInvoker__ctor_System_Xaml_XamlType_\" data-linktype=\"relative-path\">XamlTypeInvoker(XamlType)</a> as base. Providing the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> implements a default pattern where <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> is immutable.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker__ctor_System_Xaml_XamlType_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">XamlTypeInvoker(XamlType)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> class, based on a provided <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public XamlTypeInvoker (System.Xaml.XamlType type);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> value for the specific XAML type relevant to this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor is called internally based on the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> where the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> is used for construction. The <code>type</code> provided here is relevant to all other method calls for <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_SetMarkupExtensionHandler\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetMarkupExtensionHandler</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the handler to use when a <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a> calls into an implemented <a class=\"xref\" href=\"system.windows.markup.markupextension\" data-linktype=\"relative-path\">MarkupExtension</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.markup.xamlsetmarkupextensioneventargs\" data-linktype=\"relative-path\">XamlSetMarkupExtensionEventArgs</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A handler implementation that handles this case.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The event handler is based on <a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler&lt;TEventArgs&gt;</a> constrained with <a class=\"xref\" href=\"system.windows.markup.xamlsetmarkupextensioneventargs\" data-linktype=\"relative-path\">XamlSetMarkupExtensionEventArgs</a> event data.  </p>\n<p> The value returned invokes the <a class=\"xref\" href=\"system.xaml.xamltype#System_Xaml_XamlType_LookupSetMarkupExtensionHandler_\" data-linktype=\"relative-path\">LookupSetMarkupExtensionHandler</a> behavior of the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> is based on.  </p>\n<p> The return value is <code>null</code> for a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is based on an unknown <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_SetTypeConverterHandler\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetTypeConverterHandler</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the handler to use when a <a class=\"xref\" href=\"system.xaml.xamlobjectwriter\" data-linktype=\"relative-path\">XamlObjectWriter</a> calls into a CLR-implemented <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.markup.xamlsettypeconvertereventargs\" data-linktype=\"relative-path\">XamlSetTypeConverterEventArgs</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A handler implementation that handles this case.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The event handler is based on <a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler&lt;TEventArgs&gt;</a> constrained with <a class=\"xref\" href=\"system.windows.markup.xamlsetmarkupextensioneventargs\" data-linktype=\"relative-path\">XamlSetMarkupExtensionEventArgs</a> event data.  </p>\n<p> The value returned invokes the <a class=\"xref\" href=\"system.xaml.xamltype#System_Xaml_XamlType_LookupSetTypeConverterHandler_\" data-linktype=\"relative-path\">LookupSetTypeConverterHandler</a> behavior of the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that the <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> is based on.  </p>\n<p> The return value is <code>null</code> for a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is based on an unknown <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_UnknownInvoker\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UnknownInvoker</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides a static value that represents an unknown, not fully implemented <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A static value that represents an unknown, not fully implemented <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Supplying this value for a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_AddToCollection_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddToCollection(Object,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the provided item to an instance of the type that is relevant to this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void AddToCollection (object instance, object item);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of the type specified by the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> used for constructing this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The item to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is based on an unknown <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.  </p>\n<p> <strong>-or-</strong>  </p>\n<p> Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> where the relevant type is not a collection.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemaexception\" data-linktype=\"relative-path\">XamlSchemaException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.Xaml.Schema.XamlTypeInvoker.GetAddMethod*</span> for this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You should only call this method on a <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that represents a collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_AddToDictionary_System_Object_System_Object_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddToDictionary(Object,Object,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the provided key and item value to an instance of the type that is relevant to this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void AddToDictionary (object instance, object key, object item);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of the type specified by the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> used for constructing this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Dictionary key for the item to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>item</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The item value to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is based on an unknown <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.  </p>\n<p> <strong>-or-</strong>  </p>\n<p> Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> where the relevant type is not a dictionary.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamlschemaexception\" data-linktype=\"relative-path\">XamlSchemaException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><span class=\"xref\">stem.Xaml.Schema.XamlTypeInvoker.GetAddMethod*</span> for this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You should only call this method on a <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> that represents a dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_CreateInstance_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateInstance(Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates an object instance based on the construction-initiated <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual object CreateInstance (object[] arguments);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>arguments</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of objects that supply the <code>x:ConstructorArgs</code> for the instance. May be <code>null</code> for types that do not require or use <code>x:ConstructorArgs</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The created instance based on the construction-initiated <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.missingmethodexception\" data-linktype=\"relative-path\">MissingMethodException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Could not resolve a constructor.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_GetAddMethod_System_Xaml_XamlType_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetAddMethod(XamlType)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the relevant <code>Add</code> method for a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is relevant to a collection or dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>contentType</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for the item type that is used by the <code>Add</code> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>CLR <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> information for the <code>Add</code> method, or null.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>contentType</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method should return <code>null</code> for cases where the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> for this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> is not a writeable collection or dictionary. Specifically, should return <code>null</code> for cases where <a class=\"xref\" href=\"system.xaml.xamltype#System_Xaml_XamlType_LookupCollectionKind_\" data-linktype=\"relative-path\">LookupCollectionKind</a> returns <code>None</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If you are not accessing a fully trusted XAML type system, this method has the potential to report false <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> information to callers.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_GetEnumeratorMethod\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEnumeratorMethod()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an object representing a method that can enumerate over items.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> for an enumerator method, or <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Should return <code>null</code> for cases where <a class=\"xref\" href=\"system.xaml.xamltype#System_Xaml_XamlType_LookupCollectionKind_\" data-linktype=\"relative-path\">LookupCollectionKind</a> returns <code>None</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If you are not accessing a fully trusted XAML type system, this method has the potential to report false <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> information to callers.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Xaml_Schema_XamlTypeInvoker_GetItems_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetItems(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> object representing the set of items.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Collections.IEnumerator GetItems (object instance);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An instance of the type specified by the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> used for constructing this <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> object, or <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> that is based on an unknown <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a>.  </p>\n<p> <strong>-or-</strong>  </p>\n<p> Invoked this method on a <a class=\"xref\" href=\"system.xaml.schema.xamltypeinvoker\" data-linktype=\"relative-path\">XamlTypeInvoker</a> where the relevant type is not a collection or dictionary.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.Schema.XamlTypeInvoker.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.Schema.XamlTypeInvoker.yml\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.AddToCollection\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.AddToDictionary\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.CreateInstance\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.GetAddMethod\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.GetItems\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler\">\r\n<meta name=\"APIName\" content=\"System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker\">\r\n<meta name=\"APILocation\" content=\"System.Xaml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a7f2a4a9-d0d7-ab01-9a99-5aeeccadf118\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xaml.Schema/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xaml.Schema.XamlTypeInvoker\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.Schema.XamlTypeInvoker.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.Schema.XamlTypeInvoker.yml","open_to_public_contributors":true,"api_name":["System.Xaml.Schema.XamlTypeInvoker","System.Xaml.Schema.XamlTypeInvoker..ctor","System.Xaml.Schema.XamlTypeInvoker.AddToCollection","System.Xaml.Schema.XamlTypeInvoker.AddToDictionary","System.Xaml.Schema.XamlTypeInvoker.CreateInstance","System.Xaml.Schema.XamlTypeInvoker.GetAddMethod","System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod","System.Xaml.Schema.XamlTypeInvoker.GetItems","System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler","System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler","System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker"],"api_location":["System.Xaml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xaml.Schema.XamlTypeInvoker","System::Xaml::Schema::XamlTypeInvoker","System.Xaml.Schema.XamlTypeInvoker.#ctor","System::Xaml::Schema::XamlTypeInvoker::#ctor","System.Xaml.Schema.XamlTypeInvoker.AddToCollection","System::Xaml::Schema::XamlTypeInvoker::AddToCollection","System.Xaml.Schema.XamlTypeInvoker.AddToDictionary","System::Xaml::Schema::XamlTypeInvoker::AddToDictionary","System.Xaml.Schema.XamlTypeInvoker.CreateInstance","System::Xaml::Schema::XamlTypeInvoker::CreateInstance","System.Xaml.Schema.XamlTypeInvoker.GetAddMethod","System::Xaml::Schema::XamlTypeInvoker::GetAddMethod","System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod","System::Xaml::Schema::XamlTypeInvoker::GetEnumeratorMethod","System.Xaml.Schema.XamlTypeInvoker.GetItems","System::Xaml::Schema::XamlTypeInvoker::GetItems","System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler","System::Xaml::Schema::XamlTypeInvoker::SetMarkupExtensionHandler","System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler","System::Xaml::Schema::XamlTypeInvoker::SetTypeConverterHandler","System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker","System::Xaml::Schema::XamlTypeInvoker::UnknownInvoker"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a7f2a4a9-d0d7-ab01-9a99-5aeeccadf118","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xaml.Schema/XamlTypeInvoker.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XamlTypeInvoker class | Microsoft Docs","_op_ogTitle":"XamlTypeInvoker class","description":"Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.\n","toc_asset_id":"_splitted/System.Xaml.Schema/toc.json","toc_rel":"_splitted/System.Xaml.Schema/toc.json","source_url":"","ms.assetid":"System.Xaml.Schema.XamlTypeInvoker","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.schema.xamltypeinvoker","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.schema.xamltypeinvoker","fileRelativePath":"System.Xaml.Schema.XamlTypeInvoker.html"},"themesRelativePathToOutputRoot":"_themes/"}