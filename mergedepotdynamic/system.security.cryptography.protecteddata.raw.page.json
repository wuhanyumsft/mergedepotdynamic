{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_ProtectedData\">\r\n      <span class=\"lang-csharp\">ProtectedData</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods for encrypting and decrypting data. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class ProtectedData</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ProtectedData</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides access to the Data Protection API (DPAPI) available in Microsoft Windows 2000 and later operating systems. This is a service that is provided by the operating system and does not require additional libraries. It provides protection using the user or machine credentials to encrypt or decrypt data.  </p>\n<p> The class consists of two wrappers for the unmanaged DPAPI, [Protect(Byte[],â€‚Byte&lt;xref:System.Security.Cryptography.ProtectedData.Protect%2A&gt; and [Unprotect(Byte[],â€‚Byte&lt;xref:System.Security.Cryptography.ProtectedData.Unprotect%2A&gt;. These two methods can be used to encrypt and decrypt data such as passwords, keys, and connection strings.  </p>\n<p> If you use these methods during impersonation, you may receive the following error: &quot;Key not valid for use in specified state.&quot; This occurs because the DPAPI stores the key data in user profiles. If the profile is not loaded, DPAPI wonâ€™t be able to perform the decryption. To prevent this error, load the profile of the user you want to impersonate before calling either method. Using DPAPI with impersonation can incur significant complication and requires careful design choices.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ProtectedData_Protect_System_Byte___System_Byte___System_Security_Cryptography_DataProtectionScope_\" data-linktype=\"self-bookmark\">Protect(Byte[],Byte[],DataProtectionScope)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Encrypts the data in a specified byte array and returns a byte array that contains the encrypted data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ProtectedData_Unprotect_System_Byte___System_Byte___System_Security_Cryptography_DataProtectionScope_\" data-linktype=\"self-bookmark\">Unprotect(Byte[],Byte[],DataProtectionScope)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrypts the data in a specified byte array and returns a byte array that contains the decrypted data.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ProtectedData_Protect_System_Byte___System_Byte___System_Security_Cryptography_DataProtectionScope_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ProtectedData_Protect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Protect(Byte[],Byte[],DataProtectionScope)</div>        \r\n          </div>\r\n    \r\n            <p>Encrypts the data in a specified byte array and returns a byte array that contains the encrypted data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains data to encrypt.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalEntropy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional additional byte array used to increase the complexity of the encryption, or <code>null</code> for no additional complexity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.dataprotectionscope\" data-linktype=\"relative-path\">DataProtectionScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the scope of encryption.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array representing the encrypted data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>userData</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The encryption failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operating system does not support this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>The system ran out of memory while encrypting the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to encrypt data such as passwords, keys, or connection strings. The <code>optionalEntropy</code> parameter enables you to add data to increase the complexity of the encryption; specify <code>null</code> for no additional complexity. If provided, this information must also be used when decrypting the data using the <a class=\"xref\" href=\"system.security.cryptography.protecteddata#System_Security_Cryptography_ProtectedData_Unprotect_\" data-linktype=\"relative-path\">Unprotect</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you use this method during impersonation, you may receive the following error: &quot;Key not valid for use in specified state.&quot; To prevent this error, load the profile of the user you want to impersonate before calling the method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use data protection.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.DataProtectionSample#1\">using System;\nusing System.Security.Cryptography;\n\npublic class DataProtectionSample\n{\n// Create byte array for additional entropy when using Protect method.\n\tstatic byte [] s_aditionalEntropy = { 9, 8, 7, 6, 5 };\n\n\tpublic static void Main()\n\t{\n// Create a simple byte array containing data to be encrypted.\n\t\t\nbyte [] secret = { 0, 1, 2, 3, 4, 1, 2, 3, 4 };\n\n//Encrypt the data.\n\t\tbyte [] encryptedSecret = Protect( secret );\n\t\tConsole.WriteLine(&quot;The encrypted byte array is:&quot;);\n\t\tPrintValues(encryptedSecret);\n\t\t\n// Decrypt the data and store in a byte array.\n\t\tbyte [] originalData = Unprotect( encryptedSecret );\n\t\tConsole.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine);\n\t\tPrintValues(originalData);\n\n\t}\n\n\tpublic static byte [] Protect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n\t\t\t//  only by the same current user.\n\t\t\treturn ProtectedData.Protect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static byte [] Unprotect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t//Decrypt the data using DataProtectionScope.CurrentUser.\n\t\t\treturn ProtectedData.Unprotect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static void PrintValues( Byte[] myArr )  \n\t{\n\t      foreach ( Byte i in myArr )  \n\t\t  \t{\n\t\t         Console.Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, i );\n\t\t\t }\n      Console.WriteLine();\n\t }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.DataProtectionSample#1\">#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\n\npublic ref class DataProtectionSample\n{\nprivate:\n\n   // Create byte array for additional entropy when using Protect method.\n   static array&lt;Byte&gt;^s_aditionalEntropy = {9,8,7,6,5};\n\npublic:\n   static void Main()\n   {\n      \n      // Create a simple byte array containing data to be encrypted.\n      array&lt;Byte&gt;^secret = {0,1,2,3,4,1,2,3,4};\n      \n      //Encrypt the data.\n      array&lt;Byte&gt;^encryptedSecret = Protect( secret );\n      Console::WriteLine( &quot;The encrypted byte array is:&quot; );\n      PrintValues( encryptedSecret );\n      \n      // Decrypt the data and store in a byte array.\n      array&lt;Byte&gt;^originalData = Unprotect( encryptedSecret );\n      Console::WriteLine( &quot;{0}The original data is:&quot;, Environment::NewLine );\n      PrintValues( originalData );\n   }\n\n   static array&lt;Byte&gt;^ Protect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         // Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n         //  only by the same current user.\n         return ProtectedData::Protect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not encrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static array&lt;Byte&gt;^ Unprotect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         //Decrypt the data using DataProtectionScope.CurrentUser.\n         return ProtectedData::Unprotect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not decrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static void PrintValues( array&lt;Byte&gt;^myArr )\n   {\n      System::Collections::IEnumerator^ myEnum = myArr-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Byte i = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n         Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, i );\n      }\n\n      Console::WriteLine();\n   }\n};\n\nint main()\n{\n   DataProtectionSample::Main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.DataProtectionSample#1\">Imports System\nImports System.Security.Cryptography\n\n\n\nPublic Class DataProtectionSample\n    &#39; Create byte array for additional entropy when using Protect method.\n    Private Shared s_aditionalEntropy As Byte() = {9, 8, 7, 6, 5}\n\n\n    Public Shared Sub Main()\n        &#39; Create a simple byte array containing data to be encrypted.\n        Dim secret As Byte() = {0, 1, 2, 3, 4, 1, 2, 3, 4}\n\n        &#39;Encrypt the data.\n        Dim encryptedSecret As Byte() = Protect(secret)\n        Console.WriteLine(&quot;The encrypted byte array is:&quot;)\n        PrintValues(encryptedSecret)\n\n        &#39; Decrypt the data and store in a byte array.\n        Dim originalData As Byte() = Unprotect(encryptedSecret)\n        Console.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine)\n        PrintValues(originalData)\n\n    End Sub\n\n\n    Public Shared Function Protect(ByVal data() As Byte) As Byte()\n        Try\n            &#39; Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n            &#39;  only by the same current user.\n            Return ProtectedData.Protect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Function Unprotect(ByVal data() As Byte) As Byte()\n        Try\n            &#39;Decrypt the data using DataProtectionScope.CurrentUser.\n            Return ProtectedData.Unprotect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Sub PrintValues(ByVal myArr() As [Byte])\n        Dim i As [Byte]\n        For Each i In myArr\n            Console.Write(vbTab + &quot;{0}&quot;, i)\n        Next i\n        Console.WriteLine()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ProtectedData_Unprotect_System_Byte___System_Byte___System_Security_Cryptography_DataProtectionScope_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ProtectedData_Unprotect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unprotect(Byte[],Byte[],DataProtectionScope)</div>        \r\n          </div>\r\n    \r\n            <p>Decrypts the data in a specified byte array and returns a byte array that contains the decrypted data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>encryptedData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data encrypted using the <span class=\"xref\">stem.Security.Cryptography.ProtectedData.Protect*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>optionalEntropy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional additional byte array that was used to encrypt the data, or <code>null</code> if the additional byte array was not used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.dataprotectionscope\" data-linktype=\"relative-path\">DataProtectionScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the scope of data protection that was used to encrypt the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array representing the decrypted data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>encryptedData</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The decryption failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operating system does not support this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>Out of memory.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to unprotect data that was encrypted using the <a class=\"xref\" href=\"system.security.cryptography.protecteddata#System_Security_Cryptography_ProtectedData_Protect_\" data-linktype=\"relative-path\">Protect</a> method. If the <code>optionalEntropy</code> parameter was used during encryption, it must be supplied to unencrypt the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you use this method during impersonation, you may receive the following error: &quot;Key not valid for use in specified state.&quot; To prevent this error, load the profile of the user you want to impersonate before calling the method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use data protection.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.DataProtectionSample#1\">using System;\nusing System.Security.Cryptography;\n\npublic class DataProtectionSample\n{\n// Create byte array for additional entropy when using Protect method.\n\tstatic byte [] s_aditionalEntropy = { 9, 8, 7, 6, 5 };\n\n\tpublic static void Main()\n\t{\n// Create a simple byte array containing data to be encrypted.\n\t\t\nbyte [] secret = { 0, 1, 2, 3, 4, 1, 2, 3, 4 };\n\n//Encrypt the data.\n\t\tbyte [] encryptedSecret = Protect( secret );\n\t\tConsole.WriteLine(&quot;The encrypted byte array is:&quot;);\n\t\tPrintValues(encryptedSecret);\n\t\t\n// Decrypt the data and store in a byte array.\n\t\tbyte [] originalData = Unprotect( encryptedSecret );\n\t\tConsole.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine);\n\t\tPrintValues(originalData);\n\n\t}\n\n\tpublic static byte [] Protect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n\t\t\t//  only by the same current user.\n\t\t\treturn ProtectedData.Protect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static byte [] Unprotect( byte [] data )\n\t{\n\t\ttry\n\t\t{\n\t\t\t//Decrypt the data using DataProtectionScope.CurrentUser.\n\t\t\treturn ProtectedData.Unprotect( data, s_aditionalEntropy, DataProtectionScope.CurrentUser );\n\t\t} \n\t\tcatch (CryptographicException e)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;);\n\t\t\tConsole.WriteLine(e.ToString());\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic static void PrintValues( Byte[] myArr )  \n\t{\n\t      foreach ( Byte i in myArr )  \n\t\t  \t{\n\t\t         Console.Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, i );\n\t\t\t }\n      Console.WriteLine();\n\t }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.DataProtectionSample#1\">#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\n\npublic ref class DataProtectionSample\n{\nprivate:\n\n   // Create byte array for additional entropy when using Protect method.\n   static array&lt;Byte&gt;^s_aditionalEntropy = {9,8,7,6,5};\n\npublic:\n   static void Main()\n   {\n      \n      // Create a simple byte array containing data to be encrypted.\n      array&lt;Byte&gt;^secret = {0,1,2,3,4,1,2,3,4};\n      \n      //Encrypt the data.\n      array&lt;Byte&gt;^encryptedSecret = Protect( secret );\n      Console::WriteLine( &quot;The encrypted byte array is:&quot; );\n      PrintValues( encryptedSecret );\n      \n      // Decrypt the data and store in a byte array.\n      array&lt;Byte&gt;^originalData = Unprotect( encryptedSecret );\n      Console::WriteLine( &quot;{0}The original data is:&quot;, Environment::NewLine );\n      PrintValues( originalData );\n   }\n\n   static array&lt;Byte&gt;^ Protect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         // Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n         //  only by the same current user.\n         return ProtectedData::Protect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not encrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static array&lt;Byte&gt;^ Unprotect( array&lt;Byte&gt;^data )\n   {\n      try\n      {\n         \n         //Decrypt the data using DataProtectionScope.CurrentUser.\n         return ProtectedData::Unprotect( data, s_aditionalEntropy, DataProtectionScope::CurrentUser );\n      }\n      catch ( CryptographicException^ e ) \n      {\n         Console::WriteLine( &quot;Data was not decrypted. An error occurred.&quot; );\n         Console::WriteLine( e );\n         return nullptr;\n      }\n   }\n\n   static void PrintValues( array&lt;Byte&gt;^myArr )\n   {\n      System::Collections::IEnumerator^ myEnum = myArr-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Byte i = safe_cast&lt;Byte&gt;(myEnum-&gt;Current);\n         Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, i );\n      }\n\n      Console::WriteLine();\n   }\n};\n\nint main()\n{\n   DataProtectionSample::Main();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.DataProtectionSample#1\">Imports System\nImports System.Security.Cryptography\n\n\n\nPublic Class DataProtectionSample\n    &#39; Create byte array for additional entropy when using Protect method.\n    Private Shared s_aditionalEntropy As Byte() = {9, 8, 7, 6, 5}\n\n\n    Public Shared Sub Main()\n        &#39; Create a simple byte array containing data to be encrypted.\n        Dim secret As Byte() = {0, 1, 2, 3, 4, 1, 2, 3, 4}\n\n        &#39;Encrypt the data.\n        Dim encryptedSecret As Byte() = Protect(secret)\n        Console.WriteLine(&quot;The encrypted byte array is:&quot;)\n        PrintValues(encryptedSecret)\n\n        &#39; Decrypt the data and store in a byte array.\n        Dim originalData As Byte() = Unprotect(encryptedSecret)\n        Console.WriteLine(&quot;{0}The original data is:&quot;, Environment.NewLine)\n        PrintValues(originalData)\n\n    End Sub\n\n\n    Public Shared Function Protect(ByVal data() As Byte) As Byte()\n        Try\n            &#39; Encrypt the data using DataProtectionScope.CurrentUser. The result can be decrypted\n            &#39;  only by the same current user.\n            Return ProtectedData.Protect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not encrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Function Unprotect(ByVal data() As Byte) As Byte()\n        Try\n            &#39;Decrypt the data using DataProtectionScope.CurrentUser.\n            Return ProtectedData.Unprotect(data, s_aditionalEntropy, DataProtectionScope.CurrentUser)\n        Catch e As CryptographicException\n            Console.WriteLine(&quot;Data was not decrypted. An error occurred.&quot;)\n            Console.WriteLine(e.ToString())\n            Return Nothing\n        End Try\n\n    End Function\n\n\n    Public Shared Sub PrintValues(ByVal myArr() As [Byte])\n        Dim i As [Byte]\n        For Each i In myArr\n            Console.Write(vbTab + &quot;{0}&quot;, i)\n        Next i\n        Console.WriteLine()\n\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ProtectedData.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ProtectedData.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedData\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedData.Protect\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedData.Unprotect\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"27045f3f-5c2b-20e2-fb3b-49b7e7669feb\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods for encrypting and decrypting data. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.ProtectedData\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ProtectedData.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ProtectedData.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.ProtectedData","System.Security.Cryptography.ProtectedData.Protect","System.Security.Cryptography.ProtectedData.Unprotect"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.ProtectedData","System::Security::Cryptography::ProtectedData","System.Security.Cryptography.ProtectedData.Protect","System::Security::Cryptography::ProtectedData::Protect","System.Security.Cryptography.ProtectedData.Unprotect","System::Security::Cryptography::ProtectedData::Unprotect"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"27045f3f-5c2b-20e2-fb3b-49b7e7669feb","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/ProtectedData.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ProtectedData class | Microsoft Docs","_op_ogTitle":"ProtectedData class","description":"Provides methods for encrypting and decrypting data. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.ProtectedData","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.protecteddata","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.protecteddata","fileRelativePath":"System.Security.Cryptography.ProtectedData.html"},"themesRelativePathToOutputRoot":"_themes/"}