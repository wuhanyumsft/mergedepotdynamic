{"content":"    \r\n    <h1 id=\"System_Reflection_Binder\">\r\n      <span class=\"lang-csharp\">Binder</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class Binder</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Binder</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implementations of the Binder class are used by methods such as <a class=\"xref\" href=\"system.type#System_Type_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <a class=\"xref\" href=\"system.type#System_Type_GetMethod_\" data-linktype=\"relative-path\">GetMethod</a>, which selects a method based on parameter types; and so on.  </p>\n<p> A default implementation of the Binder class is provided by the <a class=\"xref\" href=\"system.type#System_Type_DefaultBinder_\" data-linktype=\"relative-path\">DefaultBinder</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder__ctor\" data-linktype=\"self-bookmark\">Binder()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_BindToField_System_Reflection_BindingFlags_System_Reflection_FieldInfo___System_Object_System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a field from the given set of fields, based on the specified criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_BindToMethod_System_Reflection_BindingFlags_System_Reflection_MethodBase___System_Object____System_Reflection_ParameterModifier___System_Globalization_CultureInfo_System_String___System_Object__\" data-linktype=\"self-bookmark\">BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a method to invoke from the given set of methods, based on the supplied arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_ChangeType_System_Object_System_Type_System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">ChangeType(Object,Type,CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the type of the given <code>Object</code> to the given <code>Type</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_ReorderArgumentArray_System_Object____System_Object_\" data-linktype=\"self-bookmark\">ReorderArgumentArray(Object[],Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Upon returning from <span class=\"xref\">stem.Reflection.Binder.BindToMethod*</span>, restores the <code>args</code> argument to what it was when it came from <code>BindToMethod</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_SelectMethod_System_Reflection_BindingFlags_System_Reflection_MethodBase___System_Type___System_Reflection_ParameterModifier___\" data-linktype=\"self-bookmark\">SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a method from the given set of methods, based on the argument type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Binder_SelectProperty_System_Reflection_BindingFlags_System_Reflection_PropertyInfo___System_Type_System_Type___System_Reflection_ParameterModifier___\" data-linktype=\"self-bookmark\">SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a property from the given set of properties, based on the specified criteria.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder__ctor\">\r\n    \r\n            <a id=\"System_Reflection_Binder__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Binder()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Binder ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is called by the constructors of derived classes, to initialize state in this type.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_BindToField_System_Reflection_BindingFlags_System_Reflection_FieldInfo___System_Object_System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Reflection_Binder_BindToField_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a field from the given set of fields, based on the specified criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>match</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The set of fields that are candidates for matching. For example, when a <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> object is used by <span class=\"xref\">stem.Type.InvokeMember*</span>, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name. The default implementation provided by <span class=\"xref\">stem.Type.DefaultBinder*</span> changes the order of this array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The field value used to locate a matching field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> that is used to control the coercion of data types, in binder implementations that coerce types. If <code>culture</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> for the current thread is used.  </p>\n<p> Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <code>String</code> that represents 1000 to a <code>Double</code> value, because 1000 is represented differently by different cultures. The default binder does not do such string coercions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a></div>\r\n                  </div>\r\n                  <p>The matching field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>bindingAttr</code> includes <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a>, and <code>match</code> contains multiple fields that are equally good matches for <code>value</code>. For example, <code>value</code> contains a <code>MyClass</code> object that implements the <code>IMyClass</code> interface, and <code>match</code> contains a field of type <code>MyClass</code> and a field of type <code>IMyClass</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.missingfieldexception\" data-linktype=\"relative-path\">MissingFieldException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>bindingAttr</code> includes <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a>, and <code>match</code> contains no fields that can accept <code>value</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullreferenceexception\" data-linktype=\"relative-path\">NullReferenceException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>bindingAttr</code> includes <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a>, and <code>match</code> is <code>null</code> or an empty array.  </p>\n<p> -or-  </p>\n<p> <code>bindingAttr</code> includes <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a>, and <code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>bindingAttr</code> does not include <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">System.Reflection.BindingFlags</a>, the default binder implementation provided by <a class=\"xref\" href=\"system.type#System_Type_DefaultBinder_\" data-linktype=\"relative-path\">DefaultBinder</a> simply returns the first element of <code>match</code>. No selection is done.  </p>\n<p> This method controls the binding provided by <a class=\"xref\" href=\"system.type#System_Type_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_BindToMethod_System_Reflection_BindingFlags_System_Reflection_MethodBase___System_Object____System_Reflection_ParameterModifier___System_Globalization_CultureInfo_System_String___System_Object__\">\r\n    \r\n            <a id=\"System_Reflection_Binder_BindToMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a method to invoke from the given set of methods, based on the supplied arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>match</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The set of methods that are candidates for matching. For example, when a <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> object is used by <span class=\"xref\">stem.Type.InvokeMember*</span>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name. The default implementation provided by <span class=\"xref\">stem.Type.DefaultBinder*</span> changes the order of this array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments that are passed in. The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <code>names</code> parameter is used to specify an order other than positional order. If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified. The default binder implementation does not use this parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> that is used to control the coercion of data types, in binder implementations that coerce types. If <code>culture</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> for the current thread is used.  </p>\n<p> Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <code>String</code> that represents 1000 to a <code>Double</code> value, because 1000 is represented differently by different cultures. The default binder does not do such string coercions.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>names</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameter names, if parameter names are to be considered when matching, or <code>null</code> if arguments are to be treated as purely positional. For example, parameter names must be used if arguments are not supplied in positional order.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>After the method returns, <code>state</code> contains a binder-provided object that keeps track of argument reordering. The binder creates this object, and the binder is the sole consumer of this object. If <code>state</code> is not <code>null</code> when <code>BindToMethod</code> returns, you must pass <code>state</code> to the <span class=\"xref\">stem.Reflection.Binder.ReorderArgumentArray*</span> method if you want to restore <code>args</code> to its original order, for example, so that you can retrieve the values of <code>ref</code> parameters (<code>ByRef</code> parameters in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </div>\r\n                  <p>The matching method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> contains multiple methods that are equally good matches for <code>args</code>. For example, <code>args</code> contains a <code>MyClass</code> object that implements the <code>IMyClass</code> interface, and <code>match</code> contains a method that takes <code>MyClass</code> and a method that takes <code>IMyClass</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.missingmethodexception\" data-linktype=\"relative-path\">MissingMethodException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> contains no methods that can accept the arguments supplied in <code>args</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> is <code>null</code> or an empty array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default binder takes into account both parameters that have values and <code>params</code> arrays (<code>ParamArray</code> arrays in Visual Basic). Thus, it is possible to find a match in cases where <code>args</code> and <code>match</code> do not contain the same number of elements.  </p>\n<p> The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by BindToMethod. Use this remap capability to get back by-reference arguments when such arguments are present. When you pass arguments by name, the binder reorders the argument array. The <code>state</code> parameter keeps track of argument reordering, thus enabling the binder&#39;s <a class=\"xref\" href=\"system.reflection.binder#System_Reflection_Binder_ReorderArgumentArray_\" data-linktype=\"relative-path\">ReorderArgumentArray</a> method to reorder the argument array to its original form.  </p>\n<p> The BindToMethod method is used by the <a class=\"xref\" href=\"system.type#System_Type_InvokeMember_\" data-linktype=\"relative-path\">InvokeMember</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_ChangeType_System_Object_System_Type_System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Reflection_Binder_ChangeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChangeType(Object,Type,CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the type of the given <code>Object</code> to the given <code>Type</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to change into a new <code>Type</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <code>Type</code> that <code>value</code> will become.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> that is used to control the coercion of data types. If <code>culture</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> for the current thread is used.  </p>\n<p> Note   For example, this parameter is necessary to convert a <code>String</code> that represents 1000 to a <code>Double</code> value, because 1000 is represented differently by different cultures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that contains the given value as the new type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Reflection models the accessibility rules of the common type system. For example, if the caller is in the same assembly, the caller does not need special permissions for internal members. Otherwise, the caller needs <a class=\"xref\" href=\"system.security.permissions.reflectionpermission\" data-linktype=\"relative-path\">ReflectionPermission</a>. This is consistent with lookup of members that are protected, private, and so on.  </p>\n<p> The general principle is that <code>ChangeType</code> should perform only widening coercions, which never lose data. An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer. This is distinguished from a narrowing coercion, which may lose data. An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.  </p>\n<p> The following table lists the coercions performed by the default <code>ChangeType</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Source type</th>\n<th>Target type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Any type</td>\n<td>Its base type.</td>\n</tr>\n<tr>\n<td>Any type</td>\n<td>The interface it implements.</td>\n</tr>\n<tr>\n<td>Char</td>\n<td>UInt16, UInt32, Int32, UInt64, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>Byte</td>\n<td>Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>SByte</td>\n<td>Int16, Int32, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>UInt16</td>\n<td>UInt32, Int32, UInt64, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>Int16</td>\n<td>Int32, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>UInt32</td>\n<td>UInt64, Int64, Single, Double</td>\n</tr>\n<tr>\n<td>Int32</td>\n<td>Int64, Single, Double</td>\n</tr>\n<tr>\n<td>UInt64</td>\n<td>Single, Double</td>\n</tr>\n<tr>\n<td>Int64</td>\n<td>Single, Double</td>\n</tr>\n<tr>\n<td>Single</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>Non-reference</td>\n<td>By-reference.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_ReorderArgumentArray_System_Object____System_Object_\">\r\n    \r\n            <a id=\"System_Reflection_Binder_ReorderArgumentArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReorderArgumentArray(Object[],Object)</div>        \r\n          </div>\r\n    \r\n            <p>Upon returning from <span class=\"xref\">stem.Reflection.Binder.BindToMethod*</span>, restores the <code>args</code> argument to what it was when it came from <code>BindToMethod</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void ReorderArgumentArray (ref object[] args, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The actual arguments that are passed in. Both the types and values of the arguments can be changed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A binder-provided object that keeps track of argument reordering.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The common language runtime calls this method if <code>state</code> is not <code>null</code> after a return from <code>BindToMethod</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_SelectMethod_System_Reflection_BindingFlags_System_Reflection_MethodBase___System_Type___System_Reflection_ParameterModifier___\">\r\n    \r\n            <a id=\"System_Reflection_Binder_SelectMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])</div>        \r\n          </div>\r\n    \r\n            <p>Selects a method from the given set of methods, based on the argument type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>match</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The set of methods that are candidates for matching. For example, when a <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> object is used by <span class=\"xref\">stem.Type.InvokeMember*</span>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name. The default implementation provided by <span class=\"xref\">stem.Type.DefaultBinder*</span> changes the order of this array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameter types used to locate a matching method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </div>\r\n                  <p>The matching method, if found; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> contains multiple methods that are equally good matches for the parameter types described by <code>types</code>. For example, the array in <code>types</code> contains a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object for <code>MyClass</code> and the array in <code>match</code> contains a method that takes a base class of <code>MyClass</code> and a method that takes an interface that <code>MyClass</code> implements.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> is <code>null</code> or an empty array.  </p>\n<p> -or-  </p>\n<p> An element of <code>types</code> derives from <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>, but is not of type <code>RuntimeType</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method should return <code>null</code> if no method matches the criteria. This method controls the selection provided by the <code>GetConstructor</code> and <code>GetMethod</code> methods on <code>Type</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Binder_SelectProperty_System_Reflection_BindingFlags_System_Reflection_PropertyInfo___System_Type_System_Type___System_Reflection_ParameterModifier___\">\r\n    \r\n            <a id=\"System_Reflection_Binder_SelectProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])</div>        \r\n          </div>\r\n    \r\n            <p>Selects a property from the given set of properties, based on the specified criteria.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>match</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The set of properties that are candidates for matching. For example, when a <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a> object is used by <span class=\"xref\">stem.Type.InvokeMember*</span>, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name. The default implementation provided by <span class=\"xref\">stem.Type.DefaultBinder*</span> changes the order of this array.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The return value the matching property must have.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>indexes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index types of the property being searched for. Used for index properties such as the indexer for a class.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a></div>\r\n                  </div>\r\n                  <p>The matching property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> contains multiple properties that are equally good matches for <code>returnType</code> and <code>indexes</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>For the default binder, <code>match</code> is <code>null</code> or an empty array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method controls the selection provided by the <code>GetProperty</code> method on <code>Type</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Binder.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Binder.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder..ctor\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.BindToField\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.BindToMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.ChangeType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.ReorderArgumentArray\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.SelectMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Binder.SelectProperty\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d4bc0fb1-e98b-2b7f-41a8-b84ec48cd20d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Binder\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Binder.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Binder.yml","open_to_public_contributors":true,"api_name":["System.Reflection.Binder","System.Reflection.Binder..ctor","System.Reflection.Binder.BindToField","System.Reflection.Binder.BindToMethod","System.Reflection.Binder.ChangeType","System.Reflection.Binder.ReorderArgumentArray","System.Reflection.Binder.SelectMethod","System.Reflection.Binder.SelectProperty"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Binder","System::Reflection::Binder","System.Reflection.Binder.#ctor","System::Reflection::Binder::#ctor","System.Reflection.Binder.BindToField","System::Reflection::Binder::BindToField","System.Reflection.Binder.BindToMethod","System::Reflection::Binder::BindToMethod","System.Reflection.Binder.ChangeType","System::Reflection::Binder::ChangeType","System.Reflection.Binder.ReorderArgumentArray","System::Reflection::Binder::ReorderArgumentArray","System.Reflection.Binder.SelectMethod","System::Reflection::Binder::SelectMethod","System.Reflection.Binder.SelectProperty","System::Reflection::Binder::SelectProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d4bc0fb1-e98b-2b7f-41a8-b84ec48cd20d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection/Binder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Binder class | Microsoft Docs","_op_ogTitle":"Binder class","description":"Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.\n","toc_asset_id":"_splitted/System.Reflection/toc.json","toc_rel":"_splitted/System.Reflection/toc.json","source_url":"","ms.assetid":"System.Reflection.Binder","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.binder","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.binder","fileRelativePath":"System.Reflection.Binder.html"},"themesRelativePathToOutputRoot":"_themes/"}