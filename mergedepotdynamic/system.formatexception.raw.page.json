{"content":"    \r\n    <h1 id=\"System_FormatException\">\r\n      <span class=\"lang-csharp\">FormatException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown when the format of an argument is invalid, or when a <a href=\"../Topic/Composite%20Formatting.md\" data-linktype=\"relative-path\">composite format string</a> is not well formed.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class FormatException : SystemException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">System.SystemException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FormatException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A FormatException exception can be thrown for one of the following reasons:  </p>\n<ul>\n<li><p>In a call to a method that converts a string to some other data type, the string doesn&#39;t conform to the required pattern. This typically occurs when calling some methods of the <a class=\"xref\" href=\"system.convert\" data-linktype=\"relative-path\">Convert</a> class and the <code>Parse</code> and <code>ParseExact</code> methods of some types.  </p>\n<p> In most cases, particularly if the string that you&#39;re converting is input by a user or read from a file, you should use a <code>try/catch</code> block and handle the FormatException exception if the conversion is unsuccessful. You can also replace the call to the conversion method with a call to a <code>TryParse</code> or <code>TryParseExact</code> method, if one exists. However, a FormatException exception that is thrown when you&#39;re trying to parse a predefined or hard-coded string indicates a program error. In this case, you should correct the error rather than handle the exception.  </p>\n<p> The conversion of a string to the following types in the <a class=\"xref\" href=\"system\" data-linktype=\"relative-path\">System</a> namespace can throw a FormatException exception:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>. The <a class=\"xref\" href=\"system.boolean#System_Boolean_Parse_System_String_\" data-linktype=\"relative-path\">System.Boolean.Parse(String)</a> and <a class=\"xref\" href=\"system.convert#System_Convert_ToBoolean_System_String_\" data-linktype=\"relative-path\">System.Convert.ToBoolean(String)</a> methods require the string to be converted to be &quot;True&quot;, &quot;true&quot;, &quot;False&quot;, or &quot;false&quot;. Any other value throws a FormatException exception.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> and <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>. All date and time data is interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture. When you call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> and [DateTimeOffset.ParseExact(String,â€‚String&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt; methods, date and time data must also conform <em>exactly</em> to a pattern specified by one or more <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard format strings</a> or <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">custom format strings</a> that are provided as arguments in the method call. If it doesn&#39;t conform to an expected culture-specific pattern, a FormatException exception is thrown. This means that date and time data saved in a culture-specific format on one system might not parse successfully on another system.  </p>\n<p> For more information about parsing dates and times, see <a href=\"../Topic/Parsing%20Date%20and%20Time%20Strings%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Parsing Date and Time Strings</a> and the documentation for the method that threw the exception.  </p>\n</li>\n<li><p><strong>GUIDs.</strong> The string representation of a GUID must consist of 32 hexadecimal digits (0-F), and must be in one of the five formats output by the <a class=\"xref\" href=\"system.guid#System_Guid_ToString_\" data-linktype=\"relative-path\">ToString</a> method. For more information, see the <a class=\"xref\" href=\"system.guid#System_Guid_Parse_\" data-linktype=\"relative-path\">Parse</a> method.  </p>\n</li>\n<li><p><strong>Numeric types, including all signed integers, unsigned integers, and floating-point types.</strong> The string to be parsed must consist of the Latin digits 0-9. A positive or negative sign, decimal separator, group separators, and currency symbol may also be permitted. Trying to parse a string that contains any other character always throws a FormatException exception.  </p>\n<p> All numeric strings are interpreted based on the formatting conventions of a particular culture: either the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture. As a result, a numeric string that is parsed by using the conventions of one culture might fail when using the conventions of another.  </p>\n<p> For more information about parsing numeric strings, see <a href=\"../Topic/Parsing%20Numeric%20Strings%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Parsing Numeric Strings</a> and the documentation for the specific method that threw the exception.  </p>\n</li>\n<li><p><strong>Time intervals.</strong> The string to be parsed must be either in fixed culture-insensitive format or in a culture-sensitive format defined by the current thread culture (or, in some cases, the current application domain culture), the invariant culture, or a specified culture. If the string isn&#39;t in an appropriate format, or if, at the minimum, the days, hours, and minutes components of the time interval aren&#39;t present, the parsing method throws a FormatException exception. For more information, see the documentation for the <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> parsing method that threw the exception.  </p>\n</li>\n</ul>\n</li>\n<li><p>A type implements the <a class=\"xref\" href=\"system.iformattable\" data-linktype=\"relative-path\">IFormattable</a> interface, which supports format strings that define how an object is converted to its string representation, and an invalid format string is used. This is most common in a formatting operation. In the following example, the &quot;Q&quot; standard format string is used in a composite format string to format a number. However, &quot;Q&quot; is not a valid <a href=\"../Topic/Standard%20Numeric%20Format%20Strings.md\" data-linktype=\"relative-path\">standard format string</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#7\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      decimal price = 169.32m;\n      Console.WriteLine(&quot;The cost is {0:Q2}.&quot;, price);\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.FormatException: Format specifier was invalid.\n//       at System.Number.FormatDecimal(Decimal value, String format, NumberFormatInfo info)\n//       at System.Decimal.ToString(String format, IFormatProvider provider)\n//       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n//       at System.IO.TextWriter.WriteLine(String format, Object arg0)\n//       at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#7\">Module Example\n   Public Sub Main()\n      Dim price As Decimal = 169.32d\n      Console.WriteLine(&quot;The cost is {0:Q2}.&quot;, price)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.FormatException: Format specifier was invalid.\n&#39;       at System.Number.FormatDecimal(Decimal value, String format, NumberFormatInfo info)\n&#39;       at System.Decimal.ToString(String format, IFormatProvider provider)\n&#39;       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n&#39;       at System.IO.TextWriter.WriteLine(String format, Object arg0)\n&#39;       at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n&#39;       at Example.Main()\n</code></pre><p> This exception results from a coding error. To correct the error, either remove the format string or substitute a valid one. The following example corrects the error by replacing the invalid format string with the &quot;C&quot; (currency) format string.  </p>\n<pre><code class=\"lang-vb\" name=\"System.FormatException#8\">Module Example\n   Public Sub Main()\n      Dim price As Decimal = 169.32d\n      Console.WriteLine(&quot;The cost is {0:C2}.&quot;, price)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;   The cost is $169.32.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.FormatException#8\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      decimal price = 169.32m;\n      Console.WriteLine(&quot;The cost is {0:C2}.&quot;, price);\n   }\n}\n// The example displays the following output:\n//    The cost is $169.32.\n</code></pre><p> A FormatException exception can also be thrown by parsing methods, such as <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a> and <a class=\"xref\" href=\"system.guid#System_Guid_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a>, that require the string to be parsed to conform exactly to the pattern specified by a format string. In the following example, the string representation of a GUID is expected to conform to the pattern specified by the &quot;G&quot; standard format string. However, the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure&#39;s implementation of <a class=\"xref\" href=\"system.iformattable\" data-linktype=\"relative-path\">IFormattable</a> does not support the &quot;G&quot; format string.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#9\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string guidString = &quot;ba748d5c-ae5f-4cca-84e5-1ac5291c38cb&quot;;\n      Console.WriteLine(Guid.ParseExact(guidString, &quot;G&quot;));\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.FormatException: \n//       Format String can be only &quot;D&quot;, &quot;d&quot;, &quot;N&quot;, &quot;n&quot;, &quot;P&quot;, &quot;p&quot;, &quot;B&quot;, &quot;b&quot;, &quot;X&quot; or &quot;x&quot;.\n//       at System.Guid.ParseExact(String input, String format)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#9\">Module Example\n   Public Sub Main()\n      Dim guidString As String = &quot;ba748d5c-ae5f-4cca-84e5-1ac5291c38cb&quot;\n      Console.WriteLine(Guid.ParseExact(guidString, &quot;G&quot;))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.FormatException: \n&#39;       Format String can be only &quot;D&quot;, &quot;d&quot;, &quot;N&quot;, &quot;n&quot;, &quot;P&quot;, &quot;p&quot;, &quot;B&quot;, &quot;b&quot;, &quot;X&quot; or &quot;x&quot;.\n&#39;       at System.Guid.ParseExact(String input, String format)\n&#39;       at Example.Main()\n</code></pre><p> This exception also results from a coding error. To correct it, call a parsing method that doesnâ€™t require a precise format, such as <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a> or <a class=\"xref\" href=\"system.guid#System_Guid_Parse_\" data-linktype=\"relative-path\">Parse</a>, or substitute a valid format string. The following example corrects the error by calling the <a class=\"xref\" href=\"system.guid#System_Guid_Parse_\" data-linktype=\"relative-path\">Parse</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.FormatException#10\">Module Example\n   Public Sub Main()\n      Dim guidString As String = &quot;ba748d5c-ae5f-4cca-84e5-1ac5291c38cb&quot;\n      Console.WriteLine(Guid.Parse(guidString))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;   ba748d5c-ae5f-4cca-84e5-1ac5291c38cb\n</code></pre><pre><code class=\"lang-cs\" name=\"System.FormatException#10\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string guidString = &quot;ba748d5c-ae5f-4cca-84e5-1ac5291c38cb&quot;;\n      Console.WriteLine(Guid.Parse(guidString));\n   }\n}\n// The example displays the following output:\n//    ba748d5c-ae5f-4cca-84e5-1ac5291c38cb\n</code></pre></li>\n<li><p>One or more of the indexes of the format items in a <a href=\"../Topic/Composite%20Formatting.md\" data-linktype=\"relative-path\">composite format string</a> is greater than the indexes of the items in the object list or parameter array. In the following example, the largest index of a format item in the format string is 3. Because the indexes of items in the object list are zero-based, this format string would require the object list to have four items. Instead, it has only three, <code>dat</code>, <code>temp</code>, and <code>scale</code>, so the code results in a FormatException exception at run time:.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#1\">using System;\n\npublic class Example\n{\n   public enum TemperatureScale \n   { Celsius, Fahrenheit, Kelvin }\n\n   public static void Main()\n   {\n      String info = GetCurrentTemperature();\n      Console.WriteLine(info);\n   }\n\n   private static String GetCurrentTemperature()\n   {\n      DateTime dat = DateTime.Now;\n      Decimal temp = 20.6m;\n      TemperatureScale scale = TemperatureScale.Celsius;\n      String result;\n      \n      result = String.Format(&quot;At {0:t} on {1:D}, the temperature is {2:F1} {3:G}&quot;,\n                             dat, temp, scale);    \n      return result;\n   }\n}\n// The example displays output like the following:\n//    Unhandled Exception: System.FormatException: Format specifier was invalid.\n//       at System.Number.FormatDecimal(Decimal value, String format, NumberFormatInfo info)\n//       at System.Decimal.ToString(String format, IFormatProvider provider)\n//       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n//       at System.String.Format(IFormatProvider provider, String format, Object[] args)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#1\">Module Example\n   Public Enum TemperatureScale As Integer\n      Celsius\n      Fahrenheit\n      Kelvin\n   End Enum\n\n   Public Sub Main()\n      Dim info As String = GetCurrentTemperature()\n      Console.WriteLine(info)\n   End Sub\n\n   Private Function GetCurrentTemperature() As String\n      Dim dat As Date = Date.Now\n      Dim temp As Decimal = 20.6d\n      Dim scale As TemperatureScale = TemperatureScale.Celsius\n      Dim result As String \n      \n      result = String.Format(&quot;At {0:t} on {1:D}, the temperature is {2:F1} {3:G}&quot;,\n                             dat, temp, scale)    \n      Return result\n   End Function\nEnd Module\n&#39; The example displays output like the following:\n&#39;    Unhandled Exception: System.FormatException: Format specifier was invalid.\n&#39;       at System.Number.FormatDecimal(Decimal value, String format, NumberFormatInfo info)\n&#39;       at System.Decimal.ToString(String format, IFormatProvider provider)\n&#39;       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n&#39;       at System.String.Format(IFormatProvider provider, String format, Object[] args)\n&#39;       at Example.Main()\n</code></pre><p> In this case, the FormatException exception is a result of developer error. It should be corrected rather than handled in a <code>try/catch</code> block by making sure that each item in the object list corresponds to the index of a format item. To correct this example, change the index of the second format item to refer to the <code>dat</code> variable, and decrement the index of each subsequent format item by one.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#2\">using System;\n\npublic class Example\n{\n   public enum TemperatureScale \n   { Celsius, Fahrenheit, Kelvin }\n\n   public static void Main()\n   {\n      String info = GetCurrentTemperature();\n      Console.WriteLine(info);\n   }\n\n   private static String GetCurrentTemperature()\n   {\n      DateTime dat = DateTime.Now;\n      Decimal temp = 20.6m;\n      TemperatureScale scale = TemperatureScale.Celsius;\n      String result;\n      \n      result = String.Format(&quot;At {0:t} on {0:D}, the temperature is {1:F1} {2:G}&quot;,\n                             dat, temp, scale);    \n      return result;\n   }\n}\n// The example displays output like the following:\n//    At 10:40 AM on Wednesday, June 04, 2014, the temperature is 20.6 Celsius\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#2\">Module Example\n   Public Enum TemperatureScale As Integer\n      Celsius\n      Fahrenheit\n      Kelvin\n   End Enum\n\n   Public Sub Main()\n      Dim info As String = GetCurrentTemperature()\n      Console.WriteLine(info)\n   End Sub\n\n   Private Function GetCurrentTemperature() As String\n      Dim dat As Date = Date.Now\n      Dim temp As Decimal = 20.6d\n      Dim scale As TemperatureScale = TemperatureScale.Celsius\n      Dim result As String \n      \n      result = String.Format(&quot;At {0:t} on {0:D}, the temperature is {1:F1} {2:G}&quot;,\n                             dat, temp, scale)    \n      Return result\n   End Function\nEnd Module\n&#39; The example displays output like the following:\n&#39;       At 10:40 AM on Wednesday, June 04, 2014, the temperature is 20.6 Celsius\n</code></pre></li>\n<li><p>The composite format string isn&#39;t well-formed. When this happens, the FormatException exception is always a result of developer error. It should be corrected rather than handled in a <code>try/catch</code> block.  </p>\n<p> Trying to include literal braces in a string, as the following example does, will throw the exception.  </p>\n<pre><code class=\"lang-cs\" name=\"System.String.Format#23\">      result = String.Format(&quot;The text has {0} &#39;{&#39; characters and {1} &#39;}&#39; characters.&quot;,\n                             nOpen, nClose);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.String.Format#23\">      result = String.Format(&quot;The text has {0} &#39;{&#39; characters and {1} &#39;}&#39; characters.&quot;,\n                             nOpen, nClose)\n</code></pre><p> The recommended technique for including literal braces in a composite format string is to include them in the object list and use format items to insert them into the result string. For example, you can modify the previous composite format string as shown here.  </p>\n<pre><code class=\"lang-cs\" name=\"System.String.Format#24\">      result = String.Format(&quot;The text has {0} &#39;{{&#39; characters and {1} &#39;}}&#39; characters.&quot;,\n                             nOpen, nClose);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.String.Format#24\">      result = String.Format(&quot;The text has {0} &#39;{{&#39; characters and {1} &#39;}}&#39; characters.&quot;,\n                             nOpen, nClose)\n</code></pre><p> The exception is also thrown if your format string contains a typo. The following call to the <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a> method omits a closing brace and pairs an opening brace with a closing bracket.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#3\">      int n1 = 10;\n      int n2 = 20;\n      String result = String.Format(&quot;{0 + {1] = {2}&quot;, \n                                    n1, n2, n1 + n2);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#3\">      Dim n1 As Integer = 10\n      Dim n2 As Integer = 20\n      Dim result As String = String.Format(&quot;{0 + {1] = {2}&quot;, \n                                           n1, n2, n1 + n2)\n</code></pre><p> To correct the error, ensure that all opening and closing braces correspond.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#4\">      String result = String.Format(&quot;{0} + {1} = {2}&quot;, \n                                    n1, n2, n1 + n2);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#4\">      Dim result As String = String.Format(&quot;{0} + {1} = {2}&quot;, \n                                           n1, n2, n1 + n2)\n</code></pre></li>\n<li><p>You&#39;ve supplied the object list in a composite formatting method as a strongly typed parameter array, and the FormatException exception indicates that the index of one or more format items exceeds the number of arguments in the object list. This occurs because no explicit conversion between array types exists, so instead the compiler treats the array as a single argument rather than as a parameter array. For example, the following call to the [Console.WriteLine(String,â€‚Object&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; method throws a FormatException exception, although the highest index of the format items is 3, and the parameter array of type <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> has four elements.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#5\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Random rnd = new Random();\n      int[]  numbers = new int[4];\n      int total = 0;\n      for (int ctr = 0; ctr &lt;= 2; ctr++) {\n         int number = rnd.Next(1001);\n         numbers[ctr] = number;\n         total += number;\n      }   \n      numbers[3] = total;\n      Console.WriteLine(&quot;{0} + {1} + {2} = {3}&quot;, numbers);   \n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: \n//    System.FormatException: \n//       Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\n//       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n//       at System.IO.TextWriter.WriteLine(String format, Object arg0)\n//       at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#5\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim rnd As New Random()\n      Dim numbers(3) As Integer\n      Dim total As Integer = 0\n      For ctr = 0 To 2\n         Dim number As Integer = rnd.Next(1001)\n         numbers(ctr) = number\n         total += number\n      Next\n      numbers(3) = total\n      Console.WriteLine(&quot;{0} + {1} + {2} = {3}&quot;, numbers)   \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: \n&#39;    System.FormatException: \n&#39;       Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\n&#39;       at System.Text.StringBuilder.AppendFormat(IFormatProvider provider, String format, Object[] args)\n&#39;       at System.IO.TextWriter.WriteLine(String format, Object arg0)\n&#39;       at System.IO.TextWriter.SyncTextWriter.WriteLine(String format, Object arg0)\n&#39;       at Example.Main()\n</code></pre><p> Instead of handling this exception, you should eliminate its cause. Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the composite formatting method. The following example provides one implementation.  </p>\n<pre><code class=\"lang-cs\" name=\"System.FormatException#6\">using System;\nusing System.Collections.Generic;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Random rnd = new Random();\n      int[]  numbers = new int[4];\n      int total = 0;\n      for (int ctr = 0; ctr &lt;= 2; ctr++) {\n         int number = rnd.Next(1001);\n         numbers[ctr] = number;\n         total += number;\n      }   \n      numbers[3] = total;\n      object[] values = new object[numbers.Length];\n      numbers.CopyTo(values, 0);\n      Console.WriteLine(&quot;{0} + {1} + {2} = {3}&quot;, values);   \n   }\n}\n// The example displays output like the following:\n//        477 + 956 + 901 = 2334\n</code></pre><pre><code class=\"lang-vb\" name=\"System.FormatException#6\">Imports System.Collections.Generic\n\nModule Example\n   Public Sub Main()\n      Dim rnd As New Random()\n      Dim numbers(3) As Integer\n      Dim total As Integer = 0\n      For ctr = 0 To 2\n         Dim number As Integer = rnd.Next(1001)\n         numbers(ctr) = number\n         total += number\n      Next\n      numbers(3) = total\n      Dim values(numbers.Length - 1) As Object\n      numbers.CopyTo(values, 0) \n      Console.WriteLine(&quot;{0} + {1} + {2} = {3}&quot;, values)   \n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       477 + 956 + 901 = 2334\n</code></pre><p>FormatException uses the HRESULT COR_E_FORMAT, which has the value 0x80131537.  </p>\n<p>The FormatException class derives from  <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> and adds no unique members. For a list of initial property values for an instance of FormatException, see the <a class=\"xref\" href=\"system.formatexception#System_FormatException__ctor_\" data-linktype=\"relative-path\">FormatException</a> constructors.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_FormatException__ctor\" data-linktype=\"self-bookmark\">FormatException()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_FormatException__ctor_System_String_\" data-linktype=\"self-bookmark\">FormatException(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with a specified error message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_FormatException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">FormatException(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with serialized data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_FormatException__ctor_System_String_System_Exception_\" data-linktype=\"self-bookmark\">FormatException(String,Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_FormatException__ctor\">\r\n    \r\n            <a id=\"System_FormatException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatException()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FormatException ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property of the new instance to a system-supplied message that describes the error, such as &quot;Invalid format.&quot; This message takes into account the current system culture.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_FormatException__ctor_System_String_\">\r\n    \r\n            <a id=\"System_FormatException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatException(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with a specified error message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FormatException (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message that describes the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the <a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a> property of the new exception using the <code>message</code> parameter. The content of <code>message</code> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>A null reference (<code>Nothing</code> in Visual Basic).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_FormatException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_FormatException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatException(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with serialized data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that holds the serialized object data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The contextual information about the source or destination.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_FormatException__ctor_System_String_System_Exception_\">\r\n    \r\n            <a id=\"System_FormatException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatException(String,Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public FormatException (string message, Exception innerException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The error message that explains the reason for the exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (<code>Nothing</code> in Visual Basic), the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property returns the same value that is passed into the constructor, or a null reference (<code>Nothing</code> in Visual Basic) if the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property does not supply the inner exception value to the constructor.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The inner exception reference.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The error message string.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.FormatException.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.FormatException.yml\">\r\n<meta name=\"APIName\" content=\"System.FormatException\">\r\n<meta name=\"APIName\" content=\"System.FormatException..ctor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e863859e-8a59-dc2d-affc-8de08897f82f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.FormatException\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.FormatException.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.FormatException.yml","open_to_public_contributors":true,"api_name":["System.FormatException","System.FormatException..ctor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.FormatException","System::FormatException","System.FormatException.#ctor","System::FormatException::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e863859e-8a59-dc2d-affc-8de08897f82f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/FormatException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FormatException class | Microsoft Docs","_op_ogTitle":"FormatException class","description":"The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.FormatException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.formatexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.formatexception","fileRelativePath":"System.FormatException.html"},"themesRelativePathToOutputRoot":"_themes/"}