{"content":"    \r\n    <h1 id=\"System_IO_Compression_DeflateStream\">\r\n      <span class=\"lang-csharp\">DeflateStream</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DeflateStream : System.IO.Stream</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DeflateStream</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanTimeout\" data-linktype=\"relative-path\">CanTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_\" data-linktype=\"relative-path\">CopyTo(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_\" data-linktype=\"relative-path\">CopyToAsync(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CreateWaitHandle\" data-linktype=\"relative-path\">CreateWaitHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">FlushAsync(CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ObjectInvariant\" data-linktype=\"relative-path\">ObjectInvariant()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadByte\" data-linktype=\"relative-path\">ReadByte()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadTimeout\" data-linktype=\"relative-path\">ReadTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Synchronized_System_IO_Stream_\" data-linktype=\"relative-path\">Synchronized(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteByte_System_Byte_\" data-linktype=\"relative-path\">WriteByte(Byte)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteTimeout\" data-linktype=\"relative-path\">WriteTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression. Starting with the .NET Framework 4.5, the DeflateStream class uses the zlib library. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  </p>\n<p> This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <a class=\"xref\" href=\"system.io.compression.ziparchive\" data-linktype=\"relative-path\">ZipArchive</a> and the <a class=\"xref\" href=\"system.io.compression.ziparchiveentry\" data-linktype=\"relative-path\">ZipArchiveEntry</a> classes.  </p>\n<p> The DeflateStream class uses the same compression algorithm as the gzip data format used by the <a class=\"xref\" href=\"system.io.compression.gzipstream\" data-linktype=\"relative-path\">GZipStream</a> class.  </p>\n<p> The compression functionality in DeflateStream and <a class=\"xref\" href=\"system.io.compression.gzipstream\" data-linktype=\"relative-path\">GZipStream</a> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The DeflateStream and <a class=\"xref\" href=\"system.io.compression.gzipstream\" data-linktype=\"relative-path\">GZipStream</a> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionLevel_\" data-linktype=\"self-bookmark\">DeflateStream(Stream,CompressionLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_\" data-linktype=\"self-bookmark\">DeflateStream(Stream,CompressionMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionLevel_System_Boolean_\" data-linktype=\"self-bookmark\">DeflateStream(Stream,CompressionLevel,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression level, and optionally leaves the stream open.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_System_Boolean_\" data-linktype=\"self-bookmark\">DeflateStream(Stream,CompressionMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression mode, and optionally leaves the stream open.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_BaseStream\" data-linktype=\"self-bookmark\">BaseStream</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_CanRead\" data-linktype=\"self-bookmark\">CanRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the stream supports reading while decompressing a file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_CanSeek\" data-linktype=\"self-bookmark\">CanSeek</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the stream supports seeking.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_CanWrite\" data-linktype=\"self-bookmark\">CanWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the stream supports writing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Length\" data-linktype=\"self-bookmark\">Length</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous read operation. (Consider using the <span class=\"xref\">stem.IO.Stream.ReadAsync*</span> method instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous write operation. (Consider using the <span class=\"xref\">stem.IO.Stream.WriteAsync*</span> method instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_EndRead_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndRead(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Waits for the pending asynchronous read to complete. (Consider using the <span class=\"xref\">stem.IO.Stream.ReadAsync*</span> method instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_EndWrite_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndWrite(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous write operation. (Consider using the <span class=\"xref\">stem.IO.Stream.WriteAsync*</span> method instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The current implementation of this method has no functionality.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Read_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads a number of decompressed bytes into the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Seek_System_Int64_System_IO_SeekOrigin_\" data-linktype=\"self-bookmark\">Seek(Int64,SeekOrigin)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This operation is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_SetLength_System_Int64_\" data-linktype=\"self-bookmark\">SetLength(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This operation is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Compression_DeflateStream_Write_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes compressed bytes to the underlying stream from the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionLevel_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeflateStream(Stream,CompressionLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to compress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.compression.compressionlevel\" data-linktype=\"relative-path\">CompressionLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support write operations such as compression. (The <span class=\"xref\">stem.IO.Stream.CanWrite*</span> property on the stream object is <code>false</code>.)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class.  </p>\n<p> This constructor overload uses the compression mode <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a>. To set the compression mode to another value, use the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_\" data-linktype=\"relative-path\">DeflateStream(Stream,CompressionMode)</a> or <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_System_Boolean_\" data-linktype=\"relative-path\">DeflateStream(Stream,CompressionMode,Boolean)</a> overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set the compression level when creating a <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Compression.DeflateStream#1\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.IO.Compression;\n\nnamespace ConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string directoryPath = @&quot;c:\\users\\public\\reports&quot;;\n            DirectoryInfo directorySelected = new DirectoryInfo(directoryPath);\n\n            foreach (FileInfo fileToCompress in directorySelected.EnumerateFiles())\n            {\n                Compress(fileToCompress);\n            }\n        }\n\n        public static void Compress(FileInfo fileToCompress)\n        {\n            using (FileStream originalFileStream = fileToCompress.OpenRead())\n            {\n                if ((File.GetAttributes(fileToCompress.FullName) &amp; FileAttributes.Hidden) != FileAttributes.Hidden &amp; fileToCompress.Extension != &quot;.cmp&quot;)\n                {\n                    using (FileStream compressedFileStream = File.Create(fileToCompress.FullName + &quot;.cmp&quot;))\n                    {\n                        using (DeflateStream compressionStream = new DeflateStream(compressedFileStream, CompressionLevel.Fastest))\n                        {\n                            originalFileStream.CopyTo(compressionStream);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Compression.DeflateStream#1\">Imports System.IO\nImports System.IO.Compression\n\nModule Module1\n\n    Sub Main()\n        Dim directoryPath As String = &quot;c:\\users\\public\\reports&quot;\n        Dim directorySelected As DirectoryInfo = New DirectoryInfo(directoryPath)\n\n        For Each fileToCompress As FileInfo In directorySelected.EnumerateFiles()\n            Compress(fileToCompress)\n        Next\n    End Sub\n\n    Public Sub Compress(fileToCompress As FileInfo)\n        Using originalFileStream As FileStream = fileToCompress.OpenRead()\n            If ((File.GetAttributes(fileToCompress.FullName) &amp; FileAttributes.Hidden) &lt;&gt; FileAttributes.Hidden And fileToCompress.Extension &lt;&gt; &quot;.cmp&quot;) Then\n                Using compressedFileStream As FileStream = File.Create(fileToCompress.FullName + &quot;.cmp&quot;)\n                    Using compressionStream As DeflateStream = New DeflateStream(compressedFileStream, CompressionLevel.Fastest)\n                        originalFileStream.CopyTo(compressionStream)\n                    End Using\n                End Using\n            End If\n        End Using\n    End Sub\n\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeflateStream(Stream,CompressionMode)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to compress or decompress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mode</code> is not a valid <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> value.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> and <span class=\"xref\">stem.IO.Stream.CanWrite*</span> is <code>false</code>.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> and <span class=\"xref\">stem.IO.Stream.CanRead*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  </p>\n<p> If an instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class is created with the <code>mode</code> parameter equal to <code>Compress</code>, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  </p>\n<p> Using the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class to compress a file larger than 4 GB raises an exception.  </p>\n<p> By default, the compression level is set to <a class=\"xref\" href=\"system.io.compression.compressionlevel\" data-linktype=\"relative-path\">CompressionLevel</a> when the compression mode is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class to compress and decompress a file.  </p>\n<pre><code class=\"lang-vb\" name=\"IO.Compression.Deflate1#1\">Imports System.IO\nImports System.IO.Compression\n\nPublic Class Program\n    Shared directoryPath As String = &quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp&quot;\n    Public Shared Sub Main()\n\n        Dim directorySelected As New DirectoryInfo(directoryPath)\n        Compress(directorySelected)\n\n\n        For Each fileToDecompress As FileInfo In directorySelected.GetFiles(&quot;*.cmp&quot;)\n            Decompress(fileToDecompress)\n        Next\n    End Sub\n\n    Public Shared Sub Compress(directorySelected As DirectoryInfo)\n\n        For Each file__1 As FileInfo In directorySelected.GetFiles(&quot;*.xml&quot;)\n            Using originalFileStream As FileStream = file__1.OpenRead()\n                If (File.GetAttributes(file__1.FullName) And FileAttributes.Hidden) &lt;&gt; FileAttributes.Hidden And file__1.Extension &lt;&gt; &quot;.cmp&quot; Then\n                    Using compressedFileStream As FileStream = File.Create(file__1.FullName &amp; &quot;.cmp&quot;)\n                        Using compressionStream As Compression.DeflateStream = New DeflateStream(compressedFileStream, CompressionMode.Compress)\n                            originalFileStream.CopyTo(compressionStream)\n                        End Using\n                    End Using\n\n                    Dim info As New FileInfo(directoryPath &amp; &quot;\\&quot; &amp; file__1.Name &amp; &quot;.cmp&quot;)\n                    Console.WriteLine(&quot;Compressed {0} from {1} to {2} bytes.&quot;, file__1.Name, file__1.Length, info.Length)\n                End If\n            End Using\n        Next\n    End Sub\n\n    Public Shared Sub Decompress(fileToDecompress As FileInfo)\n        Using originalFileStream As FileStream = fileToDecompress.OpenRead()\n            Dim currentFileName As String = fileToDecompress.FullName\n            Dim newFileName As String = currentFileName.Remove(currentFileName.Length - fileToDecompress.Extension.Length)\n\n            Using decompressedFileStream As FileStream = File.Create(newFileName)\n                Using decompressionStream As New DeflateStream(originalFileStream, CompressionMode.Decompress)\n                    decompressionStream.CopyTo(decompressedFileStream)\n                    Console.WriteLine(&quot;Decompressed: {0}&quot;, fileToDecompress.Name)\n                End Using\n            End Using\n        End Using\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"IO.Compression.Deflate1#1\">using System;\nusing System.IO;\nusing System.IO.Compression;\n\npublic class Program\n{\n    static string directoryPath = @&quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp&quot;;\n    public static void Main()\n    {\n        \n        DirectoryInfo directorySelected = new DirectoryInfo(directoryPath);\n           Compress(directorySelected);\n    \t\n\n        foreach (FileInfo fileToDecompress in directorySelected.GetFiles(&quot;*.cmp&quot;))\n        {\n            Decompress(fileToDecompress);\n        }\n    }\n\n    public static void Compress(DirectoryInfo directorySelected)\n    {\n        \n     \n        foreach (FileInfo file in directorySelected.GetFiles(&quot;*.xml&quot;))\n        using (FileStream originalFileStream = file.OpenRead())\n        {\n            if ((File.GetAttributes(file.FullName) &amp; FileAttributes.Hidden)\n                != FileAttributes.Hidden &amp; file.Extension != &quot;.cmp&quot;)\n            {\n                using (FileStream compressedFileStream = File.Create(file.FullName + &quot;.cmp&quot;))\n                {\n                    using (DeflateStream compressionStream = new DeflateStream(compressedFileStream, CompressionMode.Compress))\n                    {\n                        originalFileStream.CopyTo(compressionStream);\n                    }\n                }\n\n                FileInfo info = new FileInfo(directoryPath + &quot;\\\\&quot; + file.Name + &quot;.cmp&quot;);\n                Console.WriteLine(&quot;Compressed {0} from {1} to {2} bytes.&quot;, file.Name, file.Length, info.Length);\n            }\n        }\n    }\n\n    public static void Decompress(FileInfo fileToDecompress)\n    {\n        using (FileStream originalFileStream = fileToDecompress.OpenRead())\n        {\n            string currentFileName = fileToDecompress.FullName;\n            string newFileName = currentFileName.Remove(currentFileName.Length - fileToDecompress.Extension.Length);\n\n            using (FileStream decompressedFileStream = File.Create(newFileName))\n        \t{\n                using (DeflateStream decompressionStream = new DeflateStream(originalFileStream, CompressionMode.Decompress))\n        \t    {\n                    decompressionStream.CopyTo(decompressedFileStream);\n                    Console.WriteLine(&quot;Decompressed: {0}&quot;, fileToDecompress.Name);\n        \t    }\n        \t}\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionLevel_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeflateStream(Stream,CompressionLevel,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression level, and optionally leaves the stream open.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to compress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.compression.compressionlevel\" data-linktype=\"relative-path\">CompressionLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to leave the stream object open after disposing the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support write operations such as compression. (The <span class=\"xref\">stem.IO.Stream.CanWrite*</span> property on the stream object is <code>false</code>.)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class, and whether to leave the stream object open after disposing the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object.  </p>\n<p> This constructor overload uses the compression mode <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a>. To set the compression mode to another value, use the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_\" data-linktype=\"relative-path\">DeflateStream(Stream,CompressionMode)</a> or <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_System_Boolean_\" data-linktype=\"relative-path\">DeflateStream(Stream,CompressionMode,Boolean)</a> overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set the compression level when creating a <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object and how to leave the stream open.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Compression.DeflateStream#2\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.IO.Compression;\n\nnamespace ConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string directoryPath = @&quot;c:\\users\\public\\reports&quot;;\n            DirectoryInfo directorySelected = new DirectoryInfo(directoryPath);\n\n            foreach (FileInfo fileToCompress in directorySelected.EnumerateFiles())\n            {\n                Compress(fileToCompress);\n            }\n        }\n\n        public static void Compress(FileInfo fileToCompress)\n        {\n            using (FileStream originalFileStream = fileToCompress.OpenRead())\n            {\n                if ((File.GetAttributes(fileToCompress.FullName) &amp; FileAttributes.Hidden) != FileAttributes.Hidden &amp; fileToCompress.Extension != &quot;.cmp&quot;)\n                {\n                    using (FileStream compressedFileStream = File.Create(fileToCompress.FullName + &quot;.cmp&quot;))\n                    {\n                        using (DeflateStream compressionStream = new DeflateStream(compressedFileStream, CompressionLevel.Fastest, true))\n                        {\n                            originalFileStream.CopyTo(compressionStream);\n                        }\n                        Console.WriteLine(string.Format(&quot;file compressed to {0} bytes&quot;, compressedFileStream.Length));\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Compression.DeflateStream#2\">Imports System.IO\nImports System.IO.Compression\n\nModule Module1\n\n    Sub Main()\n        Dim directoryPath As String = &quot;c:\\users\\public\\reports&quot;\n        Dim directorySelected As DirectoryInfo = New DirectoryInfo(directoryPath)\n\n        For Each fileToCompress As FileInfo In directorySelected.EnumerateFiles()\n            Compress(fileToCompress)\n        Next\n    End Sub\n\n    Public Sub Compress(fileToCompress As FileInfo)\n        Using originalFileStream As FileStream = fileToCompress.OpenRead()\n            If ((File.GetAttributes(fileToCompress.FullName) &amp; FileAttributes.Hidden) &lt;&gt; FileAttributes.Hidden And fileToCompress.Extension &lt;&gt; &quot;.cmp&quot;) Then\n                Using compressedFileStream As FileStream = File.Create(fileToCompress.FullName + &quot;.cmp&quot;)\n                    Using compressionStream As DeflateStream = New DeflateStream(compressedFileStream, CompressionLevel.Fastest, True)\n                        originalFileStream.CopyTo(compressionStream)\n                    End Using\n                    Console.WriteLine(String.Format(&quot;file compressed to {0} bytes&quot;, compressedFileStream.Length))\n                End Using\n            End If\n        End Using\n    End Sub\n\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream__ctor_System_IO_Stream_System_IO_Compression_CompressionMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeflateStream(Stream,CompressionMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class by using the specified stream and compression mode, and optionally leaves the stream open.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to compress or decompress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that indicates whether to compress or decompress the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>leaveOpen</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to leave the stream open after disposing the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mode</code> is not a valid <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> value.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> and <span class=\"xref\">stem.IO.Stream.CanWrite*</span> is <code>false</code>.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> and <span class=\"xref\">stem.IO.Stream.CanRead*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  </p>\n<p> If an instance of the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class is created with the <code>mode</code> parameter equal to <code>Compress</code>, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  </p>\n<p> Using the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class to compress a file larger than 4 GB raises an exception.  </p>\n<p> By default, the compression level is set to <a class=\"xref\" href=\"system.io.compression.compressionlevel\" data-linktype=\"relative-path\">CompressionLevel</a> when the compression mode is <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> class to compress and decompress a file.  </p>\n<pre><code class=\"lang-vb\" name=\"IO.Compression.Deflate1#1\">Imports System.IO\nImports System.IO.Compression\n\nPublic Class Program\n    Shared directoryPath As String = &quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp&quot;\n    Public Shared Sub Main()\n\n        Dim directorySelected As New DirectoryInfo(directoryPath)\n        Compress(directorySelected)\n\n\n        For Each fileToDecompress As FileInfo In directorySelected.GetFiles(&quot;*.cmp&quot;)\n            Decompress(fileToDecompress)\n        Next\n    End Sub\n\n    Public Shared Sub Compress(directorySelected As DirectoryInfo)\n\n        For Each file__1 As FileInfo In directorySelected.GetFiles(&quot;*.xml&quot;)\n            Using originalFileStream As FileStream = file__1.OpenRead()\n                If (File.GetAttributes(file__1.FullName) And FileAttributes.Hidden) &lt;&gt; FileAttributes.Hidden And file__1.Extension &lt;&gt; &quot;.cmp&quot; Then\n                    Using compressedFileStream As FileStream = File.Create(file__1.FullName &amp; &quot;.cmp&quot;)\n                        Using compressionStream As Compression.DeflateStream = New DeflateStream(compressedFileStream, CompressionMode.Compress)\n                            originalFileStream.CopyTo(compressionStream)\n                        End Using\n                    End Using\n\n                    Dim info As New FileInfo(directoryPath &amp; &quot;\\&quot; &amp; file__1.Name &amp; &quot;.cmp&quot;)\n                    Console.WriteLine(&quot;Compressed {0} from {1} to {2} bytes.&quot;, file__1.Name, file__1.Length, info.Length)\n                End If\n            End Using\n        Next\n    End Sub\n\n    Public Shared Sub Decompress(fileToDecompress As FileInfo)\n        Using originalFileStream As FileStream = fileToDecompress.OpenRead()\n            Dim currentFileName As String = fileToDecompress.FullName\n            Dim newFileName As String = currentFileName.Remove(currentFileName.Length - fileToDecompress.Extension.Length)\n\n            Using decompressedFileStream As FileStream = File.Create(newFileName)\n                Using decompressionStream As New DeflateStream(originalFileStream, CompressionMode.Decompress)\n                    decompressionStream.CopyTo(decompressedFileStream)\n                    Console.WriteLine(&quot;Decompressed: {0}&quot;, fileToDecompress.Name)\n                End Using\n            End Using\n        End Using\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"IO.Compression.Deflate1#1\">using System;\nusing System.IO;\nusing System.IO.Compression;\n\npublic class Program\n{\n    static string directoryPath = @&quot;c:&nbsp;&nbsp;&nbsp;&nbsp;emp&quot;;\n    public static void Main()\n    {\n        \n        DirectoryInfo directorySelected = new DirectoryInfo(directoryPath);\n           Compress(directorySelected);\n    \t\n\n        foreach (FileInfo fileToDecompress in directorySelected.GetFiles(&quot;*.cmp&quot;))\n        {\n            Decompress(fileToDecompress);\n        }\n    }\n\n    public static void Compress(DirectoryInfo directorySelected)\n    {\n        \n     \n        foreach (FileInfo file in directorySelected.GetFiles(&quot;*.xml&quot;))\n        using (FileStream originalFileStream = file.OpenRead())\n        {\n            if ((File.GetAttributes(file.FullName) &amp; FileAttributes.Hidden)\n                != FileAttributes.Hidden &amp; file.Extension != &quot;.cmp&quot;)\n            {\n                using (FileStream compressedFileStream = File.Create(file.FullName + &quot;.cmp&quot;))\n                {\n                    using (DeflateStream compressionStream = new DeflateStream(compressedFileStream, CompressionMode.Compress))\n                    {\n                        originalFileStream.CopyTo(compressionStream);\n                    }\n                }\n\n                FileInfo info = new FileInfo(directoryPath + &quot;\\\\&quot; + file.Name + &quot;.cmp&quot;);\n                Console.WriteLine(&quot;Compressed {0} from {1} to {2} bytes.&quot;, file.Name, file.Length, info.Length);\n            }\n        }\n    }\n\n    public static void Decompress(FileInfo fileToDecompress)\n    {\n        using (FileStream originalFileStream = fileToDecompress.OpenRead())\n        {\n            string currentFileName = fileToDecompress.FullName;\n            string newFileName = currentFileName.Remove(currentFileName.Length - fileToDecompress.Extension.Length);\n\n            using (FileStream decompressedFileStream = File.Create(newFileName))\n        \t{\n                using (DeflateStream decompressionStream = new DeflateStream(originalFileStream, CompressionMode.Decompress))\n        \t    {\n                    decompressionStream.CopyTo(decompressedFileStream);\n                    Console.WriteLine(&quot;Decompressed: {0}&quot;, fileToDecompress.Name);\n        \t    }\n        \t}\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_BaseStream\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_BaseStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseStream</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream BaseStream { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </div>\r\n                  <p>A stream object that represents the underlying stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The underlying stream is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_CanRead\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the stream supports reading while decompressing a file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> value is <code>Decompress</code>, and the underlying stream is opened and supports reading; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_CanSeek\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_CanSeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanSeek</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the stream supports seeking.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanSeek { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_CanWrite\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_CanWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the stream supports writing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> value is <code>Compress</code>, and the underlying stream supports writing and is not closed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Length\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Length_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Length</div>        \r\n          </div>\r\n    \r\n            <p>This property is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Length { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A long value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This property is not supported on this stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Position\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>This property is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A long value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This property is not supported on this stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_BeginRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous read operation. (Consider using the <span class=\"xref\">stem.IO.Stream.ReadAsync*</span> method instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginRead (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array to read the data into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>array</code> at which to begin reading data from the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to read.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional asynchronous callback, to be called when the read operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-provided object that distinguishes this particular asynchronous read request from other requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An  object that represents the asynchronous read operation, which could still be pending.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The method tried to read asynchronously past the end of the stream, or a disk error occurred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>One or more of the arguments is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> implementation does not support the read operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This call cannot be completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the .NET Framework 4.5, you can perform asynchronous read operations by using the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a> method. The BeginRead method is still available in the .NET Framework 4.5 to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  </p>\n<p> Pass the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> return value to the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called BeginRead or in a callback passed to BeginRead.  </p>\n<p> The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.  </p>\n<p> Multiple simultaneous asynchronous requests render the request completion order uncertain.  </p>\n<p> Use the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property to determine whether the current <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object supports reading.  </p>\n<p> If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginRead. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_BeginWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous write operation. (Consider using the <span class=\"xref\">stem.IO.Stream.WriteAsync*</span> method instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginWrite (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to write data from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>buffer</code> to begin writing from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional asynchronous callback, to be called when the write operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-provided object that distinguishes this particular asynchronous write request from other requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An  object that represents the asynchronous write operation, which could still be pending.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The method tried to write asynchronously past the end of the stream, or a disk error occurred.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>One or more of the arguments is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> implementation does not support the write operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The write operation cannot be performed because the stream is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the .NET Framework 4.5, you can perform asynchronous write operations by using the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a> method. The BeginWrite method is still available in the .NET Framework 4.5 to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  </p>\n<p> Pass the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object returned by the current method to <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called BeginWrite or in a callback passed to BeginWrite. If an error occurs during an asynchronous write operation, an exception will not be thrown until <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> is called with the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned by this method.  </p>\n<p> If a stream is writable, writing at the end of the stream expands the stream.  </p>\n<p> The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.  </p>\n<p> Use the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_CanWrite_\" data-linktype=\"relative-path\">CanWrite</a> property to determine whether the current <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> object supports writing.  </p>\n<p> If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginWrite. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes Dispose with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> references. This method invokes the <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_EndRead_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_EndRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRead(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Waits for the pending asynchronous read to complete. (Consider using the <span class=\"xref\">stem.IO.Stream.ReadAsync*</span> method instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int EndRead (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The reference to the pending asynchronous request to finish.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <a class=\"xref\" href=\"system.io.compression.deflatestream\" data-linktype=\"relative-path\">DeflateStream</a> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> did not originate from a <span class=\"xref\">stem.IO.Compression.DeflateStream.BeginRead*</span> method on the current stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown during a call to <span class=\"xref\">stem.Threading.WaitHandle.WaitOne*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the .NET Framework 4.5, you can perform asynchronous read operations by using the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a> method. The EndRead method is still available in the .NET Framework 4.5 to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  </p>\n<p> Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> and EndRead.  </p>\n<p> This method blocks until the I/O operation has completed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_EndWrite_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_EndWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndWrite(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous write operation. (Consider using the <span class=\"xref\">stem.IO.Stream.WriteAsync*</span> method instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EndWrite (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to the outstanding asynchronous I/O request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> did not originate from a <span class=\"xref\">stem.IO.Compression.DeflateStream.BeginWrite*</span> method on the current stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown during a call to <span class=\"xref\">stem.Threading.WaitHandle.WaitOne*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The end write call is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the .NET Framework 4.5, you can perform asynchronous write operations by using the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a> method. The EndWrite method is still available in the .NET Framework 4.5 to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  </p>\n<p> EndWrite must be called only once for every call to the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> method.  </p>\n<p> This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to EndWrite. Exceptions thrown by the thread pool thread will not be visible when calling EndWrite.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Flush\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>The current implementation of this method has no functionality.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Read_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Reads a number of decompressed bytes into the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Read (byte[] array, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to store decompressed bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>array</code> at which the read bytes will be placed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of decompressed bytes to read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes that were read into the byte array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.io.compression.compressionmode\" data-linktype=\"relative-path\">CompressionMode</a> value was <code>Compress</code> when the object was created.  </p>\n<p> - or -  </p>\n<p> The underlying stream does not support reading.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>array</code> length minus the index starting point is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.invaliddataexception\" data-linktype=\"relative-path\">InvalidDataException</a></div>\r\n                  </div>\r\n                  <p>The data is in an invalid format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to compress and decompress bytes by using the Read and <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_Write_\" data-linktype=\"relative-path\">Write</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Compression.DeflateStream#3\">using System;\nusing System.Text;\nusing System.IO;\nusing System.IO.Compression;\n\nnamespace ExampleConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            UnicodeEncoding uniEncode = new UnicodeEncoding();\n\n            byte[] bytesToCompress = uniEncode.GetBytes(&quot;example text to compress and decompress&quot;);\n            Console.WriteLine(&quot;starting with: &quot; + uniEncode.GetString(bytesToCompress));\n\n            using (FileStream fileToCompress = File.Create(&quot;examplefile.gz&quot;))\n            {\n                using (DeflateStream compressionStream = new DeflateStream(fileToCompress, CompressionMode.Compress))\n                {\n                    compressionStream.Write(bytesToCompress, 0, bytesToCompress.Length);\n                }\n            }\n\n            byte[] decompressedBytes = new byte[bytesToCompress.Length];\n            using (FileStream fileToDecompress = File.Open(&quot;examplefile.gz&quot;, FileMode.Open))\n            {\n                using (DeflateStream decompressionStream = new DeflateStream(fileToDecompress, CompressionMode.Decompress))\n                {\n                    decompressionStream.Read(decompressedBytes, 0, bytesToCompress.Length);\n                }\n            }\n            \n            Console.WriteLine(&quot;ending with: &quot; + uniEncode.GetString(decompressedBytes));\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Compression.DeflateStream#3\">Imports System.IO\nImports System.IO.Compression\nImports System.Text\n\nModule Module1\n\n    Sub Main()\n        Dim uniEncode As UnicodeEncoding = New UnicodeEncoding()\n\n        Dim bytesToCompress = uniEncode.GetBytes(&quot;example text to compress and decompress&quot;)\n        Console.WriteLine(&quot;starting with: &quot; + uniEncode.GetString(bytesToCompress))\n\n        Using fileToCompress As FileStream = File.Create(&quot;examplefile.gz&quot;)\n            Using compressionStream As DeflateStream = New DeflateStream(fileToCompress, CompressionMode.Compress)\n                compressionStream.Write(bytesToCompress, 0, bytesToCompress.Length)\n            End Using\n        End Using\n\n        Dim decompressedBytes(bytesToCompress.Length - 1) As Byte\n        Using fileToDecompress As FileStream = File.Open(&quot;examplefile.gz&quot;, FileMode.Open)\n            Using decompressionStream As DeflateStream = New DeflateStream(fileToDecompress, CompressionMode.Decompress)\n                decompressionStream.Read(decompressedBytes, 0, bytesToCompress.Length)\n            End Using\n        End Using\n\n        Console.WriteLine(&quot;ending with: &quot; + uniEncode.GetString(decompressedBytes))\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Seek_System_Int64_System_IO_SeekOrigin_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Seek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Seek(Int64,SeekOrigin)</div>        \r\n          </div>\r\n    \r\n            <p>This operation is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Seek (long offset, System.IO.SeekOrigin origin);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>A long value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This property is not supported on this stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_SetLength_System_Int64_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_SetLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLength(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>This operation is not supported and always throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetLength (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The length of the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This property is not supported on this stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Compression_DeflateStream_Write_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_Compression_DeflateStream_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes compressed bytes to the underlying stream from the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (byte[] array, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer that contains the data to compress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>array</code> from which the bytes will be read.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to compress and decompress bytes by using the <a class=\"xref\" href=\"system.io.compression.deflatestream#System_IO_Compression_DeflateStream_Read_\" data-linktype=\"relative-path\">Read</a> and Write methods.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.Compression.DeflateStream#3\">using System;\nusing System.Text;\nusing System.IO;\nusing System.IO.Compression;\n\nnamespace ExampleConsoleApplication\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            UnicodeEncoding uniEncode = new UnicodeEncoding();\n\n            byte[] bytesToCompress = uniEncode.GetBytes(&quot;example text to compress and decompress&quot;);\n            Console.WriteLine(&quot;starting with: &quot; + uniEncode.GetString(bytesToCompress));\n\n            using (FileStream fileToCompress = File.Create(&quot;examplefile.gz&quot;))\n            {\n                using (DeflateStream compressionStream = new DeflateStream(fileToCompress, CompressionMode.Compress))\n                {\n                    compressionStream.Write(bytesToCompress, 0, bytesToCompress.Length);\n                }\n            }\n\n            byte[] decompressedBytes = new byte[bytesToCompress.Length];\n            using (FileStream fileToDecompress = File.Open(&quot;examplefile.gz&quot;, FileMode.Open))\n            {\n                using (DeflateStream decompressionStream = new DeflateStream(fileToDecompress, CompressionMode.Decompress))\n                {\n                    decompressionStream.Read(decompressedBytes, 0, bytesToCompress.Length);\n                }\n            }\n            \n            Console.WriteLine(&quot;ending with: &quot; + uniEncode.GetString(decompressedBytes));\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.Compression.DeflateStream#3\">Imports System.IO\nImports System.IO.Compression\nImports System.Text\n\nModule Module1\n\n    Sub Main()\n        Dim uniEncode As UnicodeEncoding = New UnicodeEncoding()\n\n        Dim bytesToCompress = uniEncode.GetBytes(&quot;example text to compress and decompress&quot;)\n        Console.WriteLine(&quot;starting with: &quot; + uniEncode.GetString(bytesToCompress))\n\n        Using fileToCompress As FileStream = File.Create(&quot;examplefile.gz&quot;)\n            Using compressionStream As DeflateStream = New DeflateStream(fileToCompress, CompressionMode.Compress)\n                compressionStream.Write(bytesToCompress, 0, bytesToCompress.Length)\n            End Using\n        End Using\n\n        Dim decompressedBytes(bytesToCompress.Length - 1) As Byte\n        Using fileToDecompress As FileStream = File.Open(&quot;examplefile.gz&quot;, FileMode.Open)\n            Using decompressionStream As DeflateStream = New DeflateStream(fileToDecompress, CompressionMode.Decompress)\n                decompressionStream.Read(decompressedBytes, 0, bytesToCompress.Length)\n            End Using\n        End Using\n\n        Console.WriteLine(&quot;ending with: &quot; + uniEncode.GetString(decompressedBytes))\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Compression.DeflateStream.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Compression.DeflateStream.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.BaseStream\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.BeginRead\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.BeginWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.CanRead\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.CanSeek\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.EndRead\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.EndWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Flush\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Length\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Position\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Read\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Seek\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.SetLength\">\r\n<meta name=\"APIName\" content=\"System.IO.Compression.DeflateStream.Write\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3eb763ba-e4b8-1664-bd1f-a25a0c4e0509\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Compression/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Compression.DeflateStream\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Compression.DeflateStream.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Compression.DeflateStream.yml","open_to_public_contributors":true,"api_name":["System.IO.Compression.DeflateStream","System.IO.Compression.DeflateStream..ctor","System.IO.Compression.DeflateStream.BaseStream","System.IO.Compression.DeflateStream.BeginRead","System.IO.Compression.DeflateStream.BeginWrite","System.IO.Compression.DeflateStream.CanRead","System.IO.Compression.DeflateStream.CanSeek","System.IO.Compression.DeflateStream.CanWrite","System.IO.Compression.DeflateStream.Dispose","System.IO.Compression.DeflateStream.EndRead","System.IO.Compression.DeflateStream.EndWrite","System.IO.Compression.DeflateStream.Flush","System.IO.Compression.DeflateStream.Length","System.IO.Compression.DeflateStream.Position","System.IO.Compression.DeflateStream.Read","System.IO.Compression.DeflateStream.Seek","System.IO.Compression.DeflateStream.SetLength","System.IO.Compression.DeflateStream.Write"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Compression.DeflateStream","System::IO::Compression::DeflateStream","System.IO.Compression.DeflateStream.#ctor","System::IO::Compression::DeflateStream::#ctor","System.IO.Compression.DeflateStream.BaseStream","System::IO::Compression::DeflateStream::BaseStream","System.IO.Compression.DeflateStream.BeginRead","System::IO::Compression::DeflateStream::BeginRead","System.IO.Compression.DeflateStream.BeginWrite","System::IO::Compression::DeflateStream::BeginWrite","System.IO.Compression.DeflateStream.CanRead","System::IO::Compression::DeflateStream::CanRead","System.IO.Compression.DeflateStream.CanSeek","System::IO::Compression::DeflateStream::CanSeek","System.IO.Compression.DeflateStream.CanWrite","System::IO::Compression::DeflateStream::CanWrite","System.IO.Compression.DeflateStream.Dispose","System::IO::Compression::DeflateStream::Dispose","System.IO.Compression.DeflateStream.EndRead","System::IO::Compression::DeflateStream::EndRead","System.IO.Compression.DeflateStream.EndWrite","System::IO::Compression::DeflateStream::EndWrite","System.IO.Compression.DeflateStream.Flush","System::IO::Compression::DeflateStream::Flush","System.IO.Compression.DeflateStream.Length","System::IO::Compression::DeflateStream::Length","System.IO.Compression.DeflateStream.Position","System::IO::Compression::DeflateStream::Position","System.IO.Compression.DeflateStream.Read","System::IO::Compression::DeflateStream::Read","System.IO.Compression.DeflateStream.Seek","System::IO::Compression::DeflateStream::Seek","System.IO.Compression.DeflateStream.SetLength","System::IO::Compression::DeflateStream::SetLength","System.IO.Compression.DeflateStream.Write","System::IO::Compression::DeflateStream::Write"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3eb763ba-e4b8-1664-bd1f-a25a0c4e0509","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Compression/DeflateStream.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DeflateStream class | Microsoft Docs","_op_ogTitle":"DeflateStream class","description":"Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.\n","toc_asset_id":"_splitted/System.IO.Compression/toc.json","toc_rel":"_splitted/System.IO.Compression/toc.json","source_url":"","ms.assetid":"System.IO.Compression.DeflateStream","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.compression.deflatestream","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.compression.deflatestream","fileRelativePath":"System.IO.Compression.DeflateStream.html"},"themesRelativePathToOutputRoot":"_themes/"}