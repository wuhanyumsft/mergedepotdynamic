{"content":"    \r\n    <h1 id=\"System_Drawing_Imaging_ImageCodecInfo\">\r\n      <span class=\"lang-csharp\">ImageCodecInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The ImageCodecInfo class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ImageCodecInfo</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ImageCodecInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>GDI+ uses image encoders to convert the images stored in <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> objects to various file formats. Image encoders are built into GDI+ for the BMP, JPEG, GIF, TIFF, and PNG formats. An encoder is invoked when you call the <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_Save_\" data-linktype=\"relative-path\">Save</a> or <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_SaveAdd_\" data-linktype=\"relative-path\">SaveAdd</a> method of a <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> object.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_Clsid\" data-linktype=\"self-bookmark\">Clsid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies a specific codec.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_CodecName\" data-linktype=\"self-bookmark\">CodecName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that contains the name of the codec.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_DllName\" data-linktype=\"self-bookmark\">DllName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_FilenameExtension\" data-linktype=\"self-bookmark\">FilenameExtension</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_Flags\" data-linktype=\"self-bookmark\">Flags</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <a class=\"xref\" href=\"system.drawing.imaging.imagecodecflags\" data-linktype=\"relative-path\">ImageCodecFlags</a> enumeration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_FormatDescription\" data-linktype=\"self-bookmark\">FormatDescription</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that describes the codec&#39;s file format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_FormatID\" data-linktype=\"self-bookmark\">FormatID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies the codec&#39;s format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_MimeType\" data-linktype=\"self-bookmark\">MimeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that contains the codec&#39;s Multipurpose Internet Mail Extensions (MIME) type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_SignatureMasks\" data-linktype=\"self-bookmark\">SignatureMasks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a two dimensional array of bytes that can be used as a filter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_SignaturePatterns\" data-linktype=\"self-bookmark\">SignaturePatterns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the version number of the codec.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_GetImageDecoders\" data-linktype=\"self-bookmark\">GetImageDecoders()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects that contain information about the image decoders built into GDI+.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Imaging_ImageCodecInfo_GetImageEncoders\" data-linktype=\"self-bookmark\">GetImageEncoders()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects that contain information about the image encoders built into GDI+.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_Clsid\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_Clsid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clsid</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies a specific codec.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid Clsid { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies a specific codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_CodecName\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_CodecName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodecName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that contains the name of the codec.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CodecName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the name of the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_DllName\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_DllName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DllName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DllName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the path name of the DLL that holds the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_FilenameExtension\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_FilenameExtension_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilenameExtension</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FilenameExtension { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the file name extension(s) used in the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_Flags\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_Flags_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flags</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <a class=\"xref\" href=\"system.drawing.imaging.imagecodecflags\" data-linktype=\"relative-path\">ImageCodecFlags</a> enumeration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Imaging.ImageCodecFlags Flags { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imagecodecflags\" data-linktype=\"relative-path\">ImageCodecFlags</a></div>\r\n                  </div>\r\n                  <p>A 32-bit value used to store additional information about the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_FormatDescription\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_FormatDescription_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatDescription</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that describes the codec&#39;s file format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FormatDescription { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that describes the codec&#39;s file format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_FormatID\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_FormatID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies the codec&#39;s format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid FormatID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> structure that contains a GUID that identifies the codec&#39;s format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_MimeType\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_MimeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MimeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that contains the codec&#39;s Multipurpose Internet Mail Extensions (MIME) type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MimeType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the codec&#39;s Multipurpose Internet Mail Extensions (MIME) type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_SignatureMasks\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_SignatureMasks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignatureMasks</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a two dimensional array of bytes that can be used as a filter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[][] SignatureMasks { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[][]</div>\r\n                  </div>\r\n                  <p>A two dimensional array of bytes that can be used as a filter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_SignaturePatterns\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_SignaturePatterns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignaturePatterns</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a two dimensional array of bytes that represents the signature of the codec.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[][] SignaturePatterns { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[][]</div>\r\n                  </div>\r\n                  <p>A two dimensional array of bytes that represents the signature of the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_Version\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the version number of the codec.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Version { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The version number of the codec.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_GetImageDecoders\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_GetImageDecoders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetImageDecoders()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects that contain information about the image decoders built into GDI+.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Imaging.ImageCodecInfo[] GetImageDecoders ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects. Each <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> object in the array contains information about one of the built-in image decoders.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo#System_Drawing_Imaging_ImageCodecInfo_GetImageEncoders_\" data-linktype=\"relative-path\">GetImageEncoders</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Imaging_ImageCodecInfo_GetImageEncoders\">\r\n    \r\n            <a id=\"System_Drawing_Imaging_ImageCodecInfo_GetImageEncoders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetImageEncoders()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects that contain information about the image encoders built into GDI+.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Imaging.ImageCodecInfo[] GetImageEncoders ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> objects. Each <a class=\"xref\" href=\"system.drawing.imaging.imagecodecinfo\" data-linktype=\"relative-path\">ImageCodecInfo</a> object in the array contains information about one of the built-in image encoders.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code uses the GetImageEncoders method to retrieve all the codec information for all installed image encoders and codecs, and then draws all the information about each codec to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Imaging.ClassicImageCodecExample#1\">    private:\n        void GetImageEncodersExample(PaintEventArgs^ e)\n        {\n            // Get an array of available codecs.\n            array&lt;ImageCodecInfo^&gt;^ codecInfo;\n            codecInfo = ImageCodecInfo::GetImageEncoders();\n            int numCodecs = codecInfo-&gt;GetLength(0);\n\n            //numCodecs = 1;\n\n            // Set up display variables.\n            Color^ foreColor = Color::Black;\n            Drawing::Font^ font = gcnew Drawing::Font(&quot;Arial&quot;, 8);\n\n            // Check to determine whether any codecs were found.\n            if (numCodecs &gt; 0)\n            {\n                // Set up an array to hold codec information. There are 9\n                // information elements plus 1 space for each codec, so 10\n                // times the number of codecs found is allocated.\n                array&lt;String^&gt;^ codecInfoStrings = \n                    gcnew array&lt;String^&gt;(numCodecs * 10);\n\n                // Write all the codec information to the array.\n                for (int i = 0; i &lt; numCodecs; i++)\n                {\n                    codecInfoStrings[i * 10] = &quot;Codec Name = &quot; +\n                        codecInfo[i]-&gt;CodecName;\n                    codecInfoStrings[(i * 10) + 1] = &quot;Class ID = &quot; +\n                        codecInfo[i]-&gt;Clsid.ToString();\n                    codecInfoStrings[(i * 10) + 2] = &quot;DLL Name = &quot; +\n                        codecInfo[i]-&gt;DllName;\n                    codecInfoStrings[(i * 10) + 3] = &quot;Filename Ext. = &quot; +\n                        codecInfo[i]-&gt;FilenameExtension;\n                    codecInfoStrings[(i * 10) + 4] = &quot;Flags = &quot; +\n                        codecInfo[i]-&gt;Flags.ToString();\n                    codecInfoStrings[(i * 10) + 5] = &quot;Format Descrip. = &quot; +\n                        codecInfo[i]-&gt;FormatDescription;\n                    codecInfoStrings[(i * 10) + 6] = &quot;Format ID = &quot; +\n                        codecInfo[i]-&gt;FormatID.ToString();\n                    codecInfoStrings[(i * 10) + 7] = &quot;MimeType = &quot; +\n                        codecInfo[i]-&gt;MimeType;\n                    codecInfoStrings[(i * 10) + 8] = &quot;Version = &quot; +\n                        codecInfo[i]-&gt;Version.ToString();\n                    codecInfoStrings[(i * 10) + 9] = &quot; &quot;;\n                }\n                int numCodecInfo = codecInfoStrings-&gt;GetLength(0);\n\n                // Render all of the information to the screen.\n                int j = 20;\n                for (int i = 0; i &lt; numCodecInfo; i++)\n                {\n                    e-&gt;Graphics-&gt;DrawString(codecInfoStrings[i],\n                        font, gcnew SolidBrush(*foreColor), 20, (float)j);\n                    j += 12;\n                }\n            }\n            else\n                e-&gt;Graphics-&gt;DrawString(&quot;No Codecs Found&quot;,\n                    font, gcnew SolidBrush(*foreColor), 20, 20);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Imaging.ClassicImageCodecExample#1\">    Public Sub GetImageEncodersExample(ByVal e As PaintEventArgs)\n\n        &#39; Get an array of available codecs.\n        Dim myEncoders() As ImageCodecInfo\n        myEncoders = ImageCodecInfo.GetImageEncoders()\n        Dim numEncoders As Integer = myEncoders.GetLength(0)\n        Dim strNumEncoders As String = numEncoders.ToString()\n        Dim foreColor As Color = Color.Black\n        Dim font As New Font(&quot;Arial&quot;, 8)\n        Dim i As Integer = 0\n\n        &#39; Get the info. for all encoders in the array.\n        If numEncoders &gt; 0 Then\n            Dim myEncoderInfo(numEncoders * 10) As String\n            For i = 0 To numEncoders - 1\n                myEncoderInfo((i * 10)) = &quot;Codec Name = &quot; _\n                + myEncoders(i).CodecName\n                myEncoderInfo((i * 10 + 1)) = &quot;Class ID = &quot; _\n                + myEncoders(i).Clsid.ToString()\n                myEncoderInfo((i * 10 + 2)) = &quot;DLL Name = &quot; _\n                + myEncoders(i).DllName\n                myEncoderInfo((i * 10 + 3)) = &quot;Filename Ext. = &quot; _\n                + myEncoders(i).FilenameExtension\n                myEncoderInfo((i * 10 + 4)) = &quot;Flags = &quot; _\n                + myEncoders(i).Flags.ToString()\n                myEncoderInfo((i * 10 + 5)) = &quot;Format Descrip. = &quot; _\n                + myEncoders(i).FormatDescription\n                myEncoderInfo((i * 10 + 6)) = &quot;Format ID = &quot; _\n                + myEncoders(i).FormatID.ToString()\n                myEncoderInfo((i * 10 + 7)) = &quot;MimeType = &quot; _\n                + myEncoders(i).MimeType\n                myEncoderInfo((i * 10 + 8)) = &quot;Version = &quot; _\n                + myEncoders(i).Version.ToString()\n                myEncoderInfo((i * 10 + 9)) = &quot; &quot;\n            Next i\n            Dim numMyEncoderInfo As Integer = myEncoderInfo.GetLength(0)\n\n            &#39; Render to the screen all the information.\n            Dim j As Integer = 20\n            For i = 0 To numMyEncoderInfo - 1\n                e.Graphics.DrawString(myEncoderInfo(i), font, _\n                New SolidBrush(foreColor), 20, j)\n                j += 12\n            Next i\n        Else\n            e.Graphics.DrawString(&quot;No Encoders Found&quot;, font, _\n            New SolidBrush(foreColor), 20, 20)\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Imaging.ClassicImageCodecExample#1\">        private void GetImageEncodersExample(PaintEventArgs e)\n        {\n                     \n            // Get an array of available codecs.\n            ImageCodecInfo[] myCodecs;\n            myCodecs = ImageCodecInfo.GetImageEncoders();\n            int numCodecs = myCodecs.GetLength(0);\n                     \n            //numCodecs = 1;\n                     \n            // Set up display variables.\n            Color foreColor = Color.Black;\n            Font font = new Font(&quot;Arial&quot;, 8);\n            int i = 0;\n                     \n            // Check to determine whether any codecs were found.\n            if(numCodecs &gt; 0)\n            {\n                     \n                // Set up an array to hold codec information. There are 9\n                     \n                // information elements plus 1 space for each codec, so 10 times\n                     \n                // the number of codecs found is allocated.\n                string[] myCodecInfo = new string[numCodecs*10];\n                     \n                // Write all the codec information to the array.\n                for(i=0;i&lt;numCodecs;i++)\n                {\n                    myCodecInfo[i*10] = &quot;Codec Name = &quot; + myCodecs[i].CodecName;\n                    myCodecInfo[(i*10)+1] = &quot;Class ID = &quot; +\n                        myCodecs[i].Clsid.ToString();\n                    myCodecInfo[(i*10)+2] = &quot;DLL Name = &quot; + myCodecs[i].DllName;\n                    myCodecInfo[(i*10)+3] = &quot;Filename Ext. = &quot; +\n                        myCodecs[i].FilenameExtension;\n                    myCodecInfo[(i*10)+4] = &quot;Flags = &quot; +\n                        myCodecs[i].Flags.ToString();\n                    myCodecInfo[(i*10)+5] = &quot;Format Descrip. = &quot; +\n                        myCodecs[i].FormatDescription;\n                    myCodecInfo[(i*10)+6] = &quot;Format ID = &quot; +\n                        myCodecs[i].FormatID.ToString();\n                    myCodecInfo[(i*10)+7] = &quot;MimeType = &quot; + myCodecs[i].MimeType;\n                    myCodecInfo[(i*10)+8] = &quot;Version = &quot; +\n                        myCodecs[i].Version.ToString();\n                    myCodecInfo[(i*10)+9] = &quot; &quot;;\n                }\n                int numMyCodecInfo = myCodecInfo.GetLength(0);\n                     \n                // Render all of the information to the screen.\n                int j=20;\n                for(i=0;i&lt;numMyCodecInfo;i++)\n                {\n                    e.Graphics.DrawString(myCodecInfo[i],\n                        font,\n                        new SolidBrush(foreColor),\n                        20,\n                        j);\n                    j+=12;\n                }\n            }\n            else\n                e.Graphics.DrawString(&quot;No Codecs Found&quot;,\n                    font,\n                    new SolidBrush(foreColor),\n                    20,\n                    20);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Imaging.ImageCodecInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Imaging.ImageCodecInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.Clsid\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.CodecName\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.DllName\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.FilenameExtension\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.Flags\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.FormatDescription\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.FormatID\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.MimeType\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.SignatureMasks\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Imaging.ImageCodecInfo.Version\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"31c70fae-b1b4-7091-66a0-1537edf70ecb\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Drawing.Imaging\\ImageCodecInfo.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The ImageCodecInfo class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Imaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Imaging.ImageCodecInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Imaging.ImageCodecInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Imaging.ImageCodecInfo.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Imaging.ImageCodecInfo","System.Drawing.Imaging.ImageCodecInfo.Clsid","System.Drawing.Imaging.ImageCodecInfo.CodecName","System.Drawing.Imaging.ImageCodecInfo.DllName","System.Drawing.Imaging.ImageCodecInfo.FilenameExtension","System.Drawing.Imaging.ImageCodecInfo.Flags","System.Drawing.Imaging.ImageCodecInfo.FormatDescription","System.Drawing.Imaging.ImageCodecInfo.FormatID","System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders","System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders","System.Drawing.Imaging.ImageCodecInfo.MimeType","System.Drawing.Imaging.ImageCodecInfo.SignatureMasks","System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns","System.Drawing.Imaging.ImageCodecInfo.Version"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Imaging.ImageCodecInfo","System::Drawing::Imaging::ImageCodecInfo","System.Drawing.Imaging.ImageCodecInfo.Clsid","System::Drawing::Imaging::ImageCodecInfo::Clsid","System.Drawing.Imaging.ImageCodecInfo.CodecName","System::Drawing::Imaging::ImageCodecInfo::CodecName","System.Drawing.Imaging.ImageCodecInfo.DllName","System::Drawing::Imaging::ImageCodecInfo::DllName","System.Drawing.Imaging.ImageCodecInfo.FilenameExtension","System::Drawing::Imaging::ImageCodecInfo::FilenameExtension","System.Drawing.Imaging.ImageCodecInfo.Flags","System::Drawing::Imaging::ImageCodecInfo::Flags","System.Drawing.Imaging.ImageCodecInfo.FormatDescription","System::Drawing::Imaging::ImageCodecInfo::FormatDescription","System.Drawing.Imaging.ImageCodecInfo.FormatID","System::Drawing::Imaging::ImageCodecInfo::FormatID","System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders","System::Drawing::Imaging::ImageCodecInfo::GetImageDecoders","System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders","System::Drawing::Imaging::ImageCodecInfo::GetImageEncoders","System.Drawing.Imaging.ImageCodecInfo.MimeType","System::Drawing::Imaging::ImageCodecInfo::MimeType","System.Drawing.Imaging.ImageCodecInfo.SignatureMasks","System::Drawing::Imaging::ImageCodecInfo::SignatureMasks","System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns","System::Drawing::Imaging::ImageCodecInfo::SignaturePatterns","System.Drawing.Imaging.ImageCodecInfo.Version","System::Drawing::Imaging::ImageCodecInfo::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"31c70fae-b1b4-7091-66a0-1537edf70ecb","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Drawing.Imaging\\ImageCodecInfo.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Imaging/ImageCodecInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ImageCodecInfo class | Microsoft Docs","_op_ogTitle":"ImageCodecInfo class","description":"The ImageCodecInfo class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable.\n","toc_asset_id":"_splitted/System.Drawing.Imaging/toc.json","toc_rel":"_splitted/System.Drawing.Imaging/toc.json","source_url":"","ms.assetid":"System.Drawing.Imaging.ImageCodecInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.imaging.imagecodecinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.imaging.imagecodecinfo","fileRelativePath":"System.Drawing.Imaging.ImageCodecInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}