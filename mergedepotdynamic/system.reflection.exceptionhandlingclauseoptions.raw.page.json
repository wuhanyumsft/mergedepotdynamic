{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ExceptionHandlingClauseOptions</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Identifies kinds of exception-handling clauses.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Flags]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic enum ExceptionHandlingClauseOptions</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ExceptionHandlingClauseOptions</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>To examine the exception-handling clauses in a method, obtain a <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object and call the <a class=\"xref\" href=\"system.reflection.methodbase#System_Reflection_MethodBase_GetMethodBody_\" data-linktype=\"relative-path\">GetMethodBody</a> method to obtain the method body. Use the <a class=\"xref\" href=\"system.reflection.methodbody#System_Reflection_MethodBody_ExceptionHandlingClauses_\" data-linktype=\"relative-path\">ExceptionHandlingClauses</a> property to obtain a list of <a class=\"xref\" href=\"system.reflection.exceptionhandlingclause\" data-linktype=\"relative-path\">ExceptionHandlingClause</a> objects.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats. Information can be found in the Common Language Infrastructure (CLI) documentation, especially &quot;Partition II: Metadata Definition and Semantics&quot; and &quot;Partition III: CIL Instruction Set&quot;. The documentation is available online; see <a href=\"http://go.microsoft.com/fwlink/?LinkID=99212\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> on MSDN and <a href=\"http://go.microsoft.com/fwlink/?LinkID=65552\" data-linktype=\"external\">Standard ECMA-335 - Common Language Infrastructure (CLI)</a> on the Ecma International Web site.</p>\n</div>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_Reflection_ExceptionHandlingClauseOptions_Clause\">\r\n      \t\t\t<span class=\"lang-csharp\">Clause</span>\r\n      \t</td>\r\n      \t<td><p>The clause accepts all exceptions that derive from a specified type.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Reflection_ExceptionHandlingClauseOptions_Fault\">\r\n      \t\t\t<span class=\"lang-csharp\">Fault</span>\r\n      \t</td>\r\n      \t<td><p>The clause is executed if an exception occurs, but not on completion of normal control flow.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Reflection_ExceptionHandlingClauseOptions_Filter\">\r\n      \t\t\t<span class=\"lang-csharp\">Filter</span>\r\n      \t</td>\r\n      \t<td><p>The clause contains user-specified instructions that determine whether the exception should be ignored (that is, whether normal execution should resume), be handled by the associated handler, or be passed on to the next clause.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_Reflection_ExceptionHandlingClauseOptions_Finally\">\r\n      \t\t\t<span class=\"lang-csharp\">Finally</span>\r\n      \t</td>\r\n      \t<td><p>The clause is executed whenever the try block exits, whether through normal control flow or because of an unhandled exception.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.ExceptionHandlingClauseOptions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.ExceptionHandlingClauseOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ExceptionHandlingClauseOptions\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ExceptionHandlingClauseOptions.Clause\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ExceptionHandlingClauseOptions.Fault\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ExceptionHandlingClauseOptions.Filter\">\r\n<meta name=\"APIName\" content=\"System.Reflection.ExceptionHandlingClauseOptions.Finally\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"33395413-ee0f-a3ab-2015-f8b9e663f444\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Identifies kinds of exception-handling clauses.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.ExceptionHandlingClauseOptions\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.ExceptionHandlingClauseOptions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.ExceptionHandlingClauseOptions.yml","open_to_public_contributors":true,"api_name":["System.Reflection.ExceptionHandlingClauseOptions","System.Reflection.ExceptionHandlingClauseOptions.Clause","System.Reflection.ExceptionHandlingClauseOptions.Fault","System.Reflection.ExceptionHandlingClauseOptions.Filter","System.Reflection.ExceptionHandlingClauseOptions.Finally"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.ExceptionHandlingClauseOptions","System::Reflection::ExceptionHandlingClauseOptions","System.Reflection.ExceptionHandlingClauseOptions.Clause","System::Reflection::ExceptionHandlingClauseOptions::Clause","System.Reflection.ExceptionHandlingClauseOptions.Fault","System::Reflection::ExceptionHandlingClauseOptions::Fault","System.Reflection.ExceptionHandlingClauseOptions.Filter","System::Reflection::ExceptionHandlingClauseOptions::Filter","System.Reflection.ExceptionHandlingClauseOptions.Finally","System::Reflection::ExceptionHandlingClauseOptions::Finally"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"33395413-ee0f-a3ab-2015-f8b9e663f444","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection/ExceptionHandlingClauseOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ExceptionHandlingClauseOptions enum | Microsoft Docs","_op_ogTitle":"ExceptionHandlingClauseOptions enum","description":"Identifies kinds of exception-handling clauses.\n","toc_asset_id":"_splitted/System.Reflection/toc.json","toc_rel":"_splitted/System.Reflection/toc.json","source_url":"","ms.assetid":"System.Reflection.ExceptionHandlingClauseOptions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.exceptionhandlingclauseoptions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.exceptionhandlingclauseoptions","fileRelativePath":"System.Reflection.ExceptionHandlingClauseOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}