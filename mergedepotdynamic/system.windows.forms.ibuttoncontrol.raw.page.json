{"content":"    \r\n    <h1 id=\"System_Windows_Forms_IButtonControl\">\r\n      <span class=\"lang-csharp\">IButtonControl</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Allows a control to act like a button on a form.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IButtonControl</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An example of where this interface might be implemented is default and cancel button processing. Default buttons are notified when an unprocessed ENTER key is entered for a form, just like a dialog box would be closed. Similarly, cancel buttons are notified whenever an unprocessed ESC key is entered on a form, much like a dialog box would be dismissed.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IButtonControl_DialogResult\" data-linktype=\"self-bookmark\">DialogResult</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value returned to the parent form when the button is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IButtonControl_NotifyDefault_System_Boolean_\" data-linktype=\"self-bookmark\">NotifyDefault(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_IButtonControl_PerformClick\" data-linktype=\"self-bookmark\">PerformClick()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IButtonControl_DialogResult\">\r\n    \r\n            <a id=\"System_Windows_Forms_IButtonControl_DialogResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DialogResult</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value returned to the parent form when the button is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DialogResult DialogResult { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a form is shown as a dialog box using the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method and one of its buttons is clicked, the button&#39;s DialogResult value is assigned to the form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example inherits from the <a class=\"xref\" href=\"system.windows.forms.buttonbase\" data-linktype=\"relative-path\">ButtonBase</a> class and implements the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> interface. Implementation is added to the DialogResult property and the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_NotifyDefault_\" data-linktype=\"relative-path\">NotifyDefault</a> and <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_PerformClick_\" data-linktype=\"relative-path\">PerformClick</a> methods.  </p>\n<pre><code class=\"lang-vb\" name=\"IButtonControl Implementation#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\n\n\nPublic Class MyButton\n   Inherits ButtonBase\n   Implements IButtonControl \n   Private myDialogResult As DialogResult\n      \n   Public Sub New()\n      &#39; Make the button White and a Popup style\n      &#39; so it can be distinguished on the form.\n      Me.FlatStyle = FlatStyle.Popup\n      Me.BackColor = Color.White\n   End Sub\n   \n   &#39; Add implementation to the IButtonControl.DialogResult property.\n   Public Property DialogResult() As DialogResult Implements IButtonControl.DialogResult\n      Get\n         Return Me.myDialogResult\n      End Get\n      \n      Set\n         If [Enum].IsDefined(GetType(DialogResult), value) Then\n            Me.myDialogResult = value\n         End If\n      End Set\n   End Property\n   \n   &#39; Add implementation to the IButtonControl.NotifyDefault method.\n   Public Sub NotifyDefault(value As Boolean) Implements IButtonControl.NotifyDefault\n      If Me.IsDefault &lt;&gt; value Then\n         Me.IsDefault = value\n      End If\n   End Sub \n      \n   &#39; Add implementation to the IButtonControl.PerformClick method.\n   Public Sub PerformClick() Implements IButtonControl.PerformClick\n      If Me.CanSelect Then\n         Me.OnClick(EventArgs.Empty)\n      End If\n   End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IButtonControl Implementation#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\n\npublic ref class MyButton: public ButtonBase, public IButtonControl\n{\nprivate:\n   System::Windows::Forms::DialogResult myDialogResult;\n\npublic:\n   MyButton()\n   {\n      // Make the button White and a Popup style\n      // so it can be distinguished on the form.\n      this-&gt;FlatStyle = ::FlatStyle::Popup;\n      this-&gt;BackColor = Color::White;\n   }\n\n   property System::Windows::Forms::DialogResult DialogResult \n   {\n      // Add implementation to the IButtonControl.DialogResult property.\n      virtual System::Windows::Forms::DialogResult get()\n      {\n         return this-&gt;myDialogResult;\n      }\n\n      virtual void set( System::Windows::Forms::DialogResult value )\n      {\n         if ( Enum::IsDefined( System::Windows::Forms::DialogResult::typeid, value ) )\n         {\n            this-&gt;myDialogResult = value;\n         }\n      }\n   }\n\n   // Add implementation to the IButtonControl.NotifyDefault method.\n   virtual void NotifyDefault( bool value )\n   {\n      if ( this-&gt;IsDefault != value )\n      {\n         this-&gt;IsDefault = value;\n      }\n   }\n\n   // Add implementation to the IButtonControl.PerformClick method.\n   virtual void PerformClick()\n   {\n      if ( this-&gt;CanSelect )\n      {\n         this-&gt;OnClick( EventArgs::Empty );\n      }\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"IButtonControl Implementation#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class MyButton : ButtonBase, IButtonControl\n{\n\tprivate DialogResult myDialogResult;\n\n\tpublic MyButton()\n\t{\n\t\t// Make the button White and a Popup style\n\t\t// so it can be distinguished on the form.\n\t\tthis.FlatStyle = FlatStyle.Popup;\n\t\tthis.BackColor = Color.White;\n\t}\n\t\t\n\t// Add implementation to the IButtonControl.DialogResult property.\n\tpublic DialogResult DialogResult\n\t{\n\t\tget\n\t\t{\n\t\t\treturn this.myDialogResult;\n\t\t}\n\n\t\tset\n\t\t{\n\t\t\tif(Enum.IsDefined(typeof(DialogResult), value))\t\t\t\t\n\t\t\t{\n\t\t\t\tthis.myDialogResult = value;\n\t\t\t}\n\t\t}\t\n\t}\n\n\t// Add implementation to the IButtonControl.NotifyDefault method.\n\tpublic void NotifyDefault(bool value)\n\t{\n\t\tif(this.IsDefault != value)\n\t\t{\n\t\t\tthis.IsDefault = value;\n\t\t}\n\t}\n\n\t// Add implementation to the IButtonControl.PerformClick method.\n\tpublic void PerformClick()\n\t{\n\t\tif(this.CanSelect)\n\t\t{\n\t\t\tthis.OnClick(EventArgs.Empty);\n\t\t}\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IButtonControl_NotifyDefault_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_IButtonControl_NotifyDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyDefault(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies a control that it is the default button so that its appearance and behavior is adjusted accordingly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void NotifyDefault (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the control should behave as a default button; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by a parent form to make a control the default button. Default buttons are set to have an extra thick border.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example inherits from the <a class=\"xref\" href=\"system.windows.forms.buttonbase\" data-linktype=\"relative-path\">ButtonBase</a> class and implements the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> interface. Implementation is added to the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property and the NotifyDefault and <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_PerformClick_\" data-linktype=\"relative-path\">PerformClick</a> methods.  </p>\n<pre><code class=\"lang-vb\" name=\"IButtonControl Implementation#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\n\n\nPublic Class MyButton\n   Inherits ButtonBase\n   Implements IButtonControl \n   Private myDialogResult As DialogResult\n      \n   Public Sub New()\n      &#39; Make the button White and a Popup style\n      &#39; so it can be distinguished on the form.\n      Me.FlatStyle = FlatStyle.Popup\n      Me.BackColor = Color.White\n   End Sub\n   \n   &#39; Add implementation to the IButtonControl.DialogResult property.\n   Public Property DialogResult() As DialogResult Implements IButtonControl.DialogResult\n      Get\n         Return Me.myDialogResult\n      End Get\n      \n      Set\n         If [Enum].IsDefined(GetType(DialogResult), value) Then\n            Me.myDialogResult = value\n         End If\n      End Set\n   End Property\n   \n   &#39; Add implementation to the IButtonControl.NotifyDefault method.\n   Public Sub NotifyDefault(value As Boolean) Implements IButtonControl.NotifyDefault\n      If Me.IsDefault &lt;&gt; value Then\n         Me.IsDefault = value\n      End If\n   End Sub \n      \n   &#39; Add implementation to the IButtonControl.PerformClick method.\n   Public Sub PerformClick() Implements IButtonControl.PerformClick\n      If Me.CanSelect Then\n         Me.OnClick(EventArgs.Empty)\n      End If\n   End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IButtonControl Implementation#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\n\npublic ref class MyButton: public ButtonBase, public IButtonControl\n{\nprivate:\n   System::Windows::Forms::DialogResult myDialogResult;\n\npublic:\n   MyButton()\n   {\n      // Make the button White and a Popup style\n      // so it can be distinguished on the form.\n      this-&gt;FlatStyle = ::FlatStyle::Popup;\n      this-&gt;BackColor = Color::White;\n   }\n\n   property System::Windows::Forms::DialogResult DialogResult \n   {\n      // Add implementation to the IButtonControl.DialogResult property.\n      virtual System::Windows::Forms::DialogResult get()\n      {\n         return this-&gt;myDialogResult;\n      }\n\n      virtual void set( System::Windows::Forms::DialogResult value )\n      {\n         if ( Enum::IsDefined( System::Windows::Forms::DialogResult::typeid, value ) )\n         {\n            this-&gt;myDialogResult = value;\n         }\n      }\n   }\n\n   // Add implementation to the IButtonControl.NotifyDefault method.\n   virtual void NotifyDefault( bool value )\n   {\n      if ( this-&gt;IsDefault != value )\n      {\n         this-&gt;IsDefault = value;\n      }\n   }\n\n   // Add implementation to the IButtonControl.PerformClick method.\n   virtual void PerformClick()\n   {\n      if ( this-&gt;CanSelect )\n      {\n         this-&gt;OnClick( EventArgs::Empty );\n      }\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"IButtonControl Implementation#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class MyButton : ButtonBase, IButtonControl\n{\n\tprivate DialogResult myDialogResult;\n\n\tpublic MyButton()\n\t{\n\t\t// Make the button White and a Popup style\n\t\t// so it can be distinguished on the form.\n\t\tthis.FlatStyle = FlatStyle.Popup;\n\t\tthis.BackColor = Color.White;\n\t}\n\t\t\n\t// Add implementation to the IButtonControl.DialogResult property.\n\tpublic DialogResult DialogResult\n\t{\n\t\tget\n\t\t{\n\t\t\treturn this.myDialogResult;\n\t\t}\n\n\t\tset\n\t\t{\n\t\t\tif(Enum.IsDefined(typeof(DialogResult), value))\t\t\t\t\n\t\t\t{\n\t\t\t\tthis.myDialogResult = value;\n\t\t\t}\n\t\t}\t\n\t}\n\n\t// Add implementation to the IButtonControl.NotifyDefault method.\n\tpublic void NotifyDefault(bool value)\n\t{\n\t\tif(this.IsDefault != value)\n\t\t{\n\t\t\tthis.IsDefault = value;\n\t\t}\n\t}\n\n\t// Add implementation to the IButtonControl.PerformClick method.\n\tpublic void PerformClick()\n\t{\n\t\tif(this.CanSelect)\n\t\t{\n\t\t\tthis.OnClick(EventArgs.Empty);\n\t\t}\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_IButtonControl_PerformClick\">\r\n    \r\n            <a id=\"System_Windows_Forms_IButtonControl_PerformClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformClick()</div>        \r\n          </div>\r\n    \r\n            <p>Generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PerformClick ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called for the button that has focus, or for the default button (if no other button has focus) when the user presses the ENTER key. This method is also called when the user presses the ESC key if the button is set as the cancel button.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example inherits from the <a class=\"xref\" href=\"system.windows.forms.buttonbase\" data-linktype=\"relative-path\">ButtonBase</a> class and implements the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> interface. Implementation is added to the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property and the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol#System_Windows_Forms_IButtonControl_NotifyDefault_\" data-linktype=\"relative-path\">NotifyDefault</a> and PerformClick methods.  </p>\n<pre><code class=\"lang-vb\" name=\"IButtonControl Implementation#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\n\n\nPublic Class MyButton\n   Inherits ButtonBase\n   Implements IButtonControl \n   Private myDialogResult As DialogResult\n      \n   Public Sub New()\n      &#39; Make the button White and a Popup style\n      &#39; so it can be distinguished on the form.\n      Me.FlatStyle = FlatStyle.Popup\n      Me.BackColor = Color.White\n   End Sub\n   \n   &#39; Add implementation to the IButtonControl.DialogResult property.\n   Public Property DialogResult() As DialogResult Implements IButtonControl.DialogResult\n      Get\n         Return Me.myDialogResult\n      End Get\n      \n      Set\n         If [Enum].IsDefined(GetType(DialogResult), value) Then\n            Me.myDialogResult = value\n         End If\n      End Set\n   End Property\n   \n   &#39; Add implementation to the IButtonControl.NotifyDefault method.\n   Public Sub NotifyDefault(value As Boolean) Implements IButtonControl.NotifyDefault\n      If Me.IsDefault &lt;&gt; value Then\n         Me.IsDefault = value\n      End If\n   End Sub \n      \n   &#39; Add implementation to the IButtonControl.PerformClick method.\n   Public Sub PerformClick() Implements IButtonControl.PerformClick\n      If Me.CanSelect Then\n         Me.OnClick(EventArgs.Empty)\n      End If\n   End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"IButtonControl Implementation#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\n\npublic ref class MyButton: public ButtonBase, public IButtonControl\n{\nprivate:\n   System::Windows::Forms::DialogResult myDialogResult;\n\npublic:\n   MyButton()\n   {\n      // Make the button White and a Popup style\n      // so it can be distinguished on the form.\n      this-&gt;FlatStyle = ::FlatStyle::Popup;\n      this-&gt;BackColor = Color::White;\n   }\n\n   property System::Windows::Forms::DialogResult DialogResult \n   {\n      // Add implementation to the IButtonControl.DialogResult property.\n      virtual System::Windows::Forms::DialogResult get()\n      {\n         return this-&gt;myDialogResult;\n      }\n\n      virtual void set( System::Windows::Forms::DialogResult value )\n      {\n         if ( Enum::IsDefined( System::Windows::Forms::DialogResult::typeid, value ) )\n         {\n            this-&gt;myDialogResult = value;\n         }\n      }\n   }\n\n   // Add implementation to the IButtonControl.NotifyDefault method.\n   virtual void NotifyDefault( bool value )\n   {\n      if ( this-&gt;IsDefault != value )\n      {\n         this-&gt;IsDefault = value;\n      }\n   }\n\n   // Add implementation to the IButtonControl.PerformClick method.\n   virtual void PerformClick()\n   {\n      if ( this-&gt;CanSelect )\n      {\n         this-&gt;OnClick( EventArgs::Empty );\n      }\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"IButtonControl Implementation#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class MyButton : ButtonBase, IButtonControl\n{\n\tprivate DialogResult myDialogResult;\n\n\tpublic MyButton()\n\t{\n\t\t// Make the button White and a Popup style\n\t\t// so it can be distinguished on the form.\n\t\tthis.FlatStyle = FlatStyle.Popup;\n\t\tthis.BackColor = Color.White;\n\t}\n\t\t\n\t// Add implementation to the IButtonControl.DialogResult property.\n\tpublic DialogResult DialogResult\n\t{\n\t\tget\n\t\t{\n\t\t\treturn this.myDialogResult;\n\t\t}\n\n\t\tset\n\t\t{\n\t\t\tif(Enum.IsDefined(typeof(DialogResult), value))\t\t\t\t\n\t\t\t{\n\t\t\t\tthis.myDialogResult = value;\n\t\t\t}\n\t\t}\t\n\t}\n\n\t// Add implementation to the IButtonControl.NotifyDefault method.\n\tpublic void NotifyDefault(bool value)\n\t{\n\t\tif(this.IsDefault != value)\n\t\t{\n\t\t\tthis.IsDefault = value;\n\t\t}\n\t}\n\n\t// Add implementation to the IButtonControl.PerformClick method.\n\tpublic void PerformClick()\n\t{\n\t\tif(this.CanSelect)\n\t\t{\n\t\t\tthis.OnClick(EventArgs.Empty);\n\t\t}\n\t}\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.IButtonControl.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.IButtonControl.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IButtonControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IButtonControl.DialogResult\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IButtonControl.NotifyDefault\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.IButtonControl.PerformClick\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7921e381-16dc-dafc-31f3-e93936435a62\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows a control to act like a button on a form.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.IButtonControl\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.IButtonControl.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.IButtonControl.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.IButtonControl","System.Windows.Forms.IButtonControl.DialogResult","System.Windows.Forms.IButtonControl.NotifyDefault","System.Windows.Forms.IButtonControl.PerformClick"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.IButtonControl","System::Windows::Forms::IButtonControl","System.Windows.Forms.IButtonControl.DialogResult","System::Windows::Forms::IButtonControl::DialogResult","System.Windows.Forms.IButtonControl.NotifyDefault","System::Windows::Forms::IButtonControl::NotifyDefault","System.Windows.Forms.IButtonControl.PerformClick","System::Windows::Forms::IButtonControl::PerformClick"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7921e381-16dc-dafc-31f3-e93936435a62","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/IButtonControl.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IButtonControl interface | Microsoft Docs","_op_ogTitle":"IButtonControl interface","description":"Allows a control to act like a button on a form.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.IButtonControl","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.ibuttoncontrol","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.ibuttoncontrol","fileRelativePath":"System.Windows.Forms.IButtonControl.html"},"themesRelativePathToOutputRoot":"_themes/"}