{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs\">\r\n      <span class=\"lang-csharp\">DataGridViewRowPostPaintEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DataGridViewRowPostPaintEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridViewRowPostPaintEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event occurs after a row is painted on a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> allows you to manually adjust the appearance of the row after the cells in the row are painted. This is useful if you want to customize the row.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs__ctor_System_Windows_Forms_DataGridView_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">DataGridViewRowPostPaintEventArgs(DataGridView,Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,String,DataGridViewCellStyle,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ClipBounds\" data-linktype=\"self-bookmark\">ClipBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ErrorText\" data-linktype=\"self-bookmark\">ErrorText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_Graphics\" data-linktype=\"self-bookmark\">Graphics</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_InheritedRowStyle\" data-linktype=\"self-bookmark\">InheritedRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cell style applied to the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsFirstDisplayedRow\" data-linktype=\"self-bookmark\">IsFirstDisplayedRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current row is the first row displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsLastVisibleRow\" data-linktype=\"self-bookmark\">IsLastVisibleRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current row is the last visible row displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowBounds\" data-linktype=\"self-bookmark\">RowBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Get the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowIndex\" data-linktype=\"self-bookmark\">RowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_State\" data-linktype=\"self-bookmark\">State</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_DrawFocus_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"self-bookmark\">DrawFocus(Rectangle,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Draws the focus rectangle around the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCells_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewPaintParts_\" data-linktype=\"self-bookmark\">PaintCells(Rectangle,DataGridViewPaintParts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the specified cell parts for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsBackground_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"self-bookmark\">PaintCellsBackground(Rectangle,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the cell backgrounds for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsContent_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">PaintCellsContent(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the cell contents for the area in the specified bounds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_System_Boolean_\" data-linktype=\"self-bookmark\">PaintHeader(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the entire row header of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_System_Windows_Forms_DataGridViewPaintParts_\" data-linktype=\"self-bookmark\">PaintHeader(DataGridViewPaintParts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the specified parts of the row header of the current row.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs__ctor_System_Windows_Forms_DataGridView_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_System_Int32_System_Windows_Forms_DataGridViewElementStates_System_String_System_Windows_Forms_DataGridViewCellStyle_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridViewRowPostPaintEventArgs(DataGridView,Graphics,Rectangle,Rectangle,Int32,DataGridViewElementStates,String,DataGridViewCellStyle,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridViewRowPostPaintEventArgs (System.Windows.Forms.DataGridView dataGridView, System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, string errorText, System.Windows.Forms.DataGridViewCellStyle inheritedRowStyle, bool isFirstDisplayedRow, bool isLastVisibleRow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridView</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that owns the row that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that contains the bounds of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell that is being painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values that specifies the state of the row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>errorText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An error message that is associated with the row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inheritedRowStyle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains formatting and style information about the row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate whether the current row is the first row currently displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isLastVisibleRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate whether the current row is the last row in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that has the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Visible*</span> property set to <code>true</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>dataGridView</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>graphics</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>inheritedRowStyle</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ClipBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ClipBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClipBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle ClipBounds { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClipBounds property represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted. For example, if a user covers the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with another window and then uncovers it, then ClipBounds represents the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. If a user covers a small area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> and then uncovers it, then ClipBounds represents the small area that was covered.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#355\">private void DataGridView1_RowPostPaint(Object sender, DataGridViewRowPostPaintEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowPostPaint Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#355\">Private Sub DataGridView1_RowPostPaint(sender as Object, e as DataGridViewRowPostPaintEventArgs) _ \n     Handles DataGridView1.RowPostPaint\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowPostPaint Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ErrorText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_ErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ErrorText</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ErrorText { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents an error message for the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the ErrorText property is the same as the current row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#355\">private void DataGridView1_RowPostPaint(Object sender, DataGridViewRowPostPaintEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowPostPaint Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#355\">Private Sub DataGridView1_RowPostPaint(sender as Object, e as DataGridViewRowPostPaintEventArgs) _ \n     Handles DataGridView1.RowPostPaint\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowPostPaint Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_Graphics\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_Graphics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Graphics</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Graphics Graphics { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> class provides properties and methods that are useful for custom drawing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Graphics property to paint a custom background. Although the code actually uses the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_Graphics_\" data-linktype=\"relative-path\">Graphics</a> property, this property is nearly identical to the Graphics property of <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a>. The variable, <code>e</code>, is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPrePaintEventArgs</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#25\">        &#39; Determine whether the cell should be painted with the \n        &#39; custom selection background.\n        If (e.State And DataGridViewElementStates.Selected) = _\n            DataGridViewElementStates.Selected Then\n\n            &#39; Calculate the bounds of the row.\n            Dim rowBounds As New Rectangle( _\n                Me.dataGridView1.RowHeadersWidth, e.RowBounds.Top, _\n                Me.dataGridView1.Columns.GetColumnsWidth( _\n                DataGridViewElementStates.Visible) - _\n                Me.dataGridView1.HorizontalScrollingOffset + 1, _\n                e.RowBounds.Height)\n\n            &#39; Paint the custom selection background.\n            Dim backbrush As New _\n                System.Drawing.Drawing2D.LinearGradientBrush(rowBounds, _\n                Me.dataGridView1.DefaultCellStyle.SelectionBackColor, _\n                e.InheritedRowStyle.ForeColor, _\n                System.Drawing.Drawing2D.LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(backbrush, rowBounds)\n            Finally\n                backbrush.Dispose()\n            End Try\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#25\">        // Determine whether the cell should be painted\n        // with the custom selection background.\n        if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                    DataGridViewElementStates.Selected)\n        {\n            // Calculate the bounds of the row.\n            Rectangle rowBounds = new Rectangle(\n                this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n                this.dataGridView1.Columns.GetColumnsWidth(\n                    DataGridViewElementStates.Visible) -\n                this.dataGridView1.HorizontalScrollingOffset + 1,\n                e.RowBounds.Height);\n\n            // Paint the custom selection background.\n            using (Brush backbrush =\n                new System.Drawing.Drawing2D.LinearGradientBrush(rowBounds,\n                    this.dataGridView1.DefaultCellStyle.SelectionBackColor,\n                    e.InheritedRowStyle.ForeColor,\n                    System.Drawing.Drawing2D.LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(backbrush, rowBounds);\n            }\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_InheritedRowStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_InheritedRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InheritedRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cell style applied to the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle InheritedRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that contains the cell style applied to the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InheritedRowStyle property contains the same values as the current row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property. Directly accessing a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> can affect performance. Use InheritedRowStyle in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event to avoid unsharing the row and maintain optimal performance.  </p>\n<p> The InheritedRowStyle property is read-only. Although you can set the properties of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> retrieved through the InheritedRowStyle property, the new settings will have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the InheritedRowStyle to determine the color to use to draw the content. The variable, <code>e</code>, is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#34\">            &#39; Determine the foreground color.\n            If (e.State And DataGridViewElementStates.Selected) = _\n                DataGridViewElementStates.Selected Then\n\n                forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n            Else\n                forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n            End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#34\">            // Determine the foreground color.\n            if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                DataGridViewElementStates.Selected)\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n            }\n            else\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsFirstDisplayedRow\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsFirstDisplayedRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFirstDisplayedRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current row is the first row displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsFirstDisplayedRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the row being painted is currently the first row displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#355\">private void DataGridView1_RowPostPaint(Object sender, DataGridViewRowPostPaintEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowPostPaint Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#355\">Private Sub DataGridView1_RowPostPaint(sender as Object, e as DataGridViewRowPostPaintEventArgs) _ \n     Handles DataGridView1.RowPostPaint\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowPostPaint Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsLastVisibleRow\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_IsLastVisibleRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLastVisibleRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current row is the last visible row displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsLastVisibleRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current row is the last row in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that has the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Visible*</span> property set to <code>true</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.RowPostPaint</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#355\">private void DataGridView1_RowPostPaint(Object sender, DataGridViewRowPostPaintEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowPostPaint Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#355\">Private Sub DataGridView1_RowPostPaint(sender as Object, e as DataGridViewRowPostPaintEventArgs) _ \n     Handles DataGridView1.RowPostPaint\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ClipBounds&quot;, e.ClipBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InheritedRowStyle&quot;, e.InheritedRowStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsFirstDisplayedRow&quot;, e.IsFirstDisplayedRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsLastVisibleRow&quot;, e.IsLastVisibleRow)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowBounds&quot;, e.RowBounds)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;State&quot;, e.State)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowPostPaint Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowBounds</div>        \r\n          </div>\r\n    \r\n            <p>Get the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle RowBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The width of the RowBounds property is the same as the width of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. To get the width of the columns in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection#System_Windows_Forms_DataGridViewColumnCollection_GetColumnsWidth_\" data-linktype=\"relative-path\">GetColumnsWidth</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the RowBounds property to determine the bounds of the visible cells in a row. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    &#39; Paints the content that spans multiple columns and the focus rectangle.\n    Sub dataGridView1_RowPostPaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPostPaintEventArgs) _\n        Handles dataGridView1.RowPostPaint\n\n        &#39; Calculate the bounds of the row.\n        Dim rowBounds As New Rectangle(Me.dataGridView1.RowHeadersWidth, _\n            e.RowBounds.Top, Me.dataGridView1.Columns.GetColumnsWidth( _\n            DataGridViewElementStates.Visible) - _\n            Me.dataGridView1.HorizontalScrollingOffset + 1, e.RowBounds.Height)\n\n        Dim forebrush As SolidBrush = Nothing\n        Try\n            &#39; Determine the foreground color.\n            If (e.State And DataGridViewElementStates.Selected) = _\n                DataGridViewElementStates.Selected Then\n\n                forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n            Else\n                forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n            End If\n\n            &#39; Get the content that spans multiple columns.\n            Dim recipe As Object = _\n                Me.dataGridView1.Rows.SharedRow(e.RowIndex).Cells(2).Value\n\n            If (recipe IsNot Nothing) Then\n                Dim text As String = recipe.ToString()\n\n                &#39; Calculate the bounds for the content that spans multiple \n                &#39; columns, adjusting for the horizontal scrolling position \n                &#39; and the current row height, and displaying only whole\n                &#39; lines of text.\n                Dim textArea As Rectangle = rowBounds\n                textArea.X -= Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Width += Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height -= rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height = (textArea.Height \\ e.InheritedRowStyle.Font.Height) * _\n                    e.InheritedRowStyle.Font.Height\n\n                &#39; Calculate the portion of the text area that needs painting.\n                Dim clip As RectangleF = textArea\n                clip.Width -= Me.dataGridView1.RowHeadersWidth + 1 - clip.X\n                clip.X = Me.dataGridView1.RowHeadersWidth + 1\n                Dim oldClip As RectangleF = e.Graphics.ClipBounds\n                e.Graphics.SetClip(clip)\n\n                &#39; Draw the content that spans multiple columns.\n                e.Graphics.DrawString(text, e.InheritedRowStyle.Font, forebrush, _\n                    textArea)\n\n                e.Graphics.SetClip(oldClip)\n            End If\n        Finally\n            forebrush.Dispose()\n        End Try\n\n        If Me.dataGridView1.CurrentCellAddress.Y = e.RowIndex Then\n            &#39; Paint the focus rectangle.\n            e.DrawFocus(rowBounds, True)\n        End If\n\n    End Sub &#39;dataGridView1_RowPostPaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    // Paints the content that spans multiple columns and the focus rectangle.\n    void dataGridView1_RowPostPaint(object sender,\n        DataGridViewRowPostPaintEventArgs e)\n    {\n        // Calculate the bounds of the row.\n        Rectangle rowBounds = new Rectangle(\n            this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n            this.dataGridView1.Columns.GetColumnsWidth(\n                DataGridViewElementStates.Visible) -\n            this.dataGridView1.HorizontalScrollingOffset + 1,\n            e.RowBounds.Height);\n\n        SolidBrush forebrush = null;\n        try\n        {\n            // Determine the foreground color.\n            if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                DataGridViewElementStates.Selected)\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n            }\n            else\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n            }\n\n            // Get the content that spans multiple columns.\n            object recipe =\n                this.dataGridView1.Rows.SharedRow(e.RowIndex).Cells[2].Value;\n\n            if (recipe != null)\n            {\n                String text = recipe.ToString();\n\n                // Calculate the bounds for the content that spans multiple \n                // columns, adjusting for the horizontal scrolling position \n                // and the current row height, and displaying only whole\n                // lines of text.\n                Rectangle textArea = rowBounds;\n                textArea.X -= this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Width += this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height -= rowBounds.Height -\n                    e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height = (textArea.Height / e.InheritedRowStyle.Font.Height) *\n                    e.InheritedRowStyle.Font.Height;\n\n                // Calculate the portion of the text area that needs painting.\n                RectangleF clip = textArea;\n                clip.Width -= this.dataGridView1.RowHeadersWidth + 1 - clip.X;\n                clip.X = this.dataGridView1.RowHeadersWidth + 1;\n                RectangleF oldClip = e.Graphics.ClipBounds;\n                e.Graphics.SetClip(clip);\n\n                // Draw the content that spans multiple columns.\n                e.Graphics.DrawString(\n                    text, e.InheritedRowStyle.Font, forebrush, textArea);\n\n                e.Graphics.SetClip(oldClip);\n            }\n        }\n        finally\n        {\n            forebrush.Dispose();\n        }\n\n        if (this.dataGridView1.CurrentCellAddress.Y == e.RowIndex)\n        {\n            // Paint the focus rectangle.\n            e.DrawFocus(rowBounds, true);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_RowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The row index can be used to access the current row within a <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the RowIndex property to access the current row. The code gets the value of the cell at the intersection of the selected row and the third column, and then paints this value over the entire row. The variable, <code>e</code>, is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#35\">            &#39; Get the content that spans multiple columns.\n            Dim recipe As Object = _\n                Me.dataGridView1.Rows.SharedRow(e.RowIndex).Cells(2).Value\n\n            If (recipe IsNot Nothing) Then\n                Dim text As String = recipe.ToString()\n\n                &#39; Calculate the bounds for the content that spans multiple \n                &#39; columns, adjusting for the horizontal scrolling position \n                &#39; and the current row height, and displaying only whole\n                &#39; lines of text.\n                Dim textArea As Rectangle = rowBounds\n                textArea.X -= Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Width += Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height -= rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height = (textArea.Height \\ e.InheritedRowStyle.Font.Height) * _\n                    e.InheritedRowStyle.Font.Height\n\n                &#39; Calculate the portion of the text area that needs painting.\n                Dim clip As RectangleF = textArea\n                clip.Width -= Me.dataGridView1.RowHeadersWidth + 1 - clip.X\n                clip.X = Me.dataGridView1.RowHeadersWidth + 1\n                Dim oldClip As RectangleF = e.Graphics.ClipBounds\n                e.Graphics.SetClip(clip)\n\n                &#39; Draw the content that spans multiple columns.\n                e.Graphics.DrawString(text, e.InheritedRowStyle.Font, forebrush, _\n                    textArea)\n\n                e.Graphics.SetClip(oldClip)\n            End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#35\">            // Get the content that spans multiple columns.\n            object recipe =\n                this.dataGridView1.Rows.SharedRow(e.RowIndex).Cells[2].Value;\n\n            if (recipe != null)\n            {\n                String text = recipe.ToString();\n\n                // Calculate the bounds for the content that spans multiple \n                // columns, adjusting for the horizontal scrolling position \n                // and the current row height, and displaying only whole\n                // lines of text.\n                Rectangle textArea = rowBounds;\n                textArea.X -= this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Width += this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height -= rowBounds.Height -\n                    e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height = (textArea.Height / e.InheritedRowStyle.Font.Height) *\n                    e.InheritedRowStyle.Font.Height;\n\n                // Calculate the portion of the text area that needs painting.\n                RectangleF clip = textArea;\n                clip.Width -= this.dataGridView1.RowHeadersWidth + 1 - clip.X;\n                clip.X = this.dataGridView1.RowHeadersWidth + 1;\n                RectangleF oldClip = e.Graphics.ClipBounds;\n                e.Graphics.SetClip(clip);\n\n                // Draw the content that spans multiple columns.\n                e.Graphics.DrawString(\n                    text, e.InheritedRowStyle.Font, forebrush, textArea);\n\n                e.Graphics.SetClip(oldClip);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_State\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_State_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">State</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewElementStates State { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values that specifies the state of the row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property can be used to determine whether the row is frozen, read-only, or selected, among other states.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the State property to determine whether the current row is selected. The variable, <code>e</code>, is of type <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#34\">            &#39; Determine the foreground color.\n            If (e.State And DataGridViewElementStates.Selected) = _\n                DataGridViewElementStates.Selected Then\n\n                forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n            Else\n                forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n            End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#34\">            // Determine the foreground color.\n            if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                DataGridViewElementStates.Selected)\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n            }\n            else\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_DrawFocus_System_Drawing_Rectangle_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_DrawFocus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawFocus(Rectangle,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Draws the focus rectangle around the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DrawFocus (System.Drawing.Rectangle bounds, bool cellsPaintSelectionBackground);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the focus area.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellsPaintSelectionBackground</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to use the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.SelectionBackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.InheritedStyle*</span> property to determine the color of the focus rectangle; <code>false</code> to use the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.BackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.InheritedStyle*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DrawFocus method when you draw the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> and its cells&#39; contents yourself.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DrawFocus method to draw a focus around the visible cells of the row. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    &#39; Paints the content that spans multiple columns and the focus rectangle.\n    Sub dataGridView1_RowPostPaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPostPaintEventArgs) _\n        Handles dataGridView1.RowPostPaint\n\n        &#39; Calculate the bounds of the row.\n        Dim rowBounds As New Rectangle(Me.dataGridView1.RowHeadersWidth, _\n            e.RowBounds.Top, Me.dataGridView1.Columns.GetColumnsWidth( _\n            DataGridViewElementStates.Visible) - _\n            Me.dataGridView1.HorizontalScrollingOffset + 1, e.RowBounds.Height)\n\n        Dim forebrush As SolidBrush = Nothing\n        Try\n            &#39; Determine the foreground color.\n            If (e.State And DataGridViewElementStates.Selected) = _\n                DataGridViewElementStates.Selected Then\n\n                forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n            Else\n                forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n            End If\n\n            &#39; Get the content that spans multiple columns.\n            Dim recipe As Object = _\n                Me.dataGridView1.Rows.SharedRow(e.RowIndex).Cells(2).Value\n\n            If (recipe IsNot Nothing) Then\n                Dim text As String = recipe.ToString()\n\n                &#39; Calculate the bounds for the content that spans multiple \n                &#39; columns, adjusting for the horizontal scrolling position \n                &#39; and the current row height, and displaying only whole\n                &#39; lines of text.\n                Dim textArea As Rectangle = rowBounds\n                textArea.X -= Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Width += Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height -= rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height = (textArea.Height \\ e.InheritedRowStyle.Font.Height) * _\n                    e.InheritedRowStyle.Font.Height\n\n                &#39; Calculate the portion of the text area that needs painting.\n                Dim clip As RectangleF = textArea\n                clip.Width -= Me.dataGridView1.RowHeadersWidth + 1 - clip.X\n                clip.X = Me.dataGridView1.RowHeadersWidth + 1\n                Dim oldClip As RectangleF = e.Graphics.ClipBounds\n                e.Graphics.SetClip(clip)\n\n                &#39; Draw the content that spans multiple columns.\n                e.Graphics.DrawString(text, e.InheritedRowStyle.Font, forebrush, _\n                    textArea)\n\n                e.Graphics.SetClip(oldClip)\n            End If\n        Finally\n            forebrush.Dispose()\n        End Try\n\n        If Me.dataGridView1.CurrentCellAddress.Y = e.RowIndex Then\n            &#39; Paint the focus rectangle.\n            e.DrawFocus(rowBounds, True)\n        End If\n\n    End Sub &#39;dataGridView1_RowPostPaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    // Paints the content that spans multiple columns and the focus rectangle.\n    void dataGridView1_RowPostPaint(object sender,\n        DataGridViewRowPostPaintEventArgs e)\n    {\n        // Calculate the bounds of the row.\n        Rectangle rowBounds = new Rectangle(\n            this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n            this.dataGridView1.Columns.GetColumnsWidth(\n                DataGridViewElementStates.Visible) -\n            this.dataGridView1.HorizontalScrollingOffset + 1,\n            e.RowBounds.Height);\n\n        SolidBrush forebrush = null;\n        try\n        {\n            // Determine the foreground color.\n            if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                DataGridViewElementStates.Selected)\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n            }\n            else\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n            }\n\n            // Get the content that spans multiple columns.\n            object recipe =\n                this.dataGridView1.Rows.SharedRow(e.RowIndex).Cells[2].Value;\n\n            if (recipe != null)\n            {\n                String text = recipe.ToString();\n\n                // Calculate the bounds for the content that spans multiple \n                // columns, adjusting for the horizontal scrolling position \n                // and the current row height, and displaying only whole\n                // lines of text.\n                Rectangle textArea = rowBounds;\n                textArea.X -= this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Width += this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height -= rowBounds.Height -\n                    e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height = (textArea.Height / e.InheritedRowStyle.Font.Height) *\n                    e.InheritedRowStyle.Font.Height;\n\n                // Calculate the portion of the text area that needs painting.\n                RectangleF clip = textArea;\n                clip.Width -= this.dataGridView1.RowHeadersWidth + 1 - clip.X;\n                clip.X = this.dataGridView1.RowHeadersWidth + 1;\n                RectangleF oldClip = e.Graphics.ClipBounds;\n                e.Graphics.SetClip(clip);\n\n                // Draw the content that spans multiple columns.\n                e.Graphics.DrawString(\n                    text, e.InheritedRowStyle.Font, forebrush, textArea);\n\n                e.Graphics.SetClip(oldClip);\n            }\n        }\n        finally\n        {\n            forebrush.Dispose();\n        }\n\n        if (this.dataGridView1.CurrentCellAddress.Y == e.RowIndex)\n        {\n            // Paint the focus rectangle.\n            e.DrawFocus(rowBounds, true);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCells_System_Drawing_Rectangle_System_Windows_Forms_DataGridViewPaintParts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCells_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintCells(Rectangle,DataGridViewPaintParts)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the specified cell parts for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintCells (System.Drawing.Rectangle clipBounds, System.Windows.Forms.DataGridViewPaintParts paintParts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintParts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values specifying the parts to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsBackground_System_Drawing_Rectangle_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsBackground_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintCellsBackground(Rectangle,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the cell backgrounds for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintCellsBackground (System.Drawing.Rectangle clipBounds, bool cellsPaintSelectionBackground);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellsPaintSelectionBackground</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to paint the background of the specified bounds with the color of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.SelectionBackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.InheritedStyle*</span>; <code>false</code> to paint the background of the specified bounds with the color of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.BackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.InheritedStyle*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsContent_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintCellsContent(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the cell contents for the area in the specified bounds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintCellsContent (System.Drawing.Rectangle clipBounds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to be painted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintHeader(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the entire row header of the current <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintHeader (bool paintSelectionBackground);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintSelectionBackground</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to paint the row header with the color of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.SelectionBackColor*</span> property of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.InheritedStyle*</span>; <code>false</code> to paint the row header with the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellStyle.BackColor*</span> of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_System_Windows_Forms_DataGridViewPaintParts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintHeader(DataGridViewPaintParts)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the specified parts of the row header of the current row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PaintHeader (System.Windows.Forms.DataGridViewPaintParts paintParts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>paintParts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewpaintparts\" data-linktype=\"relative-path\">DataGridViewPaintParts</a> values specifying the parts to paint.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex*</span> is less than zero or greater than the number of rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewRowPostPaintEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewRowPostPaintEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsFirstDisplayedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsLastVisibleRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"69a08943-21d7-95cf-8858-5e42bb233659\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewRowPostPaintEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewRowPostPaintEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewRowPostPaintEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewRowPostPaintEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridViewRowPostPaintEventArgs","System.Windows.Forms.DataGridViewRowPostPaintEventArgs..ctor","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsFirstDisplayedRow","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsLastVisibleRow","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewRowPostPaintEventArgs","System::Windows::Forms::DataGridViewRowPostPaintEventArgs","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.#ctor","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::#ctor","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ClipBounds","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::ClipBounds","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::DrawFocus","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.ErrorText","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::ErrorText","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.Graphics","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::Graphics","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.InheritedRowStyle","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::InheritedRowStyle","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsFirstDisplayedRow","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::IsFirstDisplayedRow","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.IsLastVisibleRow","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::IsLastVisibleRow","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::PaintCells","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::PaintCellsBackground","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::PaintCellsContent","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::PaintHeader","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowBounds","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::RowBounds","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.RowIndex","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::RowIndex","System.Windows.Forms.DataGridViewRowPostPaintEventArgs.State","System::Windows::Forms::DataGridViewRowPostPaintEventArgs::State"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"69a08943-21d7-95cf-8858-5e42bb233659","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridViewRowPostPaintEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridViewRowPostPaintEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewRowPostPaintEventArgs class | Microsoft Docs","_op_ogTitle":"DataGridViewRowPostPaintEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewRowPostPaintEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewrowpostpainteventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewrowpostpainteventargs","fileRelativePath":"System.Windows.Forms.DataGridViewRowPostPaintEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}