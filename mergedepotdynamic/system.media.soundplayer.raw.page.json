{"content":"    \r\n    <h1 id=\"System_Media_SoundPlayer\">\r\n      <span class=\"lang-csharp\">SoundPlayer</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls playback of a sound from a .wav file.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.ToolboxItem(false)]\npublic class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SoundPlayer</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SoundPlayer class provides a simple interface for loading and playing a .wav file. The SoundPlayer class supports loading a .wav file from a file path, a URL, a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains a .wav file, or an embedded resource that contains a .wav file.  </p>\n<p> To play a sound using the SoundPlayer class, configure a SoundPlayer with a path to the .wav file and call one of the play methods. You can identify the .wav file to play by using one of the constructors or by setting either the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocation_\" data-linktype=\"relative-path\">SoundLocation</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Stream_\" data-linktype=\"relative-path\">Stream</a> property. The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called. A SoundPlayer configured to load a .wav file from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL must load the .wav file into memory before playback begins.  </p>\n<p> You can load or play a .wav file synchronously or asynchronously. If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted. Calling an asynchronous load or play method will allow the calling thread to continue without interruption. For more information on asynchronous method calls, see <a href=\"../Topic/How%20to:%20Run%20an%20Operation%20in%20the%20Background.md\" data-linktype=\"relative-path\">How to: Run an Operation in the Background</a>.  </p>\n<p> When a SoundPlayer has finished loading a .wav file, it raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event. You can examine the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> in your event handler to determine if the load succeeded or failed. The <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"relative-path\">SoundLocationChanged</a> event is raised when the audio source is set to a new file path or URL. The <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"relative-path\">StreamChanged</a> event is raised when the audio source is set to a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<p> For more information about SoundPlayer, see <a href=\"../Topic/SoundPlayer%20Class%20Overview.md\" data-linktype=\"relative-path\">SoundPlayer Class Overview</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The SoundPlayer class cannot play other file types, such as .wma or .mp3. If you want to play other file types, you can use the Windows Media Player control. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=131267\" data-linktype=\"external\">Using the Windows Media Player Control in a .NET Framework Solution</a> and <a href=\"http://go.microsoft.com/fwlink/?LinkId=131269\" data-linktype=\"external\">Windows Media Player Object Model Reference for Visual Basic .NET and C#</a> in the Windows Media Player SDK.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer__ctor\" data-linktype=\"self-bookmark\">SoundPlayer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer__ctor_System_IO_Stream_\" data-linktype=\"self-bookmark\">SoundPlayer(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the .wav file within the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer__ctor_System_String_\" data-linktype=\"self-bookmark\">SoundPlayer(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the specified .wav file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">SoundPlayer(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_IsLoadCompleted\" data-linktype=\"self-bookmark\">IsLoadCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether loading of a .wav file has successfully completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_LoadTimeout\" data-linktype=\"self-bookmark\">LoadTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the time, in milliseconds, in which the .wav file must load.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_SoundLocation\" data-linktype=\"self-bookmark\">SoundLocation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the file path or URL of the .wav file to load.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_Stream\" data-linktype=\"self-bookmark\">Stream</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to load the .wav file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_Tag\" data-linktype=\"self-bookmark\">Tag</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_Load\" data-linktype=\"self-bookmark\">Load()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads a sound synchronously.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_LoadAsync\" data-linktype=\"self-bookmark\">LoadAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads a .wav file from a stream or a Web resource using a new thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_OnLoadCompleted_System_ComponentModel_AsyncCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnLoadCompleted(AsyncCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_OnSoundLocationChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSoundLocationChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"relative-path\">SoundLocationChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_OnStreamChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnStreamChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"relative-path\">StreamChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_Play\" data-linktype=\"self-bookmark\">Play()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_PlayLooping\" data-linktype=\"self-bookmark\">PlayLooping()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_PlaySync\" data-linktype=\"self-bookmark\">PlaySync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Plays the .wav file and loads the .wav file first if it has not been loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_Stop\" data-linktype=\"self-bookmark\">Stop()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Stops playback of the sound if playback is occurring.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"self-bookmark\">LoadCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a .wav file has been successfully or unsuccessfully loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"self-bookmark\">SoundLocationChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"self-bookmark\">StreamChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Media_SoundPlayer_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see the <span class=\"xref\">stem.Runtime.Serialization.ISerializable.GetObjectData*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer__ctor\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundPlayer()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoundPlayer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> with no audio source. Until it is configured with an audio source path, the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will play a beep sound when one of its playback methods is called.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer__ctor_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundPlayer(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the .wav file within the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoundPlayer (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to a .wav file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> passed to the <code>stream</code> parameter should be a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing a .wav file. The data returned by the <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Read_\" data-linktype=\"relative-path\">Read</a> method of the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> should be the data within a .wav file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundPlayer(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class, and attaches the specified .wav file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SoundPlayer (string soundLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>soundLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of a .wav file to load.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URL value specified by <code>soundLocation</code> cannot be resolved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string passed to the <code>soundLocation</code> parameter can be either a file path or a URL to a .wav file. If the path or URL is not valid, the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will still be constructed, but subsequent calls to a load or play method will fail.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundPlayer(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to be used for deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination to be used for deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> specified in <code>serializationInfo</code> cannot be resolved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_IsLoadCompleted\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_IsLoadCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLoadCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether loading of a .wav file has successfully completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsLoadCompleted { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a .wav file is loaded; <code>false</code> if a .wav file has not yet been loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_LoadTimeout\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_LoadTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the time, in milliseconds, in which the .wav file must load.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int LoadTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of milliseconds to wait. The default is 10000 (10 seconds).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After this time has expired, the loading is canceled and a <a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a> exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_SoundLocation\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_SoundLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundLocation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the file path or URL of the .wav file to load.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SoundLocation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The file path or URL from which to load a .wav file, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no file path is present. The default is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is set to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a> when the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Stream_\" data-linktype=\"relative-path\">Stream</a> property is set to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the SoundLocation property to assign the .wav file source to an instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#2\">        Try\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = filepathTextbox.Text\n\n            &#39; Load the .wav file.\n            player.Load()\n        Catch ex As Exception\n            ReportStatus(ex.Message)\n        End Try\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#2\">      try\n      {\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = filepathTextbox-&gt;Text;\n         \n         // Load the .wav file.\n         player-&gt;Load();\n      }\n      catch ( Exception^ ex ) \n      {\n         ReportStatus( ex-&gt;Message );\n      }\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#2\">            try\n            {\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = filepathTextbox.Text;\n\n                // Load the .wav file.\n                player.Load();\n            }\n            catch (Exception ex)\n            {\n                ReportStatus(ex.Message);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_Stream\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_Stream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Stream</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to load the .wav file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream Stream { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to load the .wav file, or <code>null</code> if no stream is available. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is set to <code>null</code> when the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocation_\" data-linktype=\"relative-path\">SoundLocation</a> property is set to a new and valid sound location.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_Tag\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_Tag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Tag</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Tag { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_Load\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_Load_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load()</div>        \r\n          </div>\r\n    \r\n            <p>Loads a sound synchronously.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Load ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Load method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The Load method may produce a delay while loading a large .wav file. In addition, painting and other events will be blocked until the load is completed. Use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> method to load a sound asynchronously, which allows the calling thread to continue without interruption.  </p>\n</div>\n<p> This method raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event when loading completes, even if the load was not successful.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> method to attach a .wav file to an instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#2\">        Try\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = filepathTextbox.Text\n\n            &#39; Load the .wav file.\n            player.Load()\n        Catch ex As Exception\n            ReportStatus(ex.Message)\n        End Try\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#2\">      try\n      {\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = filepathTextbox-&gt;Text;\n         \n         // Load the .wav file.\n         player-&gt;Load();\n      }\n      catch ( Exception^ ex ) \n      {\n         ReportStatus( ex-&gt;Message );\n      }\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#2\">            try\n            {\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = filepathTextbox.Text;\n\n                // Load the .wav file.\n                player.Load();\n            }\n            catch (Exception ex)\n            {\n                ReportStatus(ex.Message);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_LoadAsync\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_LoadAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Loads a .wav file from a stream or a Web resource using a new thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void LoadAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> is configured to load a .wav file from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or Web resource, this method begins loading a .wav file from the location using a new thread.  </p>\n<p> This method raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event when loading completes, even if the load was not successful.  </p>\n<p> If a <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.  </p>\n<p> For more information about asynchronous loading, see <a href=\"../Topic/How%20to:%20Load%20a%20Sound%20Asynchronously%20within%20a%20Windows%20Form.md\" data-linktype=\"relative-path\">How to: Load a Sound Asynchronously within a Windows Form</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the LoadAsync method to asynchronously load a .wav file for use by an instance of the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#3\">        Try\n            &#39; Assign the selected file&#39;s path to the SoundPlayer object.\n            player.SoundLocation = Me.filepathTextbox.Text\n\n            &#39; Load the .wav file.\n            player.LoadAsync()\n        Catch ex As Exception\n            ReportStatus(ex.Message)\n        End Try\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#3\">      try\n      {\n         \n         // Assign the selected file&#39;s path to \n         // the SoundPlayer object.  \n         player-&gt;SoundLocation = this-&gt;filepathTextbox-&gt;Text;\n         \n         // Load the .wav file.\n         player-&gt;LoadAsync();\n      }\n      catch ( Exception^ ex ) \n      {\n         ReportStatus( ex-&gt;Message );\n      }\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#3\">            try\n            {\n                // Assign the selected file&#39;s path to \n                // the SoundPlayer object.  \n                player.SoundLocation = this.filepathTextbox.Text;\n\n                // Load the .wav file.\n                player.LoadAsync();\n            }\n            catch (Exception ex)\n            {\n                ReportStatus(ex.Message);\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_OnLoadCompleted_System_ComponentModel_AsyncCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_OnLoadCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLoadCompleted(AsyncCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadCompleted\" data-linktype=\"relative-path\">LoadCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs\" data-linktype=\"relative-path\">AsyncCompletedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called when loading of a .wav file is complete.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLoadCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_OnSoundLocationChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_OnSoundLocationChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSoundLocationChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_SoundLocationChanged\" data-linktype=\"relative-path\">SoundLocationChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSoundLocationChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see How to: Provide Event functionality and <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSoundLocationChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_OnStreamChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_OnStreamChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStreamChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_StreamChanged\" data-linktype=\"relative-path\">StreamChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnStreamChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnStreamChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_Play\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_Play_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Play()</div>        \r\n          </div>\r\n    \r\n            <p>Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Play ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Play method plays the sound using a new thread. If you call Play before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the Play method will play the default beep sound.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the Play method to asynchronously play a .wav file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#5\">        ReportStatus(&quot;Playing .wav file asynchronously.&quot;)\n        player.Play()\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#5\">      ReportStatus( &quot;Playing .wav file asynchronously.&quot; );\n      player-&gt;Play();\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#5\">            ReportStatus(&quot;Playing .wav file asynchronously.&quot;);\n            player.Play();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_PlayLooping\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_PlayLooping_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PlayLooping()</div>        \r\n          </div>\r\n    \r\n            <p>Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PlayLooping ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PlayLooping method plays and loops the sound using a new thread. If you call PlayLooping before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the PlayLooping method will play the default beep sound.  </p>\n<p> For more information about PlayLooping, see <a href=\"../Topic/How%20to:%20Loop%20a%20Sound%20Playing%20on%20a%20Windows%20Form.md\" data-linktype=\"relative-path\">How to: Loop a Sound Playing on a Windows Form</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the PlayLooping method to repeatedly play a .wav file. The .wav will be played until the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Stop_\" data-linktype=\"relative-path\">Stop</a> method is called. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#6\">        ReportStatus(&quot;Looping .wav file asynchronously.&quot;)\n        player.PlayLooping()\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#6\">      ReportStatus( &quot;Looping .wav file asynchronously.&quot; );\n      player-&gt;PlayLooping();\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#6\">            ReportStatus(&quot;Looping .wav file asynchronously.&quot;);\n            player.PlayLooping();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_PlaySync\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_PlaySync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PlaySync()</div>        \r\n          </div>\r\n    \r\n            <p>Plays the .wav file and loads the .wav file first if it has not been loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PlaySync ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.serviceprocess.timeoutexception\" data-linktype=\"relative-path\">TimeoutException</a></div>\r\n                  </div>\r\n                  <p>The elapsed time during loading exceeds the time, in milliseconds, specified by <span class=\"xref\">stem.Media.SoundPlayer.LoadTimeout*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The .wav header is corrupted; the file specified by <span class=\"xref\">stem.Media.SoundPlayer.SoundLocation*</span> is not a PCM .wav file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PlaySync method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete. You can use the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_LoadAsync_\" data-linktype=\"relative-path\">LoadAsync</a> or <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Load_\" data-linktype=\"relative-path\">Load</a> method to load the .wav file to memory in advance. After a .wav file is successfully loaded from a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> or URL, future calls to playback methods for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> will not need to reload the .wav file until the path for the sound changes.  </p>\n<p> If the .wav file has not been specified or it fails to load, the PlaySync method will play the default beep sound.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the PlaySync method to synchronously play a .wav file.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.PlaySync#1\">\t\tprivate SoundPlayer Player = new SoundPlayer();\n\t\tprivate void loadSoundAsync()\n\t\t{\n\t\t\t// Note: You may need to change the location specified based on\n\t\t\t// the location of the sound to be played.\n\t\t\tthis.Player.SoundLocation = &quot;http://www.tailspintoys.com/sounds/stop.wav&quot;;\n\t\t\tthis.Player.LoadAsync();\n\t\t}\n\t\t\n\t\tprivate void Player_LoadCompleted (\n            object sender, \n            System.ComponentModel.AsyncCompletedEventArgs e)\n\t\t{\n\t\t    if (this.Player.IsLoadCompleted)\n\t\t    {\n\t\t        this.Player.PlaySync();\n\t\t    }\n\t\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.PlaySync#1\">private:\n   SoundPlayer^ Player;\n\n   void loadSoundAsync()\n   {\n      // Note: You may need to change the location specified based on\n      // the location of the sound to be played.\n      this-&gt;Player-&gt;SoundLocation = &quot;http://www.tailspintoys.com/sounds/stop.wav&quot;;\n      this-&gt;Player-&gt;LoadAsync();\n   }\n\n   void Player_LoadCompleted( Object^ /*sender*/, System::ComponentModel::AsyncCompletedEventArgs^ /*e*/ )\n   {\n      if (this-&gt;Player-&gt;IsLoadCompleted == true)\n      {\n         this-&gt;Player-&gt;PlaySync();\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.PlaySync#1\">Private WithEvents Player As New SoundPlayer\n\nSub LoadSoundAsync()\n    &#39; Note: You may need to change the location specified based on\n    &#39; the location of the sound to be played.\n    Me.Player.SoundLocation = &quot;http://www.tailspintoys.com/sounds/stop.wav&quot;\n    Me.Player.LoadAsync ()\nEnd Sub\n\nPrivate Sub PlayWhenLoaded(ByVal sender As Object, ByVal e As _\n    System.ComponentModel.AsyncCompletedEventArgs) Handles _\n    Player.LoadCompleted\n    If Me.Player.IsLoadCompleted = True Then\n            Me.Player.PlaySync()\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_Stop\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_Stop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Stop()</div>        \r\n          </div>\r\n    \r\n            <p>Stops playback of the sound if playback is occurring.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Stop ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the Stop method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#7\">        player.Stop()\n        ReportStatus(&quot;Stopped by user.&quot;)\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#7\">      player-&gt;Stop();\n      ReportStatus( &quot;Stopped by user.&quot; );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#7\">            player.Stop();\n            ReportStatus(&quot;Stopped by user.&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_LoadCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a .wav file has been successfully or unsuccessfully loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when loading of a .wav file is complete. The event arguments indicate whether the load of the sound was completed successfully or failed.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_OnLoadCompleted_\" data-linktype=\"relative-path\">OnLoadCompleted</a> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#8\">    &#39; Handler for the LoadCompleted event.\n    Private Sub player_LoadCompleted(ByVal sender As Object, _\n        ByVal e As AsyncCompletedEventArgs)\n\n        Dim message As String = [String].Format(&quot;LoadCompleted: {0}&quot;, _\n            Me.filepathTextbox.Text)\n        ReportStatus(message)\n        EnablePlaybackControls(True)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#8\">   // Handler for the LoadCompleted event.\n   void player_LoadCompleted( Object^ /*sender*/, AsyncCompletedEventArgs^ /*e*/ )\n   {\n      String^ message = String::Format( &quot;LoadCompleted: {0}&quot;, this-&gt;filepathTextbox-&gt;Text );\n      ReportStatus( message );\n      EnablePlaybackControls( true );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#8\">        // Handler for the LoadCompleted event.\n        private void player_LoadCompleted(object sender, \n            AsyncCompletedEventArgs e)\n        {   \n            string message = String.Format(&quot;LoadCompleted: {0}&quot;, \n                this.filepathTextbox.Text);\n            ReportStatus(message);\n            EnablePlaybackControls(true);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_SoundLocationChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoundLocationChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SoundLocationChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when a new audio source path for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_OnSoundLocationChanged_\" data-linktype=\"relative-path\">OnSoundLocationChanged</a> event handler to receive a notification when the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been attached to a different .wav file. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.Sound#9\">    &#39; Handler for the SoundLocationChanged event.\n    Private Sub player_LocationChanged(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        Dim message As String = [String].Format(&quot;SoundLocationChanged: {0}&quot;, _\n            player.SoundLocation)\n        ReportStatus(message)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.Sound#9\">   // Handler for the SoundLocationChanged event.\n   void player_LocationChanged( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      String^ message = String::Format( &quot;SoundLocationChanged: {0}&quot;, player-&gt;SoundLocation );\n      ReportStatus( message );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.Sound#9\">        // Handler for the SoundLocationChanged event.\n        private void player_LocationChanged(object sender, EventArgs e)\n        {   \n            string message = String.Format(&quot;SoundLocationChanged: {0}&quot;, \n                player.SoundLocation);\n            ReportStatus(message);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_StreamChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StreamChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler StreamChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when a new <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> audio source for this <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> has been set.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Media_SoundPlayer_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Media_SoundPlayer_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see the <span class=\"xref\">stem.Runtime.Serialization.ISerializable.GetObjectData*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>) for this serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> instance is cast to an <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Media.SoundPlayer.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Media.SoundPlayer.yml\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.IsLoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Load\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadAsync\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_LoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.LoadTimeout\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnLoadCompleted\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnSoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.OnStreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Play\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.PlayLooping\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.PlaySync\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.SoundLocation\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_SoundLocationChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Stop\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Stream\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.add_StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.remove_StreamChanged\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Media.SoundPlayer.Tag\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e7239366-bb0c-8a33-a932-4832ac062c77\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls playback of a sound from a .wav file.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Media/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Media.SoundPlayer\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Media.SoundPlayer.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Media.SoundPlayer.yml","open_to_public_contributors":true,"api_name":["System.Media.SoundPlayer","System.Media.SoundPlayer..ctor","System.Media.SoundPlayer.IsLoadCompleted","System.Media.SoundPlayer.Load","System.Media.SoundPlayer.LoadAsync","System.Media.SoundPlayer.LoadCompleted","System.Media.SoundPlayer.add_LoadCompleted","System.Media.SoundPlayer.remove_LoadCompleted","System.Media.SoundPlayer.LoadTimeout","System.Media.SoundPlayer.OnLoadCompleted","System.Media.SoundPlayer.OnSoundLocationChanged","System.Media.SoundPlayer.OnStreamChanged","System.Media.SoundPlayer.Play","System.Media.SoundPlayer.PlayLooping","System.Media.SoundPlayer.PlaySync","System.Media.SoundPlayer.SoundLocation","System.Media.SoundPlayer.SoundLocationChanged","System.Media.SoundPlayer.add_SoundLocationChanged","System.Media.SoundPlayer.remove_SoundLocationChanged","System.Media.SoundPlayer.Stop","System.Media.SoundPlayer.Stream","System.Media.SoundPlayer.StreamChanged","System.Media.SoundPlayer.add_StreamChanged","System.Media.SoundPlayer.remove_StreamChanged","System.Media.SoundPlayer.ISerializable.GetObjectData","System.Media.SoundPlayer.Tag"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Media.SoundPlayer","System::Media::SoundPlayer","System.Media.SoundPlayer.#ctor","System::Media::SoundPlayer::#ctor","System.Media.SoundPlayer.IsLoadCompleted","System::Media::SoundPlayer::IsLoadCompleted","System.Media.SoundPlayer.Load","System::Media::SoundPlayer::Load","System.Media.SoundPlayer.LoadAsync","System::Media::SoundPlayer::LoadAsync","System.Media.SoundPlayer.LoadCompleted","System::Media::SoundPlayer::LoadCompleted","System.Media.SoundPlayer.LoadTimeout","System::Media::SoundPlayer::LoadTimeout","System.Media.SoundPlayer.OnLoadCompleted","System::Media::SoundPlayer::OnLoadCompleted","System.Media.SoundPlayer.OnSoundLocationChanged","System::Media::SoundPlayer::OnSoundLocationChanged","System.Media.SoundPlayer.OnStreamChanged","System::Media::SoundPlayer::OnStreamChanged","System.Media.SoundPlayer.Play","System::Media::SoundPlayer::Play","System.Media.SoundPlayer.PlayLooping","System::Media::SoundPlayer::PlayLooping","System.Media.SoundPlayer.PlaySync","System::Media::SoundPlayer::PlaySync","System.Media.SoundPlayer.SoundLocation","System::Media::SoundPlayer::SoundLocation","System.Media.SoundPlayer.SoundLocationChanged","System::Media::SoundPlayer::SoundLocationChanged","System.Media.SoundPlayer.Stop","System::Media::SoundPlayer::Stop","System.Media.SoundPlayer.Stream","System::Media::SoundPlayer::Stream","System.Media.SoundPlayer.StreamChanged","System::Media::SoundPlayer::StreamChanged","System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData","System::Media::SoundPlayer::System#Runtime#Serialization#ISerializable#GetObjectData","System.Media.SoundPlayer.Tag","System::Media::SoundPlayer::Tag"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e7239366-bb0c-8a33-a932-4832ac062c77","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Media/SoundPlayer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoundPlayer class | Microsoft Docs","_op_ogTitle":"SoundPlayer class","description":"Controls playback of a sound from a .wav file.\n","toc_asset_id":"_splitted/System.Media/toc.json","toc_rel":"_splitted/System.Media/toc.json","source_url":"","ms.assetid":"System.Media.SoundPlayer","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.media.soundplayer","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.media.soundplayer","fileRelativePath":"System.Media.SoundPlayer.html"},"themesRelativePathToOutputRoot":"_themes/"}