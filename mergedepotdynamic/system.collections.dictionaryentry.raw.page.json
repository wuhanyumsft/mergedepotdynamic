{"content":"    \r\n    <h1 id=\"System_Collections_DictionaryEntry\">\r\n      <span class=\"lang-csharp\">DictionaryEntry</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a dictionary key/value pair that can be set or retrieved.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic struct DictionaryEntry</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DictionaryEntry</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.collections.idictionaryenumerator#System_Collections_IDictionaryEnumerator_Entry_\" data-linktype=\"relative-path\">Entry</a> method returns an instance of this type.  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual C++, <code>For Each</code> in Visual Basic) requires the type of each element in the collection. Since each element of the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is DictionaryEntry. For example:  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.DictionaryEntry#01\">        for each (DictionaryEntry de in openWith)\n        {\n            Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.DictionaryEntry#01\">        For Each de As DictionaryEntry In openWith\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, _\n                de.Key, de.Value)\n        Next de\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.DictionaryEntry#01\">        foreach (DictionaryEntry de in openWith)\n        {\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, de.Key, de.Value);\n        }\n</code></pre><p> The <code>foreach</code> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_DictionaryEntry__ctor_System_Object_System_Object_\" data-linktype=\"self-bookmark\">DictionaryEntry(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> type with the specified key and value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_DictionaryEntry_Key\" data-linktype=\"self-bookmark\">Key</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the key in the key/value pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_DictionaryEntry_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value in the key/value pair.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_DictionaryEntry__ctor_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_DictionaryEntry__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DictionaryEntry(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes an instance of the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> type with the specified key and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DictionaryEntry (object key, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object defined in each key/value pair.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The definition associated with <code>key</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>key</code> is <code>null</code> and the .NET Framework version is 1.0 or 1.1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the .NET Framework 2.0 <code>key</code> can be <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_DictionaryEntry_Key\">\r\n    \r\n            <a id=\"System_Collections_DictionaryEntry_Key_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Key</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the key in the key/value pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Key { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The key in the key/value pair.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the Key property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Dictionary#9\">public:\n    virtual void Add(Object^ key, Object^ value)\n    {\n        // Add the new key/value pair even if this key already exists\n        // in the dictionary.\n        if (itemsInUse == items-&gt;Length)\n        {\n            throw gcnew InvalidOperationException\n                (&quot;The dictionary cannot hold any more items.&quot;);\n        }\n        items[itemsInUse++] = gcnew DictionaryEntry(key, value);\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Dictionary#9\">    public void Add(object key, object value) \n    {\n        // Add the new key/value pair even if this key already exists in the dictionary.\n        if (ItemsInUse == items.Length)\n            throw new InvalidOperationException(&quot;The dictionary cannot hold any more items.&quot;);\n        items[ItemsInUse++] = new DictionaryEntry(key, value);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Dictionary#9\">    Public Sub Add(ByVal key As Object, ByVal value As Object) Implements IDictionary.Add\n\n        &#39; Add the new key/value pair even if this key already exists in the dictionary.\n        If ItemsInUse = items.Length Then\n            Throw New InvalidOperationException(&quot;The dictionary cannot hold any more items.&quot;)\n        End If\n        items(ItemsInUse) = New DictionaryEntry(key, value)\n        ItemsInUse = ItemsInUse + 1\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_DictionaryEntry_Value\">\r\n    \r\n            <a id=\"System_Collections_DictionaryEntry_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value in the key/value pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Value { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value in the key/value pair.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the Value property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Dictionary#9\">public:\n    virtual void Add(Object^ key, Object^ value)\n    {\n        // Add the new key/value pair even if this key already exists\n        // in the dictionary.\n        if (itemsInUse == items-&gt;Length)\n        {\n            throw gcnew InvalidOperationException\n                (&quot;The dictionary cannot hold any more items.&quot;);\n        }\n        items[itemsInUse++] = gcnew DictionaryEntry(key, value);\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Dictionary#9\">    public void Add(object key, object value) \n    {\n        // Add the new key/value pair even if this key already exists in the dictionary.\n        if (ItemsInUse == items.Length)\n            throw new InvalidOperationException(&quot;The dictionary cannot hold any more items.&quot;);\n        items[ItemsInUse++] = new DictionaryEntry(key, value);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Dictionary#9\">    Public Sub Add(ByVal key As Object, ByVal value As Object) Implements IDictionary.Add\n\n        &#39; Add the new key/value pair even if this key already exists in the dictionary.\n        If ItemsInUse = items.Length Then\n            Throw New InvalidOperationException(&quot;The dictionary cannot hold any more items.&quot;)\n        End If\n        items(ItemsInUse) = New DictionaryEntry(key, value)\n        ItemsInUse = ItemsInUse + 1\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.DictionaryEntry.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.DictionaryEntry.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry.Key\">\r\n<meta name=\"APIName\" content=\"System.Collections.DictionaryEntry.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"35aef621-95c8-4ee4-ed6c-9d6c6e707ca4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a dictionary key/value pair that can be set or retrieved.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.DictionaryEntry\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.DictionaryEntry.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.DictionaryEntry.yml","open_to_public_contributors":true,"api_name":["System.Collections.DictionaryEntry","System.Collections.DictionaryEntry..ctor","System.Collections.DictionaryEntry.Key","System.Collections.DictionaryEntry.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.DictionaryEntry","System::Collections::DictionaryEntry","System.Collections.DictionaryEntry.#ctor","System::Collections::DictionaryEntry::#ctor","System.Collections.DictionaryEntry.Key","System::Collections::DictionaryEntry::Key","System.Collections.DictionaryEntry.Value","System::Collections::DictionaryEntry::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"35aef621-95c8-4ee4-ed6c-9d6c6e707ca4","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections/DictionaryEntry.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DictionaryEntry struct | Microsoft Docs","_op_ogTitle":"DictionaryEntry struct","description":"Defines a dictionary key/value pair that can be set or retrieved.\n","toc_asset_id":"_splitted/System.Collections/toc.json","toc_rel":"_splitted/System.Collections/toc.json","source_url":"","ms.assetid":"System.Collections.DictionaryEntry","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.dictionaryentry","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.dictionaryentry","fileRelativePath":"System.Collections.DictionaryEntry.html"},"themesRelativePathToOutputRoot":"_themes/"}