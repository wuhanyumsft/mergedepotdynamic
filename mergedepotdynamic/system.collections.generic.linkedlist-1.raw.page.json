{"content":"    \r\n    <h1 id=\"System_Collections_Generic_LinkedList_1\">\r\n      <span class=\"lang-csharp\">LinkedList&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a doubly linked list.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;Count = {Count}&quot;)]\n[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_CollectionDebugView`1))]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic class LinkedList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>Specifies the element type of the linked list.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LinkedList&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>LinkedList(T) is a general-purpose linked list. It supports enumerators and implements the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface, consistent with other collection classes in the .NET Framework.  </p>\n<p> LinkedList(T) provides separate nodes of type <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode&lt;T&gt;</a>, so insertion and removal are O(1) operations.  </p>\n<p> You can remove nodes and reinsert them, either in the same list or in another list, which results in no additional objects allocated on the heap. Because the list also maintains an internal count, getting the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a> property is an O(1) operation.  </p>\n<p> Each node in a LinkedList(T) object is of the type <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode&lt;T&gt;</a>. Because the LinkedList(T) is doubly linked, each node points forward to the <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Next_\" data-linktype=\"relative-path\">Next</a> node and backward to the <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Previous_\" data-linktype=\"relative-path\">Previous</a> node.  </p>\n<p> Lists that contain reference types perform better when a node and its value are created at the same time. LinkedList(T) accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> property for reference types and allows duplicate values.  </p>\n<p> If the LinkedList(T) is empty, the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> properties contain <code>null</code>.  </p>\n<p> The LinkedList(T) class does not support chaining, splitting, cycles, or other features that can leave the list in an inconsistent state. The list remains consistent on a single thread. The only multithreaded scenario supported by LinkedList(T) is multithreaded read operations.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1__ctor\" data-linktype=\"self-bookmark\">LinkedList&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1__ctor_System_Collections_Generic_IEnumerable__0__\" data-linktype=\"self-bookmark\">LinkedList&lt;T&gt;(IEnumerable&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that contains elements copied from the specified <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> and has sufficient capacity to accommodate the number of elements copied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">LinkedList&lt;T&gt;(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that is serializable with the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of nodes actually contained in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_First\" data-linktype=\"self-bookmark\">First</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the first node of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Last\" data-linktype=\"self-bookmark\">Last</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the last node of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddAfter_System_Collections_Generic_LinkedListNode__0__System_Collections_Generic_LinkedListNode__0__\" data-linktype=\"self-bookmark\">AddAfter(LinkedListNode&lt;T&gt;,LinkedListNode&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified new node after the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddAfter_System_Collections_Generic_LinkedListNode__0___0_\" data-linktype=\"self-bookmark\">AddAfter(LinkedListNode&lt;T&gt;,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new node containing the specified value after the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddBefore_System_Collections_Generic_LinkedListNode__0__System_Collections_Generic_LinkedListNode__0__\" data-linktype=\"self-bookmark\">AddBefore(LinkedListNode&lt;T&gt;,LinkedListNode&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified new node before the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddBefore_System_Collections_Generic_LinkedListNode__0___0_\" data-linktype=\"self-bookmark\">AddBefore(LinkedListNode&lt;T&gt;,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new node containing the specified value before the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddFirst_System_Collections_Generic_LinkedListNode__0__\" data-linktype=\"self-bookmark\">AddFirst(LinkedListNode&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified new node at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddFirst__0_\" data-linktype=\"self-bookmark\">AddFirst(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new node containing the specified value at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddLast_System_Collections_Generic_LinkedListNode__0__\" data-linktype=\"self-bookmark\">AddLast(LinkedListNode&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified new node at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_AddLast__0_\" data-linktype=\"self-bookmark\">AddLast(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new node containing the specified value at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all nodes from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Contains__0_\" data-linktype=\"self-bookmark\">Contains(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a value is in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_CopyTo__0___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(T[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the entire <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> to a compatible one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index of the target array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Find__0_\" data-linktype=\"self-bookmark\">Find(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the first node that contains the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_FindLast__0_\" data-linktype=\"self-bookmark\">FindLast(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the last node that contains the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and returns the data needed to serialize the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and raises the deserialization event when the deserialization is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Remove_System_Collections_Generic_LinkedListNode__0__\" data-linktype=\"self-bookmark\">Remove(LinkedListNode&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified node from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_Remove__0_\" data-linktype=\"self-bookmark\">Remove(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first occurrence of the specified value from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_RemoveFirst\" data-linktype=\"self-bookmark\">RemoveFirst()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the node at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_RemoveLast\" data-linktype=\"self-bookmark\">RemoveLast()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the node at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__Add__0_\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.Add(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an item at the end of the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__IsReadOnly\" data-linktype=\"self-bookmark\">ICollection&lt;T&gt;.IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_Generic_IEnumerable_T__GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable&lt;T&gt;.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">ICollection.CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_LinkedList_1_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the linked list as a collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1__ctor\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkedList&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinkedList ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> properties contain <code>null</code>.  </p>\n<p> This constructor is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates and initializes a <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, adds several nodes, and then displays its contents.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Generic.LinkedList.ctor#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Collections::Generic;\n\nvoid main()\n{\n   // Create and initialize a new LinkedList.\n   LinkedList&lt; String^ &gt; ^ ll = gcnew LinkedList&lt; String^ &gt;;\n   ll-&gt;AddLast( L&quot;red&quot; );\n   ll-&gt;AddLast( L&quot;orange&quot; );\n   ll-&gt;AddLast( L&quot;yellow&quot; );\n   ll-&gt;AddLast( L&quot;orange&quot; );\n   \n   // Display the contents of the LinkedList.\n   if ( ll-&gt;Count &gt; 0 )\n   {\n      Console::WriteLine( L&quot;The first item in the list is {0}.&quot;, ll-&gt;First-&gt;Value );\n      Console::WriteLine( L&quot;The last item in the list is {0}.&quot;, ll-&gt;Last-&gt;Value );\n      Console::WriteLine( L&quot;The LinkedList contains:&quot; );\n\n      for each (String^ s in ll)\n      {\n         Console::WriteLine( L&quot;   {0}&quot;, s );\n      }\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The LinkedList is empty.&quot; );\n   }\n}\n\n/* This code produces the following output.\n\nThe first item in the list is red.\nThe last item in the list is orange.\nThe LinkedList contains:\n   red\n   orange\n   yellow\n   orange\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.LinkedList.ctor#1\">Imports System\nImports System.Collections\nImports System.Collections.Generic\n\nPublic Class GenericCollection\n\n    Public Shared Sub Main()\n\n        &#39; Create and initialize a new LinkedList.\n        Dim ll As New LinkedList(Of String)()\n        ll.AddLast(&quot;red&quot;)\n        ll.AddLast(&quot;orange&quot;)\n        ll.AddLast(&quot;yellow&quot;)\n        ll.AddLast(&quot;orange&quot;)\n\n        &#39; Display the contents of the LinkedList.\n        If ll.Count &gt; 0 Then\n            Console.WriteLine(&quot;The first item in the list is {0}.&quot;, ll.First.Value)\n            Console.WriteLine(&quot;The last item in the list is {0}.&quot;, ll.Last.Value)\n\n            Console.WriteLine(&quot;The LinkedList contains:&quot;)\n            For Each s As String In  ll\n                Console.WriteLine(&quot;   {0}&quot;, s)\n            Next s \n        Else\n            Console.WriteLine(&quot;The LinkedList is empty.&quot;)\n        End If\n\n    End Sub \n\nEnd Class \n\n&#39;This code produces the following output.\n&#39;\n&#39;The first item in the list is &lt;null&gt;.\n&#39;The last item in the list is orange.\n&#39;The LinkedList contains:\n&#39;   red\n&#39;   orange\n&#39;   yellow\n&#39;   orange\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Generic.LinkedList.ctor#1\">using System;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class GenericCollection  \n{\n   public static void Main()  \n   {\n      // Create and initialize a new LinkedList.\n      LinkedList&lt;String&gt; ll = new LinkedList&lt;String&gt;();\n      ll.AddLast( &quot;red&quot; );\n      ll.AddLast( &quot;orange&quot; );\n      ll.AddLast( &quot;yellow&quot; );\n      ll.AddLast( &quot;orange&quot; );\n\n      // Display the contents of the LinkedList.\n      if ( ll.Count &gt; 0 )  \n      {\n         Console.WriteLine( &quot;The item in the list is {0}.&quot;, ll.First.Value );\n         Console.WriteLine( &quot;The item in the list is {0}.&quot;, ll.Last.Value );\n\n         Console.WriteLine( &quot;The LinkedList contains:&quot; );\n         foreach ( String s in ll )\n            Console.WriteLine( &quot;   {0}&quot;, s);\n      }\n      else  \n      {\n         Console.WriteLine(&quot;The LinkedList is empty.&quot;);\n      }\n   }\n}\n\n/* This code produces the following output.\n\nThe first item in the list is red.\nThe last item in the list is orange.\nThe LinkedList contains:\n   red\n   orange\n   yellow\n   orange\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1__ctor_System_Collections_Generic_IEnumerable__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkedList&lt;T&gt;(IEnumerable&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that contains elements copied from the specified <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> and has sufficient capacity to accommodate the number of elements copied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LinkedList (System.Collections.Generic.IEnumerable&lt;T&gt; collection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> whose elements are copied to the new <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>collection</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If <code>collection</code> has no elements then the new <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> properties contain <code>null</code>.  </p>\n<p> This constructor is an O(n) operation, where <code>n</code> is the number of elements in <code>collection</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this constructor, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinkedList&lt;T&gt;(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> class that is serializable with the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected LinkedList (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object containing the information required to serialize the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object containing the source and destination of the serialized stream associated with the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> properties contain <code>null</code>.  </p>\n<p> This constructor is an O(n) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Count\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of nodes actually contained in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of nodes actually contained in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this property, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_First\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_First_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">First</div>        \r\n          </div>\r\n    \r\n            <p>Gets the first node of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; First { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The first <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the First and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> properties contain <code>null</code>.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this property, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Last\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Last_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Last</div>        \r\n          </div>\r\n    \r\n            <p>Gets the last node of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; Last { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The last <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and Last properties contain <code>null</code>.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this property, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddAfter_System_Collections_Generic_LinkedListNode__0__System_Collections_Generic_LinkedListNode__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAfter(LinkedListNode&lt;T&gt;,LinkedListNode&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified new node after the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> after which to insert <code>newNode</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> to add to the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>newNode</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is not in the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.  </p>\n<p> -or-  </p>\n<p> <code>newNode</code> belongs to another <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddAfter_System_Collections_Generic_LinkedListNode__0___0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAfter(LinkedListNode&lt;T&gt;,T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new node containing the specified value after the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; AddAfter (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> after which to insert a new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to add to the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is not in the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddBefore_System_Collections_Generic_LinkedListNode__0__System_Collections_Generic_LinkedListNode__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddBefore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBefore(LinkedListNode&lt;T&gt;,LinkedListNode&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified new node before the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, System.Collections.Generic.LinkedListNode&lt;T&gt; newNode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> before which to insert <code>newNode</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newNode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> to add to the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>newNode</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is not in the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.  </p>\n<p> -or-  </p>\n<p> <code>newNode</code> belongs to another <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddBefore_System_Collections_Generic_LinkedListNode__0___0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddBefore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddBefore(LinkedListNode&lt;T&gt;,T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new node containing the specified value before the specified existing node in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; AddBefore (System.Collections.Generic.LinkedListNode&lt;T&gt; node, T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> before which to insert a new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to add to the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is not in the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddFirst_System_Collections_Generic_LinkedListNode__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddFirst_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFirst(LinkedListNode&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified new node at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddFirst (System.Collections.Generic.LinkedListNode&lt;T&gt; node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> to add at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> belongs to another <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the new node becomes the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddFirst__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddFirst_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFirst(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new node containing the specified value at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; AddFirst (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to add at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the new node becomes the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddLast_System_Collections_Generic_LinkedListNode__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddLast_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLast(LinkedListNode&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified new node at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLast (System.Collections.Generic.LinkedListNode&lt;T&gt; node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> to add at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> belongs to another <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the new node becomes the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_AddLast__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_AddLast_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLast(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new node containing the specified value at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; AddLast (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to add at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The new <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> containing <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the new node becomes the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Clear\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all nodes from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a> is set to zero, and references to other objects from elements of the collection are also released.  <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> are set to <code>null</code>.  </p>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Contains__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(T)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a value is in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to locate in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>. The value can be <code>null</code> for reference types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>value</code> is found in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_CopyTo__0___System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(T[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the entire <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> to a compatible one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified index of the target array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (T[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The number of elements in the source <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses <a class=\"xref\" href=\"system.array#System_Array_Copy_\" data-linktype=\"relative-path\">Copy</a> to copy the elements.  </p>\n<p> The elements are copied to the <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> in the same order in which the enumerator iterates through the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a>.  </p>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Find__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Find_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Find(T)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the first node that contains the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; Find (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to locate in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The first <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> that contains the specified value, if found; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is searched forward starting at <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and ending at <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_FindLast__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_FindLast_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindLast(T)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the last node that contains the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedListNode&lt;T&gt; FindLast (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to locate in the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </div>\r\n                  <p>The last <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> that contains the specified value, if found; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is searched backward starting at <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a> and ending at <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a>.  </p>\n<p> This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.LinkedList&lt;T&gt;.Enumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator\" data-linktype=\"relative-path\">LinkedList<t>+Enumerator</t></a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.LinkedList`1.Enumerator</span> for the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in C++, <code>For Each</code> in Visual Basic) hides the complexity of the enumerators. Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. At this position, <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> is called. <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. You cannot set <a class=\"xref\" href=\"system.collections.generic.linkedlist-1.enumerator#System_Collections_Generic_LinkedList_1_Enumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again; you must create a new enumerator instance instead.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and returns the data needed to serialize the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object that contains the information required to serialize the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object that contains the source and destination of the serialized stream associated with the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>info</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and raises the deserialization event when the deserialization is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the deserialization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object associated with the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> instance is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Remove_System_Collections_Generic_LinkedListNode__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(LinkedListNode&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified node from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (System.Collections.Generic.LinkedListNode&lt;T&gt; node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1\" data-linktype=\"relative-path\">LinkedListNode<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedListNode`1</span> to remove from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>node</code> is not in the current <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_Remove__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(T)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first occurrence of the specified value from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Remove (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to remove from the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element containing <code>value</code> is successfully removed; otherwise, <code>false</code>.  This method also returns <code>false</code> if <code>value</code> was not found in the original <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method performs a linear search; therefore, this method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_RemoveFirst\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_RemoveFirst_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveFirst()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the node at the start of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveFirst ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_RemoveLast\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_RemoveLast_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveLast()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the node at the end of the <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveLast ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span> is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__Add__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.Add(T)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an item at the end of the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection&lt;T&gt;.Add (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to add at the end of the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> accepts <code>null</code> as a valid <a class=\"xref\" href=\"system.collections.generic.linkedlistnode-1#System_Collections_Generic_LinkedListNode_1_Value_\" data-linktype=\"relative-path\">Value</a> for reference types and allows duplicate values.  </p>\n<p> If the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> is empty, the new node becomes the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_First_\" data-linktype=\"relative-path\">First</a> and the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Last_\" data-linktype=\"relative-path\">Last</a>.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that includes this method, see the <a class=\"xref\" href=\"system.collections.generic.linkedlist-1\" data-linktype=\"relative-path\">LinkedList&lt;T&gt;</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__IsReadOnly\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_ICollection_T__IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection&lt;T&gt;.IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Collections.Generic.ICollection`1</span> is read-only; otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>, this property always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_IEnumerable_T__GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_Generic_IEnumerable_T__GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable&lt;T&gt;.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator<t></t></a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerator`1</span> that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in C++, <code>For Each</code> in Visual Basic) hides the complexity of the enumerators. Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. At this position, <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> is called. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. You cannot set <a class=\"xref\" href=\"system.collections.generic.ienumerator-1#System_Collections_Generic_IEnumerator_1_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again; you must create a new enumerator instance instead.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection.CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is multidimensional.  </p>\n<p> -or-  </p>\n<p> <code>array</code> does not have zero-based indexing.  </p>\n<p> -or-  </p>\n<p> The number of elements in the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.  </p>\n<p> -or-  </p>\n<p> The type of the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> cannot be cast automatically to the type of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> If the type of the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> cannot be cast automatically to the type of the destination <code>array</code>, the non-generic implementations of <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_CopyTo_\" data-linktype=\"relative-path\">CopyTo</a> throw <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>, whereas the generic implementations throw <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>.  </p>\n</div>\n<p> This method is an O(<code>n</code>) operation, where <code>n</code> is <a class=\"xref\" href=\"system.collections.generic.linkedlist-1#System_Collections_Generic_LinkedList_1_Count_\" data-linktype=\"relative-path\">Count</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized (thread safe); otherwise, <code>false</code>.  In the default implementation of <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>, this property always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> returns an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. Synchronization is effective only if all threads lock this object before accessing the collection.  </p>\n<p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>.  In the default implementation of <span class=\"xref\">stem.Collections.Generic.LinkedList`1</span>, this property always returns the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> Enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> returns an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. Synchronization is effective only if all threads lock this object before accessing the collection. The following code shows the use of the <a class=\"xref\" href=\"system.collections.icollection#System_Collections_ICollection_SyncRoot_\" data-linktype=\"relative-path\">SyncRoot</a> property for C#, C++, and Visual Basic.  </p>\n<pre><code class=\"lang-c#\">ICollection ic = ...;  \nlock (ic.SyncRoot) {  \n   // Access the collection.  \n}  \n</code></pre><pre><code class=\"lang-vb#\">Dim ic As ICollection = ...  \nSyncLock ic.SyncRoot  \n   &#39; Access the collection.  \nEnd SyncLock  \n</code></pre><pre><code class=\"lang-cpp#\">ICollection^ ic = ...;  \ntry {  \n   Monitor::Enter(ic-&gt;SyncRoot);  \n   // Access the collection.  \n}  \nfinally {  \n   Monitor::Exit(ic-&gt;SyncRoot);  \n}  \n</code></pre><p> Retrieving the value of this property is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_LinkedList_1_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Generic_LinkedList_1_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the linked list as a collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that can be used to iterate through the linked list as a collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in C++, <code>For Each</code> in Visual Basic) hides the complexity of the enumerators. Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> also brings the enumerator back to this position.  At this position, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. Therefore, you must call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until either <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called. <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> is undefined. To set <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again, you can call <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> followed by <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a>.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  </p>\n<p> Default implementations of collections in <a class=\"xref\" href=\"system.collections.generic\" data-linktype=\"relative-path\">System.Collections.Generic</a> are not synchronized.  </p>\n<p> This method is an O(1) operation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.LinkedList-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.LinkedList-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.AddAfter\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.AddBefore\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.AddFirst\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.AddLast\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Clear\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Contains\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Count\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Find\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.FindLast\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.First\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Last\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.Remove\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.RemoveFirst\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.RemoveLast\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.ICollection&lt;T&gt;.Add\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.ICollection&lt;T&gt;.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.IEnumerable&lt;T&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.ICollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.ICollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.LinkedList&lt;T&gt;.IEnumerable.GetEnumerator\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"bad8f4e2-4c9b-bb28-290a-e2b241e1b1a1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a doubly linked list.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Generic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.LinkedList`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.LinkedList-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.LinkedList-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.Generic.LinkedList<T>","System.Collections.Generic.LinkedList<T>..ctor","System.Collections.Generic.LinkedList<T>.AddAfter","System.Collections.Generic.LinkedList<T>.AddBefore","System.Collections.Generic.LinkedList<T>.AddFirst","System.Collections.Generic.LinkedList<T>.AddLast","System.Collections.Generic.LinkedList<T>.Clear","System.Collections.Generic.LinkedList<T>.Contains","System.Collections.Generic.LinkedList<T>.CopyTo","System.Collections.Generic.LinkedList<T>.Count","System.Collections.Generic.LinkedList<T>.Find","System.Collections.Generic.LinkedList<T>.FindLast","System.Collections.Generic.LinkedList<T>.First","System.Collections.Generic.LinkedList<T>.GetEnumerator","System.Collections.Generic.LinkedList<T>.GetObjectData","System.Collections.Generic.LinkedList<T>.Last","System.Collections.Generic.LinkedList<T>.OnDeserialization","System.Collections.Generic.LinkedList<T>.Remove","System.Collections.Generic.LinkedList<T>.RemoveFirst","System.Collections.Generic.LinkedList<T>.RemoveLast","System.Collections.Generic.LinkedList<T>.ICollection<T>.Add","System.Collections.Generic.LinkedList<T>.ICollection<T>.IsReadOnly","System.Collections.Generic.LinkedList<T>.IEnumerable<T>.GetEnumerator","System.Collections.Generic.LinkedList<T>.ICollection.CopyTo","System.Collections.Generic.LinkedList<T>.ICollection.IsSynchronized","System.Collections.Generic.LinkedList<T>.ICollection.SyncRoot","System.Collections.Generic.LinkedList<T>.IEnumerable.GetEnumerator"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.LinkedList`1","System::Collections::Generic::LinkedList`1","System.Collections.Generic.LinkedList`1.#ctor","System::Collections::Generic::LinkedList`1::#ctor","System.Collections.Generic.LinkedList`1.AddAfter","System::Collections::Generic::LinkedList`1::AddAfter","System.Collections.Generic.LinkedList`1.AddBefore","System::Collections::Generic::LinkedList`1::AddBefore","System.Collections.Generic.LinkedList`1.AddFirst","System::Collections::Generic::LinkedList`1::AddFirst","System.Collections.Generic.LinkedList`1.AddLast","System::Collections::Generic::LinkedList`1::AddLast","System.Collections.Generic.LinkedList`1.Clear","System::Collections::Generic::LinkedList`1::Clear","System.Collections.Generic.LinkedList`1.Contains","System::Collections::Generic::LinkedList`1::Contains","System.Collections.Generic.LinkedList`1.CopyTo","System::Collections::Generic::LinkedList`1::CopyTo","System.Collections.Generic.LinkedList`1.Count","System::Collections::Generic::LinkedList`1::Count","System.Collections.Generic.LinkedList`1.Find","System::Collections::Generic::LinkedList`1::Find","System.Collections.Generic.LinkedList`1.FindLast","System::Collections::Generic::LinkedList`1::FindLast","System.Collections.Generic.LinkedList`1.First","System::Collections::Generic::LinkedList`1::First","System.Collections.Generic.LinkedList`1.GetEnumerator","System::Collections::Generic::LinkedList`1::GetEnumerator","System.Collections.Generic.LinkedList`1.GetObjectData","System::Collections::Generic::LinkedList`1::GetObjectData","System.Collections.Generic.LinkedList`1.Last","System::Collections::Generic::LinkedList`1::Last","System.Collections.Generic.LinkedList`1.OnDeserialization","System::Collections::Generic::LinkedList`1::OnDeserialization","System.Collections.Generic.LinkedList`1.Remove","System::Collections::Generic::LinkedList`1::Remove","System.Collections.Generic.LinkedList`1.RemoveFirst","System::Collections::Generic::LinkedList`1::RemoveFirst","System.Collections.Generic.LinkedList`1.RemoveLast","System::Collections::Generic::LinkedList`1::RemoveLast","System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add","System::Collections::Generic::LinkedList`1::System#Collections#Generic#ICollection{T}#Add","System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly","System::Collections::Generic::LinkedList`1::System#Collections#Generic#ICollection{T}#IsReadOnly","System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator","System::Collections::Generic::LinkedList`1::System#Collections#Generic#IEnumerable{T}#GetEnumerator","System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo","System::Collections::Generic::LinkedList`1::System#Collections#ICollection#CopyTo","System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized","System::Collections::Generic::LinkedList`1::System#Collections#ICollection#IsSynchronized","System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot","System::Collections::Generic::LinkedList`1::System#Collections#ICollection#SyncRoot","System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator","System::Collections::Generic::LinkedList`1::System#Collections#IEnumerable#GetEnumerator"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"bad8f4e2-4c9b-bb28-290a-e2b241e1b1a1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Generic/LinkedList`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LinkedList<T> class | Microsoft Docs","_op_ogTitle":"LinkedList<T> class","description":"Represents a doubly linked list.\n","toc_asset_id":"_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.LinkedList`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.linkedlist-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.linkedlist-1","fileRelativePath":"System.Collections.Generic.LinkedList-1.html"},"themesRelativePathToOutputRoot":"_themes/"}