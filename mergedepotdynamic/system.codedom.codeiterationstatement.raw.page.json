{"content":"    \r\n    <h1 id=\"System_CodeDom_CodeIterationStatement\">\r\n      <span class=\"lang-csharp\">CodeIterationStatement</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a <code>for</code> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeIterationStatement : System.CodeDom.CodeStatement</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">System.CodeDom.CodeStatement</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CodeIterationStatement</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_EndDirectives\" data-linktype=\"relative-path\">EndDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_LinePragma\" data-linktype=\"relative-path\">LinePragma</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codestatement#System_CodeDom_CodeStatement_StartDirectives\" data-linktype=\"relative-path\">StartDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A CodeIterationStatement can represent a <code>for</code> loop or <code>while</code> loop.  </p>\n<p> The <a class=\"xref\" href=\"system.codedom.codeiterationstatement#System_CodeDom_CodeIterationStatement_InitStatement_\" data-linktype=\"relative-path\">InitStatement</a> property specifies the statement to execute before the first loop iteration. The <a class=\"xref\" href=\"system.codedom.codeiterationstatement#System_CodeDom_CodeIterationStatement_TestExpression_\" data-linktype=\"relative-path\">TestExpression</a> property specifies the loop continuation expression, which must evaluate to <code>true</code> at the end of each loop iteration for another iteration to begin. The <a class=\"xref\" href=\"system.codedom.codeiterationstatement#System_CodeDom_CodeIterationStatement_IncrementStatement_\" data-linktype=\"relative-path\">IncrementStatement</a> property specifies the statement to execute at the end of each loop iteration. The <a class=\"xref\" href=\"system.codedom.codeiterationstatement#System_CodeDom_CodeIterationStatement_Statements_\" data-linktype=\"relative-path\">Statements</a> property specifies the collection of statements to execute within the loop.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement__ctor\" data-linktype=\"self-bookmark\">CodeIterationStatement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codeiterationstatement\" data-linktype=\"relative-path\">CodeIterationStatement</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement__ctor_System_CodeDom_CodeStatement_System_CodeDom_CodeExpression_System_CodeDom_CodeStatement_System_CodeDom_CodeStatement___\" data-linktype=\"self-bookmark\">CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codeiterationstatement\" data-linktype=\"relative-path\">CodeIterationStatement</a> class using the specified parameters.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement_IncrementStatement\" data-linktype=\"self-bookmark\">IncrementStatement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the statement that is called after each loop cycle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement_InitStatement\" data-linktype=\"self-bookmark\">InitStatement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the loop initialization statement.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement_Statements\" data-linktype=\"self-bookmark\">Statements</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of statements to be executed within the loop.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeIterationStatement_TestExpression\" data-linktype=\"self-bookmark\">TestExpression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the expression to test as the condition that continues the loop.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement__ctor\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeIterationStatement()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codeiterationstatement\" data-linktype=\"relative-path\">CodeIterationStatement</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeIterationStatement ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement__ctor_System_CodeDom_CodeStatement_System_CodeDom_CodeExpression_System_CodeDom_CodeStatement_System_CodeDom_CodeStatement___\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeIterationStatement(CodeStatement,CodeExpression,CodeStatement,CodeStatement[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codeiterationstatement\" data-linktype=\"relative-path\">CodeIterationStatement</a> class using the specified parameters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeIterationStatement (System.CodeDom.CodeStatement initStatement, System.CodeDom.CodeExpression testExpression, System.CodeDom.CodeStatement incrementStatement, System.CodeDom.CodeStatement[] statements);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>initStatement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">System.CodeDom.CodeStatement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> containing the loop initialization statement.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>testExpression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a> containing the expression to test for exit condition.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>incrementStatement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">System.CodeDom.CodeStatement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> containing the per-cycle increment statement.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>statements</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> containing the statements within the loop.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement_IncrementStatement\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement_IncrementStatement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IncrementStatement</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the statement that is called after each loop cycle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeStatement IncrementStatement { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">System.CodeDom.CodeStatement</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> that indicates the per cycle increment statement.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This statement is called after each iteration.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement_InitStatement\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement_InitStatement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitStatement</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the loop initialization statement.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeStatement InitStatement { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">System.CodeDom.CodeStatement</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> that indicates the loop initialization statement.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can specify an empty initialization statement by setting this property to a <a class=\"xref\" href=\"system.codedom.codeexpressionstatement\" data-linktype=\"relative-path\">CodeExpressionStatement</a> that contains a <a class=\"xref\" href=\"system.codedom.codesnippetexpression\" data-linktype=\"relative-path\">CodeSnippetExpression</a> that contains an empty string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement_Statements\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement_Statements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Statements</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of statements to be executed within the loop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeStatementCollection Statements { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatementcollection\" data-linktype=\"relative-path\">CodeStatementCollection</a></div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> that indicates the statements within the loop.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeIterationStatement_TestExpression\">\r\n    \r\n            <a id=\"System_CodeDom_CodeIterationStatement_TestExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TestExpression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the expression to test as the condition that continues the loop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeExpression TestExpression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a> that indicates the expression to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this expression resolves to <code>true</code>, the loop will continue.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeIterationStatement.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeIterationStatement.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement.IncrementStatement\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement.InitStatement\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement.Statements\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeIterationStatement.TestExpression\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e6b94a15-3ab9-4c0f-4a66-f551fe39b701\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom\\CodeIterationStatement.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a for statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeIterationStatement\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeIterationStatement.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeIterationStatement.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.CodeIterationStatement","System.CodeDom.CodeIterationStatement..ctor","System.CodeDom.CodeIterationStatement.IncrementStatement","System.CodeDom.CodeIterationStatement.InitStatement","System.CodeDom.CodeIterationStatement.Statements","System.CodeDom.CodeIterationStatement.TestExpression"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeIterationStatement","System::CodeDom::CodeIterationStatement","System.CodeDom.CodeIterationStatement.#ctor","System::CodeDom::CodeIterationStatement::#ctor","System.CodeDom.CodeIterationStatement.IncrementStatement","System::CodeDom::CodeIterationStatement::IncrementStatement","System.CodeDom.CodeIterationStatement.InitStatement","System::CodeDom::CodeIterationStatement::InitStatement","System.CodeDom.CodeIterationStatement.Statements","System::CodeDom::CodeIterationStatement::Statements","System.CodeDom.CodeIterationStatement.TestExpression","System::CodeDom::CodeIterationStatement::TestExpression"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e6b94a15-3ab9-4c0f-4a66-f551fe39b701","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom\\CodeIterationStatement.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom/CodeIterationStatement.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeIterationStatement class | Microsoft Docs","_op_ogTitle":"CodeIterationStatement class","description":"Represents a for statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.\n","toc_asset_id":"_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeIterationStatement","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codeiterationstatement","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codeiterationstatement","fileRelativePath":"System.CodeDom.CodeIterationStatement.html"},"themesRelativePathToOutputRoot":"_themes/"}