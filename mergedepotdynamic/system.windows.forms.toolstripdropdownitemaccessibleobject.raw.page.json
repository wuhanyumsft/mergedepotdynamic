{"content":"    \r\n    <h1 id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject\">\r\n      <span class=\"lang-csharp\">ToolStripDropDownItemAccessibleObject</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides information that accessibility applications use to adjust the user interface of a <a class=\"xref\" href=\"system.windows.forms.toolstripdropdown\" data-linktype=\"relative-path\">ToolStripDropDown</a> for users with impairments.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ToolStripDropDownItemAccessibleObject : System.Windows.Forms.ToolStripItem.ToolStripItemAccessibleObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <span class=\"xref\">System.Windows.Forms.ToolStripItem+ToolStripItemAccessibleObject</span>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ToolStripDropDownItemAccessibleObject</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripDropDownItemAccessibleObject__ctor_System_Windows_Forms_ToolStripDropDownItem_\" data-linktype=\"self-bookmark\">ToolStripDropDownItemAccessibleObject(ToolStripDropDownItem)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitemaccessibleobject\" data-linktype=\"relative-path\">ToolStripDropDownItemAccessibleObject</a> class with the specified <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitem\" data-linktype=\"relative-path\">ToolStripDropDownItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripDropDownItemAccessibleObject_Role\" data-linktype=\"self-bookmark\">Role</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the role of this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripDropDownItemAccessibleObject_DoDefaultAction\" data-linktype=\"self-bookmark\">DoDefaultAction()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs the default action associated with this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChild_System_Int32_\" data-linktype=\"self-bookmark\">GetChild(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the accessible child control corresponding to the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChildCount\" data-linktype=\"self-bookmark\">GetChildCount()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of children belonging to an accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject__ctor_System_Windows_Forms_ToolStripDropDownItem_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToolStripDropDownItemAccessibleObject(ToolStripDropDownItem)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitemaccessibleobject\" data-linktype=\"relative-path\">ToolStripDropDownItemAccessibleObject</a> class with the specified <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitem\" data-linktype=\"relative-path\">ToolStripDropDownItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ToolStripDropDownItemAccessibleObject (System.Windows.Forms.ToolStripDropDownItem item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitem\" data-linktype=\"relative-path\">ToolStripDropDownItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitem\" data-linktype=\"relative-path\">ToolStripDropDownItem</a> that owns this <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownitemaccessibleobject\" data-linktype=\"relative-path\">ToolStripDropDownItemAccessibleObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_Role\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_Role_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Role</div>        \r\n          </div>\r\n    \r\n            <p>Gets the role of this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.AccessibleRole Role { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The role of the object helps describe the function of the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_DoDefaultAction\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_DoDefaultAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoDefaultAction()</div>        \r\n          </div>\r\n    \r\n            <p>Performs the default action associated with this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void DoDefaultAction ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clients can retrieve the object&#39;s default action by inspecting an object&#39;s <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_DefaultAction_\" data-linktype=\"relative-path\">DefaultAction</a> property. A client can use automation (if supported) instead of <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_DoDefaultAction_\" data-linktype=\"relative-path\">DoDefaultAction</a> to perform an object&#39;s default action. However, <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_DoDefaultAction_\" data-linktype=\"relative-path\">DoDefaultAction</a> provides an easy way to perform an object&#39;s most commonly used action.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChild_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChild(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the accessible child control corresponding to the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.AccessibleObject GetChild (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the accessible child control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents the accessible child control corresponding to the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>-based control, but instead is drawn by the chart control, it does not any built-in accessible information. Therefore, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code demonstrates overriding the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChildCount\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripDropDownItemAccessibleObject_GetChildCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChildCount()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of children belonging to an accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetChildCount ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of children belonging to an accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Because the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>-based control, but instead is drawn by the chart control, it does not any built-in accessible information. Therefore, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code demonstrates shows overriding the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChildCount_\" data-linktype=\"relative-path\">GetChildCount</a> method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ToolStripDropDownItemAccessibleObject.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ToolStripDropDownItemAccessibleObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject.DoDefaultAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChildCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject.Role\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cc59a1fb-15a9-693b-57f5-f8d82c18deee\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information that accessibility applications use to adjust the user interface of a  for users with impairments.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ToolStripDropDownItemAccessibleObject\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ToolStripDropDownItemAccessibleObject.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ToolStripDropDownItemAccessibleObject.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.ToolStripDropDownItemAccessibleObject","System.Windows.Forms.ToolStripDropDownItemAccessibleObject..ctor","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.DoDefaultAction","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChild","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChildCount","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.Role"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ToolStripDropDownItemAccessibleObject","System::Windows::Forms::ToolStripDropDownItemAccessibleObject","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.#ctor","System::Windows::Forms::ToolStripDropDownItemAccessibleObject::#ctor","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.DoDefaultAction","System::Windows::Forms::ToolStripDropDownItemAccessibleObject::DoDefaultAction","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChild","System::Windows::Forms::ToolStripDropDownItemAccessibleObject::GetChild","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.GetChildCount","System::Windows::Forms::ToolStripDropDownItemAccessibleObject::GetChildCount","System.Windows.Forms.ToolStripDropDownItemAccessibleObject.Role","System::Windows::Forms::ToolStripDropDownItemAccessibleObject::Role"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cc59a1fb-15a9-693b-57f5-f8d82c18deee","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/ToolStripDropDownItemAccessibleObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ToolStripDropDownItemAccessibleObject class | Microsoft Docs","_op_ogTitle":"ToolStripDropDownItemAccessibleObject class","description":"Provides information that accessibility applications use to adjust the user interface of a  for users with impairments.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ToolStripDropDownItemAccessibleObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.toolstripdropdownitemaccessibleobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.toolstripdropdownitemaccessibleobject","fileRelativePath":"System.Windows.Forms.ToolStripDropDownItemAccessibleObject.html"},"themesRelativePathToOutputRoot":"_themes/"}