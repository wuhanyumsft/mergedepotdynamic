{"content":"    \r\n    <h1 id=\"System_Drawing_Region\">\r\n      <span class=\"lang-csharp\">Region</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Region : MarshalByRefObject, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Region</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A region is scalable because its coordinates are specified in world coordinates. On a drawing surface, however, its interior is dependent on the size and shape of the pixels representing it. An application can use regions to clip the output of drawing operations. These regions are called clipping regions. For more information on using regions for clipping, see <a href=\"../Topic/How%20to:%20Use%20Clipping%20with%20a%20Region.md\" data-linktype=\"relative-path\">How to: Use Clipping with a Region</a>.  </p>\n<p> An application can also use regions in hit-testing operations, such as checking whether a point or a rectangle intersects a region. For more information on using regions for hit-testing, see <a href=\"../Topic/How%20to:%20Use%20Hit%20Testing%20with%20a%20Region.md\" data-linktype=\"relative-path\">How to: Use Hit Testing with a Region</a>.  </p>\n<p> An application can fill a region by using the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_FillRegion_\" data-linktype=\"relative-path\">FillRegion</a> method and a  <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> object.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region__ctor\" data-linktype=\"self-bookmark\">Region()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region__ctor_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Region(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region__ctor_System_Drawing_Drawing2D_RegionData_\" data-linktype=\"self-bookmark\">Region(RegionData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region__ctor_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Region(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region__ctor_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Region(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Complement(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Complement_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Complement(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Complement_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Complement(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Complement_System_Drawing_Region_\" data-linktype=\"self-bookmark\">Complement(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Equals_System_Drawing_Region_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">Equals(Region,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is identical to this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> on the specified drawing surface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Exclude_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Exclude(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Exclude_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Exclude(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Exclude_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Exclude(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Exclude_System_Drawing_Region_\" data-linktype=\"self-bookmark\">Exclude(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_FromHrgn_System_IntPtr_\" data-linktype=\"self-bookmark\">FromHrgn(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from a handle to the specified existing <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ndptecgdi-md.md&quot; -->GDI<!--END INCLUDE --> region.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_GetBounds_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">GetBounds(Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> on the drawing surface of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_GetHrgn_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">GetHrgn(Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a Windows handle to this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> in the specified graphics context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_GetRegionData\" data-linktype=\"self-bookmark\">GetRegionData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a> that represents the information that describes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_GetRegionScans_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">GetRegionScans(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that approximate this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> after the specified matrix transformation is applied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Intersect_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Intersect(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Intersect_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Intersect(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Intersect_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Intersect(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Intersect_System_Drawing_Region_\" data-linktype=\"self-bookmark\">Intersect(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsEmpty_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsEmpty(Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> has an empty interior on the specified drawing surface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsInfinite_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsInfinite(Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> has an infinite interior on the specified drawing surface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_Point_\" data-linktype=\"self-bookmark\">IsVisible(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">IsVisible(PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">IsVisible(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">IsVisible(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_Point_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Point,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_PointF_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(PointF,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_Rectangle_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Rectangle,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(RectangleF,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Single_System_Single_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Single_System_Single_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Int32,Int32,Int32,Int32,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_IsVisible_System_Single_System_Single_System_Single_System_Single_System_Drawing_Graphics_\" data-linktype=\"self-bookmark\">IsVisible(Single,Single,Single,Single,Graphics)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_MakeEmpty\" data-linktype=\"self-bookmark\">MakeEmpty()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to an empty interior.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_MakeInfinite\" data-linktype=\"self-bookmark\">MakeInfinite()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object to an infinite interior.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_ReleaseHrgn_System_IntPtr_\" data-linktype=\"self-bookmark\">ReleaseHrgn(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the handle of the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Transform_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Transform(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Translate_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Translate(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Offsets the coordinates of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified amount.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Translate_System_Single_System_Single_\" data-linktype=\"self-bookmark\">Translate(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Offsets the coordinates of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified amount.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Union_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Union(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Union_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Union(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Union_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Union(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Union_System_Drawing_Region_\" data-linktype=\"self-bookmark\">Union(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Xor_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">Xor(GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Xor_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">Xor(Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Xor_System_Drawing_RectangleF_\" data-linktype=\"self-bookmark\">Xor(RectangleF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Region_Xor_System_Drawing_Region_\" data-linktype=\"self-bookmark\">Xor(Region)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region__ctor\">\r\n    \r\n            <a id=\"System_Drawing_Region__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Region()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Region ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with an infinite interior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region__ctor_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Region(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Region (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that defines the new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>. The new region is defined as the interior of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> specified by the <code>path</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region__ctor_System_Drawing_Drawing2D_RegionData_\">\r\n    \r\n            <a id=\"System_Drawing_Region__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Region(RegionData)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Region (System.Drawing.Drawing2D.RegionData rgnData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgnData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a> that defines the interior of the new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>rgnData</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with an interior defined by an existing <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>. The <code>rgnData</code> parameter is an array that contains the definition of an existing <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region__ctor_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Region(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Region (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that defines the interior of the new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with a rectangular interior. The interior is defined by the <code>rect</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Region constructor and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_MakeEmpty_\" data-linktype=\"relative-path\">MakeEmpty</a> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the <code>FillEmptyRegion</code> method in the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#7\">    private void FillEmptyRegion(PaintEventArgs e)\n    {\n\n        // Create a region from a rectangle.\n        Rectangle originalRectangle = new Rectangle(40, 40, 40, 50);\n        Region smallRegion = new Region(originalRectangle);\n\n        // Call MakeEmpty.\n        smallRegion.MakeEmpty();\n\n        // Fill the region in red and draw the original rectangle\n        // in black. Note there is nothing filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion);\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle);\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#7\">private:\n   void FillEmptyRegion( PaintEventArgs^ e )\n   {\n      // Create a region from a rectangle.\n      Rectangle originalRectangle = Rectangle(40,40,40,50);\n      System::Drawing::Region^ smallRegion = gcnew System::Drawing::Region( originalRectangle );\n\n      // Call MakeEmpty.\n      smallRegion-&gt;MakeEmpty();\n\n      // Fill the region in red and draw the original rectangle\n      // in black. Note there is nothing filled in.\n      e-&gt;Graphics-&gt;FillRegion( Brushes::Red, smallRegion );\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, originalRectangle );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#7\">    Private Sub FillEmptyRegion(ByVal e As PaintEventArgs)\n\n        &#39; Create a region from a rectangle.\n        Dim originalRectangle As New Rectangle(40, 40, 40, 50)\n        Dim smallRegion As New Region(originalRectangle)\n\n        &#39; Call MakeEmpty.\n        smallRegion.MakeEmpty()\n\n        &#39; Fill the region in red and draw the original rectangle\n        &#39; in black. Note there is nothing filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion)\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region__ctor_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Region(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Region (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that defines the interior of the new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with a rectangular interior. The interior is defined by the <code>rect</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Region_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Region Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that this method creates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Complement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Complement(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Complement (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to complement this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in black.  </p>\n</li>\n<li><p>Creates a second rectangle that intersects with the first and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region using the first rectangle.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>, and adds the second rectangle to it.  </p>\n</li>\n<li><p>Gets the complement of the region when combined with the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.  </p>\n</li>\n<li><p>Fills the complement area with blue and draws it to the screen.  </p>\n<p>Notice that the area of the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> that does not intersect with the region is colored blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#1\">        public void Complement_Path_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // Create the second rectangle and draw it to the screen in red.\n            Rectangle complementRect = new Rectangle(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red, complementRect);\n                     \n            // Create a graphics path and add the second rectangle to it.\n            GraphicsPath complementPath = new GraphicsPath();\n            complementPath.AddRectangle(complementRect);\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the complement of myRegion when combined with\n                     \n            // complementPath.\n            myRegion.Complement(complementPath);\n                     \n            // Fill the complement area with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#1\">    Public Sub Complement_Path_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; Create the second rectangle and draw it to the screen in red.\n        Dim complementRect As New Rectangle(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, complementRect)\n\n        &#39; Create a graphics path and add the second rectangle to it.\n        Dim complementPath As New GraphicsPath\n        complementPath.AddRectangle(complementRect)\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the complement of myRegion when combined with\n        &#39; complementPath.\n        myRegion.Complement(complementPath)\n\n        &#39; Fill the complement area with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#1\">public:\n   void Complement_Path_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // Create the second rectangle and draw it to the screen in red.\n      Rectangle complementRect = Rectangle(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, complementRect );\n\n      // Create a graphics path and add the second rectangle to it.\n      GraphicsPath^ complementPath = gcnew GraphicsPath;\n      complementPath-&gt;AddRectangle( complementRect );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the complement of myRegion when combined with\n      // complementPath.\n      myRegion-&gt;Complement( complementPath );\n\n      // Fill the complement area with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Complement_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Complement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Complement(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Complement (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to complement this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Complement(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Complement_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Complement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Complement(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Complement (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to complement this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in black.  </p>\n</li>\n<li><p>Creates a second rectangle that intersects with the first and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region using the first rectangle.  </p>\n</li>\n<li><p>Gets the complement of that region combined with the second rectangle.  </p>\n</li>\n<li><p>Fills the complement area with blue and draws it to the screen.  </p>\n<p>Notice that the area of the second rectangle that does not intersect with the region is colored blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#2\">        public void Complement_RectF_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // Create the second rectangle and draw it to the screen in red.\n            RectangleF complementRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red,\n                Rectangle.Round(complementRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the complement of the region combined with the second\n                     \n            // rectangle.\n            myRegion.Complement(complementRect);\n                     \n            // Fill the complement area with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#2\">    Public Sub Complement_RectF_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; Create the second rectangle and draw it to the screen in red.\n        Dim complementRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, _\n        Rectangle.Round(complementRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the complement of the region combined with the second\n        &#39; rectangle.\n        myRegion.Complement(complementRect)\n\n        &#39; Fill the complement area with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#2\">public:\n   void Complement_RectF_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // Create the second rectangle and draw it to the screen in red.\n      RectangleF complementRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( complementRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the complement of the region combined with the second\n      // rectangle.\n      myRegion-&gt;Complement( complementRect );\n\n      // Fill the complement area with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Complement_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Complement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Complement(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain the portion of the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> that does not intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Complement (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object to complement this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in black  </p>\n</li>\n<li><p>Creates a second rectangle that intersects with the first and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates one region using the first rectangle and creates a second region using the second rectangle.  </p>\n</li>\n<li><p>Gets the complement of that first region when combined with the second region.  </p>\n</li>\n<li><p>Fills the complement area with blue and draws it to the screen.  </p>\n<p>Notice that the area of the second region that does not intersect with the first region is colored blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#3\">        public void Complement_Region_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // Create the second rectangle and draw it to the screen in red.\n            Rectangle complementRect = new Rectangle(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red, complementRect);\n                     \n            // Create a region from the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Create a complement region.\n            Region complementRegion = new Region(complementRect);\n                     \n            // Get the complement of myRegion when combined with\n                     \n            // complementRegion.\n            myRegion.Complement(complementRegion);\n                     \n            // Fill the complement area with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#3\">    Public Sub Complement_Region_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; Create the second rectangle and draw it to the screen in red.\n        Dim complementRect As New Rectangle(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, complementRect)\n\n        &#39; create a region from the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Create a complement region.\n        Dim complementRegion As New [Region](complementRect)\n\n        &#39; Get the complement of myRegion when combined with\n        &#39; complementRegion.\n        myRegion.Complement(complementRegion)\n\n        &#39; Fill the complement area with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#3\">public:\n   void Complement_Region_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // Create the second rectangle and draw it to the screen in red.\n      Rectangle complementRect = Rectangle(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, complementRect );\n\n      // Create a region from the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Create a complement region.\n      System::Drawing::Region^ complementRegion = gcnew System::Drawing::Region( complementRect );\n\n      // Get the complement of myRegion when combined with\n      // complementRegion.\n      myRegion-&gt;Complement( complementRegion );\n\n      // Fill the complement area with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Region_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Dispose allows the resources used by this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to be reallocated for other purposes.  </p>\n<p> Call Dispose when you are finished using the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region__ctor_\" data-linktype=\"relative-path\">Region</a> constructor and the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Exclude_\" data-linktype=\"relative-path\">Exclude</a> and Dispose methods.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>FillRegionExcludingPath</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#1\">private:\n   void FillRegionExcludingPath( PaintEventArgs^ e )\n   {\n      // Create the region using a rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( Rectangle(20,20,100,100) );\n\n      // Create the GraphicsPath.\n      System::Drawing::Drawing2D::GraphicsPath^ path = gcnew System::Drawing::Drawing2D::GraphicsPath;\n\n      // Add a circle to the graphics path.\n      path-&gt;AddEllipse( 50, 50, 25, 25 );\n\n      // Exclude the circle from the region.\n      myRegion-&gt;Exclude( path );\n\n      // Retrieve a Graphics object from the form.\n      Graphics^ formGraphics = e-&gt;Graphics;\n\n      // Fill the region in blue.\n      formGraphics-&gt;FillRegion( Brushes::Blue, myRegion );\n\n      // Dispose of the path and region objects.\n      delete path;\n      delete myRegion;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#1\">    Private Sub FillRegionExcludingPath(ByVal e As PaintEventArgs)\n\n        &#39; Create the region using a rectangle.\n        Dim myRegion As New Region(New Rectangle(20, 20, 100, 100))\n\n        &#39; Create the GraphicsPath.\n        Dim path As New System.Drawing.Drawing2D.GraphicsPath\n\n        &#39; Add a circle to the graphics path.\n        path.AddEllipse(50, 50, 25, 25)\n\n        &#39; Exclude the circle from the region.\n        myRegion.Exclude(path)\n\n        &#39; Retrieve a Graphics object from the form.\n        Dim formGraphics As Graphics = e.Graphics\n\n        &#39; Fill the region in blue.\n        formGraphics.FillRegion(Brushes.Blue, myRegion)\n\n        &#39; Dispose of the path and region objects.\n        path.Dispose()\n        myRegion.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#1\">    private void FillRegionExcludingPath(PaintEventArgs e)\n    {\n\n        // Create the region using a rectangle.\n        Region myRegion = new Region(new Rectangle(20, 20, 100, 100));\n\n        // Create the GraphicsPath.\n        System.Drawing.Drawing2D.GraphicsPath path = \n            new System.Drawing.Drawing2D.GraphicsPath();\n\n        // Add a circle to the graphics path.\n        path.AddEllipse(50, 50, 25, 25);\n\n        // Exclude the circle from the region.\n        myRegion.Exclude(path);\n\n        // Retrieve a Graphics object from the form.\n        Graphics formGraphics = e.Graphics;\n\n        // Fill the region in blue.\n        formGraphics.FillRegion(Brushes.Blue, myRegion);\n\n        // Dispose of the path and region objects.\n        path.Dispose();\n        myRegion.Dispose();\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Equals_System_Drawing_Region_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Region,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is identical to this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> on the specified drawing surface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Drawing.Region region, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a drawing surface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the interior of region is identical to the interior of this region when the transformation associated with the <code>g</code> parameter is applied; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> or <code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context <code>g</code> is used to compute the region interiors on the drawing surface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Exclude_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Exclude_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exclude(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Exclude (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to exclude from this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region__ctor_\" data-linktype=\"relative-path\">Region</a> constructor and the Exclude and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Dispose_\" data-linktype=\"relative-path\">Dispose</a> methods.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>FillRegionExcludingPath</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.GraphicsProperties#1\">private:\n   void FillRegionExcludingPath( PaintEventArgs^ e )\n   {\n      // Create the region using a rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( Rectangle(20,20,100,100) );\n\n      // Create the GraphicsPath.\n      System::Drawing::Drawing2D::GraphicsPath^ path = gcnew System::Drawing::Drawing2D::GraphicsPath;\n\n      // Add a circle to the graphics path.\n      path-&gt;AddEllipse( 50, 50, 25, 25 );\n\n      // Exclude the circle from the region.\n      myRegion-&gt;Exclude( path );\n\n      // Retrieve a Graphics object from the form.\n      Graphics^ formGraphics = e-&gt;Graphics;\n\n      // Fill the region in blue.\n      formGraphics-&gt;FillRegion( Brushes::Blue, myRegion );\n\n      // Dispose of the path and region objects.\n      delete path;\n      delete myRegion;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.GraphicsProperties#1\">    Private Sub FillRegionExcludingPath(ByVal e As PaintEventArgs)\n\n        &#39; Create the region using a rectangle.\n        Dim myRegion As New Region(New Rectangle(20, 20, 100, 100))\n\n        &#39; Create the GraphicsPath.\n        Dim path As New System.Drawing.Drawing2D.GraphicsPath\n\n        &#39; Add a circle to the graphics path.\n        path.AddEllipse(50, 50, 25, 25)\n\n        &#39; Exclude the circle from the region.\n        myRegion.Exclude(path)\n\n        &#39; Retrieve a Graphics object from the form.\n        Dim formGraphics As Graphics = e.Graphics\n\n        &#39; Fill the region in blue.\n        formGraphics.FillRegion(Brushes.Blue, myRegion)\n\n        &#39; Dispose of the path and region objects.\n        path.Dispose()\n        myRegion.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.GraphicsProperties#1\">    private void FillRegionExcludingPath(PaintEventArgs e)\n    {\n\n        // Create the region using a rectangle.\n        Region myRegion = new Region(new Rectangle(20, 20, 100, 100));\n\n        // Create the GraphicsPath.\n        System.Drawing.Drawing2D.GraphicsPath path = \n            new System.Drawing.Drawing2D.GraphicsPath();\n\n        // Add a circle to the graphics path.\n        path.AddEllipse(50, 50, 25, 25);\n\n        // Exclude the circle from the region.\n        myRegion.Exclude(path);\n\n        // Retrieve a Graphics object from the form.\n        Graphics formGraphics = e.Graphics;\n\n        // Fill the region in blue.\n        formGraphics.FillRegion(Brushes.Blue, myRegion);\n\n        // Dispose of the path and region objects.\n        path.Dispose();\n        myRegion.Dispose();\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Exclude_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Exclude_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exclude(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Exclude (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to exclude from this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Exclude_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Exclude(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Exclude_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Exclude_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exclude(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Exclude (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to exclude from this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in black  </p>\n</li>\n<li><p>Creates a second rectangle that intersects with the first and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region using the first rectangle.  </p>\n</li>\n<li><p>Gets the nonexcluded area of the region when combined with the second rectangle.  </p>\n</li>\n<li><p>Fills the nonexcluded area with blue and draws it to the screen.  </p>\n<p>Notice that the area of the area of the region that does not intersect with the rectangle is colored blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#4\">        public void Exclude_RectF_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // Create the second rectangle and draw it to the screen in red.\n            RectangleF complementRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red,\n                Rectangle.Round(complementRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the nonexcluded area of myRegion when combined with\n                     \n            // complementRect.\n            myRegion.Exclude(complementRect);\n                     \n            // Fill the nonexcluded area of myRegion with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#4\">    Public Sub Exclude_RectF_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; create the second rectangle and draw it to the screen in red.\n        Dim complementRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, _\n        Rectangle.Round(complementRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the nonexcluded area of myRegion when combined with\n        &#39; complementRect.\n        myRegion.Exclude(complementRect)\n\n        &#39; Fill the nonexcluded area of myRegion with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#4\">public:\n   void Exclude_RectF_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // Create the second rectangle and draw it to the screen in red.\n      RectangleF complementRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( complementRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the nonexcluded area of myRegion when combined with\n      // complementRect.\n      myRegion-&gt;Exclude( complementRect );\n      \n      // Fill the nonexcluded area of myRegion with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Exclude_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Exclude_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exclude(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to contain only the portion of its interior that does not intersect with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Exclude (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to exclude from this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For code examples, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Exclude_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Exclude(RectangleF)</a> and<a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Region_\" data-linktype=\"relative-path\">Complement(Region)</a> methods.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Region_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~Region ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_FromHrgn_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Region_FromHrgn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHrgn(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> from a handle to the specified existing <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ndptecgdi-md.md&quot; -->GDI<!--END INCLUDE --> region.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.Region FromHrgn (IntPtr hrgn);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hrgn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to an existing <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </div>\r\n                  <p>The new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method creates a new <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> with an interior defined by the existing <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> referred to by the handle in the <code>hrgn</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_GetBounds_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_GetBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBounds(Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents a rectangle that bounds this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> on the drawing surface of a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF GetBounds (System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> on which this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is drawn.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the bounding rectangle for this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> on the specified drawing surface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior on the drawing surface. The bounding rectangle is not always the smallest possible bounding rectangle depending on the current transformation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> and adds an ellipse to it.  </p>\n</li>\n<li><p>Fills the path with blue and draws it to the screen.  </p>\n</li>\n<li><p>Creates a region that uses the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.  </p>\n</li>\n<li><p>Gets the nonexcluded area of the region when combined with the second rectangle.  </p>\n</li>\n<li><p>Gets the bounding rectangle for the region and draws it to the screen in red.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#5\">        public void GetBoundsExample(PaintEventArgs e)\n        {\n                     \n            // Create a GraphicsPath and add an ellipse to it.\n            GraphicsPath myPath = new GraphicsPath();\n            Rectangle ellipseRect = new Rectangle(20, 20, 100, 100);\n            myPath.AddEllipse(ellipseRect);\n                     \n            // Fill the path with blue and draw it to the screen.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillPath(myBrush, myPath);\n                     \n            // Create a region using the GraphicsPath.\n            Region myRegion = new Region(myPath);\n                     \n            // Get the bounding rectangle for myRegion and draw it to the\n                     \n            // screen in Red.\n            RectangleF boundsRect = myRegion.GetBounds(e.Graphics);\n            e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(boundsRect));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#5\">    Public Sub GetBoundsExample(ByVal e As PaintEventArgs)\n\n        &#39; Create a GraphicsPath and add an ellipse to it.\n        Dim myPath As New GraphicsPath\n        Dim ellipseRect As New Rectangle(20, 20, 100, 100)\n        myPath.AddEllipse(ellipseRect)\n\n        &#39; Fill the path with blue and draw it to the screen.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillPath(myBrush, myPath)\n\n        &#39; Create a region using the GraphicsPath.\n        Dim myRegion As New [Region](myPath)\n\n        &#39; Get the bounding rectangle for myRegion and draw it to the\n        &#39; screen in Red.\n        Dim boundsRect As RectangleF = myRegion.GetBounds(e.Graphics)\n        e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(boundsRect))\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#5\">public:\n   void GetBoundsExample( PaintEventArgs^ e )\n   {\n      // Create a GraphicsPath and add an ellipse to it.\n      GraphicsPath^ myPath = gcnew GraphicsPath;\n      Rectangle ellipseRect = Rectangle(20,20,100,100);\n      myPath-&gt;AddEllipse( ellipseRect );\n\n      // Fill the path with blue and draw it to the screen.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillPath( myBrush, myPath );\n\n      // Create a region using the GraphicsPath.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( myPath );\n\n      // Get the bounding rectangle for myRegion and draw it to the\n      // screen in Red.\n      RectangleF boundsRect = myRegion-&gt;GetBounds( e-&gt;Graphics );\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( boundsRect ) );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_GetHrgn_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_GetHrgn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHrgn(Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a Windows handle to this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> in the specified graphics context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr GetHrgn (System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> on which this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is drawn.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A Windows handle to this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_GetRegionData\">\r\n    \r\n            <a id=\"System_Drawing_Region_GetRegionData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegionData()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a> that represents the information that describes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.RegionData GetRegionData ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a> that represents the information that describes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> class allows you to define a custom shape. The shape can be made up of lines, polygons, and curves. GetRegionData describes the  shape contained in this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler.  The code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata#System_Drawing_Drawing2D_RegionData_Data_\" data-linktype=\"relative-path\">Data</a> from one <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a> object to set the <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata#System_Drawing_Drawing2D_RegionData_Data_\" data-linktype=\"relative-path\">Data</a> for another <a class=\"xref\" href=\"system.drawing.drawing2d.regiondata\" data-linktype=\"relative-path\">RegionData</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#13\">    private void DemonstrateRegionData2(PaintEventArgs e)\n    {\n\n        //Create a simple region.\n        Region region1 = new Region(new Rectangle(10, 10, 100, 100));\n\n        // Extract the region data.\n        System.Drawing.Drawing2D.RegionData region1Data = region1.GetRegionData();\n        byte[] data1;\n        data1 = region1Data.Data;\n\n        // Create a second region.\n        Region region2 = new Region();\n\n        // Get the region data for the second region.\n        System.Drawing.Drawing2D.RegionData region2Data = region2.GetRegionData();\n\n        // Set the Data property for the second region to the Data from the first region.\n        region2Data.Data = data1;\n\n        // Construct a third region using the modified RegionData of the second region.\n        Region region3 = new Region(region2Data);\n\n        // Dispose of the first and second regions.\n        region1.Dispose();\n        region2.Dispose();\n\n        // Call ExcludeClip passing in the third region.\n        e.Graphics.ExcludeClip(region3);\n\n        // Fill in the client rectangle.\n        e.Graphics.FillRectangle(Brushes.Red, this.ClientRectangle);\n\n        region3.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#13\">private:\n   void DemonstrateRegionData2( PaintEventArgs^ e )\n   {\n      //Create a simple region.\n      System::Drawing::Region^ region1 = gcnew System::Drawing::Region( Rectangle(10,10,100,100) );\n\n      // Extract the region data.\n      System::Drawing::Drawing2D::RegionData^ region1Data = region1-&gt;GetRegionData();\n      array&lt;Byte&gt;^data1;\n      data1 = region1Data-&gt;Data;\n\n      // Create a second region.\n      System::Drawing::Region^ region2 = gcnew System::Drawing::Region;\n\n      // Get the region data for the second region.\n      System::Drawing::Drawing2D::RegionData^ region2Data = region2-&gt;GetRegionData();\n\n      // Set the Data property for the second region to the Data from the first region.\n      region2Data-&gt;Data = data1;\n\n      // Construct a third region using the modified RegionData of the second region.\n      System::Drawing::Region^ region3 = gcnew System::Drawing::Region( region2Data );\n\n      // Dispose of the first and second regions.\n      delete region1;\n      delete region2;\n\n      // Call ExcludeClip passing in the third region.\n      e-&gt;Graphics-&gt;ExcludeClip( region3 );\n\n      // Fill in the client rectangle.\n      e-&gt;Graphics-&gt;FillRectangle( Brushes::Red, this-&gt;ClientRectangle );\n      delete region3;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#13\">    Private Sub DemonstrateRegionData2(ByVal e As PaintEventArgs)\n\n        &#39;Create a simple region.\n        Dim region1 As New Region(New Rectangle(10, 10, 100, 100))\n\n        &#39; Extract the region data.\n        Dim region1Data As System.Drawing.Drawing2D.RegionData = region1.GetRegionData\n        Dim data1() As Byte\n        data1 = region1Data.Data\n\n        &#39; Create a second region.\n        Dim region2 As New Region\n\n        &#39; Get the region data for the second region.\n        Dim region2Data As System.Drawing.Drawing2D.RegionData = region2.GetRegionData()\n\n        &#39; Set the Data property for the second region to the Data from the first region.\n        region2Data.Data = data1\n\n        &#39; Construct a third region using the modified RegionData of the second region.\n        Dim region3 As New Region(region2Data)\n\n        &#39; Dispose of the first and second regions.\n        region1.Dispose()\n        region2.Dispose()\n\n        &#39; Call ExcludeClip passing in the third region.\n        e.Graphics.ExcludeClip(region3)\n\n        &#39; Fill in the client rectangle.\n        e.Graphics.FillRectangle(Brushes.Red, Me.ClientRectangle)\n\n        region3.Dispose()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_GetRegionScans_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Region_GetRegionScans_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegionScans(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that approximate this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> after the specified matrix transformation is applied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.RectangleF[] GetRegionScans (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents a geometric transformation to apply to the region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structures that approximate this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> after the specified matrix transformation is applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>matrix</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Intersect_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Intersect (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For code examples, see the <a class=\"xref\" href=\"system.drawing.rectanglef#System_Drawing_RectangleF_Intersect_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">System.Drawing.RectangleF.Intersect(RectangleF)</a> and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> methods.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Intersect_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Intersect (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Intersect_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Intersect(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Intersect_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Intersect (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates the first rectangle and draws it to the screen in black.  </p>\n</li>\n<li><p>Creates the second rectangle and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region from the first rectangle.  </p>\n</li>\n<li><p>Gets the area of intersection for the region when combined with the second rectangle.  </p>\n</li>\n<li><p>Fills the area of intersection with blue and draws it to the screen.  </p>\n<p>Notice that only the overlapped area for the region and rectangle is blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#7\">        public void Intersect_RectF_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // create the second rectangle and draw it to the screen in red.\n            RectangleF complementRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red,\n                Rectangle.Round(complementRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the area of intersection for myRegion when combined with\n                     \n            // complementRect.\n            myRegion.Intersect(complementRect);\n                     \n            // Fill the intersection area of myRegion with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#7\">    Public Sub Intersect_RectF_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; create the second rectangle and draw it to the screen in red.\n        Dim complementRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, _\n        Rectangle.Round(complementRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the area of intersection for myRegion when combined with\n        &#39; complementRect.\n        myRegion.Intersect(complementRect)\n\n        &#39; Fill the intersection area of myRegion with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#7\">public:\n   void Intersect_RectF_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // create the second rectangle and draw it to the screen in red.\n      RectangleF complementRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( complementRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the area of intersection for myRegion when combined with\n      // complementRect.\n      myRegion-&gt;Intersect( complementRect );\n\n      // Fill the intersection area of myRegion with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Intersect_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Intersect (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to intersect with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For code examples, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Intersect_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Intersect(RectangleF)</a> and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> method<code>.</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsEmpty_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEmpty(Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> has an empty interior on the specified drawing surface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEmpty (System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a drawing surface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the interior of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is empty when the transformation associated with <code>g</code> is applied; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context <code>g</code> is used to compute the region interior on the drawing surface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsInfinite_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsInfinite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInfinite(Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> has an infinite interior on the specified drawing surface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInfinite (System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a drawing surface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the interior of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> is infinite when the transformation associated with <code>g</code> is applied; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>g</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context <code>g</code> is used to compute the region interior on the drawing surface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when <code>point</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when <code>point</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> when any portion of <code>rect</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of <code>rect</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates the first rectangle and draws it to the screen in blue.  </p>\n</li>\n<li><p>Creates the second rectangle and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region from the first rectangle.  </p>\n</li>\n<li><p>Determines if any portion of the rectangle intersects with the region.  </p>\n</li>\n<li><p>Displays the <code>true</code> or <code>false</code> result on the screen.  </p>\n<p>Notice that the rectangle intersects the region, so the result is <code>true</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#8\">        public void IsVisible_RectF_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in blue.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Blue, regionRect);\n                     \n            // Create the second rectangle and draw it to the screen in red.\n            RectangleF myRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(myRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Determine if myRect is contained in the region.\n            bool contained = myRegion.IsVisible(myRect);\n                     \n            // Display the result.\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            SolidBrush myBrush = new SolidBrush(Color.Black);\n            e.Graphics.DrawString(&quot;contained = &quot; + contained.ToString(),\n                myFont,\n                myBrush,\n                new PointF(20, 140));\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#8\">    Public Sub IsVisible_RectF_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in blue.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Blue, regionRect)\n\n        &#39; create the second rectangle and draw it to the screen in red.\n        Dim myRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(myRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Determine if myRect is contained in the region.\n        Dim contained As Boolean = myRegion.IsVisible(myRect)\n\n        &#39; Display the result.\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim myBrush As New SolidBrush(Color.Black)\n        e.Graphics.DrawString(&quot;contained = &quot; &amp; contained.ToString(), _\n        myFont, myBrush, New PointF(20, 140))\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#8\">public:\n   void IsVisible_RectF_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in blue.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Blue, regionRect );\n\n      // Create the second rectangle and draw it to the screen in red.\n      RectangleF myRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( myRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Determine if myRect is contained in the region.\n      bool contained = myRegion-&gt;IsVisible( myRect );\n\n      // Display the result.\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Black );\n      e-&gt;Graphics-&gt;DrawString( String::Format( &quot;contained = {0}&quot;, contained ), myFont, myBrush, PointF(20,140) );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_Point_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Point,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Point point, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structure to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when <code>point</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the point coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_PointF_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(PointF,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.PointF point, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structure to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when <code>point</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the point coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_Rectangle_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Rectangle,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.Rectangle rect, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of the <code>rect</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the rectangle coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Drawing_RectangleF_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(RectangleF,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (System.Drawing.RectangleF rect, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when <code>rect</code> is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the rectangle coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the point coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Single_System_Single_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when the specified point is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the point coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangle to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y, float width, float height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangle to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Int32_System_Int32_System_Int32_System_Int32_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Int32,Int32,Int32,Int32,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (int x, int y, int width, int height, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the rectangle coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_IsVisible_System_Single_System_Single_System_Single_System_Single_System_Drawing_Graphics_\">\r\n    \r\n            <a id=\"System_Drawing_Region_IsVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsVisible(Single,Single,Single,Single,Graphics)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> when drawn using the specified <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsVisible (float x, float y, float width, float height, System.Drawing.Graphics g);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the upper-left corner of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the rectangle to test.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>g</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> that represents a graphics context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> when any portion of the specified rectangle is contained within this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current transformation of the graphics context is used to compute the region interior and the rectangle coordinates on the drawing surface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_IsVisible_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">IsVisible(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_MakeEmpty\">\r\n    \r\n            <a id=\"System_Drawing_Region_MakeEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MakeEmpty()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to an empty interior.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MakeEmpty ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region__ctor_\" data-linktype=\"relative-path\">Region</a> constructor and MakeEmpty method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the <code>FillEmptyRegion</code> method in the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#7\">    private void FillEmptyRegion(PaintEventArgs e)\n    {\n\n        // Create a region from a rectangle.\n        Rectangle originalRectangle = new Rectangle(40, 40, 40, 50);\n        Region smallRegion = new Region(originalRectangle);\n\n        // Call MakeEmpty.\n        smallRegion.MakeEmpty();\n\n        // Fill the region in red and draw the original rectangle\n        // in black. Note there is nothing filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion);\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle);\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#7\">private:\n   void FillEmptyRegion( PaintEventArgs^ e )\n   {\n      // Create a region from a rectangle.\n      Rectangle originalRectangle = Rectangle(40,40,40,50);\n      System::Drawing::Region^ smallRegion = gcnew System::Drawing::Region( originalRectangle );\n\n      // Call MakeEmpty.\n      smallRegion-&gt;MakeEmpty();\n\n      // Fill the region in red and draw the original rectangle\n      // in black. Note there is nothing filled in.\n      e-&gt;Graphics-&gt;FillRegion( Brushes::Red, smallRegion );\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, originalRectangle );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#7\">    Private Sub FillEmptyRegion(ByVal e As PaintEventArgs)\n\n        &#39; Create a region from a rectangle.\n        Dim originalRectangle As New Rectangle(40, 40, 40, 50)\n        Dim smallRegion As New Region(originalRectangle)\n\n        &#39; Call MakeEmpty.\n        smallRegion.MakeEmpty()\n\n        &#39; Fill the region in red and draw the original rectangle\n        &#39; in black. Note there is nothing filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion)\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_MakeInfinite\">\r\n    \r\n            <a id=\"System_Drawing_Region_MakeInfinite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MakeInfinite()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> object to an infinite interior.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MakeInfinite ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the MakeInfinite method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the <code>FillEmptyRegion</code> method in the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#8\">    private void FillInfiniteRegion(PaintEventArgs e)\n    {\n        // Create a region from a rectangle.\n        Rectangle originalRectangle = new Rectangle(40, 40, 40, 50);\n        Region smallRegion = new Region(originalRectangle);\n\n        // Call MakeInfinite.\n        smallRegion.MakeInfinite();\n\n        // Fill the region in red and draw the original rectangle\n        // in black. Note that the entire form is filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion);\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle);\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#8\">private:\n   void FillInfiniteRegion( PaintEventArgs^ e )\n   {\n      // Create a region from a rectangle.\n      Rectangle originalRectangle = Rectangle(40,40,40,50);\n      System::Drawing::Region^ smallRegion = gcnew System::Drawing::Region( originalRectangle );\n\n      // Call MakeInfinite.\n      smallRegion-&gt;MakeInfinite();\n\n      // Fill the region in red and draw the original rectangle\n      // in black. Note that the entire form is filled in.\n      e-&gt;Graphics-&gt;FillRegion( Brushes::Red, smallRegion );\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, originalRectangle );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#8\">    Private Sub FillInfiniteRegion(ByVal e As PaintEventArgs)\n        &#39; Create a region from a rectangle.\n        Dim originalRectangle As New Rectangle(40, 40, 40, 50)\n        Dim smallRegion As New Region(originalRectangle)\n\n        &#39; Call MakeInfinite.\n        smallRegion.MakeInfinite()\n\n        &#39; Fill the region in red and draw the original rectangle\n        &#39; in black. Note that the entire form is filled in.\n        e.Graphics.FillRegion(Brushes.Red, smallRegion)\n        e.Graphics.DrawRectangle(Pens.Black, originalRectangle)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_ReleaseHrgn_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Drawing_Region_ReleaseHrgn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHrgn(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the handle of the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ReleaseHrgn (IntPtr regionHandle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>regionHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to the <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>regionHandle</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Transform_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Transforms this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Transform (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to transform this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>matrix</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in blue.  </p>\n</li>\n<li><p>Creates a region from the rectangle.  </p>\n</li>\n<li><p>Creates a transformation matrix and sets it to 45 degrees.  </p>\n</li>\n<li><p>Applies the transformation to the region.  </p>\n</li>\n<li><p>Fills the transformed region with red and draws the transformed region to the screen in red.  </p>\n<p>Notice that the red rectangle is rotated 45 degrees from the original rectangle, shown in blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#9\">        public void TransformExample(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in blue.\n            Rectangle regionRect = new Rectangle(100, 50, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Blue, regionRect);\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Create a transform matrix and set it to have a 45 degree\n                     \n            // rotation.\n            Matrix transformMatrix = new Matrix();\n            transformMatrix.RotateAt(45, new Point(100, 50));\n                     \n            // Apply the transform to the region.\n            myRegion.Transform(transformMatrix);\n                     \n            // Fill the transformed region with red and draw it to the screen\n                     \n            // in red.\n            SolidBrush myBrush = new SolidBrush(Color.Red);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#9\">    Public Sub TransformExample(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in blue.\n        Dim regionRect As New Rectangle(100, 50, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Blue, regionRect)\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Create a transform matrix and set it to have a 45 degree\n        &#39; rotation.\n        Dim transformMatrix As New Matrix\n        transformMatrix.RotateAt(45, New PointF(100, 50))\n\n        &#39; Apply the transform to the region.\n        myRegion.Transform(transformMatrix)\n\n        &#39; Fill the transformed region with red and draw it to the\n        &#39; screen in red.\n        Dim myBrush As New SolidBrush(Color.Red)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#9\">public:\n   void TransformExample( PaintEventArgs^ e )\n   {\n      \n      // Create the first rectangle and draw it to the screen in blue.\n      Rectangle regionRect = Rectangle(100,50,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Blue, regionRect );\n      \n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n      \n      // Create a transform matrix and set it to have a 45 degree\n      // rotation.\n      Matrix^ transformMatrix = gcnew Matrix;\n      transformMatrix-&gt;RotateAt( 45, Point(100,50) );\n      \n      // Apply the transform to the region.\n      myRegion-&gt;Transform(transformMatrix);\n      \n      // Fill the transformed region with red and draw it to the screen\n      // in red.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Red );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Translate_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Offsets the coordinates of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified amount.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Translate (int dx, int dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> horizontally.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> vertically.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a rectangle and draws it to the screen in blue.  </p>\n</li>\n<li><p>Creates a region from the rectangle.  </p>\n</li>\n<li><p>Applies the translation to the region.  </p>\n</li>\n<li><p>Fills the translated region with red and draws the translated region to the screen in red.  </p>\n<p>Notice that the red rectangle is shifted down and to the right from the original rectangle, shown in blue.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#10\">        public void TranslateExample(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in blue.\n            Rectangle regionRect = new Rectangle(100, 50, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Blue, regionRect);\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Apply the translation to the region.\n            myRegion.Translate(150, 100);\n                     \n            // Fill the transformed region with red and draw it to the screen in red.\n            SolidBrush myBrush = new SolidBrush(Color.Red);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#10\">    Public Sub TranslateExample(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in blue.\n        Dim regionRect As New Rectangle(100, 50, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Blue, regionRect)\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Apply the translation to the region.\n        myRegion.Translate(150, 100)\n\n        &#39; Fill the transformed region with red and draw it to the\n        &#39; screen in red.\n        Dim myBrush As New SolidBrush(Color.Red)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#10\">   void TranslateExample( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in blue.\n      Rectangle regionRect = Rectangle(100,50,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Blue, regionRect );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Apply the translation to the region.\n      myRegion-&gt;Translate( 150, 100 );\n\n      // Fill the transformed region with red and draw it to the screen in red.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Red );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Translate_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Offsets the coordinates of this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> by the specified amount.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Translate (float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> horizontally.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> vertically.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see theTranslate method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Union_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Union (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to unite with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Union_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Union(RectangleF)</a> and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> methods.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Union_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Union (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to unite with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Union_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Union(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Union_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Union (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to unite with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates the first rectangle and draws it to the screen in black.  </p>\n</li>\n<li><p>Creates a second rectangle and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region using the first rectangle.  </p>\n</li>\n<li><p>Gets the area of union for <code>myRegion</code> when combined with <code>complementRect</code>.  </p>\n</li>\n<li><p>Fills the fills the area of union with blue and draws it to the screen.  </p>\n<p>Notice that both rectangles are filled with blue, including the area of overlap.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#11\">        public void Union_RectF_Example(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // create the second rectangle and draw it to the screen in red.\n            RectangleF unionRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red,\n                Rectangle.Round(unionRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the area of union for myRegion when combined with\n                     \n            // complementRect.\n            myRegion.Union(unionRect);\n                     \n            // Fill the union area of myRegion with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#11\">    Public Sub Union_RectF_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; create the second rectangle and draw it to the screen in red.\n        Dim unionRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(unionRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the area of union for myRegion when combined with\n        &#39; complementRect.\n        myRegion.Union(unionRect)\n\n        &#39; Fill the intersection area of myRegion with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#11\">   void Union_RectF_Example( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // create the second rectangle and draw it to the screen in red.\n      RectangleF unionRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( unionRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the area of union for myRegion when combined with\n      // complementRect.\n      myRegion-&gt;Union( unionRect );\n\n      // Fill the union area of myRegion with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Union_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union of itself and the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Union (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to unite with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Union_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Union(RectangleF)</a> and <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Xor_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Xor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Xor(GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Xor (System.Drawing.Drawing2D.GraphicsPath path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> to <span class=\"xref\">stem.Drawing.Region.Xor*</span> with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Xor_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Xor(RectangleF)</a> and<a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> methods.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Xor_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Xor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Xor(Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Xor (System.Drawing.Rectangle rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure to <span class=\"xref\">stem.Drawing.Region.Xor*</span> with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Xor_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Xor(RectangleF)</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Xor_System_Drawing_RectangleF_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Xor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Xor(RectangleF)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Xor (System.Drawing.RectangleF rect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure to <span class=\"xref\">stem.Drawing.Region.Xor*</span> with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates the first rectangle and draws it to the screen in black.  </p>\n</li>\n<li><p>Creates a second rectangle and draws it to the screen in red.  </p>\n</li>\n<li><p>Creates a region using the first rectangle.  </p>\n</li>\n<li><p>Gets the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Xor_\" data-linktype=\"relative-path\">Xor</a> area for <code>myRegion</code> when combined with <code>complementRect</code>.  </p>\n</li>\n<li><p>Fills the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Xor_\" data-linktype=\"relative-path\">Xor</a> area with blue and draws it to the screen.  </p>\n<p>Notice that both rectangles are filled with blue, except for the area of overlap.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicRegionExamples#12\">        public void XorExample(PaintEventArgs e)\n        {\n                     \n            // Create the first rectangle and draw it to the screen in black.\n            Rectangle regionRect = new Rectangle(20, 20, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Black, regionRect);\n                     \n            // create the second rectangle and draw it to the screen in red.\n            RectangleF xorRect = new RectangleF(90, 30, 100, 100);\n            e.Graphics.DrawRectangle(Pens.Red,\n                Rectangle.Round(xorRect));\n                     \n            // Create a region using the first rectangle.\n            Region myRegion = new Region(regionRect);\n                     \n            // Get the area of overlap for myRegion when combined with\n                     \n            // complementRect.\n            myRegion.Xor(xorRect);\n                     \n            // Fill the Xor area of myRegion with blue.\n            SolidBrush myBrush = new SolidBrush(Color.Blue);\n            e.Graphics.FillRegion(myBrush, myRegion);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicRegionExamples#12\">    Public Sub XorExample(ByVal e As PaintEventArgs)\n\n        &#39; Create the first rectangle and draw it to the screen in black.\n        Dim regionRect As New Rectangle(20, 20, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Black, regionRect)\n\n        &#39; create the second rectangle and draw it to the screen in red.\n        Dim xorRect As New RectangleF(90, 30, 100, 100)\n        e.Graphics.DrawRectangle(Pens.Red, Rectangle.Round(xorRect))\n\n        &#39; Create a region using the first rectangle.\n        Dim myRegion As New [Region](regionRect)\n\n        &#39; Get the area of overlap for myRegion when combined with\n        &#39; complementRect.\n        myRegion.Xor(xorRect)\n\n        &#39; Fill the intersection area of myRegion with blue.\n        Dim myBrush As New SolidBrush(Color.Blue)\n        e.Graphics.FillRegion(myBrush, myRegion)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicRegionExamples#12\">   void XorExample( PaintEventArgs^ e )\n   {\n      // Create the first rectangle and draw it to the screen in black.\n      Rectangle regionRect = Rectangle(20,20,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, regionRect );\n\n      // create the second rectangle and draw it to the screen in red.\n      RectangleF xorRect = RectangleF(90,30,100,100);\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Red, Rectangle::Round( xorRect ) );\n\n      // Create a region using the first rectangle.\n      System::Drawing::Region^ myRegion = gcnew System::Drawing::Region( regionRect );\n\n      // Get the area of overlap for myRegion when combined with\n      // complementRect.\n      myRegion-&gt;Xor( xorRect );\n\n      // Fill the Xor area of myRegion with blue.\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Blue );\n      e-&gt;Graphics-&gt;FillRegion( myBrush, myRegion );\n   }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Region_Xor_System_Drawing_Region_\">\r\n    \r\n            <a id=\"System_Drawing_Region_Xor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Xor(Region)</div>        \r\n          </div>\r\n    \r\n            <p>Updates this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to the union minus the intersection of itself with the specified <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Xor (System.Drawing.Region region);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>region</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a> to <span class=\"xref\">stem.Drawing.Region.Xor*</span> with this <a class=\"xref\" href=\"system.drawing.region\" data-linktype=\"relative-path\">Region</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>region</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example, see the <a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Xor_System_Drawing_RectangleF_\" data-linktype=\"relative-path\">Xor(RectangleF)</a> and<a class=\"xref\" href=\"system.drawing.region#System_Drawing_Region_Complement_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"relative-path\">Complement(GraphicsPath)</a> methods.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Region.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Region.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Complement\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Equals\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Exclude\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.FromHrgn\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.GetBounds\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.GetHrgn\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.GetRegionData\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.GetRegionScans\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.IsEmpty\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.IsInfinite\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.IsVisible\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.MakeEmpty\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.MakeInfinite\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.ReleaseHrgn\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Transform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Translate\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Union\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Region.Xor\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a8e53895-5381-5933-6e1d-b49275212be0\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing\\Region.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Region\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Region.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Region.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Region","System.Drawing.Region..ctor","System.Drawing.Region.Clone","System.Drawing.Region.Complement","System.Drawing.Region.Dispose","System.Drawing.Region.Equals","System.Drawing.Region.Exclude","System.Drawing.Region.Finalize","System.Drawing.Region.FromHrgn","System.Drawing.Region.GetBounds","System.Drawing.Region.GetHrgn","System.Drawing.Region.GetRegionData","System.Drawing.Region.GetRegionScans","System.Drawing.Region.Intersect","System.Drawing.Region.IsEmpty","System.Drawing.Region.IsInfinite","System.Drawing.Region.IsVisible","System.Drawing.Region.MakeEmpty","System.Drawing.Region.MakeInfinite","System.Drawing.Region.ReleaseHrgn","System.Drawing.Region.Transform","System.Drawing.Region.Translate","System.Drawing.Region.Union","System.Drawing.Region.Xor"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Region","System::Drawing::Region","System.Drawing.Region.#ctor","System::Drawing::Region::#ctor","System.Drawing.Region.Clone","System::Drawing::Region::Clone","System.Drawing.Region.Complement","System::Drawing::Region::Complement","System.Drawing.Region.Dispose","System::Drawing::Region::Dispose","System.Drawing.Region.Equals","System::Drawing::Region::Equals","System.Drawing.Region.Exclude","System::Drawing::Region::Exclude","System.Drawing.Region.Finalize","System::Drawing::Region::Finalize","System.Drawing.Region.FromHrgn","System::Drawing::Region::FromHrgn","System.Drawing.Region.GetBounds","System::Drawing::Region::GetBounds","System.Drawing.Region.GetHrgn","System::Drawing::Region::GetHrgn","System.Drawing.Region.GetRegionData","System::Drawing::Region::GetRegionData","System.Drawing.Region.GetRegionScans","System::Drawing::Region::GetRegionScans","System.Drawing.Region.Intersect","System::Drawing::Region::Intersect","System.Drawing.Region.IsEmpty","System::Drawing::Region::IsEmpty","System.Drawing.Region.IsInfinite","System::Drawing::Region::IsInfinite","System.Drawing.Region.IsVisible","System::Drawing::Region::IsVisible","System.Drawing.Region.MakeEmpty","System::Drawing::Region::MakeEmpty","System.Drawing.Region.MakeInfinite","System::Drawing::Region::MakeInfinite","System.Drawing.Region.ReleaseHrgn","System::Drawing::Region::ReleaseHrgn","System.Drawing.Region.Transform","System::Drawing::Region::Transform","System.Drawing.Region.Translate","System::Drawing::Region::Translate","System.Drawing.Region.Union","System::Drawing::Region::Union","System.Drawing.Region.Xor","System::Drawing::Region::Xor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a8e53895-5381-5933-6e1d-b49275212be0","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing\\Region.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing/Region.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Region class | Microsoft Docs","_op_ogTitle":"Region class","description":"Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.Region","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.region","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.region","fileRelativePath":"System.Drawing.Region.html"},"themesRelativePathToOutputRoot":"_themes/"}