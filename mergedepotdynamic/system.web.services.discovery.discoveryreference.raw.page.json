{"content":"    \r\n    <h1 id=\"System_Web_Services_Discovery_DiscoveryReference\">\r\n      <span class=\"lang-csharp\">DiscoveryReference</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The base class for discoverable references using XML Web services discovery.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class DiscoveryReference</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DiscoveryReference</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p><a class=\"xref\" href=\"system.web.services.discovery.contractreference\" data-linktype=\"relative-path\">ContractReference</a>, <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a>, and <a class=\"xref\" href=\"system.web.services.discovery.discoverydocumentreference\" data-linktype=\"relative-path\">DiscoveryDocumentReference</a> all inherit from DiscoveryReference, and represent the three types of documents discoverable through XML Web services discovery: Service Descriptions, XML Schema Definition (XSD) schemas, and discovery documents, respectively.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference__ctor\" data-linktype=\"self-bookmark\">DiscoveryReference()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference\" data-linktype=\"relative-path\">DiscoveryReference</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_ClientProtocol\" data-linktype=\"self-bookmark\">ClientProtocol</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the instance of <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> used in a discovery process.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_DefaultFilename\" data-linktype=\"self-bookmark\">DefaultFilename</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the default file to use when saving the referenced discovery document, XSD schema, or Service Description.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_Url\" data-linktype=\"self-bookmark\">Url</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the URL of the referenced document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_FilenameFromUrl_System_String_\" data-linktype=\"self-bookmark\">FilenameFromUrl(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a file name based on the passed URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_ReadDocument_System_IO_Stream_\" data-linktype=\"self-bookmark\">ReadDocument(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and returns an instance of the class representing the type of referenced document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_Resolve\" data-linktype=\"self-bookmark\">Resolve()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Downloads the referenced document at <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryReference.Url*</span> to resolve whether the referenced document is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_Resolve_System_String_System_IO_Stream_\" data-linktype=\"self-bookmark\">Resolve(String,Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resolves whether the referenced document is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryReference_WriteDocument_System_Object_System_IO_Stream_\" data-linktype=\"self-bookmark\">WriteDocument(Object,Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the document to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference__ctor\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscoveryReference()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference\" data-linktype=\"relative-path\">DiscoveryReference</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected DiscoveryReference ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_ClientProtocol\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_ClientProtocol_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientProtocol</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the instance of <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> used in a discovery process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a></div>\r\n                  </div>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol\" data-linktype=\"relative-path\">DiscoveryClientProtocol</a> used in a discovery process</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryReference#1\">using System;\nusing System.IO;\nusing System.Web.Services.Discovery;\nusing System.Net;\n\nclass MyDiscoveryDocumentClass\n{\n   static void Main()\n   {\n      DiscoveryDocument myDiscoveryDocument;\n      StreamReader myStreamReader = \n         new StreamReader(&quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot;);\n      FileStream myStream = \n         new FileStream(&quot;C:\\\\MyDiscovery.disco&quot;,FileMode.OpenOrCreate);\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;);\n\n      // Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader);\n\n      // Variable of type DiscoveryReference class defined.\n      MyDiscoveryReferenceClass myDiscoveryReference;\n      myDiscoveryReference =  new MyDiscoveryReferenceClass();\n\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n         new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials = \n         CredentialCache.DefaultCredentials;\n\n      // Set client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Read the default file name.\n      Console.WriteLine(&quot;Default file name is: &quot; + myDiscoveryReference.DefaultFilename);\n\n      // Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument,myStream);\n\n      // Read the document.\n      myDiscoveryReference.ReadDocument(myStream);\n\n      // Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;;\n      Console.WriteLine(&quot;Url is: &quot; + myDiscoveryReference.Url);\n\n      // Resolve the URL.\n      myDiscoveryReference.Resolve();\n\n      myStreamReader.Close();\n      myStream.Close();\n   }\n}\n\n// Class derived from DiscoveryReference class and overriding its members.\nclass MyDiscoveryReferenceClass : DiscoveryReference\n{\n   private string myDocumentUrl;\n   public override string DefaultFilename\n   {\n      get\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   public override object ReadDocument(Stream stream)\n   {\n      return stream;\n   }\n\n   public new void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument myDiscoveryRefDocument;\n         myDiscoveryRefDocument = base.ClientProtocol.Discover(Url);\n      }\n      catch (Exception e)\n      {\n         throw(e);\n      }\n   }\n\n   protected override void Resolve(string contentType, Stream stream) {}\n\n   public override string Url\n   {\n      get\n      {\n         return myDocumentUrl;\n      }\n\n      set\n      {\n         myDocumentUrl = value;\n      }\n   }\n\n   public override void WriteDocument(object document, System.IO.Stream stream)\n   {\n      DiscoveryDocument myDiscoveryDocument = (DiscoveryDocument)document;\n      myDiscoveryDocument.Write(stream);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryReference#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Web::Services::Discovery;\nusing namespace System::Net;\n\n// Class derived from DiscoveryReference class and overriding its members.\nref class MyDiscoveryReferenceClass: public DiscoveryReference\n{\nprivate:\n   String^ myDocumentUrl;\n\npublic:\n   property String^ DefaultFilename \n   {\n      virtual String^ get() override\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   virtual Object^ ReadDocument( Stream^ stream ) override\n   {\n      return stream;\n   }\n\n   void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument^ myDiscoveryRefDocument;\n         myDiscoveryRefDocument = __super::ClientProtocol-&gt;Discover( Url );\n      }\n      catch ( Exception^ e ) \n      {\n         throw e;\n      }\n   }\n\nprotected:\n   virtual void Resolve( String^ contentType, Stream^ stream ) override {}\n\npublic:\n\n   property String^ Url \n   {\n      virtual String^ get() override\n      {\n         return myDocumentUrl;\n      }\n\n      virtual void set( String^ value ) override\n      {\n         myDocumentUrl = value;\n      }\n   }\n   virtual void WriteDocument( Object^ document, System::IO::Stream^ stream ) override\n   {\n      DiscoveryDocument^ myDiscoveryDocument = dynamic_cast&lt;DiscoveryDocument^&gt;(document);\n      myDiscoveryDocument-&gt;Write( stream );\n   }\n};\n\nint main()\n{\n   DiscoveryDocument^ myDiscoveryDocument;\n   StreamReader^ myStreamReader = gcnew StreamReader( &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot; );\n   FileStream^ myStream = gcnew FileStream( &quot;C:\\\\MyDiscovery.disco&quot;,FileMode::OpenOrCreate );\n   Console::WriteLine( &quot;Demonstrating Discovery Reference class.&quot; );\n   \n   // Read discovery file.\n   myDiscoveryDocument = DiscoveryDocument::Read( myStreamReader );\n   \n   // Variable of type DiscoveryReference class defined.\n   MyDiscoveryReferenceClass^ myDiscoveryReference;\n   myDiscoveryReference = gcnew MyDiscoveryReferenceClass;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Set client protocol.\n   myDiscoveryReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n   \n   // Read the default file name.\n   Console::WriteLine( &quot;Default file name is: {0}&quot;, myDiscoveryReference-&gt;DefaultFilename );\n   \n   // Write the document.\n   myDiscoveryReference-&gt;WriteDocument( myDiscoveryDocument, myStream );\n   \n   // Read the document.\n   myDiscoveryReference-&gt;ReadDocument( myStream );\n   \n   // Set the URL.\n   myDiscoveryReference-&gt;Url = &quot;http://localhost/dataservice.disco&quot;;\n   Console::WriteLine( &quot;Url is: {0}&quot;, myDiscoveryReference-&gt;Url );\n   \n   // Resolve the URL.\n   myDiscoveryReference-&gt;Resolve();\n   myStreamReader-&gt;Close();\n   myStream-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryReference#1\">Imports System\nImports System.IO\nImports System.Web.Services.Discovery\nImports System.Net\n\nClass MyDiscoveryDocumentClass\n  Public Shared Sub Main()\n\n      Dim myDiscoveryDocument As DiscoveryDocument\n      Dim myStreamReader As _\n         New StreamReader(&quot;c:\\Inetpub\\wwwroot\\dataservice.disco&quot;)\n      Dim myStream As _\n         New FileStream(&quot;C:\\MyDiscovery.disco&quot;, FileMode.OpenOrCreate)\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;)\n\n      &#39; Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader)\n\n      &#39; Variable of type DiscoveryReference class defined.\n      Dim myDiscoveryReference As MyDiscoveryReferenceClass\n      myDiscoveryReference = New MyDiscoveryReferenceClass()\n\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = _\n         CredentialCache.DefaultCredentials\n\n      &#39; Set the client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol\n\n      &#39; Read the default file name.\n      Console.WriteLine(&quot;Default file name is : &quot; &amp; _\n         myDiscoveryReference.DefaultFilename)\n\n      &#39; Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument, myStream)\n\n      &#39; Read the document.\n      myDiscoveryReference.ReadDocument(myStream)\n\n      &#39; Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;\n      Console.WriteLine(&quot;Url is : &quot; &amp; myDiscoveryReference.Url)\n\n      &#39; Resolve the URL\n      myDiscoveryReference.Resolve()\n\n      myStreamReader.Close()\n      myStream.Close()\n   End Sub\n\nEnd Class\n\n\n&#39; Class derived from DiscoveryReference class and overriding its members.\nClass MyDiscoveryReferenceClass\n   Inherits DiscoveryReference\n   Private myDocumentUrl As String\n\n   Public Overrides ReadOnly Property DefaultFilename() As String\n      Get\n         Return &quot;dataservice.disco&quot;\n      End Get\n   End Property\n\n   Public Overrides Function _\n      ReadDocument(ByVal stream As System.IO.Stream) As Object\n      Return stream\n   End Function\n\n   Public Overloads Sub Resolve()\n      Try\n         Dim myDiscoveryRefDocument As DiscoveryDocument\n         myDiscoveryRefDocument = MyBase.ClientProtocol.Discover(Url)\n      Catch e As Exception\n         Throw e\n      End Try\n   End Sub\n\n   Protected Overloads Overrides Sub _\n      Resolve(ByVal contentType As String, ByVal stream As Stream)\n   End Sub\n\n   Public Overrides Property Url() As String\n      Get\n         Return myDocumentUrl\n      End Get\n\n      Set(ByVal Value As String)\n         myDocumentUrl = Value\n      End Set\n   End Property\n\n   Public Overrides Sub WriteDocument _\n      (ByVal document As Object, ByVal stream As System.IO.Stream)\n      Dim myDiscoveryDocument As DiscoveryDocument = _\n         CType(document, DiscoveryDocument)\n      myDiscoveryDocument.Write(stream)\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_DefaultFilename\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_DefaultFilename_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultFilename</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the default file to use when saving the referenced discovery document, XSD schema, or Service Description.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DefaultFilename { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Name of the default file to use when saving the referenced document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryReference#1\">using System;\nusing System.IO;\nusing System.Web.Services.Discovery;\nusing System.Net;\n\nclass MyDiscoveryDocumentClass\n{\n   static void Main()\n   {\n      DiscoveryDocument myDiscoveryDocument;\n      StreamReader myStreamReader = \n         new StreamReader(&quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot;);\n      FileStream myStream = \n         new FileStream(&quot;C:\\\\MyDiscovery.disco&quot;,FileMode.OpenOrCreate);\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;);\n\n      // Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader);\n\n      // Variable of type DiscoveryReference class defined.\n      MyDiscoveryReferenceClass myDiscoveryReference;\n      myDiscoveryReference =  new MyDiscoveryReferenceClass();\n\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n         new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials = \n         CredentialCache.DefaultCredentials;\n\n      // Set client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Read the default file name.\n      Console.WriteLine(&quot;Default file name is: &quot; + myDiscoveryReference.DefaultFilename);\n\n      // Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument,myStream);\n\n      // Read the document.\n      myDiscoveryReference.ReadDocument(myStream);\n\n      // Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;;\n      Console.WriteLine(&quot;Url is: &quot; + myDiscoveryReference.Url);\n\n      // Resolve the URL.\n      myDiscoveryReference.Resolve();\n\n      myStreamReader.Close();\n      myStream.Close();\n   }\n}\n\n// Class derived from DiscoveryReference class and overriding its members.\nclass MyDiscoveryReferenceClass : DiscoveryReference\n{\n   private string myDocumentUrl;\n   public override string DefaultFilename\n   {\n      get\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   public override object ReadDocument(Stream stream)\n   {\n      return stream;\n   }\n\n   public new void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument myDiscoveryRefDocument;\n         myDiscoveryRefDocument = base.ClientProtocol.Discover(Url);\n      }\n      catch (Exception e)\n      {\n         throw(e);\n      }\n   }\n\n   protected override void Resolve(string contentType, Stream stream) {}\n\n   public override string Url\n   {\n      get\n      {\n         return myDocumentUrl;\n      }\n\n      set\n      {\n         myDocumentUrl = value;\n      }\n   }\n\n   public override void WriteDocument(object document, System.IO.Stream stream)\n   {\n      DiscoveryDocument myDiscoveryDocument = (DiscoveryDocument)document;\n      myDiscoveryDocument.Write(stream);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryReference#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Web::Services::Discovery;\nusing namespace System::Net;\n\n// Class derived from DiscoveryReference class and overriding its members.\nref class MyDiscoveryReferenceClass: public DiscoveryReference\n{\nprivate:\n   String^ myDocumentUrl;\n\npublic:\n   property String^ DefaultFilename \n   {\n      virtual String^ get() override\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   virtual Object^ ReadDocument( Stream^ stream ) override\n   {\n      return stream;\n   }\n\n   void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument^ myDiscoveryRefDocument;\n         myDiscoveryRefDocument = __super::ClientProtocol-&gt;Discover( Url );\n      }\n      catch ( Exception^ e ) \n      {\n         throw e;\n      }\n   }\n\nprotected:\n   virtual void Resolve( String^ contentType, Stream^ stream ) override {}\n\npublic:\n\n   property String^ Url \n   {\n      virtual String^ get() override\n      {\n         return myDocumentUrl;\n      }\n\n      virtual void set( String^ value ) override\n      {\n         myDocumentUrl = value;\n      }\n   }\n   virtual void WriteDocument( Object^ document, System::IO::Stream^ stream ) override\n   {\n      DiscoveryDocument^ myDiscoveryDocument = dynamic_cast&lt;DiscoveryDocument^&gt;(document);\n      myDiscoveryDocument-&gt;Write( stream );\n   }\n};\n\nint main()\n{\n   DiscoveryDocument^ myDiscoveryDocument;\n   StreamReader^ myStreamReader = gcnew StreamReader( &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot; );\n   FileStream^ myStream = gcnew FileStream( &quot;C:\\\\MyDiscovery.disco&quot;,FileMode::OpenOrCreate );\n   Console::WriteLine( &quot;Demonstrating Discovery Reference class.&quot; );\n   \n   // Read discovery file.\n   myDiscoveryDocument = DiscoveryDocument::Read( myStreamReader );\n   \n   // Variable of type DiscoveryReference class defined.\n   MyDiscoveryReferenceClass^ myDiscoveryReference;\n   myDiscoveryReference = gcnew MyDiscoveryReferenceClass;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Set client protocol.\n   myDiscoveryReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n   \n   // Read the default file name.\n   Console::WriteLine( &quot;Default file name is: {0}&quot;, myDiscoveryReference-&gt;DefaultFilename );\n   \n   // Write the document.\n   myDiscoveryReference-&gt;WriteDocument( myDiscoveryDocument, myStream );\n   \n   // Read the document.\n   myDiscoveryReference-&gt;ReadDocument( myStream );\n   \n   // Set the URL.\n   myDiscoveryReference-&gt;Url = &quot;http://localhost/dataservice.disco&quot;;\n   Console::WriteLine( &quot;Url is: {0}&quot;, myDiscoveryReference-&gt;Url );\n   \n   // Resolve the URL.\n   myDiscoveryReference-&gt;Resolve();\n   myStreamReader-&gt;Close();\n   myStream-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryReference#1\">Imports System\nImports System.IO\nImports System.Web.Services.Discovery\nImports System.Net\n\nClass MyDiscoveryDocumentClass\n  Public Shared Sub Main()\n\n      Dim myDiscoveryDocument As DiscoveryDocument\n      Dim myStreamReader As _\n         New StreamReader(&quot;c:\\Inetpub\\wwwroot\\dataservice.disco&quot;)\n      Dim myStream As _\n         New FileStream(&quot;C:\\MyDiscovery.disco&quot;, FileMode.OpenOrCreate)\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;)\n\n      &#39; Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader)\n\n      &#39; Variable of type DiscoveryReference class defined.\n      Dim myDiscoveryReference As MyDiscoveryReferenceClass\n      myDiscoveryReference = New MyDiscoveryReferenceClass()\n\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = _\n         CredentialCache.DefaultCredentials\n\n      &#39; Set the client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol\n\n      &#39; Read the default file name.\n      Console.WriteLine(&quot;Default file name is : &quot; &amp; _\n         myDiscoveryReference.DefaultFilename)\n\n      &#39; Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument, myStream)\n\n      &#39; Read the document.\n      myDiscoveryReference.ReadDocument(myStream)\n\n      &#39; Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;\n      Console.WriteLine(&quot;Url is : &quot; &amp; myDiscoveryReference.Url)\n\n      &#39; Resolve the URL\n      myDiscoveryReference.Resolve()\n\n      myStreamReader.Close()\n      myStream.Close()\n   End Sub\n\nEnd Class\n\n\n&#39; Class derived from DiscoveryReference class and overriding its members.\nClass MyDiscoveryReferenceClass\n   Inherits DiscoveryReference\n   Private myDocumentUrl As String\n\n   Public Overrides ReadOnly Property DefaultFilename() As String\n      Get\n         Return &quot;dataservice.disco&quot;\n      End Get\n   End Property\n\n   Public Overrides Function _\n      ReadDocument(ByVal stream As System.IO.Stream) As Object\n      Return stream\n   End Function\n\n   Public Overloads Sub Resolve()\n      Try\n         Dim myDiscoveryRefDocument As DiscoveryDocument\n         myDiscoveryRefDocument = MyBase.ClientProtocol.Discover(Url)\n      Catch e As Exception\n         Throw e\n      End Try\n   End Sub\n\n   Protected Overloads Overrides Sub _\n      Resolve(ByVal contentType As String, ByVal stream As Stream)\n   End Sub\n\n   Public Overrides Property Url() As String\n      Get\n         Return myDocumentUrl\n      End Get\n\n      Set(ByVal Value As String)\n         myDocumentUrl = Value\n      End Set\n   End Property\n\n   Public Overrides Sub WriteDocument _\n      (ByVal document As Object, ByVal stream As System.IO.Stream)\n      Dim myDiscoveryDocument As DiscoveryDocument = _\n         CType(document, DiscoveryDocument)\n      myDiscoveryDocument.Write(stream)\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_Url\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_Url_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Url</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the URL of the referenced document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string Url { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL of the referenced document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryReference#1\">using System;\nusing System.IO;\nusing System.Web.Services.Discovery;\nusing System.Net;\n\nclass MyDiscoveryDocumentClass\n{\n   static void Main()\n   {\n      DiscoveryDocument myDiscoveryDocument;\n      StreamReader myStreamReader = \n         new StreamReader(&quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot;);\n      FileStream myStream = \n         new FileStream(&quot;C:\\\\MyDiscovery.disco&quot;,FileMode.OpenOrCreate);\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;);\n\n      // Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader);\n\n      // Variable of type DiscoveryReference class defined.\n      MyDiscoveryReferenceClass myDiscoveryReference;\n      myDiscoveryReference =  new MyDiscoveryReferenceClass();\n\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n         new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials = \n         CredentialCache.DefaultCredentials;\n\n      // Set client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Read the default file name.\n      Console.WriteLine(&quot;Default file name is: &quot; + myDiscoveryReference.DefaultFilename);\n\n      // Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument,myStream);\n\n      // Read the document.\n      myDiscoveryReference.ReadDocument(myStream);\n\n      // Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;;\n      Console.WriteLine(&quot;Url is: &quot; + myDiscoveryReference.Url);\n\n      // Resolve the URL.\n      myDiscoveryReference.Resolve();\n\n      myStreamReader.Close();\n      myStream.Close();\n   }\n}\n\n// Class derived from DiscoveryReference class and overriding its members.\nclass MyDiscoveryReferenceClass : DiscoveryReference\n{\n   private string myDocumentUrl;\n   public override string DefaultFilename\n   {\n      get\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   public override object ReadDocument(Stream stream)\n   {\n      return stream;\n   }\n\n   public new void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument myDiscoveryRefDocument;\n         myDiscoveryRefDocument = base.ClientProtocol.Discover(Url);\n      }\n      catch (Exception e)\n      {\n         throw(e);\n      }\n   }\n\n   protected override void Resolve(string contentType, Stream stream) {}\n\n   public override string Url\n   {\n      get\n      {\n         return myDocumentUrl;\n      }\n\n      set\n      {\n         myDocumentUrl = value;\n      }\n   }\n\n   public override void WriteDocument(object document, System.IO.Stream stream)\n   {\n      DiscoveryDocument myDiscoveryDocument = (DiscoveryDocument)document;\n      myDiscoveryDocument.Write(stream);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryReference#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Web::Services::Discovery;\nusing namespace System::Net;\n\n// Class derived from DiscoveryReference class and overriding its members.\nref class MyDiscoveryReferenceClass: public DiscoveryReference\n{\nprivate:\n   String^ myDocumentUrl;\n\npublic:\n   property String^ DefaultFilename \n   {\n      virtual String^ get() override\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   virtual Object^ ReadDocument( Stream^ stream ) override\n   {\n      return stream;\n   }\n\n   void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument^ myDiscoveryRefDocument;\n         myDiscoveryRefDocument = __super::ClientProtocol-&gt;Discover( Url );\n      }\n      catch ( Exception^ e ) \n      {\n         throw e;\n      }\n   }\n\nprotected:\n   virtual void Resolve( String^ contentType, Stream^ stream ) override {}\n\npublic:\n\n   property String^ Url \n   {\n      virtual String^ get() override\n      {\n         return myDocumentUrl;\n      }\n\n      virtual void set( String^ value ) override\n      {\n         myDocumentUrl = value;\n      }\n   }\n   virtual void WriteDocument( Object^ document, System::IO::Stream^ stream ) override\n   {\n      DiscoveryDocument^ myDiscoveryDocument = dynamic_cast&lt;DiscoveryDocument^&gt;(document);\n      myDiscoveryDocument-&gt;Write( stream );\n   }\n};\n\nint main()\n{\n   DiscoveryDocument^ myDiscoveryDocument;\n   StreamReader^ myStreamReader = gcnew StreamReader( &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot; );\n   FileStream^ myStream = gcnew FileStream( &quot;C:\\\\MyDiscovery.disco&quot;,FileMode::OpenOrCreate );\n   Console::WriteLine( &quot;Demonstrating Discovery Reference class.&quot; );\n   \n   // Read discovery file.\n   myDiscoveryDocument = DiscoveryDocument::Read( myStreamReader );\n   \n   // Variable of type DiscoveryReference class defined.\n   MyDiscoveryReferenceClass^ myDiscoveryReference;\n   myDiscoveryReference = gcnew MyDiscoveryReferenceClass;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Set client protocol.\n   myDiscoveryReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n   \n   // Read the default file name.\n   Console::WriteLine( &quot;Default file name is: {0}&quot;, myDiscoveryReference-&gt;DefaultFilename );\n   \n   // Write the document.\n   myDiscoveryReference-&gt;WriteDocument( myDiscoveryDocument, myStream );\n   \n   // Read the document.\n   myDiscoveryReference-&gt;ReadDocument( myStream );\n   \n   // Set the URL.\n   myDiscoveryReference-&gt;Url = &quot;http://localhost/dataservice.disco&quot;;\n   Console::WriteLine( &quot;Url is: {0}&quot;, myDiscoveryReference-&gt;Url );\n   \n   // Resolve the URL.\n   myDiscoveryReference-&gt;Resolve();\n   myStreamReader-&gt;Close();\n   myStream-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryReference#1\">Imports System\nImports System.IO\nImports System.Web.Services.Discovery\nImports System.Net\n\nClass MyDiscoveryDocumentClass\n  Public Shared Sub Main()\n\n      Dim myDiscoveryDocument As DiscoveryDocument\n      Dim myStreamReader As _\n         New StreamReader(&quot;c:\\Inetpub\\wwwroot\\dataservice.disco&quot;)\n      Dim myStream As _\n         New FileStream(&quot;C:\\MyDiscovery.disco&quot;, FileMode.OpenOrCreate)\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;)\n\n      &#39; Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader)\n\n      &#39; Variable of type DiscoveryReference class defined.\n      Dim myDiscoveryReference As MyDiscoveryReferenceClass\n      myDiscoveryReference = New MyDiscoveryReferenceClass()\n\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = _\n         CredentialCache.DefaultCredentials\n\n      &#39; Set the client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol\n\n      &#39; Read the default file name.\n      Console.WriteLine(&quot;Default file name is : &quot; &amp; _\n         myDiscoveryReference.DefaultFilename)\n\n      &#39; Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument, myStream)\n\n      &#39; Read the document.\n      myDiscoveryReference.ReadDocument(myStream)\n\n      &#39; Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;\n      Console.WriteLine(&quot;Url is : &quot; &amp; myDiscoveryReference.Url)\n\n      &#39; Resolve the URL\n      myDiscoveryReference.Resolve()\n\n      myStreamReader.Close()\n      myStream.Close()\n   End Sub\n\nEnd Class\n\n\n&#39; Class derived from DiscoveryReference class and overriding its members.\nClass MyDiscoveryReferenceClass\n   Inherits DiscoveryReference\n   Private myDocumentUrl As String\n\n   Public Overrides ReadOnly Property DefaultFilename() As String\n      Get\n         Return &quot;dataservice.disco&quot;\n      End Get\n   End Property\n\n   Public Overrides Function _\n      ReadDocument(ByVal stream As System.IO.Stream) As Object\n      Return stream\n   End Function\n\n   Public Overloads Sub Resolve()\n      Try\n         Dim myDiscoveryRefDocument As DiscoveryDocument\n         myDiscoveryRefDocument = MyBase.ClientProtocol.Discover(Url)\n      Catch e As Exception\n         Throw e\n      End Try\n   End Sub\n\n   Protected Overloads Overrides Sub _\n      Resolve(ByVal contentType As String, ByVal stream As Stream)\n   End Sub\n\n   Public Overrides Property Url() As String\n      Get\n         Return myDocumentUrl\n      End Get\n\n      Set(ByVal Value As String)\n         myDocumentUrl = Value\n      End Set\n   End Property\n\n   Public Overrides Sub WriteDocument _\n      (ByVal document As Object, ByVal stream As System.IO.Stream)\n      Dim myDiscoveryDocument As DiscoveryDocument = _\n         CType(document, DiscoveryDocument)\n      myDiscoveryDocument.Write(stream)\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_FilenameFromUrl_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_FilenameFromUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilenameFromUrl(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a file name based on the passed URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string FilenameFromUrl (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL on which the name of the file is based.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Name of the file based on the passed URL.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_ReadDocument_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_ReadDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadDocument(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Reads the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and returns an instance of the class representing the type of referenced document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract object ReadDocument (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing the reference document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> with an underlying type matching the type of referenced document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value is always an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. However, the underlying type varies, depending on the type of document referenced. For instance, a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> passed into <a class=\"xref\" href=\"system.web.services.discovery.schemareference#System_Web_Services_Discovery_SchemaReference_ReadDocument_\" data-linktype=\"relative-path\">ReadDocument</a> returns an instance of <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryReference#1\">using System;\nusing System.IO;\nusing System.Web.Services.Discovery;\nusing System.Net;\n\nclass MyDiscoveryDocumentClass\n{\n   static void Main()\n   {\n      DiscoveryDocument myDiscoveryDocument;\n      StreamReader myStreamReader = \n         new StreamReader(&quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot;);\n      FileStream myStream = \n         new FileStream(&quot;C:\\\\MyDiscovery.disco&quot;,FileMode.OpenOrCreate);\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;);\n\n      // Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader);\n\n      // Variable of type DiscoveryReference class defined.\n      MyDiscoveryReferenceClass myDiscoveryReference;\n      myDiscoveryReference =  new MyDiscoveryReferenceClass();\n\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n         new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials = \n         CredentialCache.DefaultCredentials;\n\n      // Set client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Read the default file name.\n      Console.WriteLine(&quot;Default file name is: &quot; + myDiscoveryReference.DefaultFilename);\n\n      // Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument,myStream);\n\n      // Read the document.\n      myDiscoveryReference.ReadDocument(myStream);\n\n      // Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;;\n      Console.WriteLine(&quot;Url is: &quot; + myDiscoveryReference.Url);\n\n      // Resolve the URL.\n      myDiscoveryReference.Resolve();\n\n      myStreamReader.Close();\n      myStream.Close();\n   }\n}\n\n// Class derived from DiscoveryReference class and overriding its members.\nclass MyDiscoveryReferenceClass : DiscoveryReference\n{\n   private string myDocumentUrl;\n   public override string DefaultFilename\n   {\n      get\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   public override object ReadDocument(Stream stream)\n   {\n      return stream;\n   }\n\n   public new void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument myDiscoveryRefDocument;\n         myDiscoveryRefDocument = base.ClientProtocol.Discover(Url);\n      }\n      catch (Exception e)\n      {\n         throw(e);\n      }\n   }\n\n   protected override void Resolve(string contentType, Stream stream) {}\n\n   public override string Url\n   {\n      get\n      {\n         return myDocumentUrl;\n      }\n\n      set\n      {\n         myDocumentUrl = value;\n      }\n   }\n\n   public override void WriteDocument(object document, System.IO.Stream stream)\n   {\n      DiscoveryDocument myDiscoveryDocument = (DiscoveryDocument)document;\n      myDiscoveryDocument.Write(stream);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryReference#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Web::Services::Discovery;\nusing namespace System::Net;\n\n// Class derived from DiscoveryReference class and overriding its members.\nref class MyDiscoveryReferenceClass: public DiscoveryReference\n{\nprivate:\n   String^ myDocumentUrl;\n\npublic:\n   property String^ DefaultFilename \n   {\n      virtual String^ get() override\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   virtual Object^ ReadDocument( Stream^ stream ) override\n   {\n      return stream;\n   }\n\n   void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument^ myDiscoveryRefDocument;\n         myDiscoveryRefDocument = __super::ClientProtocol-&gt;Discover( Url );\n      }\n      catch ( Exception^ e ) \n      {\n         throw e;\n      }\n   }\n\nprotected:\n   virtual void Resolve( String^ contentType, Stream^ stream ) override {}\n\npublic:\n\n   property String^ Url \n   {\n      virtual String^ get() override\n      {\n         return myDocumentUrl;\n      }\n\n      virtual void set( String^ value ) override\n      {\n         myDocumentUrl = value;\n      }\n   }\n   virtual void WriteDocument( Object^ document, System::IO::Stream^ stream ) override\n   {\n      DiscoveryDocument^ myDiscoveryDocument = dynamic_cast&lt;DiscoveryDocument^&gt;(document);\n      myDiscoveryDocument-&gt;Write( stream );\n   }\n};\n\nint main()\n{\n   DiscoveryDocument^ myDiscoveryDocument;\n   StreamReader^ myStreamReader = gcnew StreamReader( &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot; );\n   FileStream^ myStream = gcnew FileStream( &quot;C:\\\\MyDiscovery.disco&quot;,FileMode::OpenOrCreate );\n   Console::WriteLine( &quot;Demonstrating Discovery Reference class.&quot; );\n   \n   // Read discovery file.\n   myDiscoveryDocument = DiscoveryDocument::Read( myStreamReader );\n   \n   // Variable of type DiscoveryReference class defined.\n   MyDiscoveryReferenceClass^ myDiscoveryReference;\n   myDiscoveryReference = gcnew MyDiscoveryReferenceClass;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Set client protocol.\n   myDiscoveryReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n   \n   // Read the default file name.\n   Console::WriteLine( &quot;Default file name is: {0}&quot;, myDiscoveryReference-&gt;DefaultFilename );\n   \n   // Write the document.\n   myDiscoveryReference-&gt;WriteDocument( myDiscoveryDocument, myStream );\n   \n   // Read the document.\n   myDiscoveryReference-&gt;ReadDocument( myStream );\n   \n   // Set the URL.\n   myDiscoveryReference-&gt;Url = &quot;http://localhost/dataservice.disco&quot;;\n   Console::WriteLine( &quot;Url is: {0}&quot;, myDiscoveryReference-&gt;Url );\n   \n   // Resolve the URL.\n   myDiscoveryReference-&gt;Resolve();\n   myStreamReader-&gt;Close();\n   myStream-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryReference#1\">Imports System\nImports System.IO\nImports System.Web.Services.Discovery\nImports System.Net\n\nClass MyDiscoveryDocumentClass\n  Public Shared Sub Main()\n\n      Dim myDiscoveryDocument As DiscoveryDocument\n      Dim myStreamReader As _\n         New StreamReader(&quot;c:\\Inetpub\\wwwroot\\dataservice.disco&quot;)\n      Dim myStream As _\n         New FileStream(&quot;C:\\MyDiscovery.disco&quot;, FileMode.OpenOrCreate)\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;)\n\n      &#39; Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader)\n\n      &#39; Variable of type DiscoveryReference class defined.\n      Dim myDiscoveryReference As MyDiscoveryReferenceClass\n      myDiscoveryReference = New MyDiscoveryReferenceClass()\n\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = _\n         CredentialCache.DefaultCredentials\n\n      &#39; Set the client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol\n\n      &#39; Read the default file name.\n      Console.WriteLine(&quot;Default file name is : &quot; &amp; _\n         myDiscoveryReference.DefaultFilename)\n\n      &#39; Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument, myStream)\n\n      &#39; Read the document.\n      myDiscoveryReference.ReadDocument(myStream)\n\n      &#39; Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;\n      Console.WriteLine(&quot;Url is : &quot; &amp; myDiscoveryReference.Url)\n\n      &#39; Resolve the URL\n      myDiscoveryReference.Resolve()\n\n      myStreamReader.Close()\n      myStream.Close()\n   End Sub\n\nEnd Class\n\n\n&#39; Class derived from DiscoveryReference class and overriding its members.\nClass MyDiscoveryReferenceClass\n   Inherits DiscoveryReference\n   Private myDocumentUrl As String\n\n   Public Overrides ReadOnly Property DefaultFilename() As String\n      Get\n         Return &quot;dataservice.disco&quot;\n      End Get\n   End Property\n\n   Public Overrides Function _\n      ReadDocument(ByVal stream As System.IO.Stream) As Object\n      Return stream\n   End Function\n\n   Public Overloads Sub Resolve()\n      Try\n         Dim myDiscoveryRefDocument As DiscoveryDocument\n         myDiscoveryRefDocument = MyBase.ClientProtocol.Discover(Url)\n      Catch e As Exception\n         Throw e\n      End Try\n   End Sub\n\n   Protected Overloads Overrides Sub _\n      Resolve(ByVal contentType As String, ByVal stream As Stream)\n   End Sub\n\n   Public Overrides Property Url() As String\n      Get\n         Return myDocumentUrl\n      End Get\n\n      Set(ByVal Value As String)\n         myDocumentUrl = Value\n      End Set\n   End Property\n\n   Public Overrides Sub WriteDocument _\n      (ByVal document As Object, ByVal stream As System.IO.Stream)\n      Dim myDiscoveryDocument As DiscoveryDocument = _\n         CType(document, DiscoveryDocument)\n      myDiscoveryDocument.Write(stream)\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_Resolve\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_Resolve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resolve()</div>        \r\n          </div>\r\n    \r\n            <p>Downloads the referenced document at <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryReference.Url*</span> to resolve whether the referenced document is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Resolve ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryReference.ClientProtocol*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Downloads the referenced document and then invokes the overloaded Resolve member that takes a MIME type and a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. If the MIME type and the contents of <code>stream</code> match those expected by the reference type, then the contents of <code>stream</code> are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> properties of <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_ClientProtocol_\" data-linktype=\"relative-path\">ClientProtocol</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DiscoveryReference#1\">using System;\nusing System.IO;\nusing System.Web.Services.Discovery;\nusing System.Net;\n\nclass MyDiscoveryDocumentClass\n{\n   static void Main()\n   {\n      DiscoveryDocument myDiscoveryDocument;\n      StreamReader myStreamReader = \n         new StreamReader(&quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot;);\n      FileStream myStream = \n         new FileStream(&quot;C:\\\\MyDiscovery.disco&quot;,FileMode.OpenOrCreate);\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;);\n\n      // Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader);\n\n      // Variable of type DiscoveryReference class defined.\n      MyDiscoveryReferenceClass myDiscoveryReference;\n      myDiscoveryReference =  new MyDiscoveryReferenceClass();\n\n      DiscoveryClientProtocol myDiscoveryClientProtocol = \n         new DiscoveryClientProtocol();\n      myDiscoveryClientProtocol.Credentials = \n         CredentialCache.DefaultCredentials;\n\n      // Set client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Read the default file name.\n      Console.WriteLine(&quot;Default file name is: &quot; + myDiscoveryReference.DefaultFilename);\n\n      // Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument,myStream);\n\n      // Read the document.\n      myDiscoveryReference.ReadDocument(myStream);\n\n      // Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;;\n      Console.WriteLine(&quot;Url is: &quot; + myDiscoveryReference.Url);\n\n      // Resolve the URL.\n      myDiscoveryReference.Resolve();\n\n      myStreamReader.Close();\n      myStream.Close();\n   }\n}\n\n// Class derived from DiscoveryReference class and overriding its members.\nclass MyDiscoveryReferenceClass : DiscoveryReference\n{\n   private string myDocumentUrl;\n   public override string DefaultFilename\n   {\n      get\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   public override object ReadDocument(Stream stream)\n   {\n      return stream;\n   }\n\n   public new void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument myDiscoveryRefDocument;\n         myDiscoveryRefDocument = base.ClientProtocol.Discover(Url);\n      }\n      catch (Exception e)\n      {\n         throw(e);\n      }\n   }\n\n   protected override void Resolve(string contentType, Stream stream) {}\n\n   public override string Url\n   {\n      get\n      {\n         return myDocumentUrl;\n      }\n\n      set\n      {\n         myDocumentUrl = value;\n      }\n   }\n\n   public override void WriteDocument(object document, System.IO.Stream stream)\n   {\n      DiscoveryDocument myDiscoveryDocument = (DiscoveryDocument)document;\n      myDiscoveryDocument.Write(stream);\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryReference#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Web.Services.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Web::Services::Discovery;\nusing namespace System::Net;\n\n// Class derived from DiscoveryReference class and overriding its members.\nref class MyDiscoveryReferenceClass: public DiscoveryReference\n{\nprivate:\n   String^ myDocumentUrl;\n\npublic:\n   property String^ DefaultFilename \n   {\n      virtual String^ get() override\n      {\n         return &quot;dataservice.disco&quot;;\n      }\n   }\n\n   virtual Object^ ReadDocument( Stream^ stream ) override\n   {\n      return stream;\n   }\n\n   void Resolve()\n   {\n      try\n      {\n         DiscoveryDocument^ myDiscoveryRefDocument;\n         myDiscoveryRefDocument = __super::ClientProtocol-&gt;Discover( Url );\n      }\n      catch ( Exception^ e ) \n      {\n         throw e;\n      }\n   }\n\nprotected:\n   virtual void Resolve( String^ contentType, Stream^ stream ) override {}\n\npublic:\n\n   property String^ Url \n   {\n      virtual String^ get() override\n      {\n         return myDocumentUrl;\n      }\n\n      virtual void set( String^ value ) override\n      {\n         myDocumentUrl = value;\n      }\n   }\n   virtual void WriteDocument( Object^ document, System::IO::Stream^ stream ) override\n   {\n      DiscoveryDocument^ myDiscoveryDocument = dynamic_cast&lt;DiscoveryDocument^&gt;(document);\n      myDiscoveryDocument-&gt;Write( stream );\n   }\n};\n\nint main()\n{\n   DiscoveryDocument^ myDiscoveryDocument;\n   StreamReader^ myStreamReader = gcnew StreamReader( &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.disco&quot; );\n   FileStream^ myStream = gcnew FileStream( &quot;C:\\\\MyDiscovery.disco&quot;,FileMode::OpenOrCreate );\n   Console::WriteLine( &quot;Demonstrating Discovery Reference class.&quot; );\n   \n   // Read discovery file.\n   myDiscoveryDocument = DiscoveryDocument::Read( myStreamReader );\n   \n   // Variable of type DiscoveryReference class defined.\n   MyDiscoveryReferenceClass^ myDiscoveryReference;\n   myDiscoveryReference = gcnew MyDiscoveryReferenceClass;\n   DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n   myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n   \n   // Set client protocol.\n   myDiscoveryReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n   \n   // Read the default file name.\n   Console::WriteLine( &quot;Default file name is: {0}&quot;, myDiscoveryReference-&gt;DefaultFilename );\n   \n   // Write the document.\n   myDiscoveryReference-&gt;WriteDocument( myDiscoveryDocument, myStream );\n   \n   // Read the document.\n   myDiscoveryReference-&gt;ReadDocument( myStream );\n   \n   // Set the URL.\n   myDiscoveryReference-&gt;Url = &quot;http://localhost/dataservice.disco&quot;;\n   Console::WriteLine( &quot;Url is: {0}&quot;, myDiscoveryReference-&gt;Url );\n   \n   // Resolve the URL.\n   myDiscoveryReference-&gt;Resolve();\n   myStreamReader-&gt;Close();\n   myStream-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryReference#1\">Imports System\nImports System.IO\nImports System.Web.Services.Discovery\nImports System.Net\n\nClass MyDiscoveryDocumentClass\n  Public Shared Sub Main()\n\n      Dim myDiscoveryDocument As DiscoveryDocument\n      Dim myStreamReader As _\n         New StreamReader(&quot;c:\\Inetpub\\wwwroot\\dataservice.disco&quot;)\n      Dim myStream As _\n         New FileStream(&quot;C:\\MyDiscovery.disco&quot;, FileMode.OpenOrCreate)\n      Console.WriteLine(&quot;Demonstrating Discovery Reference class.&quot;)\n\n      &#39; Read discovery file.\n      myDiscoveryDocument = DiscoveryDocument.Read(myStreamReader)\n\n      &#39; Variable of type DiscoveryReference class defined.\n      Dim myDiscoveryReference As MyDiscoveryReferenceClass\n      myDiscoveryReference = New MyDiscoveryReferenceClass()\n\n      Dim myDiscoveryClientProtocol As New DiscoveryClientProtocol()\n      myDiscoveryClientProtocol.Credentials = _\n         CredentialCache.DefaultCredentials\n\n      &#39; Set the client protocol.\n      myDiscoveryReference.ClientProtocol = myDiscoveryClientProtocol\n\n      &#39; Read the default file name.\n      Console.WriteLine(&quot;Default file name is : &quot; &amp; _\n         myDiscoveryReference.DefaultFilename)\n\n      &#39; Write the document.\n      myDiscoveryReference.WriteDocument(myDiscoveryDocument, myStream)\n\n      &#39; Read the document.\n      myDiscoveryReference.ReadDocument(myStream)\n\n      &#39; Set the URL.\n      myDiscoveryReference.Url = &quot;http://localhost/dataservice.disco&quot;\n      Console.WriteLine(&quot;Url is : &quot; &amp; myDiscoveryReference.Url)\n\n      &#39; Resolve the URL\n      myDiscoveryReference.Resolve()\n\n      myStreamReader.Close()\n      myStream.Close()\n   End Sub\n\nEnd Class\n\n\n&#39; Class derived from DiscoveryReference class and overriding its members.\nClass MyDiscoveryReferenceClass\n   Inherits DiscoveryReference\n   Private myDocumentUrl As String\n\n   Public Overrides ReadOnly Property DefaultFilename() As String\n      Get\n         Return &quot;dataservice.disco&quot;\n      End Get\n   End Property\n\n   Public Overrides Function _\n      ReadDocument(ByVal stream As System.IO.Stream) As Object\n      Return stream\n   End Function\n\n   Public Overloads Sub Resolve()\n      Try\n         Dim myDiscoveryRefDocument As DiscoveryDocument\n         myDiscoveryRefDocument = MyBase.ClientProtocol.Discover(Url)\n      Catch e As Exception\n         Throw e\n      End Try\n   End Sub\n\n   Protected Overloads Overrides Sub _\n      Resolve(ByVal contentType As String, ByVal stream As Stream)\n   End Sub\n\n   Public Overrides Property Url() As String\n      Get\n         Return myDocumentUrl\n      End Get\n\n      Set(ByVal Value As String)\n         myDocumentUrl = Value\n      End Set\n   End Property\n\n   Public Overrides Sub WriteDocument _\n      (ByVal document As Object, ByVal stream As System.IO.Stream)\n      Dim myDiscoveryDocument As DiscoveryDocument = _\n         CType(document, DiscoveryDocument)\n      myDiscoveryDocument.Write(stream)\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_Resolve_System_String_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_Resolve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resolve(String,Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Resolves whether the referenced document is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void Resolve (string contentType, System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The MIME type of <code>stream</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing the referenced document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the MIME type and the contents of <code>stream</code> match those expected by the reference type, then the contents of <code>stream</code> are added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_References_\" data-linktype=\"relative-path\">References</a> and <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> properties of <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_ClientProtocol_\" data-linktype=\"relative-path\">ClientProtocol</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryReference_WriteDocument_System_Object_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryReference_WriteDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteDocument(Object,Stream)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the document to a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteDocument (object document, System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>document</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The document to write into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> into which the <code>document</code> is written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>DiscoveryReference#1</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryReference.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryReference.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.ClientProtocol\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.DefaultFilename\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.ReadDocument\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.Resolve\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.Url\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryReference.WriteDocument\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4483a7ea-bc0c-2b09-f632-a40eb74687b3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The base class for discoverable references using XML Web services discovery.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Discovery/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Discovery.DiscoveryReference\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryReference.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryReference.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Discovery.DiscoveryReference","System.Web.Services.Discovery.DiscoveryReference..ctor","System.Web.Services.Discovery.DiscoveryReference.ClientProtocol","System.Web.Services.Discovery.DiscoveryReference.DefaultFilename","System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl","System.Web.Services.Discovery.DiscoveryReference.ReadDocument","System.Web.Services.Discovery.DiscoveryReference.Resolve","System.Web.Services.Discovery.DiscoveryReference.Url","System.Web.Services.Discovery.DiscoveryReference.WriteDocument"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Discovery.DiscoveryReference","System::Web::Services::Discovery::DiscoveryReference","System.Web.Services.Discovery.DiscoveryReference.#ctor","System::Web::Services::Discovery::DiscoveryReference::#ctor","System.Web.Services.Discovery.DiscoveryReference.ClientProtocol","System::Web::Services::Discovery::DiscoveryReference::ClientProtocol","System.Web.Services.Discovery.DiscoveryReference.DefaultFilename","System::Web::Services::Discovery::DiscoveryReference::DefaultFilename","System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl","System::Web::Services::Discovery::DiscoveryReference::FilenameFromUrl","System.Web.Services.Discovery.DiscoveryReference.ReadDocument","System::Web::Services::Discovery::DiscoveryReference::ReadDocument","System.Web.Services.Discovery.DiscoveryReference.Resolve","System::Web::Services::Discovery::DiscoveryReference::Resolve","System.Web.Services.Discovery.DiscoveryReference.Url","System::Web::Services::Discovery::DiscoveryReference::Url","System.Web.Services.Discovery.DiscoveryReference.WriteDocument","System::Web::Services::Discovery::DiscoveryReference::WriteDocument"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4483a7ea-bc0c-2b09-f632-a40eb74687b3","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Discovery/DiscoveryReference.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DiscoveryReference class | Microsoft Docs","_op_ogTitle":"DiscoveryReference class","description":"The base class for discoverable references using XML Web services discovery.\n","toc_asset_id":"_splitted/System.Web.Services.Discovery/toc.json","toc_rel":"_splitted/System.Web.Services.Discovery/toc.json","source_url":"","ms.assetid":"System.Web.Services.Discovery.DiscoveryReference","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoveryreference","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoveryreference","fileRelativePath":"System.Web.Services.Discovery.DiscoveryReference.html"},"themesRelativePathToOutputRoot":"_themes/"}