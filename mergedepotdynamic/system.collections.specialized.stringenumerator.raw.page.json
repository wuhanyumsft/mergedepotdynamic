{"content":"    \r\n    <h1 id=\"System_Collections_Specialized_StringEnumerator\">\r\n      <span class=\"lang-csharp\">StringEnumerator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Supports a simple iteration over a <a class=\"xref\" href=\"system.collections.specialized.stringcollection\" data-linktype=\"relative-path\">StringCollection</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class StringEnumerator</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">StringEnumerator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <code>foreach</code> statement of the C# language (<code>for each</code> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <code>foreach</code> is recommended, instead of directly manipulating the enumerator.  </p>\n<p> Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  </p>\n<p> Initially, the enumerator is positioned before the first element in the collection. <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> also brings the enumerator back to this position. At this position, calling <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> throws an exception. Therefore, you must call <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>.  </p>\n<p> <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the same object until either <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called. <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> sets <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the next element.  </p>\n<p> If <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> passes the end of the collection, the enumerator is positioned after the last element in the collection and <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>. When the enumerator is at this position, subsequent calls to <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> also return <code>false</code>. If the last call to <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, calling <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> throws an exception. To set <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> to the first element of the collection again, you can call <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> followed by <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a>.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. If the collection is modified between <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> and <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>, <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the element that it is set to, even if the enumerator is already invalidated.  </p>\n<p> The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_StringEnumerator_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current element in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_StringEnumerator_MoveNext\" data-linktype=\"self-bookmark\">MoveNext()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Advances the enumerator to the next element of the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Specialized_StringEnumerator_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_StringEnumerator_Current\">\r\n    \r\n            <a id=\"System_Collections_Specialized_StringEnumerator_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current element in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The current element in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The enumerator is positioned before the first element of the collection or after the last element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created or after a <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called, <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined.  </p>\n<p> Current also throws an exception if the last call to <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returned <code>false</code>, which indicates the end of the collection.  </p>\n<p> Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. If the collection is modified between <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the element that it is set to, even if the enumerator is already invalidated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several of the properties and methods of <a class=\"xref\" href=\"system.collections.specialized.stringenumerator\" data-linktype=\"relative-path\">StringEnumerator</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.StringEnumerator2#1\">using System;\nusing System.Collections.Specialized;\n\npublic class SamplesStringEnumerator  {\n\n   public static void Main()  {\n\n      // Creates and initializes a StringCollection.\n      StringCollection myCol = new StringCollection();\n      String[] myArr = new String[] { &quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot; };\n      myCol.AddRange( myArr );\n\n      // Enumerates the elements in the StringCollection.\n      StringEnumerator myEnumerator = myCol.GetEnumerator();\n      while ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;{0}&quot;, myEnumerator.Current );\n      Console.WriteLine();\n\n      // Resets the enumerator and displays the first element again.\n      myEnumerator.Reset();\n      if ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;The first element is {0}.&quot;, myEnumerator.Current );\n\n   }\n\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.StringEnumerator2#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections::Specialized;\nint main()\n{\n   \n   // Creates and initializes a StringCollection.\n   StringCollection^ myCol = gcnew StringCollection;\n   array&lt;String^&gt;^myArr = {&quot;red&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;indigo&quot;,&quot;violet&quot;};\n   myCol-&gt;AddRange( myArr );\n   \n   // Enumerates the elements in the StringCollection.\n   StringEnumerator^ myEnumerator = myCol-&gt;GetEnumerator();\n   while ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;{0}&quot;, myEnumerator-&gt;Current );\n\n   Console::WriteLine();\n   \n   // Resets the enumerator and displays the first element again.\n   myEnumerator-&gt;Reset();\n   if ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;The first element is {0}.&quot;, myEnumerator-&gt;Current );\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.StringEnumerator2#1\">Imports System\nImports System.Collections.Specialized\n\nPublic Class SamplesStringEnumerator\n\n   Public Shared Sub Main()\n\n      &#39; Creates and initializes a StringCollection.\n      Dim myCol As New StringCollection()\n      Dim myArr() As [String] = {&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot;}\n      myCol.AddRange(myArr)\n\n      &#39; Enumerates the elements in the StringCollection.\n      Dim myEnumerator As StringEnumerator = myCol.GetEnumerator()\n      While myEnumerator.MoveNext()\n         Console.WriteLine(&quot;{0}&quot;, myEnumerator.Current)\n      End While\n      Console.WriteLine()\n\n      &#39; Resets the enumerator and displays the first element again.\n      myEnumerator.Reset()\n      If myEnumerator.MoveNext() Then\n         Console.WriteLine(&quot;The first element is {0}.&quot;, myEnumerator.Current)\n      End If \n\n   End Sub &#39;Main\n\nEnd Class &#39;SamplesStringEnumerator \n\n\n&#39;This code produces the following output.\n&#39;\n&#39;red\n&#39;orange\n&#39;yellow\n&#39;green\n&#39;blue\n&#39;indigo\n&#39;violet\n&#39;\n&#39;The first element is red.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_StringEnumerator_MoveNext\">\r\n    \r\n            <a id=\"System_Collections_Specialized_StringEnumerator_MoveNext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MoveNext()</div>        \r\n          </div>\r\n    \r\n            <p>Advances the enumerator to the next element of the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MoveNext ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the enumerator was successfully advanced to the next element; <code>false</code> if the enumerator has passed the end of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created or after a <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection.  </p>\n<p> If MoveNext passes the end of the collection, the enumerator is positioned after the last element in the collection and MoveNext returns <code>false</code>. When the enumerator is at this position, subsequent calls to MoveNext also return <code>false</code> until <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> is called.  </p>\n<p> An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> or <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Reset_\" data-linktype=\"relative-path\">Reset</a> throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. If the collection is modified between <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> and <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>, <a class=\"xref\" href=\"system.collections.ienumerator#System_Collections_IEnumerator_Current_\" data-linktype=\"relative-path\">Current</a> returns the element that it is set to, even if the enumerator is already invalidated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several of the properties and methods of <a class=\"xref\" href=\"system.collections.specialized.stringenumerator\" data-linktype=\"relative-path\">StringEnumerator</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.StringEnumerator2#1\">using System;\nusing System.Collections.Specialized;\n\npublic class SamplesStringEnumerator  {\n\n   public static void Main()  {\n\n      // Creates and initializes a StringCollection.\n      StringCollection myCol = new StringCollection();\n      String[] myArr = new String[] { &quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot; };\n      myCol.AddRange( myArr );\n\n      // Enumerates the elements in the StringCollection.\n      StringEnumerator myEnumerator = myCol.GetEnumerator();\n      while ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;{0}&quot;, myEnumerator.Current );\n      Console.WriteLine();\n\n      // Resets the enumerator and displays the first element again.\n      myEnumerator.Reset();\n      if ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;The first element is {0}.&quot;, myEnumerator.Current );\n\n   }\n\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.StringEnumerator2#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections::Specialized;\nint main()\n{\n   \n   // Creates and initializes a StringCollection.\n   StringCollection^ myCol = gcnew StringCollection;\n   array&lt;String^&gt;^myArr = {&quot;red&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;indigo&quot;,&quot;violet&quot;};\n   myCol-&gt;AddRange( myArr );\n   \n   // Enumerates the elements in the StringCollection.\n   StringEnumerator^ myEnumerator = myCol-&gt;GetEnumerator();\n   while ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;{0}&quot;, myEnumerator-&gt;Current );\n\n   Console::WriteLine();\n   \n   // Resets the enumerator and displays the first element again.\n   myEnumerator-&gt;Reset();\n   if ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;The first element is {0}.&quot;, myEnumerator-&gt;Current );\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.StringEnumerator2#1\">Imports System\nImports System.Collections.Specialized\n\nPublic Class SamplesStringEnumerator\n\n   Public Shared Sub Main()\n\n      &#39; Creates and initializes a StringCollection.\n      Dim myCol As New StringCollection()\n      Dim myArr() As [String] = {&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot;}\n      myCol.AddRange(myArr)\n\n      &#39; Enumerates the elements in the StringCollection.\n      Dim myEnumerator As StringEnumerator = myCol.GetEnumerator()\n      While myEnumerator.MoveNext()\n         Console.WriteLine(&quot;{0}&quot;, myEnumerator.Current)\n      End While\n      Console.WriteLine()\n\n      &#39; Resets the enumerator and displays the first element again.\n      myEnumerator.Reset()\n      If myEnumerator.MoveNext() Then\n         Console.WriteLine(&quot;The first element is {0}.&quot;, myEnumerator.Current)\n      End If \n\n   End Sub &#39;Main\n\nEnd Class &#39;SamplesStringEnumerator \n\n\n&#39;This code produces the following output.\n&#39;\n&#39;red\n&#39;orange\n&#39;yellow\n&#39;green\n&#39;blue\n&#39;indigo\n&#39;violet\n&#39;\n&#39;The first element is red.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Specialized_StringEnumerator_Reset\">\r\n    \r\n            <a id=\"System_Collections_Specialized_StringEnumerator_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Reset moves the enumerator to the beginning of the collection, before the first element. After Reset, <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> must be called to advance the enumerator to the first element of the collection before reading the value of <a class=\"xref\" href=\"system.collections.specialized.stringenumerator#System_Collections_Specialized_StringEnumerator_Current_\" data-linktype=\"relative-path\">Current</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates several of the properties and methods of <a class=\"xref\" href=\"system.collections.specialized.stringenumerator\" data-linktype=\"relative-path\">StringEnumerator</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Specialized.StringEnumerator2#1\">using System;\nusing System.Collections.Specialized;\n\npublic class SamplesStringEnumerator  {\n\n   public static void Main()  {\n\n      // Creates and initializes a StringCollection.\n      StringCollection myCol = new StringCollection();\n      String[] myArr = new String[] { &quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot; };\n      myCol.AddRange( myArr );\n\n      // Enumerates the elements in the StringCollection.\n      StringEnumerator myEnumerator = myCol.GetEnumerator();\n      while ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;{0}&quot;, myEnumerator.Current );\n      Console.WriteLine();\n\n      // Resets the enumerator and displays the first element again.\n      myEnumerator.Reset();\n      if ( myEnumerator.MoveNext() )\n         Console.WriteLine( &quot;The first element is {0}.&quot;, myEnumerator.Current );\n\n   }\n\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Collections.Specialized.StringEnumerator2#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections::Specialized;\nint main()\n{\n   \n   // Creates and initializes a StringCollection.\n   StringCollection^ myCol = gcnew StringCollection;\n   array&lt;String^&gt;^myArr = {&quot;red&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;indigo&quot;,&quot;violet&quot;};\n   myCol-&gt;AddRange( myArr );\n   \n   // Enumerates the elements in the StringCollection.\n   StringEnumerator^ myEnumerator = myCol-&gt;GetEnumerator();\n   while ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;{0}&quot;, myEnumerator-&gt;Current );\n\n   Console::WriteLine();\n   \n   // Resets the enumerator and displays the first element again.\n   myEnumerator-&gt;Reset();\n   if ( myEnumerator-&gt;MoveNext() )\n      Console::WriteLine( &quot;The first element is {0}.&quot;, myEnumerator-&gt;Current );\n}\n\n/*\nThis code produces the following output.\n\nred\norange\nyellow\ngreen\nblue\nindigo\nviolet\n\nThe first element is red.\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Specialized.StringEnumerator2#1\">Imports System\nImports System.Collections.Specialized\n\nPublic Class SamplesStringEnumerator\n\n   Public Shared Sub Main()\n\n      &#39; Creates and initializes a StringCollection.\n      Dim myCol As New StringCollection()\n      Dim myArr() As [String] = {&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;indigo&quot;, &quot;violet&quot;}\n      myCol.AddRange(myArr)\n\n      &#39; Enumerates the elements in the StringCollection.\n      Dim myEnumerator As StringEnumerator = myCol.GetEnumerator()\n      While myEnumerator.MoveNext()\n         Console.WriteLine(&quot;{0}&quot;, myEnumerator.Current)\n      End While\n      Console.WriteLine()\n\n      &#39; Resets the enumerator and displays the first element again.\n      myEnumerator.Reset()\n      If myEnumerator.MoveNext() Then\n         Console.WriteLine(&quot;The first element is {0}.&quot;, myEnumerator.Current)\n      End If \n\n   End Sub &#39;Main\n\nEnd Class &#39;SamplesStringEnumerator \n\n\n&#39;This code produces the following output.\n&#39;\n&#39;red\n&#39;orange\n&#39;yellow\n&#39;green\n&#39;blue\n&#39;indigo\n&#39;violet\n&#39;\n&#39;The first element is red.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Specialized.StringEnumerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Specialized.StringEnumerator.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.StringEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.StringEnumerator.Current\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.StringEnumerator.MoveNext\">\r\n<meta name=\"APIName\" content=\"System.Collections.Specialized.StringEnumerator.Reset\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5d2f061b-68de-cb63-82d4-9177bb53ac71\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Supports a simple iteration over a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Specialized/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Specialized.StringEnumerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Specialized.StringEnumerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Specialized.StringEnumerator.yml","open_to_public_contributors":true,"api_name":["System.Collections.Specialized.StringEnumerator","System.Collections.Specialized.StringEnumerator.Current","System.Collections.Specialized.StringEnumerator.MoveNext","System.Collections.Specialized.StringEnumerator.Reset"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Specialized.StringEnumerator","System::Collections::Specialized::StringEnumerator","System.Collections.Specialized.StringEnumerator.Current","System::Collections::Specialized::StringEnumerator::Current","System.Collections.Specialized.StringEnumerator.MoveNext","System::Collections::Specialized::StringEnumerator::MoveNext","System.Collections.Specialized.StringEnumerator.Reset","System::Collections::Specialized::StringEnumerator::Reset"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5d2f061b-68de-cb63-82d4-9177bb53ac71","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Specialized/StringEnumerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"StringEnumerator class | Microsoft Docs","_op_ogTitle":"StringEnumerator class","description":"Supports a simple iteration over a .\n","toc_asset_id":"_splitted/System.Collections.Specialized/toc.json","toc_rel":"_splitted/System.Collections.Specialized/toc.json","source_url":"","ms.assetid":"System.Collections.Specialized.StringEnumerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.specialized.stringenumerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.specialized.stringenumerator","fileRelativePath":"System.Collections.Specialized.StringEnumerator.html"},"themesRelativePathToOutputRoot":"_themes/"}