{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_SoapServices\">\r\n      <span class=\"lang-csharp\">SoapServices</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides several methods for using and publishing remoted objects in SOAP format.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Security.SecurityCritical]\npublic class SoapServices</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SoapServices</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> for more information.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_XmlNsForClrType\" data-linktype=\"self-bookmark\">XmlNsForClrType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the XML namespace prefix for common language runtime types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithAssembly\" data-linktype=\"self-bookmark\">XmlNsForClrTypeWithAssembly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNs\" data-linktype=\"self-bookmark\">XmlNsForClrTypeWithNs</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNsAndAssembly\" data-linktype=\"self-bookmark\">XmlNsForClrTypeWithNsAndAssembly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_CodeXmlNamespaceForClrTypeNamespace_System_String_System_String_\" data-linktype=\"self-bookmark\">CodeXmlNamespaceForClrTypeNamespace(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the common language runtime type namespace name from the provided namespace and assembly names.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_DecodeXmlNamespaceForClrTypeNamespace_System_String_System_String__System_String__\" data-linktype=\"self-bookmark\">DecodeXmlNamespaceForClrTypeNamespace(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes the XML namespace and assembly names from the provided common language runtime namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlAttribute_System_Type_System_String_System_String_System_Type__System_String__\" data-linktype=\"self-bookmark\">GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves field type from XML attribute name, namespace, and the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the containing object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlElement_System_Type_System_String_System_String_System_Type__System_String__\" data-linktype=\"self-bookmark\">GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and name of a field from the provided XML element name, namespace, and the containing type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlElement_System_String_System_String_\" data-linktype=\"self-bookmark\">GetInteropTypeFromXmlElement(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that should be used during deserialization of an unrecognized object type with the given XML element name and namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlType_System_String_System_String_\" data-linktype=\"self-bookmark\">GetInteropTypeFromXmlType(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that should be used during deserialization of an unrecognized object type with the given XML type name and namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetSoapActionFromMethodBase_System_Reflection_MethodBase_\" data-linktype=\"self-bookmark\">GetSoapActionFromMethodBase(MethodBase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the SOAPAction value associated with the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetTypeAndMethodNameFromSoapAction_System_String_System_String__System_String__\" data-linktype=\"self-bookmark\">GetTypeAndMethodNameFromSoapAction(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the type and method name of the method associated with the specified SOAPAction value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetXmlElementForInteropType_System_Type_System_String__System_String__\" data-linktype=\"self-bookmark\">GetXmlElementForInteropType(Type,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns XML element information that should be used when serializing the given type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodCall_System_Reflection_MethodBase_\" data-linktype=\"self-bookmark\">GetXmlNamespaceForMethodCall(MethodBase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the XML namespace used during remote calls of the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodResponse_System_Reflection_MethodBase_\" data-linktype=\"self-bookmark\">GetXmlNamespaceForMethodResponse(MethodBase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the XML namespace used during the generation of responses to the remote call to the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_GetXmlTypeForInteropType_System_Type_System_String__System_String__\" data-linktype=\"self-bookmark\">GetXmlTypeForInteropType(Type,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns XML type information that should be used when serializing the given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_IsClrTypeNamespace_System_String_\" data-linktype=\"self-bookmark\">IsClrTypeNamespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a Boolean value that indicates whether the specified namespace is native to the common language runtime.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_IsSoapActionValidForMethodBase_System_String_System_Reflection_MethodBase_\" data-linktype=\"self-bookmark\">IsSoapActionValidForMethodBase(String,MethodBase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines if the specified SOAPAction is acceptable for a given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_PreLoad_System_Reflection_Assembly_\" data-linktype=\"self-bookmark\">PreLoad(Assembly)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Preloads every <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> found in the specified <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a> from the information found in the <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> associated with each type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_PreLoad_System_Type_\" data-linktype=\"self-bookmark\">PreLoad(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Preloads the given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> based on values set in a <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> on the type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_RegisterInteropXmlElement_System_String_System_String_System_Type_\" data-linktype=\"self-bookmark\">RegisterInteropXmlElement(String,String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates the given XML element name and namespace with a run-time type that should be used for deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_RegisterInteropXmlType_System_String_System_String_System_Type_\" data-linktype=\"self-bookmark\">RegisterInteropXmlType(String,String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates the given XML type name and namespace with the run-time type that should be used for deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_System_Reflection_MethodBase_\" data-linktype=\"self-bookmark\">RegisterSoapActionForMethodBase(MethodBase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates the specified <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> with the SOAPAction cached with it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_System_Reflection_MethodBase_System_String_\" data-linktype=\"self-bookmark\">RegisterSoapActionForMethodBase(MethodBase,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates the provided SOAPAction value with the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> for use in channel sinks.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrType\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNsForClrType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the XML namespace prefix for common language runtime types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string XmlNsForClrType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML namespace prefix for common language runtime types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. All XML namespaces for a common language runtime class start with the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that the current property returns.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#130\">        // Print the XML namespace for the CLR types.\n        Console.WriteLine(\n            &quot;The XML namespace for the CLR types &quot; + \n            &quot;is {0}.&quot;,\n            SoapServices.XmlNsForClrType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#130\">   // Print the XML namespace for the CLR types.\n   Console::WriteLine( L&quot;The XML namespace for the CLR types &quot;\n   L&quot;is {0}.&quot;, SoapServices::XmlNsForClrType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithAssembly\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNsForClrTypeWithAssembly</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string XmlNsForClrTypeWithAssembly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly but no namespace, the current property returns the default XML namespace that is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#131\">        // Print the XML namespace for the CLR types \n        // that have an assembly but no common language runtime namespace.\n        Console.WriteLine(\n            &quot;The XML namespace for the CLR types &quot; +\n            &quot;that have an assembly but no namespace, is {0}.&quot;,\n            SoapServices.XmlNsForClrTypeWithAssembly);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#131\">   // Print the XML namespace for the CLR types\n   // that have an assembly but no common language runtime namespace.\n   Console::WriteLine( L&quot;The XML namespace for the CLR types &quot;\n      L&quot;that have an assembly but no namespace, is {0}.&quot;,\n      SoapServices::XmlNsForClrTypeWithAssembly );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNs\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNsForClrTypeWithNs</div>        \r\n          </div>\r\n    \r\n            <p>Gets the XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string XmlNsForClrTypeWithNs { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class is part of the mscorlib assembly, the XML namespace returned by the current property is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#132\">        // Print the XML namespace for the CLR types \n        // that are a part of the Mscorlib.dll.\n        Console.WriteLine(\n            &quot;The XML namespace for the CLR types &quot; +\n            &quot;that are part of the Mscorlib.dll, is {0}.&quot;,\n            SoapServices.XmlNsForClrTypeWithNs);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#132\">   // Print the XML namespace for the CLR types\n   // that are a part of the Mscorlib.dll.\n   Console::WriteLine( L&quot;The XML namespace for the CLR types &quot;\n   L&quot;that are part of the Mscorlib.dll, is {0}.&quot;,\n      SoapServices::XmlNsForClrTypeWithNs );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNsAndAssembly\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_XmlNsForClrTypeWithNsAndAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNsForClrTypeWithNsAndAssembly</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string XmlNsForClrTypeWithNsAndAssembly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly and a common language runtime namespace, the current property returns the default XML namespace that is used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this property. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#133\">        // Print the XML namespace for the CLR types \n        // that have both an assembly and a common language runtime \n        // namespace.\n        Console.WriteLine(\n            &quot;The XML namespace for the CLR types &quot; +\n            &quot;that have both an assembly and a namespace, is {0}.&quot;,\n            SoapServices.XmlNsForClrTypeWithNsAndAssembly);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#133\">   // Print the XML namespace for the CLR types\n   // that have both an assembly and a common language runtime\n   // namespace.\n   Console::WriteLine( L&quot;The XML namespace for the CLR types &quot;\n   L&quot;that have both an assembly and a namespace, is {0}.&quot;,\n      SoapServices::XmlNsForClrTypeWithNsAndAssembly );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_CodeXmlNamespaceForClrTypeNamespace_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_CodeXmlNamespaceForClrTypeNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeXmlNamespaceForClrTypeNamespace(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the common language runtime type namespace name from the provided namespace and assembly names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace that is to be coded.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the assembly that is to be coded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The common language runtime type namespace name from the provided namespace and assembly names.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>assemblyName</code> and <code>typeNamespace</code> parameters are both either <code>null</code> or empty.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method is used by the .NET Framework and the SoapSuds tool to create an XML namespace name for a common language runtime object type.  </p>\n<p> For more information about SoapSuds, see <a href=\"http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5\" data-linktype=\"external\">Soapsuds Tool (Soapsuds.exe)</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#101\">        // Convert a CLR namespace and assembly name into an XML namespace.\n        string xmlNamespace = \n            SoapServices.CodeXmlNamespaceForClrTypeNamespace(\n            &quot;ExampleNamespace&quot;, &quot;AssemblyName&quot;);\n        Console.WriteLine(&quot;The name of the XML namespace is {0}.&quot;, \n            xmlNamespace);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#101\">   // Convert a CLR namespace and assembly name into an XML namespace.\n   String^ xmlNamespace = SoapServices::CodeXmlNamespaceForClrTypeNamespace(\n      L&quot;ExampleNamespace&quot;, L&quot;AssemblyName&quot; );\n   Console::WriteLine( L&quot;The name of the XML namespace is {0}.&quot;, xmlNamespace );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_DecodeXmlNamespaceForClrTypeNamespace_System_String_System_String__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_DecodeXmlNamespaceForClrTypeNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DecodeXmlNamespaceForClrTypeNamespace(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes the XML namespace and assembly names from the provided common language runtime namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The common language runtime namespace.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the decoded namespace name. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the decoded assembly name. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the namespace and assembly names were successfully decoded; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>inNamespace</code> parameter is <code>null</code> or empty.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <a class=\"xref\" href=\"system.runtime.remoting.metadata\" data-linktype=\"relative-path\">System.Runtime.Remoting.Metadata</a> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The current method supports the retrieval of such mappings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#102\">        // Extract a CLR namespace and assembly name from an XML namespace.\n        string typeNamespace;\n        string assemblyName;\n        SoapServices.DecodeXmlNamespaceForClrTypeNamespace(xmlNamespace,\n            out typeNamespace, out assemblyName);\n        Console.WriteLine(&quot;The name of the CLR namespace is {0}.&quot;, \n            typeNamespace);\n        Console.WriteLine(&quot;The name of the CLR assembly is {0}.&quot;, \n            assemblyName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#102\">   // Extract a CLR namespace and assembly name from an XML namespace.\n   String^ typeNamespace;\n   String^ assemblyName;\n   SoapServices::DecodeXmlNamespaceForClrTypeNamespace(\n      xmlNamespace,typeNamespace,assemblyName );\n   Console::WriteLine( L&quot;The name of the CLR namespace is {0}.&quot;, typeNamespace );\n   Console::WriteLine( L&quot;The name of the CLR assembly is {0}.&quot;, assemblyName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlAttribute_System_Type_System_String_System_String_System_Type__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves field type from XML attribute name, namespace, and the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the containing object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>containingType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object that contains the field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlAttribute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML attribute name of the field type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace of the field type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the field. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the name of the field. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Given the type of the containing object and the XML attribute and XML namespace that is read in by the .NET Framework, the current method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#150\">        // Get the name and the type of the field using its XML \n        // element name and its XML namespace. For this query to work,\n        // the containing type must be preloaded, and the XML element \n        // name and the XML namespace must be explicitly declared on \n        // the field using a SoapFieldAttribute.\n\n        // Preload the containing type.\n        SoapServices.PreLoad(typeof(ExampleNamespace.ExampleClass));\n\n        // Get the name and the type of a field that will be \n        // serialized as an XML element.\n        Type containingType = typeof(ExampleNamespace.ExampleClass);\n        string xmlElementNamespace = \n            &quot;http://example.org/ExampleFieldNamespace&quot;;\n        string xmlElementName = &quot;ExampleFieldElementName&quot;;\n        Type fieldType;\n        string fieldName;\n        SoapServices.GetInteropFieldTypeAndNameFromXmlElement(\n            containingType, xmlElementName, xmlElementNamespace, \n            out fieldType, out fieldName);\n        Console.WriteLine(\n            &quot;The type of the field is {0}.&quot;,\n            fieldType);\n        Console.WriteLine(\n            &quot;The name of the field is {0}.&quot;,\n            fieldName);\n\n        // Get the name and the type of a field that will be \n        // serialized as an XML attribute.\n        string xmlAttributeNamespace = \n            &quot;http://example.org/ExampleAttributeNamespace&quot;;\n        string xmlAttributeName = &quot;ExampleFieldAttributeName&quot;;\n        SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(\n            containingType, xmlAttributeName, xmlAttributeNamespace, \n            out fieldType, out fieldName);\n        Console.WriteLine(\n            &quot;The type of the field is {0}.&quot;,\n            fieldType);\n        Console.WriteLine(\n            &quot;The name of the field is {0}.&quot;,\n            fieldName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#150\">   // Get the name and the type of the field using its XML\n   // element name and its XML namespace. For this query to work,\n   // the containing type must be preloaded, and the XML element\n   // name and the XML namespace must be explicitly declared on\n   // the field using a SoapFieldAttribute.\n   // Preload the containing type.\n   SoapServices::PreLoad( ExampleNamespace::ExampleClass::typeid );\n   \n   // Get the name and the type of a field that will be\n   // serialized as an XML element.\n   Type^ containingType = ExampleNamespace::ExampleClass::typeid;\n   String^ xmlElementNamespace = L&quot;http://example.org/ExampleFieldNamespace&quot;;\n   String^ xmlElementName = L&quot;ExampleFieldElementName&quot;;\n   Type^ fieldType;\n   String^ fieldName;\n   SoapServices::GetInteropFieldTypeAndNameFromXmlElement(\n      containingType,xmlElementName,xmlElementNamespace,fieldType,fieldName );\n   Console::WriteLine( L&quot;The type of the field is {0}.&quot;, fieldType );\n   Console::WriteLine( L&quot;The name of the field is {0}.&quot;, fieldName );\n   \n   // Get the name and the type of a field that will be\n   // serialized as an XML attribute.\n   String^ xmlAttributeNamespace =\n      L&quot;http://example.org/ExampleAttributeNamespace&quot;;\n   String^ xmlAttributeName = L&quot;ExampleFieldAttributeName&quot;;\n   SoapServices::GetInteropFieldTypeAndNameFromXmlAttribute(\n      containingType,xmlAttributeName,xmlAttributeNamespace,fieldType,fieldName );\n   Console::WriteLine( L&quot;The type of the field is {0}.&quot;, fieldType );\n   Console::WriteLine( L&quot;The name of the field is {0}.&quot;, fieldName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlElement_System_Type_System_String_System_String_System_Type__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetInteropFieldTypeAndNameFromXmlElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and name of a field from the provided XML element name, namespace, and the containing type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>containingType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object that contains the field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML element name of field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace of the field type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the field. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the name of the field. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Given the type of the containing object and the XML element and XML namespace that is read in by the .NET Framework, this method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#150\">        // Get the name and the type of the field using its XML \n        // element name and its XML namespace. For this query to work,\n        // the containing type must be preloaded, and the XML element \n        // name and the XML namespace must be explicitly declared on \n        // the field using a SoapFieldAttribute.\n\n        // Preload the containing type.\n        SoapServices.PreLoad(typeof(ExampleNamespace.ExampleClass));\n\n        // Get the name and the type of a field that will be \n        // serialized as an XML element.\n        Type containingType = typeof(ExampleNamespace.ExampleClass);\n        string xmlElementNamespace = \n            &quot;http://example.org/ExampleFieldNamespace&quot;;\n        string xmlElementName = &quot;ExampleFieldElementName&quot;;\n        Type fieldType;\n        string fieldName;\n        SoapServices.GetInteropFieldTypeAndNameFromXmlElement(\n            containingType, xmlElementName, xmlElementNamespace, \n            out fieldType, out fieldName);\n        Console.WriteLine(\n            &quot;The type of the field is {0}.&quot;,\n            fieldType);\n        Console.WriteLine(\n            &quot;The name of the field is {0}.&quot;,\n            fieldName);\n\n        // Get the name and the type of a field that will be \n        // serialized as an XML attribute.\n        string xmlAttributeNamespace = \n            &quot;http://example.org/ExampleAttributeNamespace&quot;;\n        string xmlAttributeName = &quot;ExampleFieldAttributeName&quot;;\n        SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(\n            containingType, xmlAttributeName, xmlAttributeNamespace, \n            out fieldType, out fieldName);\n        Console.WriteLine(\n            &quot;The type of the field is {0}.&quot;,\n            fieldType);\n        Console.WriteLine(\n            &quot;The name of the field is {0}.&quot;,\n            fieldName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#150\">   // Get the name and the type of the field using its XML\n   // element name and its XML namespace. For this query to work,\n   // the containing type must be preloaded, and the XML element\n   // name and the XML namespace must be explicitly declared on\n   // the field using a SoapFieldAttribute.\n   // Preload the containing type.\n   SoapServices::PreLoad( ExampleNamespace::ExampleClass::typeid );\n   \n   // Get the name and the type of a field that will be\n   // serialized as an XML element.\n   Type^ containingType = ExampleNamespace::ExampleClass::typeid;\n   String^ xmlElementNamespace = L&quot;http://example.org/ExampleFieldNamespace&quot;;\n   String^ xmlElementName = L&quot;ExampleFieldElementName&quot;;\n   Type^ fieldType;\n   String^ fieldName;\n   SoapServices::GetInteropFieldTypeAndNameFromXmlElement(\n      containingType,xmlElementName,xmlElementNamespace,fieldType,fieldName );\n   Console::WriteLine( L&quot;The type of the field is {0}.&quot;, fieldType );\n   Console::WriteLine( L&quot;The name of the field is {0}.&quot;, fieldName );\n   \n   // Get the name and the type of a field that will be\n   // serialized as an XML attribute.\n   String^ xmlAttributeNamespace =\n      L&quot;http://example.org/ExampleAttributeNamespace&quot;;\n   String^ xmlAttributeName = L&quot;ExampleFieldAttributeName&quot;;\n   SoapServices::GetInteropFieldTypeAndNameFromXmlAttribute(\n      containingType,xmlAttributeName,xmlAttributeNamespace,fieldType,fieldName );\n   Console::WriteLine( L&quot;The type of the field is {0}.&quot;, fieldType );\n   Console::WriteLine( L&quot;The name of the field is {0}.&quot;, fieldName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlElement_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInteropTypeFromXmlElement(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that should be used during deserialization of an unrecognized object type with the given XML element name and namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML element name of the unknown object type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace of the unknown object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of object associated with the specified XML element name and namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method returns values set up through <a class=\"xref\" href=\"system.runtime.remoting.soapservices#System_Runtime_Remoting_SoapServices_RegisterInteropXmlElement_\" data-linktype=\"relative-path\">RegisterInteropXmlElement</a> and <a class=\"xref\" href=\"system.runtime.remoting.soapservices#System_Runtime_Remoting_SoapServices_PreLoad_\" data-linktype=\"relative-path\">PreLoad</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#160\">        string interopTypeXmlElementName = \n            &quot;ExampleClassElementName&quot;;\n        string interopTypeXmlNamespace = \n            &quot;http://example.org/ExampleXmlNamespace&quot;;\n        Type interopType = SoapServices.GetInteropTypeFromXmlElement(\n            interopTypeXmlElementName, \n            interopTypeXmlNamespace);\n        Console.WriteLine(&quot;The interop type is {0}.&quot;, interopType);\n\n        string interopTypeXmlTypeName = \n            &quot;ExampleXmlTypeName&quot;;\n        string interopTypeXmlTypeNamespace = \n            &quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n        interopType = SoapServices.GetInteropTypeFromXmlType(\n            interopTypeXmlTypeName, interopTypeXmlTypeNamespace);\n        Console.WriteLine(&quot;The interop type is {0}.&quot;, interopType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#160\">   String^ interopTypeXmlElementName = L&quot;ExampleClassElementName&quot;;\n   String^ interopTypeXmlNamespace = L&quot;http://example.org/ExampleXmlNamespace&quot;;\n   Type^ interopType = SoapServices::GetInteropTypeFromXmlElement(\n      interopTypeXmlElementName, interopTypeXmlNamespace );\n   Console::WriteLine( L&quot;The interop type is {0}.&quot;, interopType );\n   String^ interopTypeXmlTypeName = L&quot;ExampleXmlTypeName&quot;;\n   String^ interopTypeXmlTypeNamespace =\n      L&quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n   interopType = SoapServices::GetInteropTypeFromXmlType(\n      interopTypeXmlTypeName,interopTypeXmlTypeNamespace );\n   Console::WriteLine( L&quot;The interop type is {0}.&quot;, interopType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlType_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetInteropTypeFromXmlType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInteropTypeFromXmlType(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that should be used during deserialization of an unrecognized object type with the given XML type name and namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML type of the unknown object type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlTypeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML type namespace of the unknown object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of object associated with the specified XML type name and namespace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method returns values set up through <a class=\"xref\" href=\"system.runtime.remoting.soapservices#System_Runtime_Remoting_SoapServices_RegisterInteropXmlType_\" data-linktype=\"relative-path\">RegisterInteropXmlType</a> and <a class=\"xref\" href=\"system.runtime.remoting.soapservices#System_Runtime_Remoting_SoapServices_PreLoad_\" data-linktype=\"relative-path\">PreLoad</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#160\">        string interopTypeXmlElementName = \n            &quot;ExampleClassElementName&quot;;\n        string interopTypeXmlNamespace = \n            &quot;http://example.org/ExampleXmlNamespace&quot;;\n        Type interopType = SoapServices.GetInteropTypeFromXmlElement(\n            interopTypeXmlElementName, \n            interopTypeXmlNamespace);\n        Console.WriteLine(&quot;The interop type is {0}.&quot;, interopType);\n\n        string interopTypeXmlTypeName = \n            &quot;ExampleXmlTypeName&quot;;\n        string interopTypeXmlTypeNamespace = \n            &quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n        interopType = SoapServices.GetInteropTypeFromXmlType(\n            interopTypeXmlTypeName, interopTypeXmlTypeNamespace);\n        Console.WriteLine(&quot;The interop type is {0}.&quot;, interopType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#160\">   String^ interopTypeXmlElementName = L&quot;ExampleClassElementName&quot;;\n   String^ interopTypeXmlNamespace = L&quot;http://example.org/ExampleXmlNamespace&quot;;\n   Type^ interopType = SoapServices::GetInteropTypeFromXmlElement(\n      interopTypeXmlElementName, interopTypeXmlNamespace );\n   Console::WriteLine( L&quot;The interop type is {0}.&quot;, interopType );\n   String^ interopTypeXmlTypeName = L&quot;ExampleXmlTypeName&quot;;\n   String^ interopTypeXmlTypeNamespace =\n      L&quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n   interopType = SoapServices::GetInteropTypeFromXmlType(\n      interopTypeXmlTypeName,interopTypeXmlTypeNamespace );\n   Console::WriteLine( L&quot;The interop type is {0}.&quot;, interopType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetSoapActionFromMethodBase_System_Reflection_MethodBase_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetSoapActionFromMethodBase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSoapActionFromMethodBase(MethodBase)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the SOAPAction value associated with the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> that contains the method for which a SOAPAction is requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The SOAPAction value associated with the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> has not been registered with any SOAPAction value, the GetSoapActionFromMethodBase method returns the SOAPAction automatically cached with the <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#140\">        // Get the SOAP action for the method.\n        System.Reflection.MethodBase getHelloMethodBase = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n        string getHelloSoapAction =\n            SoapServices.GetSoapActionFromMethodBase(getHelloMethodBase);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction);\n        bool isSoapActionValid = SoapServices.IsSoapActionValidForMethodBase(\n            getHelloSoapAction,\n            getHelloMethodBase);\n        if (isSoapActionValid)\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n        else\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is not valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n\n        // Register the SOAP action for the GetHello method.\n        SoapServices.RegisterSoapActionForMethodBase(getHelloMethodBase);\n\n        // Get the type and the method names encoded into the SOAP action.\n        string encodedTypeName;\n        string encodedMethodName;\n        SoapServices.GetTypeAndMethodNameFromSoapAction(\n            getHelloSoapAction, \n            out encodedTypeName, \n            out encodedMethodName);\n        Console.WriteLine(\n            &quot;The type name encoded in this SOAP action is {0}.&quot;,\n            encodedTypeName);\n        Console.WriteLine(\n            &quot;The method name encoded in this SOAP action is {0}.&quot;,\n            encodedMethodName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#140\">   // Get the SOAP action for the method.\n   System::Reflection::MethodBase^ getHelloMethodBase =\n      ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   String^ getHelloSoapAction =\n      SoapServices::GetSoapActionFromMethodBase( getHelloMethodBase );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n   L&quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction );\n   bool isSoapActionValid =\n      SoapServices::IsSoapActionValidForMethodBase(\n         getHelloSoapAction, getHelloMethodBase );\n   if ( isSoapActionValid )\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is not valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   \n   // Register the SOAP action for the GetHello method.\n   SoapServices::RegisterSoapActionForMethodBase( getHelloMethodBase );\n   \n   // Get the type and the method names encoded into the SOAP action.\n   String^ encodedTypeName;\n   String^ encodedMethodName;\n   SoapServices::GetTypeAndMethodNameFromSoapAction(\n      getHelloSoapAction,encodedTypeName,encodedMethodName );\n   Console::WriteLine( L&quot;The type name encoded in this SOAP action is {0}.&quot;,\n      encodedTypeName );\n   Console::WriteLine( L&quot;The method name encoded in this SOAP action is {0}.&quot;,\n      encodedMethodName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetTypeAndMethodNameFromSoapAction_System_String_System_String__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetTypeAndMethodNameFromSoapAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeAndMethodNameFromSoapAction(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the type and method name of the method associated with the specified SOAPAction value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>soapAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SOAPAction of the method for which the type and method names were requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the type name of the method in question. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the method name of the method in question. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type and method name were successfully recovered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.remotingexception\" data-linktype=\"relative-path\">RemotingException</a></div>\r\n                  </div>\r\n                  <p>The SOAPAction value does not start and end with quotes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>true</code> if the type and method name lookups were successful; otherwise, <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#140\">        // Get the SOAP action for the method.\n        System.Reflection.MethodBase getHelloMethodBase = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n        string getHelloSoapAction =\n            SoapServices.GetSoapActionFromMethodBase(getHelloMethodBase);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction);\n        bool isSoapActionValid = SoapServices.IsSoapActionValidForMethodBase(\n            getHelloSoapAction,\n            getHelloMethodBase);\n        if (isSoapActionValid)\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n        else\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is not valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n\n        // Register the SOAP action for the GetHello method.\n        SoapServices.RegisterSoapActionForMethodBase(getHelloMethodBase);\n\n        // Get the type and the method names encoded into the SOAP action.\n        string encodedTypeName;\n        string encodedMethodName;\n        SoapServices.GetTypeAndMethodNameFromSoapAction(\n            getHelloSoapAction, \n            out encodedTypeName, \n            out encodedMethodName);\n        Console.WriteLine(\n            &quot;The type name encoded in this SOAP action is {0}.&quot;,\n            encodedTypeName);\n        Console.WriteLine(\n            &quot;The method name encoded in this SOAP action is {0}.&quot;,\n            encodedMethodName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#140\">   // Get the SOAP action for the method.\n   System::Reflection::MethodBase^ getHelloMethodBase =\n      ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   String^ getHelloSoapAction =\n      SoapServices::GetSoapActionFromMethodBase( getHelloMethodBase );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n   L&quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction );\n   bool isSoapActionValid =\n      SoapServices::IsSoapActionValidForMethodBase(\n         getHelloSoapAction, getHelloMethodBase );\n   if ( isSoapActionValid )\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is not valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   \n   // Register the SOAP action for the GetHello method.\n   SoapServices::RegisterSoapActionForMethodBase( getHelloMethodBase );\n   \n   // Get the type and the method names encoded into the SOAP action.\n   String^ encodedTypeName;\n   String^ encodedMethodName;\n   SoapServices::GetTypeAndMethodNameFromSoapAction(\n      getHelloSoapAction,encodedTypeName,encodedMethodName );\n   Console::WriteLine( L&quot;The type name encoded in this SOAP action is {0}.&quot;,\n      encodedTypeName );\n   Console::WriteLine( L&quot;The method name encoded in this SOAP action is {0}.&quot;,\n      encodedMethodName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetXmlElementForInteropType_System_Type_System_String__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetXmlElementForInteropType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlElementForInteropType(Type,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns XML element information that should be used when serializing the given type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> for which the XML element and namespace names were requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the XML element name of the specified object type. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that holds the XML namespace name of the specified object type. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the requested values have been set flagged with <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#103\">        // Get the XML element name and the XML namespace for \n        // an Interop type.\n        string xmlElement;\n        bool isSoapTypeAttribute =\n            SoapServices.GetXmlElementForInteropType(\n            typeof(ExampleNamespace.ExampleClass), \n            out xmlElement, out xmlNamespace);\n\n        // Print whether the requested value was flagged \n        // with a SoapTypeAttribute.\n        if (isSoapTypeAttribute)\n        {\n            Console.WriteLine(\n                &quot;The requested value was flagged &quot; +\n                &quot;with the SoapTypeAttribute.&quot;);\n        }\n        else \n        {\n            Console.WriteLine(\n                &quot;The requested value was not flagged &quot; +\n                &quot;with the SoapTypeAttribute.&quot;);\n        }\n\n        // Print the XML element and the XML namespace.\n        Console.WriteLine(\n            &quot;The XML element for the type &quot; +\n            &quot;ExampleNamespace.ExampleClass is {0}.&quot;,\n            xmlElement);\n        Console.WriteLine(\n            &quot;The XML namespace for the type &quot; +\n            &quot;ExampleNamespace.ExampleClass is {0}.&quot;,\n            xmlNamespace);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#103\">   // Get the XML element name and the XML namespace for\n   // an Interop type.\n   String^ xmlElement;\n   bool isSoapTypeAttribute = SoapServices::GetXmlElementForInteropType(\n      ExampleNamespace::ExampleClass::typeid,xmlElement,xmlNamespace );\n   \n   // Print whether the requested value was flagged\n   // with a SoapTypeAttribute.\n   if ( isSoapTypeAttribute )\n   {\n      Console::WriteLine( L&quot;The requested value was flagged &quot;\n      L&quot;with the SoapTypeAttribute.&quot; );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The requested value was not flagged &quot;\n      L&quot;with the SoapTypeAttribute.&quot; );\n   }\n   \n   // Print the XML element and the XML namespace.\n   Console::WriteLine( L&quot;The XML element for the type &quot;\n   L&quot;ExampleNamespace.ExampleClass is {0}.&quot;, xmlElement );\n   Console::WriteLine( L&quot;The XML namespace for the type &quot;\n   L&quot;ExampleNamespace.ExampleClass is {0}.&quot;, xmlNamespace );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodCall_System_Reflection_MethodBase_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodCall_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlNamespaceForMethodCall(MethodBase)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the XML namespace used during remote calls of the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> of the method for which the XML namespace was requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML namespace used during remote calls of the specified method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#105\">        // Print the XML namespace for a method invocation and its\n        // response.\n        System.Reflection.MethodBase getHelloMethod = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n        string methodCallXmlNamespace = \n            SoapServices.GetXmlNamespaceForMethodCall(getHelloMethod);\n        string methodResponseXmlNamespace =\n            SoapServices.GetXmlNamespaceForMethodResponse(getHelloMethod);\n        Console.WriteLine(\n            &quot;The XML namespace for the invocation of the method &quot; +\n            &quot;GetHello in ExampleClass is {0}.&quot;,\n            methodResponseXmlNamespace);\n        Console.WriteLine(\n            &quot;The XML namespace for the response of the method &quot; +\n            &quot;GetHello in ExampleClass is {0}.&quot;,\n            methodCallXmlNamespace);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#105\">   // Print the XML namespace for a method invocation and its\n   // response.\n   System::Reflection::MethodBase^ getHelloMethod =\n      ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   String^ methodCallXmlNamespace =\n      SoapServices::GetXmlNamespaceForMethodCall( getHelloMethod );\n   String^ methodResponseXmlNamespace =\n      SoapServices::GetXmlNamespaceForMethodResponse( getHelloMethod );\n   Console::WriteLine( L&quot;The XML namespace for the invocation of the method &quot;\n   L&quot;GetHello in ExampleClass is {0}.&quot;, methodResponseXmlNamespace );\n   Console::WriteLine( L&quot;The XML namespace for the response of the method &quot;\n   L&quot;GetHello in ExampleClass is {0}.&quot;, methodCallXmlNamespace );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodResponse_System_Reflection_MethodBase_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetXmlNamespaceForMethodResponse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlNamespaceForMethodResponse(MethodBase)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the XML namespace used during the generation of responses to the remote call to the method specified in the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> of the method for which the XML namespace was requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML namespace used during the generation of responses to a remote method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#105\">        // Print the XML namespace for a method invocation and its\n        // response.\n        System.Reflection.MethodBase getHelloMethod = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n        string methodCallXmlNamespace = \n            SoapServices.GetXmlNamespaceForMethodCall(getHelloMethod);\n        string methodResponseXmlNamespace =\n            SoapServices.GetXmlNamespaceForMethodResponse(getHelloMethod);\n        Console.WriteLine(\n            &quot;The XML namespace for the invocation of the method &quot; +\n            &quot;GetHello in ExampleClass is {0}.&quot;,\n            methodResponseXmlNamespace);\n        Console.WriteLine(\n            &quot;The XML namespace for the response of the method &quot; +\n            &quot;GetHello in ExampleClass is {0}.&quot;,\n            methodCallXmlNamespace);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#105\">   // Print the XML namespace for a method invocation and its\n   // response.\n   System::Reflection::MethodBase^ getHelloMethod =\n      ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   String^ methodCallXmlNamespace =\n      SoapServices::GetXmlNamespaceForMethodCall( getHelloMethod );\n   String^ methodResponseXmlNamespace =\n      SoapServices::GetXmlNamespaceForMethodResponse( getHelloMethod );\n   Console::WriteLine( L&quot;The XML namespace for the invocation of the method &quot;\n   L&quot;GetHello in ExampleClass is {0}.&quot;, methodResponseXmlNamespace );\n   Console::WriteLine( L&quot;The XML namespace for the response of the method &quot;\n   L&quot;GetHello in ExampleClass is {0}.&quot;, methodCallXmlNamespace );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_GetXmlTypeForInteropType_System_Type_System_String__System_String__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_GetXmlTypeForInteropType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlTypeForInteropType(Type,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns XML type information that should be used when serializing the given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> for which the XML element and namespace names were requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML type of the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlTypeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML type namespace of the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the requested values have been set flagged with <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#104\">        // Get the XML type name and the XML type namespace for \n        // an Interop type.\n        string xmlTypeName;\n        string xmlTypeNamespace;\n        isSoapTypeAttribute =\n            SoapServices.GetXmlTypeForInteropType(\n            typeof(ExampleNamespace.ExampleClass), \n            out xmlTypeName, out xmlTypeNamespace);\n\n        // Print whether the requested value was flagged \n        // with a SoapTypeAttribute.\n        if (isSoapTypeAttribute)\n        {\n            Console.WriteLine(\n                &quot;The requested value was flagged &quot; +\n                &quot;with the SoapTypeAttribute.&quot;);\n        }\n        else \n        {\n            Console.WriteLine(\n                &quot;The requested value was not flagged &quot; +\n                &quot;with the SoapTypeAttribute.&quot;);\n        }\n\n        // Print the XML type name and the XML type namespace.\n        Console.WriteLine(\n            &quot;The XML type for the type &quot; +\n            &quot;ExampleNamespace.ExampleClass is {0}.&quot;,\n            xmlTypeName);\n        Console.WriteLine(\n            &quot;The XML type namespace for the type &quot; +\n            &quot;ExampleNamespace.ExampleClass is {0}.&quot;,\n            xmlTypeNamespace);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#104\">   // Get the XML type name and the XML type namespace for\n   // an Interop type.\n   String^ xmlTypeName;\n   String^ xmlTypeNamespace;\n   isSoapTypeAttribute = SoapServices::GetXmlTypeForInteropType( ExampleNamespace::ExampleClass::typeid,xmlTypeName,xmlTypeNamespace );\n   \n   // Print whether the requested value was flagged\n   // with a SoapTypeAttribute.\n   if ( isSoapTypeAttribute )\n   {\n      Console::WriteLine( L&quot;The requested value was flagged &quot;\n      L&quot;with the SoapTypeAttribute.&quot; );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The requested value was not flagged &quot;\n      L&quot;with the SoapTypeAttribute.&quot; );\n   }\n   \n   // Print the XML type name and the XML type namespace.\n   Console::WriteLine( L&quot;The XML type for the type &quot;\n   L&quot;ExampleNamespace.ExampleClass is {0}.&quot;, xmlTypeName );\n   Console::WriteLine( L&quot;The XML type namespace for the type &quot;\n   L&quot;ExampleNamespace.ExampleClass is {0}.&quot;, xmlTypeNamespace );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_IsClrTypeNamespace_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_IsClrTypeNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClrTypeNamespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a Boolean value that indicates whether the specified namespace is native to the common language runtime.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsClrTypeNamespace (string namespaceString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace to check in the common language runtime.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the given namespace is native to the common language runtime; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method is used by the SoapSuds tool to determine whether an XML namespace represents a common language runtime type or a type from a non-common language runtime system.  </p>\n<p> For more information about SoapSuds, see <a href=\"http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5\" data-linktype=\"external\">Soapsuds Tool (Soapsuds.exe)</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#106\">        // Determine whether an XML namespace represents a CLR namespace.\n        string clrNamespace = SoapServices.XmlNsForClrType;\n        if (SoapServices.IsClrTypeNamespace(clrNamespace))\n        {\n            Console.WriteLine(\n                &quot;The namespace {0} is a CLR namespace.&quot;,\n                clrNamespace);\n        }\n        else \n        {\n            Console.WriteLine(\n                &quot;The namespace {0} is not a CLR namespace.&quot;,\n                clrNamespace);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#106\">   // Determine whether an XML namespace represents a CLR namespace.\n   String^ clrNamespace = SoapServices::XmlNsForClrType;\n   if ( SoapServices::IsClrTypeNamespace( clrNamespace ) )\n   {\n      Console::WriteLine( L&quot;The namespace {0} is a CLR namespace.&quot;,\n         clrNamespace );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The namespace {0} is not a CLR namespace.&quot;,\n         clrNamespace );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_IsSoapActionValidForMethodBase_System_String_System_Reflection_MethodBase_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_IsSoapActionValidForMethodBase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSoapActionValidForMethodBase(String,MethodBase)</div>        \r\n          </div>\r\n    \r\n            <p>Determines if the specified SOAPAction is acceptable for a given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>soapAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SOAPAction to check against the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> the specified SOAPAction is checked against.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified SOAPAction is acceptable for a given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#140\">        // Get the SOAP action for the method.\n        System.Reflection.MethodBase getHelloMethodBase = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n        string getHelloSoapAction =\n            SoapServices.GetSoapActionFromMethodBase(getHelloMethodBase);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction);\n        bool isSoapActionValid = SoapServices.IsSoapActionValidForMethodBase(\n            getHelloSoapAction,\n            getHelloMethodBase);\n        if (isSoapActionValid)\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n        else\n        {\n            Console.WriteLine(\n                &quot;The SOAP action, {0}, &quot; + \n                &quot;is not valid for ExampleClass.GetHello&quot;, \n                getHelloSoapAction);\n        }\n\n        // Register the SOAP action for the GetHello method.\n        SoapServices.RegisterSoapActionForMethodBase(getHelloMethodBase);\n\n        // Get the type and the method names encoded into the SOAP action.\n        string encodedTypeName;\n        string encodedMethodName;\n        SoapServices.GetTypeAndMethodNameFromSoapAction(\n            getHelloSoapAction, \n            out encodedTypeName, \n            out encodedMethodName);\n        Console.WriteLine(\n            &quot;The type name encoded in this SOAP action is {0}.&quot;,\n            encodedTypeName);\n        Console.WriteLine(\n            &quot;The method name encoded in this SOAP action is {0}.&quot;,\n            encodedMethodName);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#140\">   // Get the SOAP action for the method.\n   System::Reflection::MethodBase^ getHelloMethodBase =\n      ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   String^ getHelloSoapAction =\n      SoapServices::GetSoapActionFromMethodBase( getHelloMethodBase );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n   L&quot;ExampleClass.GetHello is {0}.&quot;, getHelloSoapAction );\n   bool isSoapActionValid =\n      SoapServices::IsSoapActionValidForMethodBase(\n         getHelloSoapAction, getHelloMethodBase );\n   if ( isSoapActionValid )\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   else\n   {\n      Console::WriteLine( L&quot;The SOAP action, {0}, &quot;\n      L&quot;is not valid for ExampleClass.GetHello&quot;, getHelloSoapAction );\n   }\n   \n   // Register the SOAP action for the GetHello method.\n   SoapServices::RegisterSoapActionForMethodBase( getHelloMethodBase );\n   \n   // Get the type and the method names encoded into the SOAP action.\n   String^ encodedTypeName;\n   String^ encodedMethodName;\n   SoapServices::GetTypeAndMethodNameFromSoapAction(\n      getHelloSoapAction,encodedTypeName,encodedMethodName );\n   Console::WriteLine( L&quot;The type name encoded in this SOAP action is {0}.&quot;,\n      encodedTypeName );\n   Console::WriteLine( L&quot;The method name encoded in this SOAP action is {0}.&quot;,\n      encodedMethodName );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_PreLoad_System_Reflection_Assembly_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_PreLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreLoad(Assembly)</div>        \r\n          </div>\r\n    \r\n            <p>Preloads every <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> found in the specified <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a> from the information found in the <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> associated with each type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PreLoad (System.Reflection.Assembly assembly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a> for each type of which to call <span class=\"xref\">stem.Runtime.Remoting.SoapServices.PreLoad*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <a class=\"xref\" href=\"system.runtime.remoting.metadata\" data-linktype=\"relative-path\">System.Runtime.Remoting.Metadata</a> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#120\">        // Register all types in the assembly with the SoapType attribute.\n        System.Reflection.Assembly executingAssembly =\n            System.Reflection.Assembly.GetExecutingAssembly();\n        SoapServices.PreLoad(executingAssembly);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#120\">   // Register all types in the assembly with the SoapType attribute.\n   System::Reflection::Assembly^ executingAssembly =\n      System::Reflection::Assembly::GetExecutingAssembly();\n   SoapServices::PreLoad( executingAssembly );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_PreLoad_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_PreLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreLoad(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Preloads the given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> based on values set in a <a class=\"xref\" href=\"system.runtime.remoting.metadata.soaptypeattribute\" data-linktype=\"relative-path\">SoapTypeAttribute</a> on the type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PreLoad (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to preload.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <a class=\"xref\" href=\"system.runtime.remoting.metadata\" data-linktype=\"relative-path\">System.Runtime.Remoting.Metadata</a> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#121\">        // Register a specific type with the SoapType attribute.\n        Type exampleType = typeof(ExampleNamespace.ExampleClass);\n        SoapServices.PreLoad(exampleType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#121\">   // Register a specific type with the SoapType attribute.\n   Type^ exampleType = ExampleNamespace::ExampleClass::typeid;\n   SoapServices::PreLoad( exampleType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_RegisterInteropXmlElement_System_String_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_RegisterInteropXmlElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterInteropXmlElement(String,String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Associates the given XML element name and namespace with a run-time type that should be used for deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML element name to use in deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace to use in deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The run-time <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to use in deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#180\">        // Get the currently registered type for the given XML element \n        // and namespace.\n        string registeredXmlElementName = \n            &quot;ExampleClassElementName&quot;;\n        string registeredXmlNamespace = \n            &quot;http://example.org/ExampleXmlNamespace&quot;;\n        Type registeredType = \n            SoapServices.GetInteropTypeFromXmlElement(\n            registeredXmlElementName, \n            registeredXmlNamespace);\n        Console.WriteLine(\n            &quot;The registered interop type is {0}.&quot;,\n            registeredType);\n\n        // Register a new type for the XML element and namespace.\n        SoapServices.RegisterInteropXmlElement(\n            registeredXmlElementName,\n            registeredXmlNamespace, \n            typeof(String));\n\n        // Get the currently registered type for the given XML element \n        // and namespace.\n        registeredType = \n            SoapServices.GetInteropTypeFromXmlElement(\n            registeredXmlElementName, \n            registeredXmlNamespace);\n        Console.WriteLine(\n            &quot;The registered interop type is {0}.&quot;,\n            registeredType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#180\">   // Get the currently registered type for the given XML element\n   // and namespace.\n   String^ registeredXmlElementName = L&quot;ExampleClassElementName&quot;;\n   String^ registeredXmlNamespace =\n      L&quot;http://example.org/ExampleXmlNamespace&quot;;\n   Type^ registeredType =\n      SoapServices::GetInteropTypeFromXmlElement(\n         registeredXmlElementName, registeredXmlNamespace );\n   Console::WriteLine( L&quot;The registered interop type is {0}.&quot;,\n      registeredType );\n   \n   // Register a new type for the XML element and namespace.\n   SoapServices::RegisterInteropXmlElement(\n      registeredXmlElementName,registeredXmlNamespace,String::typeid );\n   \n   // Get the currently registered type for the given XML element\n   // and namespace.\n   registeredType = SoapServices::GetInteropTypeFromXmlElement(\n      registeredXmlElementName,registeredXmlNamespace );\n   Console::WriteLine( L&quot;The registered interop type is {0}.&quot;,\n      registeredType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_RegisterInteropXmlType_System_String_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_RegisterInteropXmlType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterInteropXmlType(String,String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Associates the given XML type name and namespace with the run-time type that should be used for deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML type to use in deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlTypeNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespace to use in deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The run-time <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to use in deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#190\">        // Get the currently registered type for the given XML element \n        // and namespace.\n        string registeredXmlTypeName = \n            &quot;ExampleXmlTypeName&quot;;\n        string registeredXmlTypeNamespace = \n            &quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n        registeredType = \n            SoapServices.GetInteropTypeFromXmlType(\n            registeredXmlTypeName, \n            registeredXmlTypeNamespace);\n        Console.WriteLine(\n            &quot;The registered interop type is {0}.&quot;,\n            registeredType);\n\n        // Register a new type for the XML element and namespace.\n        SoapServices.RegisterInteropXmlType(\n            registeredXmlTypeName,\n            registeredXmlTypeNamespace, \n            typeof(String));\n\n        // Get the currently registered type for the given XML element \n        // and namespace.\n        registeredType = \n            SoapServices.GetInteropTypeFromXmlType(\n            registeredXmlTypeName, \n            registeredXmlTypeNamespace);\n        Console.WriteLine(\n            &quot;The registered interop type is {0}.&quot;,\n            registeredType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#190\">   // Get the currently registered type for the given XML element\n   // and namespace.\n   String^ registeredXmlTypeName = L&quot;ExampleXmlTypeName&quot;;\n   String^ registeredXmlTypeNamespace =\n      L&quot;http://example.org/ExampleXmlTypeNamespace&quot;;\n   registeredType = SoapServices::GetInteropTypeFromXmlType(\n      registeredXmlTypeName, registeredXmlTypeNamespace );\n   Console::WriteLine( L&quot;The registered interop type is {0}.&quot;,\n      registeredType );\n   \n   // Register a new type for the XML element and namespace.\n   SoapServices::RegisterInteropXmlType( registeredXmlTypeName,\n      registeredXmlTypeNamespace,String::typeid );\n   \n   // Get the currently registered type for the given XML element\n   // and namespace.\n   registeredType = SoapServices::GetInteropTypeFromXmlType(\n      registeredXmlTypeName,registeredXmlTypeNamespace );\n   Console::WriteLine( L&quot;The registered interop type is {0}.&quot;,\n      registeredType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_System_Reflection_MethodBase_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterSoapActionForMethodBase(MethodBase)</div>        \r\n          </div>\r\n    \r\n            <p>Associates the specified <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> with the SOAPAction cached with it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> of the method to associate with the SOAPAction cached with it.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SOAPAction of the specified method is contained in the <a class=\"xref\" href=\"system.runtime.remoting.metadata.soapmethodattribute#System_Runtime_Remoting_Metadata_SoapMethodAttribute_SoapAction_\" data-linktype=\"relative-path\">SoapAction</a> property, or is read off the wire. The current method associates the SOAPAction with the <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> for use in channel sinks.  </p>\n<p> The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#170\">        // Get the method base object for the GetHello method.\n        System.Reflection.MethodBase methodBase = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n\n        // Print its current SOAP action.\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n        \n        // Set the SOAP action of the GetHello method to a new value.\n        string newSoapAction = \n            &quot;http://example.org/ExampleSoapAction#NewSoapAction&quot;;\n        SoapServices.RegisterSoapActionForMethodBase(\n            methodBase, newSoapAction);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n\n        // Reset the SOAP action of the GetHello method to its default\n        // value, which is determined using its SoapMethod attribute.\n        SoapServices.RegisterSoapActionForMethodBase(methodBase);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#170\">   // Get the method base object for the GetHello method.\n   System::Reflection::MethodBase^ methodBase = \n     ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   \n   // Print its current SOAP action.\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n   \n   // Set the SOAP action of the GetHello method to a new value.\n   String^ newSoapAction = L&quot;http://example.org/ExampleSoapAction#NewSoapAction&quot;;\n   SoapServices::RegisterSoapActionForMethodBase( methodBase, newSoapAction );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n   \n   // Reset the SOAP action of the GetHello method to its default\n   // value, which is determined using its SoapMethod attribute.\n   SoapServices::RegisterSoapActionForMethodBase( methodBase );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_System_Reflection_MethodBase_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_SoapServices_RegisterSoapActionForMethodBase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterSoapActionForMethodBase(MethodBase,String)</div>        \r\n          </div>\r\n    \r\n            <p>Associates the provided SOAPAction value with the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> for use in channel sinks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a> to associate with the provided SOAPAction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>soapAction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SOAPAction value to associate with the given <a class=\"xref\" href=\"system.reflection.methodbase\" data-linktype=\"relative-path\">MethodBase</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.remoting.soapservices\" data-linktype=\"relative-path\">SoapServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.Remoting.SoapServices#170\">        // Get the method base object for the GetHello method.\n        System.Reflection.MethodBase methodBase = \n            typeof(ExampleNamespace.ExampleClass).GetMethod(&quot;GetHello&quot;);\n\n        // Print its current SOAP action.\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n        \n        // Set the SOAP action of the GetHello method to a new value.\n        string newSoapAction = \n            &quot;http://example.org/ExampleSoapAction#NewSoapAction&quot;;\n        SoapServices.RegisterSoapActionForMethodBase(\n            methodBase, newSoapAction);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n\n        // Reset the SOAP action of the GetHello method to its default\n        // value, which is determined using its SoapMethod attribute.\n        SoapServices.RegisterSoapActionForMethodBase(methodBase);\n        Console.WriteLine(\n            &quot;The SOAP action for the method &quot; +\n            &quot;ExampleClass.GetHello is {0}.&quot;,\n            SoapServices.GetSoapActionFromMethodBase(methodBase));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Runtime.Remoting.SoapServices#170\">   // Get the method base object for the GetHello method.\n   System::Reflection::MethodBase^ methodBase = \n     ExampleNamespace::ExampleClass::typeid-&gt;GetMethod( L&quot;GetHello&quot; );\n   \n   // Print its current SOAP action.\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n   \n   // Set the SOAP action of the GetHello method to a new value.\n   String^ newSoapAction = L&quot;http://example.org/ExampleSoapAction#NewSoapAction&quot;;\n   SoapServices::RegisterSoapActionForMethodBase( methodBase, newSoapAction );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n   \n   // Reset the SOAP action of the GetHello method to its default\n   // value, which is determined using its SoapMethod attribute.\n   SoapServices::RegisterSoapActionForMethodBase( methodBase );\n   Console::WriteLine( L&quot;The SOAP action for the method &quot;\n      L&quot;ExampleClass.GetHello is {0}.&quot;,\n      SoapServices::GetSoapActionFromMethodBase( methodBase ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.SoapServices.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.SoapServices.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.IsClrTypeNamespace\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.PreLoad\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.RegisterInteropXmlType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.XmlNsForClrType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"164dab50-3b19-2730-67c5-f0142d9d1901\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides several methods for using and publishing remoted objects in SOAP format.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.SoapServices\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.SoapServices.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.SoapServices.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.SoapServices","System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace","System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace","System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute","System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement","System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement","System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType","System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase","System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction","System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType","System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall","System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse","System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType","System.Runtime.Remoting.SoapServices.IsClrTypeNamespace","System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase","System.Runtime.Remoting.SoapServices.PreLoad","System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement","System.Runtime.Remoting.SoapServices.RegisterInteropXmlType","System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase","System.Runtime.Remoting.SoapServices.XmlNsForClrType","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.SoapServices","System::Runtime::Remoting::SoapServices","System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace","System::Runtime::Remoting::SoapServices::CodeXmlNamespaceForClrTypeNamespace","System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace","System::Runtime::Remoting::SoapServices::DecodeXmlNamespaceForClrTypeNamespace","System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute","System::Runtime::Remoting::SoapServices::GetInteropFieldTypeAndNameFromXmlAttribute","System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement","System::Runtime::Remoting::SoapServices::GetInteropFieldTypeAndNameFromXmlElement","System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement","System::Runtime::Remoting::SoapServices::GetInteropTypeFromXmlElement","System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType","System::Runtime::Remoting::SoapServices::GetInteropTypeFromXmlType","System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase","System::Runtime::Remoting::SoapServices::GetSoapActionFromMethodBase","System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction","System::Runtime::Remoting::SoapServices::GetTypeAndMethodNameFromSoapAction","System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType","System::Runtime::Remoting::SoapServices::GetXmlElementForInteropType","System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall","System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodCall","System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse","System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodResponse","System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType","System::Runtime::Remoting::SoapServices::GetXmlTypeForInteropType","System.Runtime.Remoting.SoapServices.IsClrTypeNamespace","System::Runtime::Remoting::SoapServices::IsClrTypeNamespace","System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase","System::Runtime::Remoting::SoapServices::IsSoapActionValidForMethodBase","System.Runtime.Remoting.SoapServices.PreLoad","System::Runtime::Remoting::SoapServices::PreLoad","System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement","System::Runtime::Remoting::SoapServices::RegisterInteropXmlElement","System.Runtime.Remoting.SoapServices.RegisterInteropXmlType","System::Runtime::Remoting::SoapServices::RegisterInteropXmlType","System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase","System::Runtime::Remoting::SoapServices::RegisterSoapActionForMethodBase","System.Runtime.Remoting.SoapServices.XmlNsForClrType","System::Runtime::Remoting::SoapServices::XmlNsForClrType","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly","System::Runtime::Remoting::SoapServices::XmlNsForClrTypeWithAssembly","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs","System::Runtime::Remoting::SoapServices::XmlNsForClrTypeWithNs","System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly","System::Runtime::Remoting::SoapServices::XmlNsForClrTypeWithNsAndAssembly"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"164dab50-3b19-2730-67c5-f0142d9d1901","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting/SoapServices.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoapServices class | Microsoft Docs","_op_ogTitle":"SoapServices class","description":"Provides several methods for using and publishing remoted objects in SOAP format.\n","toc_asset_id":"_splitted/System.Runtime.Remoting/toc.json","toc_rel":"_splitted/System.Runtime.Remoting/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.SoapServices","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.soapservices","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.soapservices","fileRelativePath":"System.Runtime.Remoting.SoapServices.html"},"themesRelativePathToOutputRoot":"_themes/"}