{"content":"    \r\n    <h1 id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1\">\r\n      <span class=\"lang-csharp\">ReverseBidirectionalIterator&lt;TValue&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Reverse bidirectional iterators can be used anywhere that a reverse input or reverse output iterator is required.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ReverseBidirectionalIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTValue\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of an element in the controlled sequence.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ReverseBidirectionalIterator&lt;TValue&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Some methods, especially operators, declare a type for a parameter but do not specify a parameter name. Such a parameter is known as an <em>unnamed parameter</em>. In the documentation for these methods, the <em>__unnamed0</em> placeholder represents the unnamed parameter.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor\" data-linktype=\"self-bookmark\">ReverseBidirectionalIterator&lt;TValue&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allocates and initializes a new <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator__0__\" data-linktype=\"self-bookmark\">ReverseBidirectionalIterator&lt;TValue&gt;(IBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allocates and initializes a new <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object from an existing <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">ReverseBidirectionalIterator&lt;TValue&gt;(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_base\" data-linktype=\"self-bookmark\">base()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the underlying base iterator for the <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a copy of the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_container\" data-linktype=\"self-bookmark\">container()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the container that the iterator is traversing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\" data-linktype=\"self-bookmark\">equal_to(IInputIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object is the same as the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">equal_to(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_next\" data-linktype=\"self-bookmark\">next()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_prev\" data-linktype=\"self-bookmark\">prev()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_valid\" data-linktype=\"self-bookmark\">valid()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Assign_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">op_Assign(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">op_Decrement(ReverseBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___System_Int32_\" data-linktype=\"self-bookmark\">op_Decrement(ReverseBidirectionalIterator&lt;TValue&gt;,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\" data-linktype=\"self-bookmark\">op_Equality(IInputIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object is the same as the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">op_Equality(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Implicit\" data-linktype=\"self-bookmark\">op_Implicit</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\" data-linktype=\"self-bookmark\">op_Increment(ReverseBidirectionalIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___System_Int32_\" data-linktype=\"self-bookmark\">op_Increment(ReverseBidirectionalIterator&lt;TValue&gt;,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\" data-linktype=\"self-bookmark\">op_Inequality(IInputIterator&lt;TValue&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object differs from the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">op_Inequality(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_MemberSelection_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">op_MemberSelection(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_PointerDereference_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\" data-linktype=\"self-bookmark\">op_PointerDereference(ReverseBidirectionalIterator)</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReverseBidirectionalIterator&lt;TValue&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Allocates and initializes a new <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ReverseBidirectionalIterator ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_Microsoft_VisualC_StlClr_Generic_IBidirectionalIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReverseBidirectionalIterator&lt;TValue&gt;(IBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Allocates and initializes a new <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object from an existing <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; _Iter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Iter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.ibidirectionaliterator-1\" data-linktype=\"relative-path\">IBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An existing <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IBidirectionalIterator`1</span> object to copy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReverseBidirectionalIterator&lt;TValue&gt;(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_base\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_base_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">base()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the underlying base iterator for the <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; base ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.ibidirectionaliterator-1\" data-linktype=\"relative-path\">IBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </div>\r\n                  <p>The underlying base iterator for the <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_Clone\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a copy of the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A copy of the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_container\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_container_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">container()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the container that the iterator is traversing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object container ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The container that the iterator is traversing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">equal_to(IInputIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object is the same as the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object to compare with the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two iterators are the same object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_equal_to_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">equal_to(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool equal_to (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_next\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_next_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">next()</div>        \r\n          </div>\r\n    \r\n            <p>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void next ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_prev\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_prev_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">prev()</div>        \r\n          </div>\r\n    \r\n            <p>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void prev ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_valid\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_valid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">valid()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool valid ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the iterator is valid and safe to use; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Assign_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Assign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Assign(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Decrement(ReverseBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Decrement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Decrement(ReverseBidirectionalIterator&lt;TValue&gt;,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; , int A_0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>A_0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An unused parameter that indicates this is the postfix version of the operator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(IInputIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object is the same as the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object to compare with the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two iterators are the same object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Implicit\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Implicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Implicit</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; op_Implicit ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.ibidirectionaliterator-1\" data-linktype=\"relative-path\">IBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Increment(ReverseBidirectionalIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator__0___System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Increment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Increment(ReverseBidirectionalIterator&lt;TValue&gt;,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; , int A_0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt></dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1\" data-linktype=\"relative-path\">ReverseBidirectionalIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>A_0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An unused parameter that indicates this is the postfix version of the operator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>An iterator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_Microsoft_VisualC_StlClr_Generic_IInputIterator__0__\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(IInputIterator&lt;TValue&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the given <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object differs from the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualc.stlclr.generic.iinputiterator-1\" data-linktype=\"relative-path\">IInputIterator<tvalue></tvalue></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.VisualC.StlClr.Generic.IInputIterator`1</span> object to compare with the current <span class=\"xref\">crosoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two iterators are different objects; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_MemberSelection_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_MemberSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_MemberSelection(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_PointerDereference_Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_\">\r\n    \r\n            <a id=\"Microsoft_VisualC_StlClr_Generic_ReverseBidirectionalIterator_1_op_PointerDereference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_PointerDereference(ReverseBidirectionalIterator)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Left);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>_Left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator-1.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.base\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.Clone\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.container\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.equal_to\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.next\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Assign\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Assign\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Decrement\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Decrement\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Equality\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Implicit\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Implicit\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Increment\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Increment\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_Inequality\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_MemberSelection\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_MemberSelection\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_PointerDereference\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.op_op_PointerDereference\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.prev\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;.valid\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualC.STLCLR.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4484cc6d-35ba-40e6-85e6-8ae0a44c4081\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualC.StlClr.Generic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator-1.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>..ctor","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.base","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.Clone","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.container","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.equal_to","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.next","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Assign","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Assign","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Decrement","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Decrement","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Equality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Equality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Implicit","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Implicit","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Increment","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Increment","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_Inequality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_Inequality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_MemberSelection","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_MemberSelection","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_PointerDereference","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.op_op_PointerDereference","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.prev","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>.valid"],"api_location":["Microsoft.VisualC.STLCLR.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::#ctor","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::base","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::Clone","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::container","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::equal_to","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::next","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Assign","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Decrement","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Equality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Implicit","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Increment","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_Inequality","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_MemberSelection","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::op_PointerDereference","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::prev","Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid","Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator`1::valid"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4484cc6d-35ba-40e6-85e6-8ae0a44c4081","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualC.StlClr.Generic/ReverseBidirectionalIterator`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ReverseBidirectionalIterator<TValue> class | Microsoft Docs","_op_ogTitle":"ReverseBidirectionalIterator<TValue> class","description":"Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by…","toc_asset_id":"_splitted/Microsoft.VisualC.StlClr.Generic/toc.json","toc_rel":"_splitted/Microsoft.VisualC.StlClr.Generic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualc.stlclr.generic.reversebidirectionaliterator-1","fileRelativePath":"Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator-1.html"},"themesRelativePathToOutputRoot":"_themes/"}