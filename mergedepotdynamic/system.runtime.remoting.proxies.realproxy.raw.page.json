{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Proxies_RealProxy\">\r\n      <span class=\"lang-csharp\">RealProxy</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides base functionality for proxies.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Security.SecurityCritical]\npublic abstract class RealProxy</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RealProxy</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The RealProxy class is the <code>abstract</code> base class from which proxies must derive.  </p>\n<p> A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy provides the illusion that the actual object resides in the client&#39;s space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  </p>\n<p> The transparent proxy is itself housed by an instance of a managed runtime class of type RealProxy. The RealProxy implements a part of the functionality that is needed to forward the operations from the transparent proxy. Note that a proxy object inherits the associated semantics of managed objects such as garbage collection, support for fields and methods, and can be extended to form new classes. The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and it is a managed object itself.  </p>\n<p> A proxy object can be used without regard to any remoting subdivisions within a <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This class makes a link demand and an inheritance demand at the class level. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> and <a href=\"http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9\" data-linktype=\"external\">Inheritance Demands</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy__ctor\" data-linktype=\"self-bookmark\">RealProxy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class with default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy__ctor_System_Type_\" data-linktype=\"self-bookmark\">RealProxy(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class that represents a remote object of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy__ctor_System_Type_System_IntPtr_System_Object_\" data-linktype=\"self-bookmark\">RealProxy(Type,IntPtr,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_AttachServer_System_MarshalByRefObject_\" data-linktype=\"self-bookmark\">AttachServer(MarshalByRefObject)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attaches the current proxy instance to the specified remote <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_CreateObjRef_System_Type_\" data-linktype=\"self-bookmark\">CreateObjRef(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> for the specified object type, and registers it with the remoting infrastructure as a client-activated object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_DetachServer\" data-linktype=\"self-bookmark\">DetachServer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Detaches the current proxy instance from the remote server object that it represents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetCOMIUnknown_System_Boolean_\" data-linktype=\"self-bookmark\">GetCOMIUnknown(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests an unmanaged reference to the object represented by the current proxy instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the transparent proxy of the object represented by the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> to the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetProxiedType\" data-linktype=\"self-bookmark\">GetProxiedType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object that the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> represents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetStubData_System_Runtime_Remoting_Proxies_RealProxy_\" data-linktype=\"self-bookmark\">GetStubData(RealProxy)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves stub data that is stored for the specified proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetTransparentProxy\" data-linktype=\"self-bookmark\">GetTransparentProxy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the transparent proxy for the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_GetUnwrappedServer\" data-linktype=\"self-bookmark\">GetUnwrappedServer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the server object that is represented by the current proxy instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_InitializeServerObject_System_Runtime_Remoting_Activation_IConstructionCallMessage_\" data-linktype=\"self-bookmark\">InitializeServerObject(IConstructionCallMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the remote object that the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> represents with the specified <a class=\"xref\" href=\"system.runtime.remoting.activation.iconstructioncallmessage\" data-linktype=\"relative-path\">IConstructionCallMessage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_Invoke_System_Runtime_Remoting_Messaging_IMessage_\" data-linktype=\"self-bookmark\">Invoke(IMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, invokes the method that is specified in the provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a> on the remote object that is represented by the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_SetCOMIUnknown_System_IntPtr_\" data-linktype=\"self-bookmark\">SetCOMIUnknown(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Stores an unmanaged proxy of the object that is represented by the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_SetStubData_System_Runtime_Remoting_Proxies_RealProxy_System_Object_\" data-linktype=\"self-bookmark\">SetStubData(RealProxy,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the stub data for the specified proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Proxies_RealProxy_SupportsInterface_System_Guid__\" data-linktype=\"self-bookmark\">SupportsInterface(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Requests a COM interface with the specified ID.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RealProxy()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class with default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected RealProxy ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#12\">using namespace System;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Activation;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Proxies;\nusing namespace System::Runtime::Remoting::Messaging;\nusing namespace System::Runtime::Remoting::Contexts;\nusing namespace System::Security::Permissions;\n\nref class CustomServer;\n\n[SecurityPermissionAttribute(SecurityAction::Demand, Flags=SecurityPermissionFlag::Infrastructure)]\npublic ref class MyProxy: public RealProxy\n{\nprivate:\n   String^ myUri;\n   MarshalByRefObject^ myMarshalByRefObject;\n\npublic:\n   MyProxy()\n      : RealProxy()\n   {\n      Console::WriteLine( &quot;MyProxy Constructor Called...&quot; );\n      myMarshalByRefObject = dynamic_cast&lt;MarshalByRefObject^&gt;(Activator::CreateInstance( CustomServer::typeid ));\n      ObjRef^ myObjRef = RemotingServices::Marshal( myMarshalByRefObject );\n      myUri = myObjRef-&gt;URI;\n   }\n\n        MyProxy( Type^ type1 )\n      : RealProxy( type1 )\n   {\n      Console::WriteLine( &quot;MyProxy Constructor Called...&quot; );\n      myMarshalByRefObject = dynamic_cast&lt;MarshalByRefObject^&gt;(Activator::CreateInstance( type1 ));\n      ObjRef^ myObjRef = RemotingServices::Marshal( myMarshalByRefObject );\n      myUri = myObjRef-&gt;URI;\n   }\n\n   MyProxy( Type^ type1, MarshalByRefObject^ targetObject )\n      : RealProxy( type1 )\n   {\n      Console::WriteLine( &quot;MyProxy Constructor Called...&quot; );\n      myMarshalByRefObject = targetObject;\n      ObjRef^ myObjRef = RemotingServices::Marshal( myMarshalByRefObject );\n      myUri = myObjRef-&gt;URI;\n   }\n\n   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      Console::WriteLine( &quot;MyProxy &#39;Invoke method&#39; Called...&quot; );\n      if ( dynamic_cast&lt;IMethodCallMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodCallMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IMethodReturnMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodReturnMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IConstructionCallMessage^&gt;(myMessage) )\n      {\n         // Initialize a new instance of remote object\n         IConstructionReturnMessage^ myIConstructionReturnMessage = this-&gt;InitializeServerObject( static_cast&lt;IConstructionCallMessage^&gt;(myMessage) );\n         ConstructionResponse^ constructionResponse = gcnew ConstructionResponse( nullptr,static_cast&lt;IMethodCallMessage^&gt;(myMessage) );\n         return constructionResponse;\n      }\n\n      IDictionary^ myIDictionary = myMessage-&gt;Properties;\n      IMessage^ returnMessage;\n      myIDictionary[ &quot;__Uri&quot; ] = myUri;\n\n      // Synchronously dispatch messages to server.\n      returnMessage = ChannelServices::SyncDispatchMessage( myMessage );\n\n      // Pushing return value and OUT parameters back onto stack.\n      IMethodReturnMessage^ myMethodReturnMessage = dynamic_cast&lt;IMethodReturnMessage^&gt;(returnMessage);\n      return returnMessage;\n   }\n\n   virtual ObjRef^ CreateObjRef( Type^ ServerType ) override\n   {\n      Console::WriteLine( &quot;CreateObjRef Method Called ...&quot; );\n      CustomObjRef ^ myObjRef = gcnew CustomObjRef( myMarshalByRefObject,ServerType );\n      myObjRef-&gt;URI = myUri;\n      return myObjRef;\n   }\n\n   [System::Security::Permissions::SecurityPermissionAttribute(\n   System::Security::Permissions::SecurityAction::LinkDemand,\n   Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context ) override\n   {\n      // Add your custom data if any here.\n      RealProxy::GetObjectData( info, context );\n   }\n\n   [System::Security::Permissions::SecurityPermissionAttribute(\n   System::Security::Permissions::SecurityAction::Demand,\n   Flags=System::Security::Permissions::SecurityPermissionFlag::SerializationFormatter)]\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::InheritanceDemand, \n   Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n   ref class CustomObjRef: public ObjRef\n   {\n   public:\n      CustomObjRef( MarshalByRefObject^ myMarshalByRefObject, Type^ serverType )\n         : ObjRef( myMarshalByRefObject, serverType )\n      {\n         Console::WriteLine( &quot;ObjRef &#39;Constructor&#39; called&quot; );\n      }\n\n      // Override this method to store custom data.\n      virtual void GetObjectData( SerializationInfo^ info, StreamingContext context ) override\n      {\n         ObjRef::GetObjectData( info, context );\n      }\n   };\n};\n\n[AttributeUsageAttribute(AttributeTargets::Class)]\n[System::Security::Permissions::SecurityPermissionAttribute\n(System::Security::Permissions::SecurityAction::LinkDemand,\nFlags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n[System::Security::Permissions::SecurityPermissionAttribute\n(System::Security::Permissions::SecurityAction::InheritanceDemand,\nFlags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\npublic ref class MyProxyAttribute: public ProxyAttribute\n{\npublic:\n   MyProxyAttribute(){}\n\n   // Create an instance of ServicedComponentProxy\n   virtual MarshalByRefObject^ CreateInstance( Type^ serverType ) override\n   {\n      return ProxyAttribute::CreateInstance( serverType );\n   }\n\n   virtual RealProxy^ CreateProxy( ObjRef^ objRef1, Type^ serverType, Object^ serverObject, Context^ serverContext ) override\n   {\n      MyProxy^ myCustomProxy = gcnew MyProxy( serverType );\n      if ( serverContext != nullptr )\n      {\n         RealProxy::SetStubData( myCustomProxy, serverContext );\n      }\n\n      if ( ( !serverType-&gt;IsMarshalByRef) &amp;&amp; (serverContext == nullptr) )\n      {\n         throw gcnew RemotingException( &quot;Bad Type for CreateProxy&quot; );\n      }\n\n      return myCustomProxy;\n   }\n};\n\n[MyProxyAttribute]\nref class CustomServer: public ContextBoundObject\n{\npublic:\n   CustomServer()\n   {\n      Console::WriteLine( &quot;CustomServer Base Class constructor called&quot; );\n   }\n\n   void HelloMethod( String^ str )\n   {\n      Console::WriteLine( &quot;HelloMethod of Server is invoked with message : {0}&quot;, str );\n   }\n};\n\n// Acts as a custom proxy user.\nint main()\n{\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;CustomProxy Sample&quot; );\n   Console::WriteLine( &quot;================&quot; );\n   Console::WriteLine( &quot;&quot; );\n   \n   // Create an instance of MyProxy.\n   MyProxy^ myProxyInstance = gcnew MyProxy( CustomServer::typeid );\n   \n   // Get a CustomServer proxy.\n   CustomServer^ myHelloServer = static_cast&lt;CustomServer^&gt;(myProxyInstance-&gt;GetTransparentProxy());\n\n   // Get stubdata.\n   Console::WriteLine( &quot;GetStubData = {0}&quot;, RealProxy::GetStubData( myProxyInstance ) );\n\n   // Get ProxyType.\n   Console::WriteLine( &quot;Type of object represented by RealProxy is : {0}&quot;, myProxyInstance-&gt;GetProxiedType() );\n\n   myHelloServer-&gt;HelloMethod( &quot;RealProxy Sample&quot; );\n   Console::WriteLine( &quot;&quot; );\n\n   // Get a reference object from server.\n   Console::WriteLine( &quot;Create an objRef object to be marshalled across Application Domains...&quot; );\n   ObjRef^ CustomObjRef = myProxyInstance-&gt;CreateObjRef( CustomServer::typeid );\n   Console::WriteLine( &quot;URI of &#39;ObjRef&#39; object = {0}&quot;, CustomObjRef-&gt;URI );\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#12\">using System;\nusing System.Collections;\nusing System.Runtime.Serialization;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Activation;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Proxies;\nusing System.Runtime.Remoting.Messaging;\nusing System.Runtime.Remoting.Contexts; \nusing System.Security.Permissions;\n\nnamespace Samples\n{\n   [AttributeUsage(AttributeTargets.Class)]\n   [SecurityPermissionAttribute(SecurityAction.Demand, Flags=SecurityPermissionFlag.Infrastructure)]\n   public class MyProxyAttribute : ProxyAttribute\n   {\n      public MyProxyAttribute()\n      {\n      }\n      // Create an instance of ServicedComponentProxy\n      public override MarshalByRefObject CreateInstance(Type serverType)\n      {  \n         return base.CreateInstance(serverType);\n      }\n      public override RealProxy CreateProxy(ObjRef objRef1,\n         Type serverType,\n         object serverObject,\n         Context serverContext)\n      {\n         MyProxy myCustomProxy = new MyProxy(serverType);\n         if(serverContext != null)\n         {\n            RealProxy.SetStubData(myCustomProxy,serverContext);\n         }\n         if((!serverType.IsMarshalByRef)&amp;&amp;(serverContext == null))\n         {\n            throw new RemotingException(&quot;Bad Type for CreateProxy&quot;);\n         }\n         return myCustomProxy;\n      }\n   }\n   [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n   [MyProxyAttribute]\n   public class CustomServer :ContextBoundObject\n   {\n      public CustomServer()\n      {\n         Console.WriteLine(&quot;CustomServer Base Class constructor called&quot;);\n      }\n      public void HelloMethod(string str)\n      {\n         Console.WriteLine(&quot;HelloMethod of Server is invoked with message : &quot; + str);\n      }\n   }\n   [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n   public class MyProxy : RealProxy\n   {\n      String myUri;\n      MarshalByRefObject myMarshalByRefObject;\n      public MyProxy(): base()\n      {\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;);\n         myMarshalByRefObject = (MarshalByRefObject)Activator.CreateInstance(typeof(CustomServer));\n         ObjRef myObjRef = RemotingServices.Marshal(myMarshalByRefObject);\n         myUri = myObjRef.URI;\n      }\n      public MyProxy(Type type1): base(type1)\n      {\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;);\n         myMarshalByRefObject = (MarshalByRefObject)Activator.CreateInstance(type1);\n         ObjRef myObjRef = RemotingServices.Marshal(myMarshalByRefObject);\n         myUri = myObjRef.URI;\n      }\n      public MyProxy(Type type1, MarshalByRefObject targetObject) : base(type1)\n      {\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;);\n         myMarshalByRefObject = targetObject;\n         ObjRef myObjRef = RemotingServices.Marshal(myMarshalByRefObject);\n         myUri = myObjRef.URI;\n      }\n      public override IMessage Invoke(IMessage myMessage)\n      {\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;);\n         if (myMessage is IMethodCallMessage)\n         {\n            Console.WriteLine(&quot;IMethodCallMessage&quot;);\n         }\n         if (myMessage is IMethodReturnMessage)\n         {\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;);\n         }\n         if (myMessage is IConstructionCallMessage)\n         {  \n            // Initialize a new instance of remote object\n            IConstructionReturnMessage myIConstructionReturnMessage = \n               this.InitializeServerObject((IConstructionCallMessage)myMessage);\n            ConstructionResponse constructionResponse = new \n               ConstructionResponse(null,(IMethodCallMessage) myMessage);\n            return constructionResponse;\n         }\n         IDictionary myIDictionary = myMessage.Properties;\n         IMessage returnMessage;\n         myIDictionary[&quot;__Uri&quot;] = myUri;\n\n         // Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage);\n         // Pushing return value and OUT parameters back onto stack.\n         IMethodReturnMessage myMethodReturnMessage = (IMethodReturnMessage)returnMessage;\n         return returnMessage;\n      }\n      public override ObjRef CreateObjRef(Type ServerType)\n      {  \n         Console.WriteLine (&quot;CreateObjRef Method Called ...&quot;); \n         CustomObjRef myObjRef = new CustomObjRef(myMarshalByRefObject,ServerType);\n         myObjRef.URI = myUri ;\n         return myObjRef;\n      }\n      [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n      public override void GetObjectData( SerializationInfo info, \n                                          StreamingContext context)\n      {\n         // Add your custom data if any here.\n         base.GetObjectData(info, context);\n      }\n      [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n      public class CustomObjRef :ObjRef\n      {\n         public CustomObjRef(MarshalByRefObject myMarshalByRefObject,Type serverType): \n                           base(myMarshalByRefObject,serverType)\n         {  \n            Console.WriteLine(&quot;ObjRef &#39;Constructor&#39; called&quot;);\n         }\n         // Override this method to store custom data.\n         [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter=true)]\n         public override void GetObjectData(SerializationInfo info,\n                                            StreamingContext context)\n         {\n            base.GetObjectData(info,context);\n         }\n      }\n   }      \n   public class ProxySample\n   {\n      // Acts as a custom proxy user.\n      [PermissionSet(SecurityAction.LinkDemand)]\n      public static void Main()\n      {  \n         Console.WriteLine(&quot;&quot;);\n         Console.WriteLine(&quot;CustomProxy Sample&quot;);\n         Console.WriteLine(&quot;================&quot;);\n         Console.WriteLine(&quot;&quot;);\n         // Create an instance of MyProxy.\n         MyProxy myProxyInstance = new MyProxy(typeof(CustomServer));\n         // Get a CustomServer proxy.\n         CustomServer myHelloServer = (CustomServer)myProxyInstance.GetTransparentProxy();\n         // Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString()); \n         // Get ProxyType.\n         Console.WriteLine(&quot;Type of object represented by RealProxy is :&quot; \n                           + myProxyInstance.GetProxiedType());\n         myHelloServer.HelloMethod(&quot;RealProxy Sample&quot;);\n         Console.WriteLine(&quot;&quot;);\n         // Get a reference object from server.\n         Console.WriteLine(&quot;Create an objRef object to be marshalled across Application Domains...&quot;);\n         ObjRef CustomObjRef = myProxyInstance.CreateObjRef(typeof(CustomServer));\n         Console.WriteLine(&quot;URI of &#39;ObjRef&#39; object =  &quot; + CustomObjRef.URI);\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#12\">Imports System\nImports System.Collections\nImports System.Runtime.Serialization\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Activation\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Proxies\nImports System.Runtime.Remoting.Messaging\nImports System.Runtime.Remoting.Contexts\nImports System.Security.Permissions\n\nNamespace Samples\n   &lt;SecurityPermissionAttribute(SecurityAction.Demand, Flags := SecurityPermissionFlag.Infrastructure), _\n   AttributeUsage(AttributeTargets.Class)&gt;  _\n   Public Class MyProxyAttribute\n      Inherits ProxyAttribute\n\n      Public Sub New()\n      End Sub &#39;New\n\n      &#39; Create an instance of ServicedComponentProxy\n      Public Overrides Function CreateInstance(serverType As Type) As MarshalByRefObject\n         Return MyBase.CreateInstance(serverType)\n      End Function &#39;CreateInstance\n\n      Public Overrides Function CreateProxy(objRef1 As ObjRef, serverType As Type, _\n                  serverObject As Object, serverContext As Context) As RealProxy\n         Dim myCustomProxy As New MyProxy(serverType)\n         If Not (serverContext Is Nothing) Then\n            RealProxy.SetStubData(myCustomProxy, serverContext)\n         End If\n         If Not serverType.IsMarshalByRef And serverContext Is Nothing Then\n            Throw New RemotingException(&quot;Bad Type for CreateProxy&quot;)\n         End If\n         Return myCustomProxy\n      End Function &#39;CreateProxy\n   End Class &#39;MyProxyAttribute\n\n   &lt;MyProxyAttribute()&gt; _\n   Public Class CustomServer\n      Inherits ContextBoundObject\n\n      Public Sub New()\n         Console.WriteLine(&quot;CustomServer Base Class constructor called&quot;)\n      End Sub &#39;New\n\n      Public Sub HelloMethod(str As String)\n         Console.WriteLine(&quot;HelloMethod of Server is invoked with message : &quot; + str)\n      End Sub &#39;HelloMethod\n   End Class &#39;CustomServer\n   &lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n   Public Class MyProxy\n      Inherits RealProxy\n      Private myUri As String\n      Private myMarshalByRefObject As MarshalByRefObject\n\n      Public Sub New()\n         MyBase.New()\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;)\n         myMarshalByRefObject = _\n               CType(Activator.CreateInstance(GetType(CustomServer)), MarshalByRefObject)\n         Dim myObjRef As ObjRef = RemotingServices.Marshal(myMarshalByRefObject)\n         myUri = myObjRef.URI\n      End Sub &#39;New\n\n      Public Sub New(type1 As Type)\n         MyBase.New(type1)\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;)\n         myMarshalByRefObject = CType(Activator.CreateInstance(type1), MarshalByRefObject)\n         Dim myObjRef As ObjRef = RemotingServices.Marshal(myMarshalByRefObject)\n         myUri = myObjRef.URI\n      End Sub &#39;New\n\n      Public Sub New(type1 As Type, targetObject As MarshalByRefObject)\n         MyBase.New(type1)\n         Console.WriteLine(&quot;MyProxy Constructor Called...&quot;)\n         myMarshalByRefObject = targetObject\n         Dim myObjRef As ObjRef = RemotingServices.Marshal(myMarshalByRefObject)\n         myUri = myObjRef.URI\n      End Sub &#39;New\n\n      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;)\n         If TypeOf myMessage Is IMethodCallMessage Then\n            Console.WriteLine(&quot;IMethodCallMessage&quot;)\n         End If\n         If TypeOf myMessage Is IMethodReturnMessage Then\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;)\n         End If\n         If TypeOf myMessage Is IConstructionCallMessage Then\n            &#39; Initialize a new instance of remote object\n            Dim myIConstructionReturnMessage As IConstructionReturnMessage = _\n                  Me.InitializeServerObject(CType(myMessage, IConstructionCallMessage))\n            Dim constructionResponse As _\n                  New ConstructionResponse(Nothing, CType(myMessage, IMethodCallMessage))\n            Return constructionResponse\n         End If\n         Dim myIDictionary As IDictionary = myMessage.Properties\n         Dim returnMessage As IMessage\n         myIDictionary(&quot;__Uri&quot;) = myUri\n         &#39; Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage)\n         &#39; Pushing return value and OUT parameters back onto stack.\n         Dim myMethodReturnMessage As IMethodReturnMessage = _\n               CType(returnMessage, IMethodReturnMessage)\n         Return returnMessage\n      End Function &#39;Invoke\n\n      Public Overrides Function CreateObjRef(ServerType As Type) As ObjRef\n         Console.WriteLine(&quot;CreateObjRef Method Called ...&quot;)\n         Dim myObjRef As New CustomObjRef(myMarshalByRefObject, ServerType)\n         myObjRef.URI = myUri\n         Return myObjRef\n      End Function &#39;CreateObjRef\n\n      Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)\n         &#39; Add your custom data if any here.\n         MyBase.GetObjectData(info, context)\n      End Sub &#39;GetObjectData\n      &lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n      Public Class CustomObjRef\n         Inherits ObjRef\n         Public Sub New(myMarshalByRefObject As MarshalByRefObject, serverType As Type)\n            MyBase.New(myMarshalByRefObject, serverType)\n            Console.WriteLine(&quot;ObjRef &#39;Constructor&#39; called&quot;)\n         End Sub &#39;New\n\n         &#39; Override this method to store custom data.\n         &lt;SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter:=true)&gt; _\n         Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)\n            MyBase.GetObjectData(info, context)\n         End Sub &#39;GetObjectData\n      End Class &#39;CustomObjRef\n   End Class &#39;MyProxy\n   \n   &lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\n   Public Class ProxySample\n      &#39; Acts as a custom proxy user.\n      Public Shared Sub Main()\n         Console.WriteLine(&quot;&quot;)\n         Console.WriteLine(&quot;CustomProxy Sample&quot;)\n         Console.WriteLine(&quot;================&quot;)\n         Console.WriteLine(&quot;&quot;)\n         &#39; Create an instance of MyProxy.\n         Dim myProxyInstance As New MyProxy(GetType(CustomServer))\n         &#39; Get a CustomServer proxy.\n         Dim myHelloServer As CustomServer = _\n                     CType(myProxyInstance.GetTransparentProxy(), CustomServer)\n         &#39; Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString())\n         &#39; Get ProxyType.\n         Console.WriteLine(&quot;Type of object represented by RealProxy is :&quot; + _\n                                                myProxyInstance.GetProxiedType().ToString())\n         myHelloServer.HelloMethod(&quot;RealProxy Sample&quot;)\n         Console.WriteLine(&quot;&quot;)\n         &#39; Get a reference object from server.\n         Console.WriteLine(&quot;Create an objRef object to be marshalled across Application Domains...&quot;)\n         Dim CustomObjRef As ObjRef = myProxyInstance.CreateObjRef(GetType(CustomServer))\n         Console.WriteLine(&quot;URI of &#39;ObjRef&#39; object =  &quot; + CustomObjRef.URI)\n      End Sub &#39;Main\n   End Class &#39;ProxySample\nEnd Namespace &#39;Samples.AspNet.VB\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RealProxy(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class that represents a remote object of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected RealProxy (Type classToProxy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>classToProxy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the remote object for which to create a proxy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>classToProxy</code> is not an interface, and is not derived from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method creates a transparent proxy, which can be accessed through the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy#System_Runtime_Remoting_Proxies_RealProxy_GetTransparentProxy_\" data-linktype=\"relative-path\">GetTransparentProxy</a> method.  </p>\n<p> A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client&#39;s space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  </p>\n<p> The transparent proxy is housed by an instance of a managed runtime class <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>. The <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> implements a part of the functionality that is needed to forward the operations from the transparent proxy. Note that a proxy object inherits the associated semantics of managed objects such as garbage collection and support for fields and methods, and can be extended to form new classes. The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and is a managed object itself.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#10\">   // Create an instance of MyProxy.\n   MyProxy^ myProxyInstance = gcnew MyProxy( CustomServer::typeid );\n   \n   // Get a CustomServer proxy.\n   CustomServer^ myHelloServer = static_cast&lt;CustomServer^&gt;(myProxyInstance-&gt;GetTransparentProxy());\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#10\">         // Create an instance of MyProxy.\n         MyProxy myProxyInstance = new MyProxy(typeof(CustomServer));\n         // Get a CustomServer proxy.\n         CustomServer myHelloServer = (CustomServer)myProxyInstance.GetTransparentProxy();\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#10\">         &#39; Create an instance of MyProxy.\n         Dim myProxyInstance As New MyProxy(GetType(CustomServer))\n         &#39; Get a CustomServer proxy.\n         Dim myHelloServer As CustomServer = _\n                     CType(myProxyInstance.GetTransparentProxy(), CustomServer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor_System_Type_System_IntPtr_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RealProxy(Type,IntPtr,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected RealProxy (Type classToProxy, IntPtr stub, object stubData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>classToProxy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the remote object for which to create a proxy.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stub</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A stub to associate with the new proxy instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stubData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stub data to set for the specified stub and the new proxy instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>classToProxy</code> is not an interface, and is not derived from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server&#39;s context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_AttachServer_System_MarshalByRefObject_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_AttachServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttachServer(MarshalByRefObject)</div>        \r\n          </div>\r\n    \r\n            <p>Attaches the current proxy instance to the specified remote <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AttachServer (MarshalByRefObject s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a> that the current proxy instance represents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_CreateObjRef_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_CreateObjRef_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateObjRef(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> for the specified object type, and registers it with the remoting infrastructure as a client-activated object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestedType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object type that an <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> is created for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a></div>\r\n                  </div>\r\n                  <p>A new instance of <a class=\"xref\" href=\"system.runtime.remoting.objref\" data-linktype=\"relative-path\">ObjRef</a> that is created for the specified type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#6\">   virtual ObjRef^ CreateObjRef( Type^ ServerType ) override\n   {\n      Console::WriteLine( &quot;CreateObjRef Method Called ...&quot; );\n      CustomObjRef ^ myObjRef = gcnew CustomObjRef( myMarshalByRefObject,ServerType );\n      myObjRef-&gt;URI = myUri;\n      return myObjRef;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#6\">      public override ObjRef CreateObjRef(Type ServerType)\n      {  \n         Console.WriteLine (&quot;CreateObjRef Method Called ...&quot;); \n         CustomObjRef myObjRef = new CustomObjRef(myMarshalByRefObject,ServerType);\n         myObjRef.URI = myUri ;\n         return myObjRef;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#6\">      Public Overrides Function CreateObjRef(ServerType As Type) As ObjRef\n         Console.WriteLine(&quot;CreateObjRef Method Called ...&quot;)\n         Dim myObjRef As New CustomObjRef(myMarshalByRefObject, ServerType)\n         myObjRef.URI = myUri\n         Return myObjRef\n      End Function &#39;CreateObjRef\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_DetachServer\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_DetachServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetachServer()</div>        \r\n          </div>\r\n    \r\n            <p>Detaches the current proxy instance from the remote server object that it represents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected MarshalByRefObject DetachServer ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></div>\r\n                  </div>\r\n                  <p>The detached server object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetCOMIUnknown_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetCOMIUnknown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCOMIUnknown(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Requests an unmanaged reference to the object represented by the current proxy instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IntPtr GetCOMIUnknown (bool fIsMarshalled);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fIsMarshalled</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the object reference is requested for marshaling to a remote location; <code>false</code> if the object reference is requested for communication with unmanaged objects in the current process through COM.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A pointer to a <a href=\"../Topic/COM%20Callable%20Wrapper.md\" data-linktype=\"relative-path\">COM Callable Wrapper</a> if the object reference is requested for communication with unmanaged objects in the current process through COM, or a pointer to a cached or newly generated <code>IUnknown</code> COM interface if the object reference is requested for marshaling to a remote location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the proxy is requested for marshaling, then an <code>IUnknown</code> interface for the object represented by the current proxy instance is returned. If an <code>IUnknown</code> was previously cached by the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy#System_Runtime_Remoting_Proxies_RealProxy_SetCOMIUnknown_\" data-linktype=\"relative-path\">SetCOMIUnknown</a> method, then that instance is returned; otherwise, a new instance is returned.  </p>\n<p> If the proxy is requested not for marshaling but for communication with unmanaged objects in the current process, then a <a href=\"../Topic/COM%20Callable%20Wrapper.md\" data-linktype=\"relative-path\">COM Callable Wrapper</a> (CCW), which can be used in the current process for communication through COM, is returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RealProxy_Sample#2\">   [SecurityPermission(SecurityAction::LinkDemand, Flags = SecurityPermissionFlag::Infrastructure)]\n   IntPtr SupportsInterface( Guid * /*myGuid*/ )\n   {\n      Console::WriteLine( &quot;SupportsInterface method called&quot; );\n      \n      // Object reference is requested for communication with unmanaged objects\n      // in the current process through COM.\n      IntPtr myIntPtr = this-&gt;GetCOMIUnknown( false );\n      \n      // Stores an unmanaged proxy of the object.\n      this-&gt;SetCOMIUnknown( myIntPtr );\n      \n      // return COM Runtime Wrapper pointer.\n      return myIntPtr;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"RealProxy_Sample#2\">      [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.Infrastructure)]\n      public override IntPtr SupportsInterface(ref Guid myGuid)\n      {\n         Console.WriteLine(&quot;SupportsInterface method called&quot;);\n         // Object reference is requested for communication with unmanaged objects\n         // in the current process through COM.\n         IntPtr myIntPtr = this.GetCOMIUnknown(false);\n         // Stores an unmanaged proxy of the object.\n         this.SetCOMIUnknown(myIntPtr);\n         // return COM Runtime Wrapper pointer.\n         return myIntPtr;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"RealProxy_Sample#2\">      &lt;SecurityPermission(SecurityAction.LinkDemand, Flags := SecurityPermissionFlag.Infrastructure)&gt; _\n      Public Overrides Function SupportsInterface(ByRef myGuid As Guid) As IntPtr\n         Console.WriteLine(&quot;SupportsInterface method called&quot;)\n         &#39; Object reference is requested for communication with unmanaged objects\n         &#39; in the current process through COM.\n         Dim myIntPtr As IntPtr = Me.GetCOMIUnknown(False)\n         &#39; Stores an unmanaged proxy of the object.\n         Me.SetCOMIUnknown(myIntPtr)\n         &#39; return COM Runtime Wrapper pointer.\n         Return myIntPtr\n      End Function &#39;SupportsInterface\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the transparent proxy of the object represented by the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> to the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> into which the transparent proxy is serialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source and destination of the serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>info</code> or <code>context</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have SerializationFormatter permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#7\">   [System::Security::Permissions::SecurityPermissionAttribute(\n   System::Security::Permissions::SecurityAction::LinkDemand,\n   Flags=System::Security::Permissions::SecurityPermissionFlag::Infrastructure)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context ) override\n   {\n      // Add your custom data if any here.\n      RealProxy::GetObjectData( info, context );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#7\">      [PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n      public override void GetObjectData( SerializationInfo info, \n                                          StreamingContext context)\n      {\n         // Add your custom data if any here.\n         base.GetObjectData(info, context);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#7\">      Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)\n         &#39; Add your custom data if any here.\n         MyBase.GetObjectData(info, context)\n      End Sub &#39;GetObjectData\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetProxiedType\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetProxiedType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProxiedType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object that the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> represents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type GetProxiedType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object that the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> represents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#10\">   // Create an instance of MyProxy.\n   MyProxy^ myProxyInstance = gcnew MyProxy( CustomServer::typeid );\n   \n   // Get a CustomServer proxy.\n   CustomServer^ myHelloServer = static_cast&lt;CustomServer^&gt;(myProxyInstance-&gt;GetTransparentProxy());\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#10\">         // Create an instance of MyProxy.\n         MyProxy myProxyInstance = new MyProxy(typeof(CustomServer));\n         // Get a CustomServer proxy.\n         CustomServer myHelloServer = (CustomServer)myProxyInstance.GetTransparentProxy();\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#10\">         &#39; Create an instance of MyProxy.\n         Dim myProxyInstance As New MyProxy(GetType(CustomServer))\n         &#39; Get a CustomServer proxy.\n         Dim myHelloServer As CustomServer = _\n                     CType(myProxyInstance.GetTransparentProxy(), CustomServer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetStubData_System_Runtime_Remoting_Proxies_RealProxy_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetStubData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStubData(RealProxy)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves stub data that is stored for the specified proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetStubData (System.Runtime.Remoting.Proxies.RealProxy rp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The proxy for which stub data is requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>Stub data for the specified proxy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server&#39;s context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#9\">   // Create an instance of MyProxy.\n   MyProxy^ myProxyInstance = gcnew MyProxy( CustomServer::typeid );\n   \n   // Get a CustomServer proxy.\n   CustomServer^ myHelloServer = static_cast&lt;CustomServer^&gt;(myProxyInstance-&gt;GetTransparentProxy());\n\n   // Get stubdata.\n   Console::WriteLine( &quot;GetStubData = {0}&quot;, RealProxy::GetStubData( myProxyInstance ) );\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#9\">         // Create an instance of MyProxy.\n         MyProxy myProxyInstance = new MyProxy(typeof(CustomServer));\n         // Get a CustomServer proxy.\n         CustomServer myHelloServer = (CustomServer)myProxyInstance.GetTransparentProxy();\n         // Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString()); \n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#9\">         &#39; Create an instance of MyProxy.\n         Dim myProxyInstance As New MyProxy(GetType(CustomServer))\n         &#39; Get a CustomServer proxy.\n         Dim myHelloServer As CustomServer = _\n                     CType(myProxyInstance.GetTransparentProxy(), CustomServer)\n         &#39; Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetTransparentProxy\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetTransparentProxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTransparentProxy()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the transparent proxy for the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object GetTransparentProxy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The transparent proxy for the current proxy instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#8\">   // Create an instance of MyProxy.\n   MyProxy^ myProxyInstance = gcnew MyProxy( CustomServer::typeid );\n   \n   // Get a CustomServer proxy.\n   CustomServer^ myHelloServer = static_cast&lt;CustomServer^&gt;(myProxyInstance-&gt;GetTransparentProxy());\n\n   // Get stubdata.\n   Console::WriteLine( &quot;GetStubData = {0}&quot;, RealProxy::GetStubData( myProxyInstance ) );\n\n   // Get ProxyType.\n   Console::WriteLine( &quot;Type of object represented by RealProxy is : {0}&quot;, myProxyInstance-&gt;GetProxiedType() );\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#8\">         // Create an instance of MyProxy.\n         MyProxy myProxyInstance = new MyProxy(typeof(CustomServer));\n         // Get a CustomServer proxy.\n         CustomServer myHelloServer = (CustomServer)myProxyInstance.GetTransparentProxy();\n         // Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString()); \n         // Get ProxyType.\n         Console.WriteLine(&quot;Type of object represented by RealProxy is :&quot; \n                           + myProxyInstance.GetProxiedType());\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#8\">         &#39; Create an instance of MyProxy.\n         Dim myProxyInstance As New MyProxy(GetType(CustomServer))\n         &#39; Get a CustomServer proxy.\n         Dim myHelloServer As CustomServer = _\n                     CType(myProxyInstance.GetTransparentProxy(), CustomServer)\n         &#39; Get stubdata.\n         Console.WriteLine(&quot;GetStubData = &quot; + RealProxy.GetStubData(myProxyInstance).ToString())\n         &#39; Get ProxyType.\n         Console.WriteLine(&quot;Type of object represented by RealProxy is :&quot; + _\n                                                myProxyInstance.GetProxiedType().ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_GetUnwrappedServer\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_GetUnwrappedServer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUnwrappedServer()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the server object that is represented by the current proxy instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected MarshalByRefObject GetUnwrappedServer ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></div>\r\n                  </div>\r\n                  <p>The server object that is represented by the current proxy instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetUnwrappedServer method is used in scenarios involving an external <a class=\"xref\" href=\"system.runtime.remoting.contexts.context\" data-linktype=\"relative-path\">Context</a> in the same <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_InitializeServerObject_System_Runtime_Remoting_Activation_IConstructionCallMessage_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_InitializeServerObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeServerObject(IConstructionCallMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the remote object that the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> represents with the specified <a class=\"xref\" href=\"system.runtime.remoting.activation.iconstructioncallmessage\" data-linktype=\"relative-path\">IConstructionCallMessage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ctorMsg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activation.iconstructioncallmessage\" data-linktype=\"relative-path\">IConstructionCallMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A construction call message that contains the constructor parameters for the new instance of the remote object that is represented by the current <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activation.iconstructionreturnmessage\" data-linktype=\"relative-path\">IConstructionReturnMessage</a></div>\r\n                  </div>\r\n                  <p>The result of the construction request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>ctorMsg</code> parameter is <code>null</code>, then the InitializeServerObject method calls the default constructor for the new instance of the remote object that is represented by the current <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#5\">   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      Console::WriteLine( &quot;MyProxy &#39;Invoke method&#39; Called...&quot; );\n      if ( dynamic_cast&lt;IMethodCallMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodCallMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IMethodReturnMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodReturnMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IConstructionCallMessage^&gt;(myMessage) )\n      {\n         // Initialize a new instance of remote object\n         IConstructionReturnMessage^ myIConstructionReturnMessage = this-&gt;InitializeServerObject( static_cast&lt;IConstructionCallMessage^&gt;(myMessage) );\n         ConstructionResponse^ constructionResponse = gcnew ConstructionResponse( nullptr,static_cast&lt;IMethodCallMessage^&gt;(myMessage) );\n         return constructionResponse;\n      }\n\n      IDictionary^ myIDictionary = myMessage-&gt;Properties;\n      IMessage^ returnMessage;\n      myIDictionary[ &quot;__Uri&quot; ] = myUri;\n\n      // Synchronously dispatch messages to server.\n      returnMessage = ChannelServices::SyncDispatchMessage( myMessage );\n\n      // Pushing return value and OUT parameters back onto stack.\n      IMethodReturnMessage^ myMethodReturnMessage = dynamic_cast&lt;IMethodReturnMessage^&gt;(returnMessage);\n      return returnMessage;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#5\">      public override IMessage Invoke(IMessage myMessage)\n      {\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;);\n         if (myMessage is IMethodCallMessage)\n         {\n            Console.WriteLine(&quot;IMethodCallMessage&quot;);\n         }\n         if (myMessage is IMethodReturnMessage)\n         {\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;);\n         }\n         if (myMessage is IConstructionCallMessage)\n         {  \n            // Initialize a new instance of remote object\n            IConstructionReturnMessage myIConstructionReturnMessage = \n               this.InitializeServerObject((IConstructionCallMessage)myMessage);\n            ConstructionResponse constructionResponse = new \n               ConstructionResponse(null,(IMethodCallMessage) myMessage);\n            return constructionResponse;\n         }\n         IDictionary myIDictionary = myMessage.Properties;\n         IMessage returnMessage;\n         myIDictionary[&quot;__Uri&quot;] = myUri;\n\n         // Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage);\n         // Pushing return value and OUT parameters back onto stack.\n         IMethodReturnMessage myMethodReturnMessage = (IMethodReturnMessage)returnMessage;\n         return returnMessage;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#5\">      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;)\n         If TypeOf myMessage Is IMethodCallMessage Then\n            Console.WriteLine(&quot;IMethodCallMessage&quot;)\n         End If\n         If TypeOf myMessage Is IMethodReturnMessage Then\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;)\n         End If\n         If TypeOf myMessage Is IConstructionCallMessage Then\n            &#39; Initialize a new instance of remote object\n            Dim myIConstructionReturnMessage As IConstructionReturnMessage = _\n                  Me.InitializeServerObject(CType(myMessage, IConstructionCallMessage))\n            Dim constructionResponse As _\n                  New ConstructionResponse(Nothing, CType(myMessage, IMethodCallMessage))\n            Return constructionResponse\n         End If\n         Dim myIDictionary As IDictionary = myMessage.Properties\n         Dim returnMessage As IMessage\n         myIDictionary(&quot;__Uri&quot;) = myUri\n         &#39; Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage)\n         &#39; Pushing return value and OUT parameters back onto stack.\n         Dim myMethodReturnMessage As IMethodReturnMessage = _\n               CType(returnMessage, IMethodReturnMessage)\n         Return returnMessage\n      End Function &#39;Invoke\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_Invoke_System_Runtime_Remoting_Messaging_IMessage_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(IMessage)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, invokes the method that is specified in the provided <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a> on the remote object that is represented by the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Runtime.Remoting.Messaging.IMessage Invoke (System.Runtime.Remoting.Messaging.IMessage msg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a> that contains a <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> of information about the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </div>\r\n                  <p>The message returned by the invoked method, containing the return value and any <code>out</code> or <code>ref</code> parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the transparent proxy that is backed by the <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a> is called, it delegates the calls to the Invoke method. The Invoke method transforms the message in the <code>msg</code> parameter into a <a class=\"xref\" href=\"system.runtime.remoting.messaging.imethodcallmessage\" data-linktype=\"relative-path\">IMethodCallMessage</a>, and sends it to the remote object that is represented by the current instance of <a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a> parameter provides a dictionary through the <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage#System_Runtime_Remoting_Messaging_IMessage_Properties_\" data-linktype=\"relative-path\">Properties</a> property. The dictionary contains name/value pairs of information about the method call, such as the name of the method called and its parameters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#4\">   virtual IMessage^ Invoke( IMessage^ myMessage ) override\n   {\n      Console::WriteLine( &quot;MyProxy &#39;Invoke method&#39; Called...&quot; );\n      if ( dynamic_cast&lt;IMethodCallMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodCallMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IMethodReturnMessage^&gt;(myMessage) )\n      {\n         Console::WriteLine( &quot;IMethodReturnMessage*&quot; );\n      }\n\n      if ( dynamic_cast&lt;IConstructionCallMessage^&gt;(myMessage) )\n      {\n         // Initialize a new instance of remote object\n         IConstructionReturnMessage^ myIConstructionReturnMessage = this-&gt;InitializeServerObject( static_cast&lt;IConstructionCallMessage^&gt;(myMessage) );\n         ConstructionResponse^ constructionResponse = gcnew ConstructionResponse( nullptr,static_cast&lt;IMethodCallMessage^&gt;(myMessage) );\n         return constructionResponse;\n      }\n\n      IDictionary^ myIDictionary = myMessage-&gt;Properties;\n      IMessage^ returnMessage;\n      myIDictionary[ &quot;__Uri&quot; ] = myUri;\n\n      // Synchronously dispatch messages to server.\n      returnMessage = ChannelServices::SyncDispatchMessage( myMessage );\n\n      // Pushing return value and OUT parameters back onto stack.\n      IMethodReturnMessage^ myMethodReturnMessage = dynamic_cast&lt;IMethodReturnMessage^&gt;(returnMessage);\n      return returnMessage;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#4\">      public override IMessage Invoke(IMessage myMessage)\n      {\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;);\n         if (myMessage is IMethodCallMessage)\n         {\n            Console.WriteLine(&quot;IMethodCallMessage&quot;);\n         }\n         if (myMessage is IMethodReturnMessage)\n         {\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;);\n         }\n         if (myMessage is IConstructionCallMessage)\n         {  \n            // Initialize a new instance of remote object\n            IConstructionReturnMessage myIConstructionReturnMessage = \n               this.InitializeServerObject((IConstructionCallMessage)myMessage);\n            ConstructionResponse constructionResponse = new \n               ConstructionResponse(null,(IMethodCallMessage) myMessage);\n            return constructionResponse;\n         }\n         IDictionary myIDictionary = myMessage.Properties;\n         IMessage returnMessage;\n         myIDictionary[&quot;__Uri&quot;] = myUri;\n\n         // Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage);\n         // Pushing return value and OUT parameters back onto stack.\n         IMethodReturnMessage myMethodReturnMessage = (IMethodReturnMessage)returnMessage;\n         return returnMessage;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#4\">      Public Overrides Function Invoke(myMessage As IMessage) As IMessage\n         Console.WriteLine(&quot;MyProxy &#39;Invoke method&#39; Called...&quot;)\n         If TypeOf myMessage Is IMethodCallMessage Then\n            Console.WriteLine(&quot;IMethodCallMessage&quot;)\n         End If\n         If TypeOf myMessage Is IMethodReturnMessage Then\n            Console.WriteLine(&quot;IMethodReturnMessage&quot;)\n         End If\n         If TypeOf myMessage Is IConstructionCallMessage Then\n            &#39; Initialize a new instance of remote object\n            Dim myIConstructionReturnMessage As IConstructionReturnMessage = _\n                  Me.InitializeServerObject(CType(myMessage, IConstructionCallMessage))\n            Dim constructionResponse As _\n                  New ConstructionResponse(Nothing, CType(myMessage, IMethodCallMessage))\n            Return constructionResponse\n         End If\n         Dim myIDictionary As IDictionary = myMessage.Properties\n         Dim returnMessage As IMessage\n         myIDictionary(&quot;__Uri&quot;) = myUri\n         &#39; Synchronously dispatch messages to server.\n         returnMessage = ChannelServices.SyncDispatchMessage(myMessage)\n         &#39; Pushing return value and OUT parameters back onto stack.\n         Dim myMethodReturnMessage As IMethodReturnMessage = _\n               CType(returnMessage, IMethodReturnMessage)\n         Return returnMessage\n      End Function &#39;Invoke\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_SetCOMIUnknown_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_SetCOMIUnknown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCOMIUnknown(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Stores an unmanaged proxy of the object that is represented by the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void SetCOMIUnknown (IntPtr i);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>i</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the <code>IUnknown</code> interface for the object that is represented by the current proxy instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When an unmanaged proxy attempts to communicate with the common language runtime through COM, the runtime resolves the remote object that is represented by the unmanaged proxy. If the remote object is managed and also resides in a common language environment, then instead of communicating with it through distributed COM, the object is sent to the current process.  </p>\n<p> If the remote object is not derived from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>, then it is serialized and copied to the current location. If it is derived from <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>, then it returns a transparent proxy, and the remoting infrastructure caches the unmanaged proxy (the <code>IUnknown</code> interface) in the transparent proxy for future use.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RealProxy_Sample#3\">   [SecurityPermission(SecurityAction::LinkDemand, Flags = SecurityPermissionFlag::Infrastructure)]\n   IntPtr SupportsInterface( Guid * /*myGuid*/ )\n   {\n      Console::WriteLine( &quot;SupportsInterface method called&quot; );\n      \n      // Object reference is requested for communication with unmanaged objects\n      // in the current process through COM.\n      IntPtr myIntPtr = this-&gt;GetCOMIUnknown( false );\n      \n      // Stores an unmanaged proxy of the object.\n      this-&gt;SetCOMIUnknown( myIntPtr );\n      \n      // return COM Runtime Wrapper pointer.\n      return myIntPtr;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"RealProxy_Sample#3\">      [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.Infrastructure)]\n      public override IntPtr SupportsInterface(ref Guid myGuid)\n      {\n         Console.WriteLine(&quot;SupportsInterface method called&quot;);\n         // Object reference is requested for communication with unmanaged objects\n         // in the current process through COM.\n         IntPtr myIntPtr = this.GetCOMIUnknown(false);\n         // Stores an unmanaged proxy of the object.\n         this.SetCOMIUnknown(myIntPtr);\n         // return COM Runtime Wrapper pointer.\n         return myIntPtr;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"RealProxy_Sample#3\">      &lt;SecurityPermission(SecurityAction.LinkDemand, Flags := SecurityPermissionFlag.Infrastructure)&gt; _\n      Public Overrides Function SupportsInterface(ByRef myGuid As Guid) As IntPtr\n         Console.WriteLine(&quot;SupportsInterface method called&quot;)\n         &#39; Object reference is requested for communication with unmanaged objects\n         &#39; in the current process through COM.\n         Dim myIntPtr As IntPtr = Me.GetCOMIUnknown(False)\n         &#39; Stores an unmanaged proxy of the object.\n         Me.SetCOMIUnknown(myIntPtr)\n         &#39; return COM Runtime Wrapper pointer.\n         Return myIntPtr\n      End Function &#39;SupportsInterface\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_SetStubData_System_Runtime_Remoting_Proxies_RealProxy_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_SetStubData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetStubData(RealProxy,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the stub data for the specified proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetStubData (System.Runtime.Remoting.Proxies.RealProxy rp, object stubData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.proxies.realproxy\" data-linktype=\"relative-path\">RealProxy</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The proxy for which to set stub data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stubData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new stub data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have UnmanagedCode permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server&#39;s context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"CustomProxy_Attribute_RealProxy#3\">   virtual RealProxy^ CreateProxy( ObjRef^ objRef1, Type^ serverType, Object^ serverObject, Context^ serverContext ) override\n   {\n      MyProxy^ myCustomProxy = gcnew MyProxy( serverType );\n      if ( serverContext != nullptr )\n      {\n         RealProxy::SetStubData( myCustomProxy, serverContext );\n      }\n\n      if ( ( !serverType-&gt;IsMarshalByRef) &amp;&amp; (serverContext == nullptr) )\n      {\n         throw gcnew RemotingException( &quot;Bad Type for CreateProxy&quot; );\n      }\n\n      return myCustomProxy;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CustomProxy_Attribute_RealProxy#3\">      public override RealProxy CreateProxy(ObjRef objRef1,\n         Type serverType,\n         object serverObject,\n         Context serverContext)\n      {\n         MyProxy myCustomProxy = new MyProxy(serverType);\n         if(serverContext != null)\n         {\n            RealProxy.SetStubData(myCustomProxy,serverContext);\n         }\n         if((!serverType.IsMarshalByRef)&amp;&amp;(serverContext == null))\n         {\n            throw new RemotingException(&quot;Bad Type for CreateProxy&quot;);\n         }\n         return myCustomProxy;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"CustomProxy_Attribute_RealProxy#3\">      Public Overrides Function CreateProxy(objRef1 As ObjRef, serverType As Type, _\n                  serverObject As Object, serverContext As Context) As RealProxy\n         Dim myCustomProxy As New MyProxy(serverType)\n         If Not (serverContext Is Nothing) Then\n            RealProxy.SetStubData(myCustomProxy, serverContext)\n         End If\n         If Not serverType.IsMarshalByRef And serverContext Is Nothing Then\n            Throw New RemotingException(&quot;Bad Type for CreateProxy&quot;)\n         End If\n         Return myCustomProxy\n      End Function &#39;CreateProxy\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Proxies_RealProxy_SupportsInterface_System_Guid__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Proxies_RealProxy_SupportsInterface_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportsInterface(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Requests a COM interface with the specified ID.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IntPtr SupportsInterface (ref Guid iid);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to the requested interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>A pointer to the requested interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SupportsInterface method allows the current proxy instance to implement additional COM interfaces on behalf of the server object that the current instance represents. The current method generates the requested interface and returns a pointer to it. The types of COM interfaces that can be generated by this method depend on the proxy type, which in turn might depend on the type of the server object that the current proxy instance represents.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.runtime.remoting.proxies.proxyattribute\" data-linktype=\"relative-path\">ProxyAttribute</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RealProxy_Sample#1\">   [SecurityPermission(SecurityAction::LinkDemand, Flags = SecurityPermissionFlag::Infrastructure)]\n   IntPtr SupportsInterface( Guid * /*myGuid*/ )\n   {\n      Console::WriteLine( &quot;SupportsInterface method called&quot; );\n      \n      // Object reference is requested for communication with unmanaged objects\n      // in the current process through COM.\n      IntPtr myIntPtr = this-&gt;GetCOMIUnknown( false );\n      \n      // Stores an unmanaged proxy of the object.\n      this-&gt;SetCOMIUnknown( myIntPtr );\n      \n      // return COM Runtime Wrapper pointer.\n      return myIntPtr;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"RealProxy_Sample#1\">      [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.Infrastructure)]\n      public override IntPtr SupportsInterface(ref Guid myGuid)\n      {\n         Console.WriteLine(&quot;SupportsInterface method called&quot;);\n         // Object reference is requested for communication with unmanaged objects\n         // in the current process through COM.\n         IntPtr myIntPtr = this.GetCOMIUnknown(false);\n         // Stores an unmanaged proxy of the object.\n         this.SetCOMIUnknown(myIntPtr);\n         // return COM Runtime Wrapper pointer.\n         return myIntPtr;\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"RealProxy_Sample#1\">      &lt;SecurityPermission(SecurityAction.LinkDemand, Flags := SecurityPermissionFlag.Infrastructure)&gt; _\n      Public Overrides Function SupportsInterface(ByRef myGuid As Guid) As IntPtr\n         Console.WriteLine(&quot;SupportsInterface method called&quot;)\n         &#39; Object reference is requested for communication with unmanaged objects\n         &#39; in the current process through COM.\n         Dim myIntPtr As IntPtr = Me.GetCOMIUnknown(False)\n         &#39; Stores an unmanaged proxy of the object.\n         Me.SetCOMIUnknown(myIntPtr)\n         &#39; return COM Runtime Wrapper pointer.\n         Return myIntPtr\n      End Function &#39;SupportsInterface\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Proxies.RealProxy.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Proxies.RealProxy.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.AttachServer\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.DetachServer\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetStubData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.SetStubData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3fbce220-65f6-b173-253b-0ffa902785e5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides base functionality for proxies.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Proxies/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Proxies.RealProxy\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Proxies.RealProxy.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Proxies.RealProxy.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Proxies.RealProxy","System.Runtime.Remoting.Proxies.RealProxy..ctor","System.Runtime.Remoting.Proxies.RealProxy.AttachServer","System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef","System.Runtime.Remoting.Proxies.RealProxy.DetachServer","System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown","System.Runtime.Remoting.Proxies.RealProxy.GetObjectData","System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType","System.Runtime.Remoting.Proxies.RealProxy.GetStubData","System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy","System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer","System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject","System.Runtime.Remoting.Proxies.RealProxy.Invoke","System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown","System.Runtime.Remoting.Proxies.RealProxy.SetStubData","System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Proxies.RealProxy","System::Runtime::Remoting::Proxies::RealProxy","System.Runtime.Remoting.Proxies.RealProxy.#ctor","System::Runtime::Remoting::Proxies::RealProxy::#ctor","System.Runtime.Remoting.Proxies.RealProxy.AttachServer","System::Runtime::Remoting::Proxies::RealProxy::AttachServer","System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef","System::Runtime::Remoting::Proxies::RealProxy::CreateObjRef","System.Runtime.Remoting.Proxies.RealProxy.DetachServer","System::Runtime::Remoting::Proxies::RealProxy::DetachServer","System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown","System::Runtime::Remoting::Proxies::RealProxy::GetCOMIUnknown","System.Runtime.Remoting.Proxies.RealProxy.GetObjectData","System::Runtime::Remoting::Proxies::RealProxy::GetObjectData","System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType","System::Runtime::Remoting::Proxies::RealProxy::GetProxiedType","System.Runtime.Remoting.Proxies.RealProxy.GetStubData","System::Runtime::Remoting::Proxies::RealProxy::GetStubData","System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy","System::Runtime::Remoting::Proxies::RealProxy::GetTransparentProxy","System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer","System::Runtime::Remoting::Proxies::RealProxy::GetUnwrappedServer","System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject","System::Runtime::Remoting::Proxies::RealProxy::InitializeServerObject","System.Runtime.Remoting.Proxies.RealProxy.Invoke","System::Runtime::Remoting::Proxies::RealProxy::Invoke","System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown","System::Runtime::Remoting::Proxies::RealProxy::SetCOMIUnknown","System.Runtime.Remoting.Proxies.RealProxy.SetStubData","System::Runtime::Remoting::Proxies::RealProxy::SetStubData","System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface","System::Runtime::Remoting::Proxies::RealProxy::SupportsInterface"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3fbce220-65f6-b173-253b-0ffa902785e5","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Proxies/RealProxy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RealProxy class | Microsoft Docs","_op_ogTitle":"RealProxy class","description":"Provides base functionality for proxies.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Proxies/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Proxies/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Proxies.RealProxy","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.proxies.realproxy","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.proxies.realproxy","fileRelativePath":"System.Runtime.Remoting.Proxies.RealProxy.html"},"themesRelativePathToOutputRoot":"_themes/"}