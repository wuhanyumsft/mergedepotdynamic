{"content":"    \r\n    <h1 id=\"System_Data_OleDb_OleDbConnection\">\r\n      <span class=\"lang-csharp\">OleDbConnection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an open connection to a data source.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;InfoMessage&quot;)]\npublic sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection\" data-linktype=\"relative-path\">System.Data.Common.DbConnection</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">OleDbConnection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_DbProviderFactory\" data-linktype=\"relative-path\">DbProviderFactory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_OnStateChange_System_Data_StateChangeEventArgs_\" data-linktype=\"relative-path\">OnStateChange(StateChangeEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_OpenAsync\" data-linktype=\"relative-path\">OpenAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_OpenAsync_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">OpenAsync(CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_StateChange\" data-linktype=\"relative-path\">StateChange</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_System_Data_IDbConnection_BeginTransaction\" data-linktype=\"relative-path\">IDbConnection.BeginTransaction()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_System_Data_IDbConnection_BeginTransaction_System_Data_IsolationLevel_\" data-linktype=\"relative-path\">IDbConnection.BeginTransaction(IsolationLevel)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_System_Data_IDbConnection_CreateCommand\" data-linktype=\"relative-path\">IDbConnection.CreateCommand()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An OleDbConnection object represents a unique connection to a data source. With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native OLE DB provider, some methods or properties of an OleDbConnection object may not be available.  </p>\n<p> When you create an instance of OleDbConnection, all properties are set to their initial values. For a list of these values, see the OleDbConnection constructor.  </p>\n<p> You can open more than one DataReader on a single OleDbConnection. If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.  </p>\n<p> If the OleDbConnection goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Close_\" data-linktype=\"relative-path\">Close</a> or <strong>Dispose</strong>, or by using the OleDbConnection object within a <code>Using</code> statement.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To deploy high-performance applications, you must use connection pooling. When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically. For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see <a href=\"../Topic/OLE%20DB,%20ODBC,%20and%20Oracle%20Connection%20Pooling.md\" data-linktype=\"relative-path\">OLE DB, ODBC, and Oracle Connection Pooling</a>.  </p>\n</div>\n<p> If a fatal <a class=\"xref\" href=\"system.data.oledb.oledbexception\" data-linktype=\"relative-path\">OleDbException</a> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a>, the OleDbConnection might be closed. However, the user can reopen the connection and continue.  </p>\n<p> An application that creates an instance of the OleDbConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. OleDbConnection makes security demands using the <a class=\"xref\" href=\"system.data.oledb.oledbpermission\" data-linktype=\"relative-path\">OleDbPermission</a> object. Users can verify that their code has sufficient permissions by using the <a class=\"xref\" href=\"system.data.oledb.oledbpermissionattribute\" data-linktype=\"relative-path\">OleDbPermissionAttribute</a> object. Users and administrators can also use the <a href=\"../Topic/Caspol.exe%20(Code%20Access%20Security%20Policy%20Tool).md\" data-linktype=\"relative-path\">Caspol.exe (Code Access Security Policy Tool)</a> to modify security policy at the computer, user, and enterprise levels. For more information, see <a href=\"../Topic/Code%20Access%20Security%20and%20ADO.NET.md\" data-linktype=\"relative-path\">Code Access Security and ADO.NET</a>.  </p>\n<p> For more information about handling warning and informational messages from the data server, see <a href=\"../Topic/Connection%20Events.md\" data-linktype=\"relative-path\">Connection Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The OleDbConnection object does not support setting or retrieving dynamic properties specific to an OLE DB provider. Only properties that can be passed in the connection string for the OLE DB provider are supported.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection__ctor\" data-linktype=\"self-bookmark\">OleDbConnection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection__ctor_System_String_\" data-linktype=\"self-bookmark\">OleDbConnection(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> class with the specified connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ConnectionString\" data-linktype=\"self-bookmark\">ConnectionString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the string used to open a database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ConnectionTimeout\" data-linktype=\"self-bookmark\">ConnectionTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_Database\" data-linktype=\"self-bookmark\">Database</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the current database or the database to be used after a connection is opened.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_DataSource\" data-linktype=\"self-bookmark\">DataSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the server name or file name of the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_Provider\" data-linktype=\"self-bookmark\">Provider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the OLE DB provider specified in the &quot;Provider= &quot; clause of the connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ServerVersion\" data-linktype=\"self-bookmark\">ServerVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that contains the version of the server to which the client is connected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_State\" data-linktype=\"self-bookmark\">State</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current state of the connection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_BeginDbTransaction_System_Data_IsolationLevel_\" data-linktype=\"self-bookmark\">BeginDbTransaction(IsolationLevel)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_BeginTransaction\" data-linktype=\"self-bookmark\">BeginTransaction()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts a database transaction with the current <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_BeginTransaction_System_Data_IsolationLevel_\" data-linktype=\"self-bookmark\">BeginTransaction(IsolationLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts a database transaction with the specified isolation level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ChangeDatabase_System_String_\" data-linktype=\"self-bookmark\">ChangeDatabase(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the current database for an open <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the connection to the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_CreateCommand\" data-linktype=\"self-bookmark\">CreateCommand()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns an <a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a> object associated with the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_CreateDbCommand\" data-linktype=\"self-bookmark\">CreateDbCommand()</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_EnlistDistributedTransaction_System_EnterpriseServices_ITransaction_\" data-linktype=\"self-bookmark\">EnlistDistributedTransaction(ITransaction)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists in the specified transaction as a distributed transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_EnlistTransaction_System_Transactions_Transaction_\" data-linktype=\"self-bookmark\">EnlistTransaction(Transaction)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enlists in the specified transaction as a distributed transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_GetOleDbSchemaTable_System_Guid_System_Object___\" data-linktype=\"self-bookmark\">GetOleDbSchemaTable(Guid,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_GetSchema\" data-linktype=\"self-bookmark\">GetSchema()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_GetSchema_System_String_\" data-linktype=\"self-bookmark\">GetSchema(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> using the specified string for the schema name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_GetSchema_System_String_System_String___\" data-linktype=\"self-bookmark\">GetSchema(String,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> using the specified string for the schema name and the specified string array for the restriction values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_Open\" data-linktype=\"self-bookmark\">Open()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Opens a database connection with the property settings specified by the <span class=\"xref\">stem.Data.OleDb.OleDbConnection.ConnectionString*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ReleaseObjectPool\" data-linktype=\"self-bookmark\">ReleaseObjectPool()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object pool can be released when the last underlying connection is released.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_ResetState\" data-linktype=\"self-bookmark\">ResetState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the <span class=\"xref\">stem.Data.OleDb.OleDbConnection.State*</span> property of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_InfoMessage\" data-linktype=\"self-bookmark\">InfoMessage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the provider sends a warning or an informational message.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_OleDb_OleDbConnection_System_ICloneable_Clone\" data-linktype=\"self-bookmark\">ICloneable.Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.ICloneable.Clone*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection__ctor\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OleDbConnection()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OleDbConnection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a new instance of <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a></td>\n<td>empty string (&quot;&quot;)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionTimeout_\" data-linktype=\"relative-path\">ConnectionTimeout</a></td>\n<td>15</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Database_\" data-linktype=\"relative-path\">Database</a></td>\n<td>empty string (&quot;&quot;)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_DataSource_\" data-linktype=\"relative-path\">DataSource</a></td>\n<td>empty string (&quot;&quot;)</td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value for these properties only by using the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates and opens an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.OleDbConnection Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;DataSource: {0} <br>Database: {1}&quot;,\n                    connection.DataSource, connection.Database);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.OleDbConnection Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;DataSource: {0} Database: {1}&quot;, _\n                    connection.DataSource, connection.Database)\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OleDbConnection(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> class with the specified connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OleDbConnection (string connectionString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>connectionString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The connection used to open the database.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a new instance of <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property.  </p>\n<table>\n<thead>\n<tr>\n<th>Properties</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a></td>\n<td><code>connectionString</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionTimeout_\" data-linktype=\"relative-path\">ConnectionTimeout</a></td>\n<td>15</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Database_\" data-linktype=\"relative-path\">Database</a></td>\n<td>empty string (&quot;&quot;)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_DataSource_\" data-linktype=\"relative-path\">DataSource</a></td>\n<td>empty string (&quot;&quot;)</td>\n</tr>\n</tbody>\n</table>\n<p> You can change the value for these properties only by using the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates and opens an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.OleDbConnection1 Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;DataSource: {0} <br>Database: {1}&quot;,\n                    connection.DataSource, connection.Database);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.OleDbConnection1 Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;DataSource: {0} Database: {1}&quot;, _\n                    connection.DataSource, connection.Database)\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ConnectionString\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ConnectionString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionString</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the string used to open a database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ConnectionString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid connection string argument has been supplied or a required connection string argument has not been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ConnectionString is designed to match OLE DB connection string format as closely as possible with the following exceptions:  </p>\n<ul>\n<li><p>The &quot;Provider = <code>value</code> &quot; clause is required. However, you cannot use &quot;Provider = MSDASQL&quot; because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <a class=\"xref\" href=\"system.data.odbc.odbcconnection\" data-linktype=\"relative-path\">OdbcConnection</a> object that is in the <a class=\"xref\" href=\"system.data.odbc\" data-linktype=\"relative-path\">System.Data.Odbc</a> namespace.  </p>\n</li>\n<li><p>Unlike ODBC or ADO, the connection string that is returned is the same as the user-set ConnectionString, minus security information if <code>Persist Security Info</code> is set to <code>false</code> (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the <code>Persist Security Info</code> keyword to <code>true</code> (not recommended). To maintain a high level of security, it is strongly recommended that you use the <code>Integrated Security</code> keyword with <code>Persist Security Info</code> set to <code>false</code>.  </p>\n<p>You can use the ConnectionString property to connect to a variety of data sources. The following example illustrates several possible connection strings.  </p>\n</li>\n</ul>\n<pre><code>&quot;Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes&quot;  \n\n&quot;Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb&quot;  \n\n&quot;Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI&quot;\n</code></pre><p> If the <code>Data Source</code> keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  </p>\n<p> For more information about connection strings, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=126696\" data-linktype=\"external\">Using Connection String Keywords with SQL Server Native Client</a>.  </p>\n<p> The ConnectionString property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> properties return only those settings that are contained in the ConnectionString.  </p>\n<p> Resetting the ConnectionString on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes &quot;Initial Catalog= AdventureWorks&quot;, and then reset the connection string to &quot;Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI&quot;, the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Database_\" data-linktype=\"relative-path\">Database</a> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the <code>Database</code> property.)  </p>\n<p> A preliminary validation of the connection string is performed when the property is set. If values for the <code>Provider</code>, <code>Connect Timeout</code>, <code>Persist Security Info</code>, or <code>OLE DB Services</code> are included in the string, these values are checked. When an application calls the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Open_\" data-linktype=\"relative-path\">Open</a> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>, is generated.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> It is possible to supply connection information for an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  </p>\n</div>\n<p> The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  </p>\n<p> To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, <code>Data Source= my&#39;Server</code> or <code>Data Source= my&quot;Server</code>) unless a quotation-mark character is the first or last character in the value.  </p>\n<p> To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  </p>\n<pre><code>&quot;key==word=value&quot;\n</code></pre><p> the keyword is &quot;key=word&quot; and the value is &quot;value&quot;.  </p>\n<p> If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  </p>\n<p> Keywords are not case sensitive.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as &quot;validpassword;database= somedb&quot; in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of <code>Persist Security Info= false</code> does not affect the <code>Extended Properties</code> parameter.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and sets some of its properties in the connection string.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.DataSource Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;ServerVersion: {0} <br>DataSource: {1}&quot;,\n                    connection.ServerVersion, connection.DataSource);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.DataSource Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;Server Version: {0} DataSource: {1}&quot;, _\n                    connection.ServerVersion, connection.DataSource)\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ConnectionTimeout\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ConnectionTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int ConnectionTimeout { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The time in seconds to wait for a connection to open. The default value is 15 seconds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value set is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of 0 indicates no limit, and should be avoided in a <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> because an attempt to connect will wait indefinitely.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and sets some of its properties in the connection string.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.ConnectionTimeout Example#1\">    &#39; The connectionString argument contains the Connect Timeout \n    &#39; keywords, as follows: &quot;... ;Connect Timeout=30;&quot;\n    Public Sub InsertRow(ByVal connectionString As String, _\n        ByVal insertSQL As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            &#39; The insertSQL string contains a SQL statement that\n            &#39; inserts a new row in the source table.\n            Dim command As New OleDbCommand(insertSQL)\n\n            &#39; Set the Connection to the new OleDbConnection.\n            command.Connection = connection\n\n            &#39; Open the connection and execute the insert command.\n            Try\n                connection.Open()\n                command.ExecuteNonQuery()\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.ConnectionTimeout Example#1\">    // The connectionString argument contains the Connect Timeout \n    // keywords, as follows: &quot;... ;Connect Timeout=30;&quot;\n    public void InsertRow(string connectionString, string insertSQL)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            // The insertSQL string contains a SQL statement that\n            // inserts a new row in the source table.\n            OleDbCommand command = new OleDbCommand(insertSQL);\n\n            // Set the Connection to the new OleDbConnection.\n            command.Connection = connection;\n\n            // Open the connection and execute the insert command.\n            try\n            {\n                connection.Open();\n                command.ExecuteNonQuery();\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_Database\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_Database_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Database</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the current database or the database to be used after a connection is opened.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Database { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Database property updates dynamically. If you change the current database using a SQL statement or the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_ChangeDatabase_\" data-linktype=\"relative-path\">ChangeDatabase</a> method, an informational message is sent and the property is updated automatically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and displays some of its read-only properties.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.Database Example#1\">   static void OpenConnection(string connectionString)\n   {\n      using (OleDbConnection connection = new OleDbConnection(connectionString))\n      {\n         try\n         {\n            connection.Open();\n            Console.WriteLine(&quot;ServerVersion: {0} <br>Database: {1}&quot;,\n                connection.ServerVersion, connection.Database);\n         }\n         catch (Exception ex)\n         {\n            Console.WriteLine(ex.Message);\n         }\n         // The connection is automatically closed when the\n         // code exits the using block.\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.Database Example#1\">   Public Sub OpenConnection(ByVal connectionString As String)\n\n      Using connection As New OleDbConnection(connectionString)\n         Try\n            connection.Open()\n            Console.WriteLine(&quot;Server Version: {0} Database: {1}&quot;, _\n                connection.ServerVersion, connection.Database)\n         Catch ex As Exception\n            Console.WriteLine(ex.Message)\n         End Try\n         &#39; The connection is automatically closed when the\n         &#39; code exits the Using block.\n      End Using\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_DataSource\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_DataSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets the server name or file name of the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string DataSource { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The server name or file name of the data source. The default value is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the connection to the database is closed, the <code>DataSource</code> property returns whatever is contained in <code>ConnectionString</code> for the data source keyword. If the connection is open and the <code>ConnectionString</code> data source keyword&#39;s value starts with &quot;&#124;datadirectory&#124;&quot;, the property returns whatever is contained in <code>ConnectionString</code> for the data source keyword only. If the connection to the database is open, the property returns what the native provider returns for the <code>DBPROP_INIT_DATASOURCE,</code> and if that is empty, the native providerâ€™s <code>DBPROP_DATASOURCENAME</code> is returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and displays some of its read-only properties.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.DataSource Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;ServerVersion: {0} <br>DataSource: {1}&quot;,\n                    connection.ServerVersion, connection.DataSource);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.DataSource Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;Server Version: {0} DataSource: {1}&quot;, _\n                    connection.ServerVersion, connection.DataSource)\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_Provider\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_Provider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Provider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the OLE DB provider specified in the &quot;Provider= &quot; clause of the connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Provider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the provider as specified in the &quot;Provider= &quot; clause of the connection string. The default value is an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and displays some of its read-only properties.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.Provider Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;ServerVersion: {0} <br>Provider: {1}&quot;,\n                    connection.ServerVersion, connection.Provider);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.Provider Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;ServerVersion: {0} Provider: {1}&quot;, _\n                    connection.ServerVersion, connection.Provider)\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ServerVersion\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ServerVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServerVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that contains the version of the server to which the client is connected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ServerVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The version of the connected server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The connection is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ServerVersion property maps to the OLE DB DBPROP_DBMSVER property. If ServerVersion is not supported by the underlying OLE DB provider, an empty string is returned.  </p>\n<p> The version is of the form <em>##.##.####</em>, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The provider must render the product version in this form but can also append the product-specific versionâ€”for example, &quot;04.01.0000 Rdb 4.1&quot;. The string is of the form <em>major.minor.build</em>, where major and minor are exactly two digits and build is exactly four digits.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and displays some of its read-only properties.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.ServerVersion Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;ServerVersion: {0}&quot;, connection.ServerVersion)\n\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n        End Using\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.ServerVersion Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;ServerVersion: {0}&quot;, connection.ServerVersion);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_State\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_State_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">State</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current state of the connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Data.ConnectionState State { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.connectionstate\" data-linktype=\"relative-path\">ConnectionState</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.data.connectionstate\" data-linktype=\"relative-path\">ConnectionState</a> values. The default is Closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are allowed state changes:  </p>\n<ul>\n<li><p>From <code>Closed</code> to <code>Open</code>, using the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Open_\" data-linktype=\"relative-path\">Open</a> method of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n</li>\n<li><p>From <code>Open</code> to <code>Closed</code>, using either the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Close_\" data-linktype=\"relative-path\">Close</a> method or the <strong>Dispose</strong> method of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> In previous version of the .NET Framework, calling the State property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection. With the release of the .NET Framework 2.0, this is no longer an issue.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_BeginDbTransaction_System_Data_IsolationLevel_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_BeginDbTransaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginDbTransaction(IsolationLevel)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isolationLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbtransaction\" data-linktype=\"relative-path\">DbTransaction</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_BeginTransaction\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_BeginTransaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginTransaction()</div>        \r\n          </div>\r\n    \r\n            <p>Starts a database transaction with the current <a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.OleDb.OleDbTransaction BeginTransaction ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a></div>\r\n                  </div>\r\n                  <p>An object representing the new transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Parallel transactions are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must explicitly commit or roll back the transaction using the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> or <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and an <a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a>. It also demonstrates how to use the BeginTransaction, <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a>, and <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.BeginTransaction Example#1\">    public void ExecuteTransaction(string connectionString)\n    {\n        using (OleDbConnection connection =\n                   new OleDbConnection(connectionString))\n        {\n            OleDbCommand command = new OleDbCommand();\n            OleDbTransaction transaction = null;\n\n            // Set the Connection to the new OleDbConnection.\n            command.Connection = connection;\n\n            // Open the connection and execute the transaction.\n            try\n            {\n                connection.Open();\n\n                // Start a local transaction with ReadCommitted isolation level.\n                transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted);\n\n                // Assign transaction object for a pending local transaction.\n                command.Connection = connection;\n                command.Transaction = transaction;\n\n                // Execute the commands.\n                command.CommandText =\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;;\n                command.ExecuteNonQuery();\n                command.CommandText =\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;;\n                command.ExecuteNonQuery();\n\n                // Commit the transaction.\n                transaction.Commit();\n                Console.WriteLine(&quot;Both records are written to database.&quot;);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n                try\n                {\n                    // Attempt to roll back the transaction.\n                    transaction.Rollback();\n                }\n                catch\n                {\n                    // Do nothing here; transaction is not active.\n                }\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.BeginTransaction Example#1\">    Public Sub ExecuteTransaction(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Dim command As New OleDbCommand()\n            Dim transaction As OleDbTransaction\n\n            &#39; Set the Connection to the new OleDbConnection.\n            command.Connection = connection\n\n            &#39; Open the connection and execute the transaction.\n            Try\n                connection.Open()\n\n                &#39; Start a local transaction with ReadCommitted isolation level.\n                transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)\n\n                &#39; Assign transaction object for a pending local transaction.\n                command.Connection = connection\n                command.Transaction = transaction\n\n                &#39; Execute the commands.\n                command.CommandText = _\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n                command.CommandText = _\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n\n                &#39; Commit the transaction.\n                transaction.Commit()\n                Console.WriteLine(&quot;Both records are written to database.&quot;)\n\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n                &#39; Try to rollback the transaction\n                Try\n                        transaction.Rollback()\n\n                Catch\n                    &#39; Do nothing here; transaction is not active.\n                End Try\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_BeginTransaction_System_Data_IsolationLevel_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_BeginTransaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginTransaction(IsolationLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Starts a database transaction with the specified isolation level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isolationLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.isolationlevel\" data-linktype=\"relative-path\">IsolationLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The isolation level under which the transaction should run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a></div>\r\n                  </div>\r\n                  <p>An object representing the new transaction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Parallel transactions are not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must explicitly commit or roll back the transaction using the <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a> or <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify an isolation level, the default isolation level for the underlying provider is used. To specify an isolation level with the BeginTransaction method, use the overload that takes the <code>isolationLevel</code> parameter.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and an <a class=\"xref\" href=\"system.data.oledb.oledbtransaction\" data-linktype=\"relative-path\">OleDbTransaction</a>. It also demonstrates how to use the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>, a <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Commit_\" data-linktype=\"relative-path\">Commit</a>, and <a class=\"xref\" href=\"system.data.oledb.oledbtransaction#System_Data_OleDb_OleDbTransaction_Rollback_\" data-linktype=\"relative-path\">Rollback</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.BeginTransaction1 Example#1\">    public void ExecuteTransaction(string connectionString)\n    {\n        using (OleDbConnection connection =\n                   new OleDbConnection(connectionString))\n        {\n            OleDbCommand command = new OleDbCommand();\n            OleDbTransaction transaction = null;\n\n            // Set the Connection to the new OleDbConnection.\n            command.Connection = connection;\n\n            // Open the connection and execute the transaction.\n            try\n            {\n                connection.Open();\n\n                // Start a local transaction\n                transaction = connection.BeginTransaction();\n\n                // Assign transaction object for a pending local transaction.\n                command.Connection = connection;\n                command.Transaction = transaction;\n\n                // Execute the commands.\n                command.CommandText =\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;;\n                command.ExecuteNonQuery();\n                command.CommandText =\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;;\n                command.ExecuteNonQuery();\n\n                // Commit the transaction.\n                transaction.Commit();\n                Console.WriteLine(&quot;Both records are written to database.&quot;);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n                try\n                {\n                    // Attempt to roll back the transaction.\n                    transaction.Rollback();\n                }\n                catch\n                {\n                    // Do nothing here; transaction is not active.\n                }\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.BeginTransaction1 Example#1\">    Public Sub ExecuteTransaction(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Dim command As New OleDbCommand()\n            Dim transaction As OleDbTransaction\n\n            &#39; Set the Connection to the new OleDbConnection.\n            command.Connection = connection\n\n            &#39; Open the connection and execute the transaction.\n            Try\n                connection.Open()\n\n                &#39; Start a local transaction.\n                transaction = connection.BeginTransaction()\n\n                &#39; Assign transaction object for a pending local transaction.\n                command.Connection = connection\n                command.Transaction = transaction\n\n                &#39; Execute the commands.\n                command.CommandText = _\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (100, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n                command.CommandText = _\n                    &quot;Insert into Region (RegionID, RegionDescription) VALUES (101, &#39;Description&#39;)&quot;\n                command.ExecuteNonQuery()\n\n                &#39; Commit the transaction.\n                transaction.Commit()\n                Console.WriteLine(&quot;Both records are written to database.&quot;)\n\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n                &#39; Try to rollback the transaction\n                Try\n                        transaction.Rollback()\n\n                Catch\n                    &#39; Do nothing here; transaction is not active.\n                End Try\n            End Try\n            &#39; The connection is automatically closed when the\n            &#39; code exits the Using block.\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ChangeDatabase_System_String_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ChangeDatabase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChangeDatabase(String)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the current database for an open <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void ChangeDatabase (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The database name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The database name is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The connection is not open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbexception\" data-linktype=\"relative-path\">OleDbException</a></div>\r\n                  </div>\r\n                  <p>Cannot change the database.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value supplied in the <code>database</code> parameter must be a valid database name. The <code>database</code> parameter cannot contain a null value, an empty string, or a string with only blank characters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> and displays some of its read-only properties.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.Database Example#2\">   static void ChangeDatabaseConnection(string connectionString)\n   {\n      using (OleDbConnection connection = new OleDbConnection(connectionString))\n      {\n         try\n         {\n            connection.Open();\n            Console.WriteLine(&quot;ServerVersion: {0} <br>Database: {1}&quot;,\n                connection.ServerVersion, connection.Database);\n            \n            connection.ChangeDatabase(&quot;Northwind&quot;);\n            Console.WriteLine(&quot;ServerVersion: {0} <br>Database: {1}&quot;,\n               connection.ServerVersion, connection.Database);\n\n         }\n         catch (Exception ex)\n         {\n            Console.WriteLine(ex.Message);\n         }\n         // The connection is automatically closed when the\n         // code exits the using block.\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.Database Example#2\">   Public Sub ChangeDatabaseConnection(ByVal connectionString As String)\n\n      Using connection As New OleDbConnection(connectionString)\n         Try\n            connection.Open()\n            Console.WriteLine(&quot;Server Version: {0} Database: {1}&quot;, _\n                connection.ServerVersion, connection.Database)\n            connection.ChangeDatabase(&quot;Northwind&quot;)\n            Console.WriteLine(&quot;Server Version: {0} Database: {1}&quot;, _\n               connection.ServerVersion, connection.Database)\n\n         Catch ex As Exception\n            Console.WriteLine(ex.Message)\n         End Try\n         &#39; The connection is automatically closed when the\n         &#39; code exits the Using block.\n      End Using\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_Close\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the connection to the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Close method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If Close is called while handling a <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_StateChange\" data-linktype=\"relative-path\">StateChange</a> event, no additional <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_StateChange\" data-linktype=\"relative-path\">StateChange</a> events are fired.  </p>\n<p> An application can call Close more than one time. No exception is generated.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not call Close or <strong>Dispose</strong> on an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>, an <a class=\"xref\" href=\"system.data.oledb.oledbdatareader\" data-linktype=\"relative-path\">OleDbDataReader</a>, or any other managed object in the <code>Finalize</code> method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a <code>Finalize</code> method in your class definition. For more information, see <a href=\"../Topic/Garbage%20Collection.md\" data-linktype=\"relative-path\">Garbage Collection</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_CreateCommand\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_CreateCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateCommand()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns an <a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a> object associated with the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.OleDb.OleDbCommand CreateCommand ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.oledb.oledbcommand\" data-linktype=\"relative-path\">OleDbCommand</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_CreateDbCommand\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_CreateDbCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateDbCommand()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Data.Common.DbCommand CreateDbCommand ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbcommand\" data-linktype=\"relative-path\">DbCommand</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_EnlistDistributedTransaction_System_EnterpriseServices_ITransaction_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_EnlistDistributedTransaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistDistributedTransaction(ITransaction)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists in the specified transaction as a distributed transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>transaction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">System.EnterpriseServices.ITransaction</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to an existing <span class=\"xref\">stem.EnterpriseServices.ITransaction</span> in which to enlist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>New in ADO.NET 2.0 is support for using the <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_EnlistTransaction_\" data-linktype=\"relative-path\">EnlistTransaction</a> method to enlist in a distributed transaction. Because it enlists a connection in a <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance, <strong>EnlistTransaction</strong> takes advantage of functionality available in the <a class=\"xref\" href=\"system.transactions\" data-linktype=\"relative-path\">System.Transactions</a> namespace for managing distributed transactions, making it preferable to <strong>EnlistDistributedTransaction</strong> for this purpose. For more information, see <a href=\"../Topic/Distributed%20Transactions.md\" data-linktype=\"relative-path\">Distributed Transactions</a>.  </p>\n<p> You can continue to enlist in an existing distributed transaction using the EnlistDistributedTransaction method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see <a href=\"../Topic/Distributed%20Transactions.md\" data-linktype=\"relative-path\">Distributed Transactions</a>.  </p>\n<p> EnlistDistributedTransaction returns an exception if the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> has already started a transaction using <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an &lt;xref:System.Data.OleDbClient.OleDbCommand&gt; object), EnlistDistributedTransaction rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_BeginTransaction_\" data-linktype=\"relative-path\">BeginTransaction</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_EnlistTransaction_System_Transactions_Transaction_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_EnlistTransaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnlistTransaction(Transaction)</div>        \r\n          </div>\r\n    \r\n            <p>Enlists in the specified transaction as a distributed transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EnlistTransaction (System.Transactions.Transaction transaction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>transaction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A reference to an existing <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> in which to enlist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>New in ADO.NET 2.0 is support for using the <a class=\"xref\" href=\"system.data.common.dbconnection#System_Data_Common_DbConnection_EnlistTransaction_\" data-linktype=\"relative-path\">EnlistTransaction</a> method to enlist in a distributed transaction. Because it enlists a connection in a <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> instance, <strong>EnlistTransaction</strong> takes advantage of functionality available in the <a class=\"xref\" href=\"system.transactions\" data-linktype=\"relative-path\">System.Transactions</a> namespace for managing distributed transactions, making it preferable to <strong>EnlistDistributedTransaction</strong>, which uses a &lt;xref:System.EnterpriseServices.ITransaction&gt; object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see <a href=\"../Topic/Distributed%20Transactions.md\" data-linktype=\"relative-path\">Distributed Transactions</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_GetOleDbSchemaTable_System_Guid_System_Object___\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_GetOleDbSchemaTable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOleDbSchemaTable(Guid,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schema</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.data.oledb.oledbschemaguid\" data-linktype=\"relative-path\">OleDbSchemaGuid</a> values that specifies the schema table to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>restrictions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains the requested schema information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbexception\" data-linktype=\"relative-path\">OleDbException</a></div>\r\n                  </div>\r\n                  <p>The specified set of restrictions is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> is closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified schema rowset is not supported by the OLE DB provider.  </p>\n<p> -or-  </p>\n<p> The <code>schema</code> parameter contains a value of <a class=\"xref\" href=\"system.data.oledb.oledbschemaguid#System_Data_OleDb_OleDbSchemaGuid_DbInfoLiterals\" data-linktype=\"relative-path\">DbInfoLiterals</a> and the <code>restrictions</code> parameter contains one or more restrictions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The schema table is returned as a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that has the same format as the OLE DB schema rowset specified by the <code>schema</code> parameter. Use the <code>restrictions</code> parameter to filter the rows to be returned in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> (for example, by specifying restrictions for table name, type, owner, or schema). When you pass values in the array, include empty strings or nulls for array elements that do not contain values. If you pass an empty array to <code>restrictions</code>, all rows (one for each table) are returned in default order. Values in the array correspond to the order of the columns in the source table and <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>. Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset. For example, the first element in the restrictions array is compared to first column in the rowset. If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> method calls the underlying OLE DB <strong>IDBSchemaRowset::GetRowset</strong> method using standard common language runtime conversion rules. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061\" data-linktype=\"external\">COM Data Types</a>.  </p>\n<p> You can retrieve information about literals by using <a class=\"xref\" href=\"system.data.oledb.oledbschemaguid#System_Data_OleDb_OleDbSchemaGuid_DbInfoLiterals\" data-linktype=\"relative-path\">DbInfoLiterals</a>. This provides information equivalent to calling the OLE DB <strong>IDBInfo::GetLiteralInfo</strong> interface, or the ADO <strong>Connection.OpenSchema</strong> method with the <code>adSchemaDBInfoLiterals</code> constant.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following sample returns a list of tables in a database.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1\">    static DataTable GetSchemaTable(string connectionString)\n    {\n        using (OleDbConnection connection = new \n                   OleDbConnection(connectionString))\n        {\n            connection.Open();\n            DataTable schemaTable = connection.GetOleDbSchemaTable(\n                OleDbSchemaGuid.Tables,\n                new object[] { null, null, null, &quot;TABLE&quot; });\n            return schemaTable;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1\">    Public Function GetSchemaTable(ByVal connectionString As String) _\n        As DataTable\n\n        Using connection As New OleDbConnection(connectionString)\n            connection.Open()\n\n            Dim schemaTable As DataTable = _\n                connection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, _\n                New Object() {Nothing, Nothing, Nothing, &quot;TABLE&quot;})\n            Return schemaTable\n        End Using\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_GetSchema\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_GetSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSchema()</div>        \r\n          </div>\r\n    \r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Data.DataTable GetSchema ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains schema information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_GetSchema_System_String_\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_GetSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSchema(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> using the specified string for the schema name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Data.DataTable GetSchema (string collectionName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collectionName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the name of the schema to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains schema information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When <code>collectionName</code> is specified as null, the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> will contain information about all the metadata that is available, and its restrictions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_GetSchema_System_String_System_String___\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_GetSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSchema(String,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns schema information for the data source of this <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> using the specified string for the schema name and the specified string array for the restriction values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collectionName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the name of the schema to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>restrictionValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies a set of restriction values for the requested schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> that contains schema information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When <code>collectionName</code> is specified as null, the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> will contain information about all the metadata that is available, and its restrictions.  </p>\n<p> The <code>restrictionValues</code> parameter can supply <em>n</em> depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.  </p>\n<p> An example of this is the &quot;Tables&quot; collection. If the &quot;Tables&quot; collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner &quot;Carl,&quot; you must pass in the following values (at a minimum): null, &quot;Carl&quot;. If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (&quot;&quot;) is considered to be the value for the specified parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_Open\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_Open_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Open()</div>        \r\n          </div>\r\n    \r\n            <p>Opens a database connection with the property settings specified by the <span class=\"xref\">stem.Data.OleDb.OleDbConnection.ConnectionString*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Open ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The connection is already open.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.oledb.oledbexception\" data-linktype=\"relative-path\">OleDbException</a></div>\r\n                  </div>\r\n                  <p>A connection-level error occurred while opening the connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source. You can open more than one DataReader on a single <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>. If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Close_\" data-linktype=\"relative-path\">Close</a> or <strong>Dispose</strong>, or using the connection within a <code>Using</code> statement.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ReleaseObjectPool\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ReleaseObjectPool_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseObjectPool()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object pool can be released when the last underlying connection is released.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ReleaseObjectPool ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>ReleaseObjectPool</code> can be called to free resources that would otherwise be reserved for pooled <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> objects. You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active. Note that calling the method alone does not actually release the active connections that exist in the pool.  </p>\n<p> The following must occur before the pool is finally disposed:  </p>\n<ol>\n<li><p>Call <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Close_\" data-linktype=\"relative-path\">Close</a> to return the connection object to the pool.  </p>\n</li>\n<li><p>Allow each connection object to time out of the pool.  </p>\n</li>\n<li><p>Call ReleaseObjectPool.  </p>\n</li>\n<li><p>Invoke garbage collection.  </p>\n<p>Conversely, if you call <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_Close_\" data-linktype=\"relative-path\">Close</a> on all active connections, and invoke garbage collection, but do not call ReleaseObjectPool, the resources reserved for the pooled objects will remain available.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbConnection.ReleaseObjectPool Example#1\">    static void OpenConnection(string connectionString)\n    {\n        using (OleDbConnection connection = new OleDbConnection(connectionString))\n        {\n            try\n            {\n                connection.Open();\n                Console.WriteLine(&quot;Connection.State: {0}&quot;, connection.State);\n\n                connection.Close();\n                OleDbConnection.ReleaseObjectPool();\n                Console.WriteLine(&quot;Connection.State: {0}&quot;, connection.State);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n            // The connection is automatically closed when the\n            // code exits the using block.\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbConnection.ReleaseObjectPool Example#1\">    Public Sub OpenConnection(ByVal connectionString As String)\n\n        Using connection As New OleDbConnection(connectionString)\n            Try\n                connection.Open()\n                Console.WriteLine(&quot;Connection.State: {0}&quot;, _\n                    connection.State)\n\n                connection.Close()\n                OleDbConnection.ReleaseObjectPool()\n                Console.WriteLine(&quot;Connection.State: {0}&quot;, _\n                    connection.State)\n\n            Catch ex As Exception\n                Console.WriteLine(ex.Message)\n            End Try\n        End Using\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_ResetState\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_ResetState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetState()</div>        \r\n          </div>\r\n    \r\n            <p>Updates the <span class=\"xref\">stem.Data.OleDb.OleDbConnection.State*</span> property of the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some OLE DB providers can check the current state of the connection. For example, if the database server has recycled since you opened your <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a>, the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_State_\" data-linktype=\"relative-path\">State</a> property will continue to return <code>Open</code>. If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the ResetState method and then checking the <a class=\"xref\" href=\"system.data.oledb.oledbconnection#System_Data_OleDb_OleDbConnection_State_\" data-linktype=\"relative-path\">State</a> property will tell you that the connection is no longer open. The ResetState method relies on functionality in the OLE DB Provider to verify the current state of the connection. To determine if your OLE DB Provider supports this functionality, check the provider&#39;s documentation for information on DBPROP_CONNECTIONSTATUS.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_InfoMessage\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InfoMessage</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the provider sends a warning or an informational message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clients that want to process warnings or informational messages sent by the server should create an <a class=\"xref\" href=\"system.data.oledb.oledbinfomessageeventhandler\" data-linktype=\"relative-path\">OleDbInfoMessageEventHandler</a> delegate to listen to this event.  </p>\n<p> The InfoMessage event occurs when a message with low severity is returned from the data source. Low severity messages are those that do not cause an exception. For Microsoft SQL Server, this includes error messages that have a severity of 10 or less  </p>\n<p> For more information and an example, see <a href=\"../Topic/Connection%20Events.md\" data-linktype=\"relative-path\">Connection Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_OleDb_OleDbConnection_System_ICloneable_Clone\">\r\n    \r\n            <a id=\"System_Data_OleDb_OleDbConnection_System_ICloneable_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICloneable.Clone()</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.ICloneable.Clone*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object ICloneable.Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that is a copy of this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> instance is cast to an <a class=\"xref\" href=\"system.icloneable\" data-linktype=\"relative-path\">ICloneable</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.OleDb.OleDbConnection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.OleDb.OleDbConnection.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.BeginDbTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.BeginTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ChangeDatabase\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.Close\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ConnectionString\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ConnectionTimeout\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.CreateCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.CreateDbCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.Database\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.EnlistTransaction\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.GetSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.InfoMessage\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.add_InfoMessage\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.remove_InfoMessage\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.Open\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.Provider\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ReleaseObjectPool\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ResetState\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ServerVersion\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.State\">\r\n<meta name=\"APIName\" content=\"System.Data.OleDb.OleDbConnection.ICloneable.Clone\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a3046346-2a7c-a13a-710b-0f50d07cb7ad\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Data.OleDb\\OleDbConnection.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an open connection to a data source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.OleDb/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.OleDb.OleDbConnection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.OleDb.OleDbConnection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.OleDb.OleDbConnection.yml","open_to_public_contributors":true,"api_name":["System.Data.OleDb.OleDbConnection","System.Data.OleDb.OleDbConnection..ctor","System.Data.OleDb.OleDbConnection.BeginDbTransaction","System.Data.OleDb.OleDbConnection.BeginTransaction","System.Data.OleDb.OleDbConnection.ChangeDatabase","System.Data.OleDb.OleDbConnection.Close","System.Data.OleDb.OleDbConnection.ConnectionString","System.Data.OleDb.OleDbConnection.ConnectionTimeout","System.Data.OleDb.OleDbConnection.CreateCommand","System.Data.OleDb.OleDbConnection.CreateDbCommand","System.Data.OleDb.OleDbConnection.Database","System.Data.OleDb.OleDbConnection.DataSource","System.Data.OleDb.OleDbConnection.Dispose","System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction","System.Data.OleDb.OleDbConnection.EnlistTransaction","System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable","System.Data.OleDb.OleDbConnection.GetSchema","System.Data.OleDb.OleDbConnection.InfoMessage","System.Data.OleDb.OleDbConnection.add_InfoMessage","System.Data.OleDb.OleDbConnection.remove_InfoMessage","System.Data.OleDb.OleDbConnection.Open","System.Data.OleDb.OleDbConnection.Provider","System.Data.OleDb.OleDbConnection.ReleaseObjectPool","System.Data.OleDb.OleDbConnection.ResetState","System.Data.OleDb.OleDbConnection.ServerVersion","System.Data.OleDb.OleDbConnection.State","System.Data.OleDb.OleDbConnection.ICloneable.Clone"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.OleDb.OleDbConnection","System::Data::OleDb::OleDbConnection","System.Data.OleDb.OleDbConnection.#ctor","System::Data::OleDb::OleDbConnection::#ctor","System.Data.OleDb.OleDbConnection.BeginDbTransaction","System::Data::OleDb::OleDbConnection::BeginDbTransaction","System.Data.OleDb.OleDbConnection.BeginTransaction","System::Data::OleDb::OleDbConnection::BeginTransaction","System.Data.OleDb.OleDbConnection.ChangeDatabase","System::Data::OleDb::OleDbConnection::ChangeDatabase","System.Data.OleDb.OleDbConnection.Close","System::Data::OleDb::OleDbConnection::Close","System.Data.OleDb.OleDbConnection.ConnectionString","System::Data::OleDb::OleDbConnection::ConnectionString","System.Data.OleDb.OleDbConnection.ConnectionTimeout","System::Data::OleDb::OleDbConnection::ConnectionTimeout","System.Data.OleDb.OleDbConnection.CreateCommand","System::Data::OleDb::OleDbConnection::CreateCommand","System.Data.OleDb.OleDbConnection.CreateDbCommand","System::Data::OleDb::OleDbConnection::CreateDbCommand","System.Data.OleDb.OleDbConnection.Database","System::Data::OleDb::OleDbConnection::Database","System.Data.OleDb.OleDbConnection.DataSource","System::Data::OleDb::OleDbConnection::DataSource","System.Data.OleDb.OleDbConnection.Dispose","System::Data::OleDb::OleDbConnection::Dispose","System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction","System::Data::OleDb::OleDbConnection::EnlistDistributedTransaction","System.Data.OleDb.OleDbConnection.EnlistTransaction","System::Data::OleDb::OleDbConnection::EnlistTransaction","System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable","System::Data::OleDb::OleDbConnection::GetOleDbSchemaTable","System.Data.OleDb.OleDbConnection.GetSchema","System::Data::OleDb::OleDbConnection::GetSchema","System.Data.OleDb.OleDbConnection.InfoMessage","System::Data::OleDb::OleDbConnection::InfoMessage","System.Data.OleDb.OleDbConnection.Open","System::Data::OleDb::OleDbConnection::Open","System.Data.OleDb.OleDbConnection.Provider","System::Data::OleDb::OleDbConnection::Provider","System.Data.OleDb.OleDbConnection.ReleaseObjectPool","System::Data::OleDb::OleDbConnection::ReleaseObjectPool","System.Data.OleDb.OleDbConnection.ResetState","System::Data::OleDb::OleDbConnection::ResetState","System.Data.OleDb.OleDbConnection.ServerVersion","System::Data::OleDb::OleDbConnection::ServerVersion","System.Data.OleDb.OleDbConnection.State","System::Data::OleDb::OleDbConnection::State","System.Data.OleDb.OleDbConnection.System#ICloneable#Clone","System::Data::OleDb::OleDbConnection::System#ICloneable#Clone"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a3046346-2a7c-a13a-710b-0f50d07cb7ad","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Data.OleDb\\OleDbConnection.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.OleDb/OleDbConnection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OleDbConnection class | Microsoft Docs","_op_ogTitle":"OleDbConnection class","description":"Represents an open connection to a data source.\n","toc_asset_id":"_splitted/System.Data.OleDb/toc.json","toc_rel":"_splitted/System.Data.OleDb/toc.json","source_url":"","ms.assetid":"System.Data.OleDb.OleDbConnection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.oledb.oledbconnection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.oledb.oledbconnection","fileRelativePath":"System.Data.OleDb.OleDbConnection.html"},"themesRelativePathToOutputRoot":"_themes/"}