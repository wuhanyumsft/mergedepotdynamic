{"content":"    \r\n    <h1 id=\"System_Security_Permissions_RegistryPermission\">\r\n      <span class=\"lang-csharp\">RegistryPermission</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls the ability to access registry variables. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission\" data-linktype=\"relative-path\">System.Security.CodeAccessPermission</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RegistryPermission</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert\" data-linktype=\"relative-path\">Assert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Demand\" data-linktype=\"relative-path\">Demand()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny\" data-linktype=\"relative-path\">Deny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_PermitOnly\" data-linktype=\"relative-path\">PermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAll\" data-linktype=\"relative-path\">RevertAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAssert\" data-linktype=\"relative-path\">RevertAssert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertDeny\" data-linktype=\"relative-path\">RevertDeny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertPermitOnly\" data-linktype=\"relative-path\">RevertPermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>RegistryPermission describes protected operations on registry variables. Registry variables should not be stored in memory locations where code without RegistryPermission can access them. If the registry object is passed to an untrusted caller it can be misused.  </p>\n<p> The allowed registry access types are defined by <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>. If more than one type of access is desired, they can be combined using the bitwise OR operation as shown in the code sample that follows.  </p>\n<p> Registry permission is defined in terms of canonical absolute paths; checks should always be made with canonical pathnames. Key access implies access to all values it contains and all variables under it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In versions of the .NET Framework before the .NET Framework 4, you could use the <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> method to prevent inadvertent access to system resources by trusted code. <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see <a href=\"../Topic/How%20to:%20Run%20Partially%20Trusted%20Code%20in%20a%20Sandbox.md\" data-linktype=\"relative-path\">How to: Run Partially Trusted Code in a Sandbox</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_PermissionState_\" data-linktype=\"self-bookmark\">RegistryPermission(PermissionState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with either fully restricted or unrestricted permission as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_RegistryPermissionAccess_System_String_\" data-linktype=\"self-bookmark\">RegistryPermission(RegistryPermissionAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with the specified access to the specified registry variables.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_RegistryPermissionAccess_System_Security_AccessControl_AccessControlActions_System_String_\" data-linktype=\"self-bookmark\">RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with the specified access to the specified registry variables and the specified access rights to registry control information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_AddPathList_System_Security_Permissions_RegistryPermissionAccess_System_String_\" data-linktype=\"self-bookmark\">AddPathList(RegistryPermissionAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds access for the specified registry variables to the existing state of the permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_AddPathList_System_Security_Permissions_RegistryPermissionAccess_System_Security_AccessControl_AccessControlActions_System_String_\" data-linktype=\"self-bookmark\">AddPathList(RegistryPermissionAccess,AccessControlActions,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds access for the specified registry variables to the existing state of the permission, specifying registry permission access and access control actions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_FromXml_System_Security_SecurityElement_\" data-linktype=\"self-bookmark\">FromXml(SecurityElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_GetPathList_System_Security_Permissions_RegistryPermissionAccess_\" data-linktype=\"self-bookmark\">GetPathList(RegistryPermissionAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets paths for all registry variables with the specified <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_Intersect_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Intersect(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_IsSubsetOf_System_Security_IPermission_\" data-linktype=\"self-bookmark\">IsSubsetOf(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_IsUnrestricted\" data-linktype=\"self-bookmark\">IsUnrestricted()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether the current permission is unrestricted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_SetPathList_System_Security_Permissions_RegistryPermissionAccess_System_String_\" data-linktype=\"self-bookmark\">SetPathList(RegistryPermissionAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets new access for the specified registry variable names to the existing state of the permission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_ToXml\" data-linktype=\"self-bookmark\">ToXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Permissions_RegistryPermission_Union_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Union(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a permission that is the union of the current permission and the specified permission.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_PermissionState_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryPermission(PermissionState)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with either fully restricted or unrestricted permission as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryPermission (System.Security.Permissions.PermissionState state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>state</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Creates either fully restricted (<code>None</code>) or <code>Unrestricted</code> access to registry variables.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the RegistryPermission constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.RegistryPermission#7\">        readPerm2 = New RegistryPermission(PermissionState.None)\n        readPerm2.FromXml(readPerm1.ToXml())\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + readPerm2.ToString() + vbLf)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.RegistryPermission#7\">        readPerm2 = new RegistryPermission(PermissionState.None);\n        readPerm2.FromXml(readPerm1.ToXml());\n        Console.WriteLine(&quot;Result of ToFromXml = &quot; + readPerm2.ToString() + &quot;<br>&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_RegistryPermissionAccess_System_String_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryPermission(RegistryPermissionAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with the specified access to the specified registry variables.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of registry variables (semicolon-separated) to which access is granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>access</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> The <code>pathList</code> parameter is not a valid string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor allows only one of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values to be specified. This access applies to all listed registry variables. Use <a class=\"xref\" href=\"system.security.permissions.registrypermission#System_Security_Permissions_RegistryPermission_AddPathList_\" data-linktype=\"relative-path\">AddPathList</a> to define more complicated permissions.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the RegistryPermission constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.RegistryPermission#10\">            Dim readPerm1 As RegistryPermission\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1 = New RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.RegistryPermission#10\">            RegistryPermission readPerm1;\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1 = new RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission__ctor_System_Security_Permissions_RegistryPermissionAccess_System_Security_AccessControl_AccessControlActions_System_String_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.permissions.registrypermission\" data-linktype=\"relative-path\">RegistryPermission</a> class with the specified access to the specified registry variables and the specified access rights to registry control information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontrolactions\" data-linktype=\"relative-path\">AccessControlActions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontrolactions\" data-linktype=\"relative-path\">AccessControlActions</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of registry variables (semicolon-separated) to which access is granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>access</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> The <code>pathList</code> parameter is not a valid string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor allows only one of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values to be specified. This access applies to all listed registry variables. Use <a class=\"xref\" href=\"system.security.permissions.registrypermission#System_Security_Permissions_RegistryPermission_AddPathList_\" data-linktype=\"relative-path\">AddPathList</a> to define more complicated permissions.  </p>\n<p> The <code>control</code> parameter specifies whether the access control list (ACL) for the registry keys specified by <code>pathList</code> can be changed, viewed, or cannot be accessed.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> An access control list (ACL) describes individuals or groups who have, or do not have, rights to specific actions on the specified registry keys.  The ability to change or view an ACL is an important permission and should be granted with caution.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_AddPathList_System_Security_Permissions_RegistryPermissionAccess_System_String_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_AddPathList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPathList(RegistryPermissionAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds access for the specified registry variables to the existing state of the permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of registry variables (semicolon-separated).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>access</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> The <code>pathList</code> parameter is not a valid string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to modify access to registry variables by adding to the state of the current permission object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the AddPathList method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.RegistryPermission#9\">    &#39; AddPathList adds access for the specified registry variables to the existing state of the permission.\n    &#39; SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    &#39; GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    Private Shared Function SetGetPathListDemo() As Boolean\n        Try\n            Console.WriteLine(&quot;********************************************************&quot; + vbLf)\n            Dim readPerm1 As RegistryPermission\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1 = New RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&#39; to the write access list, &quot; + &quot;and &quot; + vbLf + &quot; &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&#39; &quot; + &quot;to the read access list.&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Setting read access rights to &quot; + vbLf + &quot;&#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1.SetPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list after SetPathList = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Write access = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Write))\n            Console.WriteLine(&quot;Write access Registry variables = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.AllAccess))\n        Catch e As ArgumentException\n            &#39; RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot; + _\n            &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot; + _\n            &quot;type of registry variable access : &quot; + vbLf + e.Message)\n        End Try\n\n        Return True\n\n    End Function &#39;SetGetPathListDemo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.RegistryPermission#9\">    // AddPathList adds access for the specified registry variables to the existing state of the permission.\n    // SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    // GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    private static bool SetGetPathListDemo()\n    {\n        try\n        {\n            Console.WriteLine(&quot;********************************************************<br>&quot;);\n            RegistryPermission readPerm1;\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1 = new RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&#39; to the write access list, &quot;\n                + &quot;and <br> &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&#39; &quot;\n                + &quot;to the read access list.&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Setting read access rights to <br>&#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1.SetPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list after SetPathList = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Write access = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Write));\n            Console.WriteLine(&quot;Write access Registry variables = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.AllAccess));\n        }\n        catch (ArgumentException e)\n        {\n            // RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot;\n                + &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot;\n                + &quot;type of registry variable access : <br>&quot; + e);\n        }\n\n        return true;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_AddPathList_System_Security_Permissions_RegistryPermissionAccess_System_Security_AccessControl_AccessControlActions_System_String_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_AddPathList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPathList(RegistryPermissionAccess,AccessControlActions,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds access for the specified registry variables to the existing state of the permission, specifying registry permission access and access control actions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>control</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.accesscontrol.accesscontrolactions\" data-linktype=\"relative-path\">AccessControlActions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.accesscontrol.accesscontrolactions\" data-linktype=\"relative-path\">AccessControlActions</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of registry variables (separated by semicolons).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>access</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> The <code>pathList</code> parameter is not a valid string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to modify access to registry variables by adding the set of their paths to the state of the current permission object. This overload allows you to specify the access control action as will as the registry permission access.  </p>\n<p> The <code>control</code> parameter specifies whether the access control list (ACL) for the registry keys specified by <code>pathList</code> can be changed, viewed, or cannot be accessed.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> An access control list (ACL) describes individuals or groups who have, or do not have, rights to specific actions on the specified registry keys.  The ability to change or view an ACL is an important permission and should be granted with caution.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_Copy\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns an identical copy of the current permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A copy of the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A copy of a permission represents the same access to resources as the original permission.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_FromXml_System_Security_SecurityElement_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_FromXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromXml(SecurityElement)</div>        \r\n          </div>\r\n    \r\n            <p>Reconstructs a permission with a specified state from an XML encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void FromXml (System.Security.SecurityElement esd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>esd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML encoding to use to reconstruct the permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>esd</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>esd</code> parameter is not a valid permission element.  </p>\n<p> -or-  </p>\n<p> The <code>esd</code> parameter&#39;s version number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_GetPathList_System_Security_Permissions_RegistryPermissionAccess_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_GetPathList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPathList(RegistryPermissionAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Gets paths for all registry variables with the specified <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values that represents a single type of registry variable access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A list of the registry variables (semicolon-separated) with the specified <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>access</code> is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> <code>access</code> is <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, which represents more than one type of registry variable access, or <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, which does not represent any type of registry variable access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to get the state of the current permission. You must call this method separately for each type of access.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>access</code> parameter is limited to the values of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, which represent single types of registry variable access. Those values are <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, and <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>. The values acceptable to <code>access</code> do not include <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> and <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>, which do not represent single types of registry variable access.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the GetPathList method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.RegistryPermission#9\">    &#39; AddPathList adds access for the specified registry variables to the existing state of the permission.\n    &#39; SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    &#39; GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    Private Shared Function SetGetPathListDemo() As Boolean\n        Try\n            Console.WriteLine(&quot;********************************************************&quot; + vbLf)\n            Dim readPerm1 As RegistryPermission\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1 = New RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&#39; to the write access list, &quot; + &quot;and &quot; + vbLf + &quot; &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&#39; &quot; + &quot;to the read access list.&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Setting read access rights to &quot; + vbLf + &quot;&#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1.SetPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list after SetPathList = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Write access = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Write))\n            Console.WriteLine(&quot;Write access Registry variables = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.AllAccess))\n        Catch e As ArgumentException\n            &#39; RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot; + _\n            &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot; + _\n            &quot;type of registry variable access : &quot; + vbLf + e.Message)\n        End Try\n\n        Return True\n\n    End Function &#39;SetGetPathListDemo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.RegistryPermission#9\">    // AddPathList adds access for the specified registry variables to the existing state of the permission.\n    // SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    // GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    private static bool SetGetPathListDemo()\n    {\n        try\n        {\n            Console.WriteLine(&quot;********************************************************<br>&quot;);\n            RegistryPermission readPerm1;\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1 = new RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&#39; to the write access list, &quot;\n                + &quot;and <br> &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&#39; &quot;\n                + &quot;to the read access list.&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Setting read access rights to <br>&#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1.SetPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list after SetPathList = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Write access = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Write));\n            Console.WriteLine(&quot;Write access Registry variables = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.AllAccess));\n        }\n        catch (ArgumentException e)\n        {\n            // RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot;\n                + &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot;\n                + &quot;type of registry variable access : <br>&quot; + e);\n        }\n\n        return true;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_Intersect_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a permission that is the intersection of the current permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Intersect (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to intersect with the current permission. It must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <code>null</code> if the intersection is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_IsSubsetOf_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_IsSubsetOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSubsetOf(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current permission is a subset of the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsSubsetOf (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current permission is a subset of the specified permission; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\. If this method returns <code>true</code>, the current permission represents no more access to the protected resource than does the specified permission.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_IsUnrestricted\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_IsUnrestricted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUnrestricted()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether the current permission is unrestricted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUnrestricted ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current permission is unrestricted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An unrestricted permission represents access to any and all resources protected by the permission.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_SetPathList_System_Security_Permissions_RegistryPermissionAccess_System_String_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_SetPathList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetPathList(RegistryPermissionAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Sets new access for the specified registry variable names to the existing state of the permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A list of registry variables (semicolon-separated).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>access</code> parameter is not a valid value of <a class=\"xref\" href=\"system.security.permissions.registrypermissionaccess\" data-linktype=\"relative-path\">RegistryPermissionAccess</a>.  </p>\n<p> -or-  </p>\n<p> The <code>pathList</code> parameter is not a valid string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The previous state of the current permission is overwritten.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the SetPathList method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Permissions.RegistryPermission#9\">    &#39; AddPathList adds access for the specified registry variables to the existing state of the permission.\n    &#39; SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    &#39; GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    Private Shared Function SetGetPathListDemo() As Boolean\n        Try\n            Console.WriteLine(&quot;********************************************************&quot; + vbLf)\n            Dim readPerm1 As RegistryPermission\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1 = New RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&#39; to the write access list, &quot; + &quot;and &quot; + vbLf + &quot; &#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&#39; &quot; + &quot;to the read access list.&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION&quot;)\n            readPerm1.AddPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\FloatingPointProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Setting read access rights to &quot; + vbLf + &quot;&#39;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&#39;&quot;)\n            readPerm1.SetPathList(RegistryPermissionAccess.Read, &quot;HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0&quot;)\n            Console.WriteLine(&quot;Read access list after SetPathList = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Read))\n            Console.WriteLine(&quot;Write access = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.Write))\n            Console.WriteLine(&quot;Write access Registry variables = &quot; + vbLf + readPerm1.GetPathList(RegistryPermissionAccess.AllAccess))\n        Catch e As ArgumentException\n            &#39; RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot; + _\n            &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot; + _\n            &quot;type of registry variable access : &quot; + vbLf + e.Message)\n        End Try\n\n        Return True\n\n    End Function &#39;SetGetPathListDemo\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Permissions.RegistryPermission#9\">    // AddPathList adds access for the specified registry variables to the existing state of the permission.\n    // SetPathList sets new access for the specified registry variable names to the existing state of the permission.\n    // GetPathList gets paths for all registry variables with the specified RegistryPermissionAccess.\n    private static bool SetGetPathListDemo()\n    {\n        try\n        {\n            Console.WriteLine(&quot;********************************************************<br>&quot;);\n            RegistryPermission readPerm1;\n            Console.WriteLine(&quot;Creating RegistryPermission with AllAccess rights for &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1 = new RegistryPermission(RegistryPermissionAccess.AllAccess, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Adding &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&#39; to the write access list, &quot;\n                + &quot;and <br> &#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&#39; &quot;\n                + &quot;to the read access list.&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Write, &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION&quot;);\n            readPerm1.AddPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\FloatingPointProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list before SetPathList = &quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Setting read access rights to <br>&#39;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&#39;&quot;);\n            readPerm1.SetPathList(RegistryPermissionAccess.Read,\n                &quot;HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0&quot;);\n            Console.WriteLine(&quot;Read access list after SetPathList = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Read));\n            Console.WriteLine(&quot;Write access = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.Write));\n            Console.WriteLine(&quot;Write access Registry variables = <br>&quot; +\n                readPerm1.GetPathList(RegistryPermissionAccess.AllAccess));\n        }\n        catch (ArgumentException e)\n        {\n            // RegistryPermissionAccess.AllAccess can not be used as a parameter for GetPathList.\n            Console.WriteLine(&quot;An ArgumentException occured as a result of using AllAccess. &quot;\n                + &quot;AllAccess cannot be used as a parameter in GetPathList because it represents more than one &quot;\n                + &quot;type of registry variable access : <br>&quot; + e);\n        }\n\n        return true;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_ToXml\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_ToXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToXml()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XML encoding of the permission and its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.SecurityElement ToXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </div>\r\n                  <p>An XML encoding of the permission, including any state information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Permissions_RegistryPermission_Union_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Security_Permissions_RegistryPermission_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a permission that is the union of the current permission and the specified permission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Union (System.Security.IPermission other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A permission to combine with the current permission. It must be of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new permission that represents the union of the current permission and the specified permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>other</code> parameter is not <code>null</code> and is not of the same type as the current permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The result of a call to Union is a permission that represents all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.RegistryPermission.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.RegistryPermission.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.AddPathList\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.Copy\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.GetPathList\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.IsSubsetOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.IsUnrestricted\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.SetPathList\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.ToXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Permissions.RegistryPermission.Union\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ec1df5f0-0060-fa65-743f-2c751ae51374\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls the ability to access registry variables. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Permissions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Permissions.RegistryPermission\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Permissions.RegistryPermission.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Permissions.RegistryPermission.yml","open_to_public_contributors":true,"api_name":["System.Security.Permissions.RegistryPermission","System.Security.Permissions.RegistryPermission..ctor","System.Security.Permissions.RegistryPermission.AddPathList","System.Security.Permissions.RegistryPermission.Copy","System.Security.Permissions.RegistryPermission.FromXml","System.Security.Permissions.RegistryPermission.GetPathList","System.Security.Permissions.RegistryPermission.Intersect","System.Security.Permissions.RegistryPermission.IsSubsetOf","System.Security.Permissions.RegistryPermission.IsUnrestricted","System.Security.Permissions.RegistryPermission.SetPathList","System.Security.Permissions.RegistryPermission.ToXml","System.Security.Permissions.RegistryPermission.Union"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Permissions.RegistryPermission","System::Security::Permissions::RegistryPermission","System.Security.Permissions.RegistryPermission.#ctor","System::Security::Permissions::RegistryPermission::#ctor","System.Security.Permissions.RegistryPermission.AddPathList","System::Security::Permissions::RegistryPermission::AddPathList","System.Security.Permissions.RegistryPermission.Copy","System::Security::Permissions::RegistryPermission::Copy","System.Security.Permissions.RegistryPermission.FromXml","System::Security::Permissions::RegistryPermission::FromXml","System.Security.Permissions.RegistryPermission.GetPathList","System::Security::Permissions::RegistryPermission::GetPathList","System.Security.Permissions.RegistryPermission.Intersect","System::Security::Permissions::RegistryPermission::Intersect","System.Security.Permissions.RegistryPermission.IsSubsetOf","System::Security::Permissions::RegistryPermission::IsSubsetOf","System.Security.Permissions.RegistryPermission.IsUnrestricted","System::Security::Permissions::RegistryPermission::IsUnrestricted","System.Security.Permissions.RegistryPermission.SetPathList","System::Security::Permissions::RegistryPermission::SetPathList","System.Security.Permissions.RegistryPermission.ToXml","System::Security::Permissions::RegistryPermission::ToXml","System.Security.Permissions.RegistryPermission.Union","System::Security::Permissions::RegistryPermission::Union"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ec1df5f0-0060-fa65-743f-2c751ae51374","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Permissions/RegistryPermission.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RegistryPermission class | Microsoft Docs","_op_ogTitle":"RegistryPermission class","description":"Controls the ability to access registry variables. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Permissions/toc.json","toc_rel":"_splitted/System.Security.Permissions/toc.json","source_url":"","ms.assetid":"System.Security.Permissions.RegistryPermission","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.registrypermission","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.permissions.registrypermission","fileRelativePath":"System.Security.Permissions.RegistryPermission.html"},"themesRelativePathToOutputRoot":"_themes/"}