{"content":"    \r\n    <h1 id=\"System_Net_NetworkInformation_Ping\">\r\n      <span class=\"lang-csharp\">Ping</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Allows an application to determine whether a remote computer is accessible over the network.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class Ping : System.ComponentModel.Component</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Ping</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Applications use the Ping class to detect whether a remote computer is reachable.  </p>\n<p> Network topology can determine whether Ping can successfully contact a remote host. The presence and configuration of proxies, network address translation (NAT) equipment, or firewalls can prevent Ping from succeeding. A successful Ping indicates only that the remote host can be reached on the network; the presence of higher level services (such as a Web server) on the remote host is not guaranteed.  </p>\n<p> This class provides functionality similar to the Ping.exe command line tool. The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> and <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods send an Internet Control Message Protocol (ICMP) echo request message to a remote computer and waits for an ICMP echo reply message from that computer. For a detailed description of ICMP messages, see RFC 792, available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.  </p>\n<p> The following types are used with the Ping class and are described in detail below.  </p>\n<table>\n<thead>\n<tr>\n<th><strong>Type name</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a></td>\n<td>Defines status codes that describe the outcome of an ICMP echo request message.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></td>\n<td>Allows you to configure or retrieve the settings that control how many times the request packet can be forwarded (<a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a>), and whether it can be fragmented (<a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> ).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></td>\n<td>Contains the results of an ICMP echo request.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></td>\n<td>Thrown if an unrecoverable error occurs.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a></td>\n<td>Contains the data associated with <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> events, which are raised when a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call completes or is canceled.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a></td>\n<td>The delegate that provides the callback method invoked when a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call completes or is canceled.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> and <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods return the reply in a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object. The <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property returns an <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a> value to indicate the outcome of the request.  </p>\n<p> When sending the request, you must specify the remote computer. You can do this by providing a host name string, an IP address in string format, or an <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> object.  </p>\n<p> You can also specify any of the following types of information:  </p>\n<ul>\n<li><p>Data to accompany the request. Specifying <code>buffer</code> allows you to learn the amount of time required for a packet of a particular size to travel to and from the remote host and the maximum transmission unit of the network path. (See the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> or <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overloads that take a <code>buffer</code> parameter.)  </p>\n</li>\n<li><p>Whether the ICMP Echo packet can be fragmented in transit. (See the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property and the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> or <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overloads that take an <code>options</code> parameter.)  </p>\n</li>\n<li><p>How many times routing nodes, such as routers or gateways, can forward the packet before it either reaches the destination computer or is discarded. (See <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> and the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> or <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overloads that take an <code>options</code> parameter.)  </p>\n</li>\n<li><p>The time limit within which the reply must be received. (See the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> or <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overloads that take a <code>timeout</code> parameter.  </p>\n<p>The Ping class offers both synchronous and asynchronous methods for sending the request. If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous. If your application should not block, use the asynchronous <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods. A call to <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> executes in its own thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called for <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> events. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p>You cannot use the same instance of the Ping class to generate multiple simultaneous ICMP Echo requests. Calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> while a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call is in progress or calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> multiple times before all previous calls have completed causes an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping__ctor\" data-linktype=\"self-bookmark\">Ping()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> object, and optionally disposes of the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_OnPingCompleted_System_Net_NetworkInformation_PingCompletedEventArgs_\" data-linktype=\"self-bookmark\">OnPingCompleted(PingCompletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_\" data-linktype=\"self-bookmark\">Send(IPAddress)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_String_\" data-linktype=\"self-bookmark\">Send(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_\" data-linktype=\"self-bookmark\">Send(IPAddress,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_\" data-linktype=\"self-bookmark\">Send(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_System_Byte___\" data-linktype=\"self-bookmark\">Send(IPAddress,Int32,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_System_Byte___\" data-linktype=\"self-bookmark\">Send(String,Int32,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\" data-linktype=\"self-bookmark\">Send(IPAddress,Int32,Byte[],PingOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\" data-linktype=\"self-bookmark\">Send(String,Int32,Byte[],PingOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(IPAddress,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(IPAddress,Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(String,Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Object_\" data-linktype=\"self-bookmark\">SendAsync(IPAddress,Int32,Byte[],Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Byte___System_Object_\" data-linktype=\"self-bookmark\">SendAsync(String,Int32,Byte[],Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_System_Object_\" data-linktype=\"self-bookmark\">SendAsync(String,Int32,Byte[],PingOptions,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendAsyncCancel\" data-linktype=\"self-bookmark\">SendAsyncCancel()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_\" data-linktype=\"self-bookmark\">SendPingAsync(IPAddress)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_String_\" data-linktype=\"self-bookmark\">SendPingAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_\" data-linktype=\"self-bookmark\">SendPingAsync(IPAddress,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_\" data-linktype=\"self-bookmark\">SendPingAsync(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_System_Byte___\" data-linktype=\"self-bookmark\">SendPingAsync(IPAddress,Int32,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_System_Byte___\" data-linktype=\"self-bookmark\">SendPingAsync(String,Int32,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\" data-linktype=\"self-bookmark\">SendPingAsync(IPAddress,Int32,Byte[],PingOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\" data-linktype=\"self-bookmark\">SendPingAsync(String,Int32,Byte[],PingOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"self-bookmark\">PingCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping__ctor\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Ping()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Ping ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> instance. The complete example is available in the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLPingAsync#2\">   Ping ^ pingSender = gcnew Ping;\n   \n   // When the PingCompleted event is raised,\n   // the PingCompletedCallback method is called.\n   pingSender-&gt;PingCompleted += gcnew PingCompletedEventHandler( PingCompletedCallback );\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"NCLPingAsync#2\">            Ping pingSender = new Ping ();\n\n            // When the PingCompleted event is raised,\n            // the PingCompletedCallback method is called.\n            pingSender.PingCompleted += new PingCompletedEventHandler (PingCompletedCallback);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> object, and optionally disposes of the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to releases only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. The public <code>Dispose()</code> method invokes the protected Dispose method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> object references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_OnPingCompleted_System_Net_NetworkInformation_PingCompletedEventArgs_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_OnPingCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPingCompleted(PingCompletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes that inherit from the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class can override this method to perform additional tasks, such as logging the data contained in the <code>e</code> parameter.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPingCompleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(IPAddress)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message, if one was received, or describes the reason for the failure if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends to the host that is specified by <code>address</code> a 32 <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> data buffer with the ICMP echo message. The method waits five seconds for an ICMP echo reply message. If it does not receive a reply in that time, the method returns and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#3\">        public static void LocalPing ()\n        {\n            // Ping&#39;s the local machine.\n            Ping pingSender = new Ping ();\n            IPAddress address = IPAddress.Loopback;\n            PingReply reply = pingSender.Send (address);\n\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n            else\n            {\n                Console.WriteLine (reply.Status);\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#3\">void LocalPing()\n{\n   \n   // Ping&#39;s the local machine.\n   Ping ^ pingSender = gcnew Ping;\n   IPAddress^ address = IPAddress::Loopback;\n   PingReply ^ reply = pingSender-&gt;Send( address );\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n   else\n   {\n      Console::WriteLine( reply-&gt;Status );\n   }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends a 32 <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> data buffer with the ICMP echo message. The method waits five seconds for an ICMP echo reply message. If it does not receive a reply in that time, the method returns and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#2\">        public static void SimplePing ()\n        {\n            Ping pingSender = new Ping ();\n            PingReply reply = pingSender.Send (&quot;www.contoso.com&quot;);\n\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n            else\n            {\n                Console.WriteLine (reply.Status);\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#2\">void SimplePing()\n{\n   Ping ^ pingSender = gcnew Ping;\n   PingReply ^ reply = pingSender-&gt;Send( &quot;www.contoso.com&quot; );\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n   else\n   {\n      Console::WriteLine( reply-&gt;Status );\n   }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(IPAddress,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified in the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that demonstrates calling a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This method allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified in the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that demonstrates calling a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(IPAddress,Int32,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received. The method will return <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a> if the packet exceeds the Maximum Transmission Unit (MTU).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>, or the <code>buffer</code> size is greater than 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified in the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#6\">        public static void LocalPingTimeout ()\n        {\n            // Ping&#39;s the local machine.\n            Ping pingSender = new Ping ();\n            IPAddress address = IPAddress.Loopback;\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n\n            // Wait 10 seconds for a reply.\n            int timeout = 10000;\n            PingReply reply = pingSender.Send (address, timeout, buffer);\n\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n            else\n            {\n                Console.WriteLine (reply.Status);\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#6\">void LocalPingTimeout()\n{\n   \n   // Ping&#39;s the local machine.\n   Ping ^ pingSender = gcnew Ping;\n   IPAddress^ address = IPAddress::Loopback;\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   \n   // Wait 10 seconds for a reply.\n   int timeout = 10000;\n   PingReply ^ reply = pingSender-&gt;Send( address, timeout, buffer);\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n   else\n   {\n      Console::WriteLine( reply-&gt;Status );\n   }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String,Int32,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>, or the <code>buffer</code> size is greater than 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified in the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example that demonstrates how to call a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> overload, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(IPAddress,Int32,Byte[],PingOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message, if one was received, or provides the reason for the failure, if no message was received. The method will return <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a> if the packet exceeds the Maximum Transmission Unit (MTU).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>, or the <code>buffer</code> size is greater than 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#5\">        public static void ComplexLocalPing ()\n        {\n            // Ping&#39;s the local machine.\n            Ping pingSender = new Ping ();\n            IPAddress address = IPAddress.Loopback;\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n\n            // Wait 10 seconds for a reply.\n            int timeout = 10000;\n\n            // Set options for transmission:\n            // The data can go through 64 gateways or routers\n            // before it is destroyed, and the data packet\n            // cannot be fragmented.\n            PingOptions options = new PingOptions (64, true);\n            PingReply reply = pingSender.Send (address, timeout, buffer, options);\n\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n            else\n            {\n                Console.WriteLine (reply.Status);\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#5\">void ComplexLocalPing()\n{\n   \n   // Ping&#39;s the local machine.\n   Ping ^ pingSender = gcnew Ping;\n   IPAddress^ address = IPAddress::Loopback;\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   \n   // Wait 10 seconds for a reply.\n   int timeout = 10000;\n   \n   // Set options for transmission:\n   // The data can go through 64 gateways or routers\n   // before it is destroyed, and the data packet\n   // cannot be fragmented.\n   PingOptions ^ options = gcnew PingOptions( 64,true );\n   PingReply ^ reply = pingSender-&gt;Send( address, timeout, buffer, options );\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n   else\n   {\n      Console::WriteLine( reply-&gt;Status );\n   }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_Send_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_Send_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Send(String,Int32,Byte[],PingOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that provides information about the ICMP echo reply message if one was received, or provides the reason for the failure if no message was received.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is a zero length string.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>, or the <code>buffer</code> size is greater than 65500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#4\">        public static void ComplexPing ()\n        {\n            Ping pingSender = new Ping ();\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n\n            // Wait 10 seconds for a reply.\n            int timeout = 10000;\n\n            // Set options for transmission:\n            // The data can go through 64 gateways or routers\n            // before it is destroyed, and the data packet\n            // cannot be fragmented.\n            PingOptions options = new PingOptions (64, true);\n\n            // Send the request.\n            PingReply reply = pingSender.Send (&quot;www.contoso.com&quot;, timeout, buffer, options);\n\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n            else\n            {\n                Console.WriteLine (reply.Status);\n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#4\">void ComplexPing()\n{\n   Ping ^ pingSender = gcnew Ping;\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   \n   // Wait 10 seconds for a reply.\n   int timeout = 10000;\n   \n   // Set options for transmission:\n   // The data can go through 64 gateways or routers\n   // before it is destroyed, and the data packet\n   // cannot be fragmented.\n   PingOptions ^ options = gcnew PingOptions( 64,true );\n   \n   // Send the request.\n   PingReply ^ reply = pingSender-&gt;Send( &quot;www.contoso.com&quot;, timeout, buffer, options );\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n   else\n   {\n      Console::WriteLine( reply-&gt;Status );\n   }\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(IPAddress,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (System.Net.IPAddress address, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to the <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> method is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application should not block. Each call to this method executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. To specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event, you must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your application should block while waiting for a reply, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n</div>\n<p> This method sends a 32 <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> data buffer with the ICMP echo message. The method waits five seconds for an ICMP echo reply message. If it does not receive a reply in that time, the method returns and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example that demonstrates calling a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (string hostNameOrAddress, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to SendAsync method is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> could not be resolved to a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SendAsync method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the SendAsync method when your application should not block. Each call to this method executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. To specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event, you must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n</div>\n<p> This method sends a 32 <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> data buffer with the ICMP echo message. The method waits five seconds for an ICMP echo reply message. If it does not receive a reply in that time the method returns and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> The packet or packet fragments can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example that demonstrates calling the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(IPAddress,Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> method is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application should not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p> If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example that demonstrates calling a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(String,Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (string hostNameOrAddress, int timeout, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> could not be resolved to a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application should not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p> If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example that demonstrates calling the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(IPAddress,Int32,Byte[],Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sends the echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application should not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. To specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event, you must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your application blocks while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n</div>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For a code example that demonstrates calling a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Byte___System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(String,Int32,Byte[],Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> could not be resolved to a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application should not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object containing a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p> If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> This overload uses default settings for packet fragmentation and packet forwarding. The packet that contains the ICMP echo message can be fragmented in transit if the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers. To prevent fragmentation, use one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property to <code>true</code>. When <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>. The packet or packet fragments (if fragmented) can be forwarded by routing nodes 128 times before being discarded. To change this setting, use a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload that takes an <code>options</code> parameter, and set the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to the desired value. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call a <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> overload, see the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application must not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p> If your application blocks while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this method. For an implementation of the callback method, see the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method overload example section.  </p>\n<p> The following code example requires the following namespaces:  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#0\">using System;\nusing System.Net;\nusing System.Net.NetworkInformation;\nusing System.Text;\nusing System.Threading;\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#0\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Net;\nusing namespace System::Net::NetworkInformation;\nusing namespace System::Text;\nusing namespace System::Threading;\n</code></pre><p> The following code example sends an ICMP echo message asynchronously.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLPingSampler#7\">        public static void AsyncComplexLocalPing ()\n        {\n            // Get an object that will block the main thread.\n            AutoResetEvent waiter = new AutoResetEvent (false);\n\n            // Ping&#39;s the local machine.\n            Ping pingSender = new Ping ();\n\n            // When the PingCompleted event is raised,\n            // the PingCompletedCallback method is called.\n            pingSender.PingCompleted += new PingCompletedEventHandler (PingCompletedCallback);\n\n            IPAddress address = IPAddress.Loopback;\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n\n            // Wait 10 seconds for a reply.\n            int timeout = 10000;\n\n            // Set options for transmission:\n            // The data can go through 64 gateways or routers\n            // before it is destroyed, and the data packet\n            // cannot be fragmented.\n            PingOptions options = new PingOptions (64, true);\n\n            // Send the ping asynchronously.\n            // Use the waiter as the user token.\n            // When the callback completes, it can wake up this thread.\n            pingSender.SendAsync (address, timeout, buffer, options, waiter);\n\n            // Prevent this example application from ending.\n            // A real application should do something useful\n            // when possible.\n            waiter.WaitOne ();\n            Console.WriteLine (&quot;Ping example completed.&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLPingSampler#7\">void AsyncComplexLocalPing()\n{\n   \n   // Get an object that will block the main thread.\n   AutoResetEvent^ waiter = gcnew AutoResetEvent( false );\n   \n   // Ping&#39;s the local machine.\n   Ping ^ pingSender = gcnew Ping;\n   \n   // When the PingCompleted event is raised,\n   // the PingCompletedCallback method is called.\n   pingSender-&gt;PingCompleted += gcnew PingCompletedEventHandler( PingCompletedCallback );\n   IPAddress^ address = IPAddress::Loopback;\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   \n   // Wait 10 seconds for a reply.\n   int timeout = 10000;\n   \n   // Set options for transmission:\n   // The data can go through 64 gateways or routers\n   // before it is destroyed, and the data packet\n   // cannot be fragmented.\n   PingOptions ^ options = gcnew PingOptions( 64,true );\n   \n   // Send the ping asynchronously.\n   // Use the waiter as the user token.\n   // When the callback completes, it can wake up this thread.\n   pingSender-&gt;SendAsync( address, timeout, buffer, options, waiter );\n   \n   // Prevent this example application from ending.\n   // A real application should do something useful\n   // when possible.\n   waiter-&gt;WaitOne();\n   Console::WriteLine( &quot;Ping example completed.&quot; );\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsync_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(String,Int32,Byte[],PingOptions,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer. This overload allows you to specify a time-out value for the operation and control fragmentation and Time-to-Live values for the ICMP packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that identifies the computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that specifies the maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that is passed to the method invoked when the asynchronous operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> is <code>null</code> or is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is an IPv6 address and the local computer is running an operating system earlier than Windows 2000.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>hostNameOrAddress</code> could not be resolved to a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method sends the Echo message asynchronously and, when the operation completes (successfully or unsuccessfully), returns the status to your application. Call the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> method when your application must not block. Each call executes in a separate thread that is automatically allocated from the thread pool. When the asynchronous operation completes, it raises the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_PingCompleted\" data-linktype=\"relative-path\">PingCompleted</a> event. Applications use a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to specify the method that is called when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises the event. You must add a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate to the event before calling <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>. The delegate&#39;s method receives a <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object that contains a <a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a> object that describes the result of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventargs\" data-linktype=\"relative-path\">PingCompletedEventArgs</a> object inherits the <a class=\"xref\" href=\"system.componentmodel.asynccompletedeventargs#System_ComponentModel_AsyncCompletedEventArgs_UserState_\" data-linktype=\"relative-path\">UserState</a> property. This property contains the <code>userToken</code> object passed into the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> call.  </p>\n<p> If your application should block while waiting for a reply, use the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_Send_\" data-linktype=\"relative-path\">Send</a> methods; these methods are synchronous.  </p>\n<p> If the ICMP echo reply message is not received within the time specified by the <code>timeout</code> parameter, the ICMP echo fails, and the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> property is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When specifying very small numbers for <code>timeout</code>, the Ping reply can be received even if <code>timeout</code> milliseconds have elapsed.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_DontFragment_\" data-linktype=\"relative-path\">DontFragment</a> property is <code>true</code> and the total packet size exceeds the maximum packet size that can be transmitted by one of the routing nodes between the local and remote computers, the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.networkinformation.pingoptions#System_Net_NetworkInformation_PingOptions_Ttl_\" data-linktype=\"relative-path\">Ttl</a> property to specify the maximum number of times the ICMP echo message can be forwarded before reaching its destination. If the packet does not reach its destination after being forwarded the specified number of times, the packet is discarded and the ICMP echo request fails. When this happens, the <a class=\"xref\" href=\"system.net.networkinformation.pingreply#System_Net_NetworkInformation_PingReply_Status_\" data-linktype=\"relative-path\">Status</a> is set to <a class=\"xref\" href=\"system.net.networkinformation.ipstatus\" data-linktype=\"relative-path\">IPStatus</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this method.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLPingAsync#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Text;\nusing namespace System::Net;\nusing namespace System::Net::NetworkInformation;\nusing namespace System::ComponentModel;\nusing namespace System::Threading;\nvoid PingCompletedCallback( Object^ sender, PingCompletedEventArgs^ e );\nvoid DisplayReply( PingReply^ reply );\nint main()\n{\n   array&lt;String^&gt;^args = Environment::GetCommandLineArgs();\n   if ( args-&gt;Length == 1 )\n      throw gcnew ArgumentException( &quot;Ping needs a host or IP Address.&quot; );\n\n   String^ who = args[ 1 ];\n   AutoResetEvent^ waiter = gcnew AutoResetEvent( false );\n   \n   Ping ^ pingSender = gcnew Ping;\n   \n   // When the PingCompleted event is raised,\n   // the PingCompletedCallback method is called.\n   pingSender-&gt;PingCompleted += gcnew PingCompletedEventHandler( PingCompletedCallback );\n   \n   // Create a buffer of 32 bytes of data to be transmitted.\n   String^ data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n   array&lt;Byte&gt;^buffer = Encoding::ASCII-&gt;GetBytes( data );\n   \n   // Wait 12 seconds for a reply.\n   int timeout = 12000;\n   \n   // Set options for transmission:\n   // The data can go through 64 gateways or routers\n   // before it is destroyed, and the data packet\n   // cannot be fragmented.\n   PingOptions ^ options = gcnew PingOptions( 64,true );\n   Console::WriteLine( &quot;Time to live: {0}&quot;, options-&gt;Ttl );\n   Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, options-&gt;DontFragment );\n   \n   // Send the ping asynchronously.\n   // Use the waiter as the user token.\n   // When the callback completes, it can wake up this thread.\n   pingSender-&gt;SendAsync( who, timeout, buffer, options, waiter );\n   \n   // Prevent this example application from ending.\n   // A real application should do something useful\n   // when possible.\n   waiter-&gt;WaitOne();\n   Console::WriteLine( &quot;Ping example completed.&quot; );\n}\n\n\nvoid PingCompletedCallback( Object^ /*sender*/, PingCompletedEventArgs^ e )\n{\n   \n   // If the operation was canceled, display a message to the user.\n   if ( e-&gt;Cancelled )\n   {\n      Console::WriteLine( &quot;Ping canceled.&quot; );\n      \n      // Let the main thread resume. \n      // UserToken is the AutoResetEvent object that the main thread \n      // is waiting for.\n      (dynamic_cast&lt;AutoResetEvent^&gt;(e-&gt;UserState))-&gt;Set();\n   }\n\n   \n   // If an error occurred, display the exception to the user.\n   if ( e-&gt;Error != nullptr )\n   {\n      Console::WriteLine( &quot;Ping failed:&quot; );\n      Console::WriteLine( e-&gt;Error-&gt;ToString() );\n      \n      // Let the main thread resume. \n      (dynamic_cast&lt;AutoResetEvent^&gt;(e-&gt;UserState))-&gt;Set();\n   }\n\n   PingReply ^ reply = e-&gt;Reply;\n   DisplayReply( reply );\n   \n   // Let the main thread resume.\n   (dynamic_cast&lt;AutoResetEvent^&gt;(e-&gt;UserState))-&gt;Set();\n}\n\n\nvoid DisplayReply( PingReply ^ reply )\n{\n   if ( reply == nullptr )\n      return;\n\n   Console::WriteLine( &quot;ping status: {0}&quot;, reply-&gt;Status );\n   if ( reply-&gt;Status == IPStatus::Success )\n   {\n      Console::WriteLine( &quot;Address: {0}&quot;, reply-&gt;Address-&gt;ToString() );\n      Console::WriteLine( &quot;RoundTrip time: {0}&quot;, reply-&gt;RoundtripTime );\n      Console::WriteLine( &quot;Time to live: {0}&quot;, reply-&gt;Options-&gt;Ttl );\n      Console::WriteLine( &quot;Don&#39;t fragment: {0}&quot;, reply-&gt;Options-&gt;DontFragment );\n      Console::WriteLine( &quot;Buffer size: {0}&quot;, reply-&gt;Buffer-&gt;Length );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLPingAsync#1\">using System;\nusing System.Text;\nusing System.Net;\nusing System.Net.NetworkInformation;\nusing System.ComponentModel;\nusing System.Threading;\n\nnamespace Examples.System.Net.NetworkInformation.PingTest\n{\n    public class PingExample\n    {\n        public static void Main (string[] args)\n        {\n            if (args.Length == 0)\n                throw new ArgumentException (&quot;Ping needs a host or IP Address.&quot;);\n\n            string who = args[0];\n            AutoResetEvent waiter = new AutoResetEvent (false);\n\n            Ping pingSender = new Ping ();\n\n            // When the PingCompleted event is raised,\n            // the PingCompletedCallback method is called.\n            pingSender.PingCompleted += new PingCompletedEventHandler (PingCompletedCallback);\n\n            // Create a buffer of 32 bytes of data to be transmitted.\n            string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;\n            byte[] buffer = Encoding.ASCII.GetBytes (data);\n\n            // Wait 12 seconds for a reply.\n            int timeout = 12000;\n\n            // Set options for transmission:\n            // The data can go through 64 gateways or routers\n            // before it is destroyed, and the data packet\n            // cannot be fragmented.\n            PingOptions options = new PingOptions (64, true);\n\n            Console.WriteLine (&quot;Time to live: {0}&quot;, options.Ttl);\n            Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, options.DontFragment);\n\n            // Send the ping asynchronously.\n            // Use the waiter as the user token.\n            // When the callback completes, it can wake up this thread.\n            pingSender.SendAsync(who, timeout, buffer, options, waiter);\n\n            // Prevent this example application from ending.\n            // A real application should do something useful\n            // when possible.\n            waiter.WaitOne ();\n            Console.WriteLine (&quot;Ping example completed.&quot;);\n        }\n\n        private static void PingCompletedCallback (object sender, PingCompletedEventArgs e)\n        {\n            // If the operation was canceled, display a message to the user.\n            if (e.Cancelled)\n            {\n                Console.WriteLine (&quot;Ping canceled.&quot;);\n\n                // Let the main thread resume. \n                // UserToken is the AutoResetEvent object that the main thread \n                // is waiting for.\n                ((AutoResetEvent)e.UserState).Set ();\n            }\n\n            // If an error occurred, display the exception to the user.\n            if (e.Error != null)\n            {\n                Console.WriteLine (&quot;Ping failed:&quot;);\n                Console.WriteLine (e.Error.ToString ());\n\n                // Let the main thread resume. \n                ((AutoResetEvent)e.UserState).Set();\n            }\n\n            PingReply reply = e.Reply;\n\n            DisplayReply (reply);\n\n            // Let the main thread resume.\n            ((AutoResetEvent)e.UserState).Set();\n        }\n\n        public static void DisplayReply (PingReply reply)\n        {\n            if (reply == null)\n                return;\n\n            Console.WriteLine (&quot;ping status: {0}&quot;, reply.Status);\n            if (reply.Status == IPStatus.Success)\n            {\n                Console.WriteLine (&quot;Address: {0}&quot;, reply.Address.ToString ());\n                Console.WriteLine (&quot;RoundTrip time: {0}&quot;, reply.RoundtripTime);\n                Console.WriteLine (&quot;Time to live: {0}&quot;, reply.Options.Ttl);\n                Console.WriteLine (&quot;Don&#39;t fragment: {0}&quot;, reply.Options.DontFragment);\n                Console.WriteLine (&quot;Buffer size: {0}&quot;, reply.Buffer.Length);\n            }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendAsyncCancel\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendAsyncCancel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsyncCancel()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels all pending asynchronous requests to send an Internet Control Message Protocol (ICMP) echo message and receives a corresponding ICMP echo reply message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SendAsyncCancel ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to terminate any calls to <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> that have not completed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(IPAddress)</div>        \r\n          </div>\r\n    \r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An IP address that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendPingAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(IPAddress,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An IP address that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(IPAddress,Int32,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An IP address that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendPingAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_System_Byte___\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(String,Int32,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation and a buffer to use for send and receive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_Net_IPAddress_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(IPAddress,Int32,Byte[],PingOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Send an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the computer that has the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>, and receives a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An IP address that identifies the computer that is the destination for the ICMP echo message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A call to <span class=\"xref\">stem.Net.NetworkInformation.Ping.SendPingAsync*</span> is in progress.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingexception\" data-linktype=\"relative-path\">PingException</a></div>\r\n                  </div>\r\n                  <p>An exception was thrown while sending or receiving the ICMP messages. See the inner exception for the exact exception that was thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p><code>address</code> is not a valid IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>This object has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The size of <code>buffer</code> exceeds 65,500 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_SendPingAsync_System_String_System_Int32_System_Byte___System_Net_NetworkInformation_PingOptions_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_Ping_SendPingAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendPingAsync(String,Int32,Byte[],PingOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Sends an Internet Control Message Protocol (ICMP) echo message with the specified data buffer to the specified computer, and receive a corresponding ICMP echo reply message from that computer as an asynchronous operation. This overload allows you to specify a time-out value for the operation, a buffer to use for send and receive, and control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.PingReply&gt; SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostNameOrAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer that is the destination for the ICMP echo message. The value specified for this parameter can be a host name or a string representation of an IP address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of milliseconds (after sending the echo message) to wait for the ICMP echo reply message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> array that contains data to be sent with the ICMP echo message and returned in the ICMP echo reply message. The array cannot contain more than 65,500 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.pingoptions\" data-linktype=\"relative-path\">PingOptions</a> object used to control fragmentation and Time-to-Live values for the ICMP echo message packet.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.pingreply\" data-linktype=\"relative-path\">PingReply</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a>&gt; object will complete after the ICMP packet has been sent and the response has been received.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_Ping_PingCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PingCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an asynchronous operation to send an Internet Control Message Protocol (ICMP) echo message and receive the corresponding ICMP echo reply message completes or is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Applications use the PingCompleted event to get information about the completion status and data collected by a call to one of the <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods. The <a class=\"xref\" href=\"system.net.networkinformation.pingcompletedeventhandler\" data-linktype=\"relative-path\">PingCompletedEventHandler</a> delegate provides the call back method invoked when <a class=\"xref\" href=\"system.net.networkinformation.ping#System_Net_NetworkInformation_Ping_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> raises this event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <a class=\"xref\" href=\"system.net.networkinformation.ping\" data-linktype=\"relative-path\">Ping</a> class overview.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLPingAsync#2\">   Ping ^ pingSender = gcnew Ping;\n   \n   // When the PingCompleted event is raised,\n   // the PingCompletedCallback method is called.\n   pingSender-&gt;PingCompleted += gcnew PingCompletedEventHandler( PingCompletedCallback );\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"NCLPingAsync#2\">            Ping pingSender = new Ping ();\n\n            // When the PingCompleted event is raised,\n            // the PingCompletedCallback method is called.\n            pingSender.PingCompleted += new PingCompletedEventHandler (PingCompletedCallback);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.Ping.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.Ping.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.OnPingCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.PingCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.add_PingCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.remove_PingCompleted\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.Send\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.SendAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.SendAsyncCancel\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.Ping.SendPingAsync\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d215b61f-8016-c501-430b-7e51dd352b15\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Net.NetworkInformation\\Ping.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Allows an application to determine whether a remote computer is accessible over the network.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.NetworkInformation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.Ping\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.Ping.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.Ping.yml","open_to_public_contributors":true,"api_name":["System.Net.NetworkInformation.Ping","System.Net.NetworkInformation.Ping..ctor","System.Net.NetworkInformation.Ping.Dispose","System.Net.NetworkInformation.Ping.OnPingCompleted","System.Net.NetworkInformation.Ping.PingCompleted","System.Net.NetworkInformation.Ping.add_PingCompleted","System.Net.NetworkInformation.Ping.remove_PingCompleted","System.Net.NetworkInformation.Ping.Send","System.Net.NetworkInformation.Ping.SendAsync","System.Net.NetworkInformation.Ping.SendAsyncCancel","System.Net.NetworkInformation.Ping.SendPingAsync"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.Ping","System::Net::NetworkInformation::Ping","System.Net.NetworkInformation.Ping.#ctor","System::Net::NetworkInformation::Ping::#ctor","System.Net.NetworkInformation.Ping.Dispose","System::Net::NetworkInformation::Ping::Dispose","System.Net.NetworkInformation.Ping.OnPingCompleted","System::Net::NetworkInformation::Ping::OnPingCompleted","System.Net.NetworkInformation.Ping.PingCompleted","System::Net::NetworkInformation::Ping::PingCompleted","System.Net.NetworkInformation.Ping.Send","System::Net::NetworkInformation::Ping::Send","System.Net.NetworkInformation.Ping.SendAsync","System::Net::NetworkInformation::Ping::SendAsync","System.Net.NetworkInformation.Ping.SendAsyncCancel","System::Net::NetworkInformation::Ping::SendAsyncCancel","System.Net.NetworkInformation.Ping.SendPingAsync","System::Net::NetworkInformation::Ping::SendPingAsync"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d215b61f-8016-c501-430b-7e51dd352b15","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Net.NetworkInformation\\Ping.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.NetworkInformation/Ping.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Ping class | Microsoft Docs","_op_ogTitle":"Ping class","description":"Allows an application to determine whether a remote computer is accessible over the network.\n","toc_asset_id":"_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.Ping","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ping","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ping","fileRelativePath":"System.Net.NetworkInformation.Ping.html"},"themesRelativePathToOutputRoot":"_themes/"}