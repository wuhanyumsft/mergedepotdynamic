{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Messaging_CallContext\">\r\n      <span class=\"lang-csharp\">CallContext</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a set of properties that are carried with the execution code path. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Security.SecurityCritical]\npublic sealed class CallContext</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CallContext</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>CallContext is a specialized collection object similar to a Thread Local Storage for method calls and provides data slots that are unique to each logical thread of execution. The slots are not shared across call contexts on other logical threads. Objects can be added to the CallContext as it travels down and back up the execution code path, and examined by various objects along the path.  </p>\n<p> When a remote method call is made to an object in another <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>, the CallContext class generates a <a class=\"xref\" href=\"system.runtime.remoting.messaging.logicalcallcontext\" data-linktype=\"relative-path\">LogicalCallContext</a> instance that travels along with the remote call. Only objects that expose the <a class=\"xref\" href=\"system.runtime.remoting.messaging.ilogicalthreadaffinative\" data-linktype=\"relative-path\">ILogicalThreadAffinative</a> interface and are stored in the CallContext are propagated outside the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> in a <a class=\"xref\" href=\"system.runtime.remoting.messaging.logicalcallcontext\" data-linktype=\"relative-path\">LogicalCallContext</a>. Objects that do not support this interface are not transmitted in <a class=\"xref\" href=\"system.runtime.remoting.messaging.logicalcallcontext\" data-linktype=\"relative-path\">LogicalCallContext</a> instances with remote method calls.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> All methods in CallContext are static and operate on the call context in the current <a class=\"xref\" href=\"system.threading.thread\" data-linktype=\"relative-path\">Thread</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This class makes a link demand. A <code>SecurityException</code> is thrown if the immediate caller does not have infrastructure permission. See <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> for more information.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_HostContext\" data-linktype=\"self-bookmark\">HostContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the host context associated with the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_FreeNamedDataSlot_System_String_\" data-linktype=\"self-bookmark\">FreeNamedDataSlot(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Empties a data slot with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_GetData_System_String_\" data-linktype=\"self-bookmark\">GetData(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an object with the specified name from the <a class=\"xref\" href=\"system.runtime.remoting.messaging.callcontext\" data-linktype=\"relative-path\">CallContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_GetHeaders\" data-linktype=\"self-bookmark\">GetHeaders()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the headers that are sent along with the method call.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_LogicalGetData_System_String_\" data-linktype=\"self-bookmark\">LogicalGetData(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an object with the specified name from the logical call context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_LogicalSetData_System_String_System_Object_\" data-linktype=\"self-bookmark\">LogicalSetData(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Stores a given object in the logical call context and associates it with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_SetData_System_String_System_Object_\" data-linktype=\"self-bookmark\">SetData(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Stores a given object and associates it with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_CallContext_SetHeaders_System_Runtime_Remoting_Messaging_Header___\" data-linktype=\"self-bookmark\">SetHeaders(Header[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the headers that are sent along with the method call.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_HostContext\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_HostContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HostContext</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the host context associated with the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object HostContext { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The host context associated with the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_FreeNamedDataSlot_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_FreeNamedDataSlot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FreeNamedDataSlot(String)</div>        \r\n          </div>\r\n    \r\n            <p>Empties a data slot with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void FreeNamedDataSlot (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the data slot to empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a client creating a named data slot, calling a method on the remote object that displays the value of the named data slot that was returned from the logical thread, and frees that named data slot.  </p>\n<pre><code class=\"lang-cpp\" name=\"CallContext_GetHeaders#1\">   // Register the channel.\n   TcpChannel^ myChannel = gcnew TcpChannel;\n   ChannelServices::RegisterChannel( myChannel );\n   RemotingConfiguration::RegisterActivatedClientType( HelloService::typeid, &quot;Tcp://localhost:8082&quot; );\n\n   GenericIdentity^ myIdentity = gcnew GenericIdentity( &quot;Bob&quot; );\n   array&lt;String^&gt;^ idStr = gcnew array&lt;String^&gt;(1);\n   idStr[ 0 ] = &quot;Level1&quot;;\n   GenericPrincipal^ myPrincipal = gcnew GenericPrincipal( myIdentity, idStr );\n   MyLogicalCallContextData ^ myData = gcnew MyLogicalCallContextData( myPrincipal );\n\n   // Set DataSlot with name parameter.\n   CallContext::SetData( &quot;test data&quot;, myData );\n\n   // Create a remote Object*.\n   HelloService ^ myService = gcnew HelloService;\n   if ( myService == nullptr )\n   {\n      Console::WriteLine( &quot;Cannot locate server.&quot; );\n      return  -1;\n   }\n\n   // Call the Remote methods.\n   Console::WriteLine( &quot;Remote method output is {0}&quot;, myService-&gt;HelloMethod( &quot;Microsoft&quot; ) );\n\n   MyLogicalCallContextData ^ myReturnData =\n      (MyLogicalCallContextData^)( CallContext::GetData( &quot;test data&quot; ) );\n   if ( myReturnData == nullptr )\n   {\n      Console::WriteLine( &quot;Data is 0.&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Data is &#39; {0}&#39;&quot;, myReturnData-&gt;numOfAccesses );\n   }\n\n   // DataSlot with same Name Parameter which was Set is Freed.\n   CallContext::FreeNamedDataSlot( &quot;test data&quot; );\n   MyLogicalCallContextData ^ myReturnData1 =\n      (MyLogicalCallContextData^)( CallContext::GetData( &quot;test data&quot; ) );\n   if ( myReturnData1 == nullptr )\n   {\n      Console::WriteLine( &quot;FreeNamedDataSlot Successful for test data&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;FreeNamedDataSlot Failed  for test data&quot; );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CallContext_GetHeaders#1\">         // Register the channel.\n         TcpChannel myChannel = new TcpChannel ();\n         ChannelServices.RegisterChannel(myChannel);\n         RemotingConfiguration.RegisterActivatedClientType(typeof(HelloService),&quot;Tcp://localhost:8082&quot;);\n\n\n         GenericIdentity myIdentity = new GenericIdentity(&quot;Bob&quot;);\n         GenericPrincipal myPrincipal = new GenericPrincipal(myIdentity,new string[] {&quot;Level1&quot;});\n         MyLogicalCallContextData myData = new MyLogicalCallContextData(myPrincipal);\n\n         // Set DataSlot with name parameter.\n         CallContext.SetData(&quot;test data&quot;,myData);\n\n         // Create a remote object.\n         HelloService myService = new HelloService();\n         if (myService == null)\n         {\n            Console.WriteLine(&quot;Cannot locate server.&quot;);\n            return;\n         }\n\n         // Call the Remote methods.\n         Console.WriteLine(&quot;Remote method output is &quot; + myService.HelloMethod(&quot;Microsoft&quot;));\n\n         MyLogicalCallContextData myReturnData =\n                                    (MyLogicalCallContextData) CallContext.GetData(&quot;test data&quot;);\n         if (myReturnData == null )\n            Console.WriteLine(&quot;Data is null.&quot;);\n         else\n            Console.WriteLine(&quot;Data is &#39;{0}&#39;&quot;, myReturnData.numOfAccesses);\n\n         // DataSlot with same Name Parameter which was Set is Freed.\n         CallContext.FreeNamedDataSlot(&quot;test data&quot;);\n         MyLogicalCallContextData myReturnData1 =\n                                 (MyLogicalCallContextData) CallContext.GetData(&quot;test data&quot;);\n         if (myReturnData1 == null )\n            Console.WriteLine(&quot;FreeNamedDataSlot Successful for test data&quot;);\n         else\n            Console.WriteLine(&quot;FreeNamedDataSlot Failed  for test data&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"CallContext_GetHeaders#1\">         &#39; Register the channel.\n         Dim myChannel As New TcpChannel()\n         ChannelServices.RegisterChannel(myChannel)\n         RemotingConfiguration.RegisterActivatedClientType(GetType(HelloService), &quot;Tcp://localhost:8082&quot;)\n\n\n         Dim myIdentity As New GenericIdentity(&quot;Bob&quot;)\n         Dim myPrincipal As New GenericPrincipal(myIdentity, New String() {&quot;Level1&quot;})\n         Dim myData As New MyLogicalCallContextData(myPrincipal)\n\n         &#39; Set DataSlot with name parameter.\n         CallContext.SetData(&quot;test data&quot;, myData)\n\n         &#39; Create a remote object.\n         Dim myService As New HelloService()\n         If myService Is Nothing Then\n            Console.WriteLine(&quot;Cannot locate server.&quot;)\n            return\n         End If\n\n         &#39; Call the Remote methods.\n         Console.WriteLine(&quot;Remote method output is &quot; + myService.HelloMethod(&quot;Microsoft&quot;))\n\n         Dim myReturnData As MyLogicalCallContextData = _\n                           CType(CallContext.GetData(&quot;test data&quot;), MyLogicalCallContextData)\n\n         If myReturnData Is Nothing Then\n            Console.WriteLine(&quot;Data is null.&quot;)\n         Else\n            Console.WriteLine(&quot;Data is &#39;{0}&#39;&quot;, myReturnData.numOfAccesses)\n         End If \n\n         &#39; DataSlot with same Name Parameter which was Set is Freed.\n         CallContext.FreeNamedDataSlot(&quot;test data&quot;)\n         Dim myReturnData1 As MyLogicalCallContextData = _\n                           CType(CallContext.GetData(&quot;test data&quot;), MyLogicalCallContextData)\n\n         If myReturnData1 Is Nothing Then\n            Console.WriteLine(&quot;FreeNamedDataSlot Successful for test data&quot;)\n         Else\n            Console.WriteLine(&quot;FreeNamedDataSlot Failed  for test data&quot;)\n         End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_GetData_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_GetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetData(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an object with the specified name from the <a class=\"xref\" href=\"system.runtime.remoting.messaging.callcontext\" data-linktype=\"relative-path\">CallContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetData (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the item in the call context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object in the call context associated with the specified name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the GetData method to transmit <a href=\"../Topic/Principal%20and%20Identity%20Objects.md\" data-linktype=\"relative-path\">Principal and Identity Objects</a> to a remote location for identification. To view the code for the <code>LogicalCallContextData</code> class used in this sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.messaging.ilogicalthreadaffinative\" data-linktype=\"relative-path\">ILogicalThreadAffinative</a> interface. To view the code for the client class used in the sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.messaging.callcontext\" data-linktype=\"relative-path\">CallContext</a> class. To view the code for the server class used in this sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"CallContext#3\">using namespace System;\nusing namespace System::Text;\nusing namespace System::Runtime::Remoting::Messaging;\nusing namespace System::Security::Principal;\nusing namespace System::Security::Permissions;\n\nref class LogicalCallContextData;\n\npublic ref class HelloServiceClass: public MarshalByRefObject\n{\nprivate:\n   static int n_instances;\n   int instanceNum;\n\npublic:\n   HelloServiceClass()\n   {\n      n_instances++;\n      instanceNum = n_instances;\n      Console::WriteLine(  &quot;{0} has been created.  Instance # = {1}&quot;, this-&gt;GetType()-&gt;Name, instanceNum );\n   }\n\n   ~HelloServiceClass()\n   {\n      Console::WriteLine( &quot;Destroyed instance {0} of HelloServiceClass.&quot;, instanceNum );\n   }\n\n   [SecurityPermissionAttribute(SecurityAction::Demand, Flags=SecurityPermissionFlag::Infrastructure)]\n   String^ HelloMethod( String^ name )\n   {\n      //Extract the call context data\n      LogicalCallContextData^ data = dynamic_cast&lt;LogicalCallContextData^&gt;(CallContext::GetData( &quot;test data&quot; ));\n      IPrincipal^ myPrincipal = data-&gt;Principal;\n\n      //Check the user identity\n      if ( myPrincipal-&gt;Identity-&gt;Name == &quot;Bob&quot; )\n      {\n         Console::WriteLine( &quot;<br>Hello {0}, you are identified!&quot;, myPrincipal-&gt;Identity-&gt;Name );\n         Console::WriteLine( data-&gt;numOfAccesses );\n      }\n      else\n      {\n         Console::WriteLine( &quot;Go away! You are not identified!&quot; );\n         return String::Empty;\n      }\n\n      // calculate and return result to client    \n      return String::Format( &quot;Hi there {0}.&quot;, name );\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"CallContext#3\">using System;\nusing System.Text;\nusing System.Runtime.Remoting.Messaging;\nusing System.Security.Principal;\nusing System.Security.Permissions;\n\npublic class HelloServiceClass : MarshalByRefObject {\n\n   static int n_instances;\n   int instanceNum;\n\n   public HelloServiceClass() {\n      n_instances++;\n      instanceNum = n_instances;\n      Console.WriteLine(this.GetType().Name + &quot; has been created.  Instance # = {0}&quot;, instanceNum);\n   }\n\n\n   ~HelloServiceClass() {\n      Console.WriteLine(&quot;Destroyed instance {0} of HelloServiceClass.&quot;, instanceNum);      \n   }\n\n\n   [PermissionSet(SecurityAction.LinkDemand)]\n   public String HelloMethod(String name) {\n\n      //Extract the call context data\n      LogicalCallContextData data = (LogicalCallContextData)CallContext.GetData(&quot;test data&quot;);      \n      IPrincipal myPrincipal = data.Principal;\n      \n      //Check the user identity\n      if(myPrincipal.Identity.Name == &quot;Bob&quot;) {\n         Console.WriteLine(&quot;<br>Hello {0}, you are identified!&quot;, myPrincipal.Identity.Name);\n         Console.WriteLine(data.numOfAccesses);\n      }\n      else {\n         Console.WriteLine(&quot;Go away! You are not identified!&quot;);\n         return String.Empty;\n      }\n\n        // calculate and return result to client\t\n      return &quot;Hi there &quot; + name + &quot;.&quot;;\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CallContext#3\">Imports System\nImports System.Text\nImports System.Runtime.Remoting.Messaging\nImports System.Security.Principal\nImports System.Security.Permissions\n\nPublic Class HelloServiceClass\n   Inherits MarshalByRefObject\n   \n   Private Shared n_instances As Integer\n   Private instanceNum As Integer  \n   \n   Public Sub New()\n      n_instances += 1\n      instanceNum = n_instances\n      Console.WriteLine(Me.GetType().Name + &quot; has been created.  Instance # = {0}&quot;, instanceNum)\n   End Sub &#39;New\n\n   \n   Protected Overrides Sub Finalize()\n      Console.WriteLine(&quot;Destroyed instance {0} of HelloServiceClass.&quot;, instanceNum)\n      MyBase.Finalize()\n   End Sub &#39;Finalize\n  \n   &lt;PermissionSet(SecurityAction.LinkDemand)&gt; _\n   Public Function HelloMethod(name As [String]) As [String]\n      \n      &#39;Extract the call context data\n      Dim data As LogicalCallContextData = CType(CallContext.GetData(&quot;test data&quot;), LogicalCallContextData)\n      Dim myPrincipal As IPrincipal = data.Principal\n      \n      &#39;Check the user identity\n      If myPrincipal.Identity.Name = &quot;Bob&quot; Then\n         Console.WriteLine()\n         Console.WriteLine(&quot;Hello {0}, you are identified!&quot;, myPrincipal.Identity.Name)\n         Console.WriteLine(data.numOfAccesses)\n      Else\n         Console.WriteLine(&quot;Go away! You are not identified!&quot;)\n         Return [String].Empty\n      End If\n      \n      &#39; calculate and return result to client\t\n      Return &quot;Hi there &quot; + name + &quot;.&quot;\n   End Function &#39;HelloMethod\n\nEnd Class &#39;HelloServiceClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_GetHeaders\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_GetHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHeaders()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the headers that are sent along with the method call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Messaging.Header[] GetHeaders ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.header\" data-linktype=\"relative-path\">Header</a>[]</div>\r\n                  </div>\r\n                  <p>The headers that are sent along with the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sends headers to a remote method and prints the content of those headers to the console when the remote method returns.  </p>\n<pre><code class=\"lang-cpp\" name=\"CallContext_GetHeaders#2\">   // Array of Headers with name and values initialized.\n   array&lt;Header^&gt;^ myArrSetHeader = { gcnew Header( &quot;Header0&quot;,&quot;CallContextHeader0&quot; ),\n      gcnew Header( &quot;Header1&quot;,&quot;CallContextHeader1&quot; ) };\n\n   // Pass the Header Array with method call.\n   // Header will be set in the method by&#39;CallContext::SetHeaders&#39; method in remote Object*.\n   Console::WriteLine( &quot;Remote HeaderMethod output is {0}&quot;,\n      myService-&gt;HeaderMethod( &quot;CallContextHeader&quot;, myArrSetHeader ) );\n\n   array&lt;Header^&gt;^ myArrGetHeader;\n   // Get Header Array.\n   myArrGetHeader = CallContext::GetHeaders();\n   if ( nullptr == myArrGetHeader )\n   {\n      Console::WriteLine( &quot;CallContext::GetHeaders Failed&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Headers:&quot; );\n   }\n\n   for each ( Header^ myHeader in myArrGetHeader )\n   {\n      Console::WriteLine( &quot;Value in Header &#39;{0}&#39; is &#39;{1}&#39;.&quot;,\n         myHeader-&gt;Name, myHeader-&gt;Value );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"CallContext_GetHeaders#2\">         // Array of Headers with name and values initialized.\n         Header[] myArrSetHeader = {new Header(&quot;Header0&quot;,&quot;CallContextHeader0&quot;),\n                                      new Header(&quot;Header1&quot;,&quot;CallContextHeader1&quot;)};\n\n         // Pass the Header Array with method call.\n         // Header will be set in the method by&#39;CallContext.SetHeaders&#39; method in remote object.\n\n         Console.WriteLine(&quot;Remote HeaderMethod output is &quot; +\n                                 myService.HeaderMethod(&quot;CallContextHeader&quot;,myArrSetHeader));\n\n         Header[] myArrGetHeader;\n         // Get Header Array.\n         myArrGetHeader=CallContext.GetHeaders();\n         if (null == myArrGetHeader)\n            Console.WriteLine(&quot;CallContext.GetHeaders Failed&quot;);\n         else\n            Console.WriteLine(&quot;Headers:&quot;);\n         foreach(Header myHeader in myArrGetHeader)\n         {\n            Console.WriteLine(&quot;Value in Header &#39;{0}&#39; is &#39;{1}&#39;.&quot;,myHeader.Name,myHeader.Value);\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"CallContext_GetHeaders#2\">         &#39; Array of Headers with name and values initialized.\n         Dim myArrSetHeader As Header() =  {New Header(&quot;Header0&quot;, &quot;CallContextHeader0&quot;), _\n                                                   New Header(&quot;Header1&quot;, &quot;CallContextHeader1&quot;)}\n\n         &#39; Pass the Header Array with method call.\n         &#39; Header will be set in the method by&#39;CallContext.SetHeaders&#39; method in remote object.\n\n         Console.WriteLine(&quot;Remote HeaderMethod output is &quot; _\n                              + myService.HeaderMethod(&quot;CallContextHeader&quot;, myArrSetHeader))\n\n         Dim myArrGetHeader() As Header\n         &#39; Get Header Array.\n\n         myArrGetHeader = CallContext.GetHeaders()\n         If myArrGetHeader Is Nothing Then\n            Console.WriteLine(&quot;CallContext.GetHeaders Failed&quot;)\n         Else\n            Console.WriteLine(&quot;Headers:&quot;)\n         End If\n\n         Dim myHeader As Header\n         For each myHeader in myArrGetHeader\n            Console.WriteLine(&quot;Value in Header &#39;{0}&#39; is &#39;{1}&#39;.&quot;,myHeader.Name,myHeader.Value)\n         Next\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_LogicalGetData_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_LogicalGetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogicalGetData(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an object with the specified name from the logical call context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object LogicalGetData (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the item in the logical call context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object in the logical call context associated with the specified name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_LogicalSetData_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_LogicalSetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogicalSetData(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Stores a given object in the logical call context and associates it with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void LogicalSetData (string name, object data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name with which to associate the new item in the logical call context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to store in the logical call context, this object must be serializable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_SetData_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_SetData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetData(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Stores a given object and associates it with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetData (string name, object data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name with which to associate the new item in the call context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to store in the call context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the SetData method to transmit <a href=\"../Topic/Principal%20and%20Identity%20Objects.md\" data-linktype=\"relative-path\">Principal and Identity Objects</a> to a remote location for identification. To view the code for the <code>LogicalCallContextData</code> class used in this sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.messaging.ilogicalthreadaffinative\" data-linktype=\"relative-path\">ILogicalThreadAffinative</a> interface. To view the code for the <code>HelloServiceClass</code> class used in this sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.messaging.callcontext#System_Runtime_Remoting_Messaging_CallContext_GetData_\" data-linktype=\"relative-path\">GetData</a> method. To view the code for the server class used in this sample, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"CallContext#1\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n#using &lt;service.dll&gt;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\nusing namespace System::Runtime::Remoting::Messaging;\nusing namespace System::Security::Principal;\nint main()\n{\n   GenericIdentity^ ident = gcnew GenericIdentity( &quot;Bob&quot; );\n   array&lt;String^&gt;^id = gcnew array&lt;String^&gt;(1);\n   id[ 0 ] = &quot;Level1&quot;;\n   GenericPrincipal^ prpal = gcnew GenericPrincipal( ident,id );\n   LogicalCallContextData ^ data = gcnew LogicalCallContextData( prpal );\n\n   //Enter data into the CallContext\n   CallContext::SetData( &quot;test data&quot;, data );\n   Console::WriteLine( data-&gt;numOfAccesses );\n   ChannelServices::RegisterChannel( gcnew TcpChannel );\n   RemotingConfiguration::RegisterActivatedClientType( HelloServiceClass::typeid, &quot;tcp://localhost:8082&quot; );\n   HelloServiceClass ^ service = gcnew HelloServiceClass;\n   if ( service == nullptr )\n   {\n      Console::WriteLine( &quot;Could not locate server.&quot; );\n      return 0;\n   }\n\n   // call remote method\n   Console::WriteLine();\n   Console::WriteLine( &quot;Calling remote Object*&quot; );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Caveman&quot; ) );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Spaceman&quot; ) );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Bob&quot; ) );\n   Console::WriteLine( &quot;Finished remote Object* call&quot; );\n   Console::WriteLine();\n\n   //Extract the returned data from the call context\n   LogicalCallContextData ^ returnedData = static_cast&lt;LogicalCallContextData ^&gt;(CallContext::GetData( &quot;test data&quot; ));\n   Console::WriteLine( data-&gt;numOfAccesses );\n   Console::WriteLine( returnedData-&gt;numOfAccesses );\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"CallContext#1\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\nusing System.Runtime.Remoting.Messaging;\nusing System.Security.Principal;\nusing System.Security.Permissions;\n\npublic class ClientClass {\n   [PermissionSet(SecurityAction.LinkDemand)]\n   public static void Main() {\n      \n      GenericIdentity ident = new GenericIdentity(&quot;Bob&quot;);\n      GenericPrincipal prpal = new GenericPrincipal(ident, \n                                                    new string[] {&quot;Level1&quot;});\n      LogicalCallContextData data = new LogicalCallContextData(prpal);      \n      \n      //Enter data into the CallContext\n      CallContext.SetData(&quot;test data&quot;, data);\n\n      \n      Console.WriteLine(data.numOfAccesses);\n\n      ChannelServices.RegisterChannel(new TcpChannel());\n\n      RemotingConfiguration.RegisterActivatedClientType(typeof(HelloServiceClass),\n                                                        &quot;tcp://localhost:8082&quot;);\n\n      HelloServiceClass service = new HelloServiceClass();\n\n      if(service == null) {\n          Console.WriteLine(&quot;Could not locate server.&quot;);\n          return;\n      }\n\n\n      // call remote method\n      Console.WriteLine();\n      Console.WriteLine(&quot;Calling remote object&quot;);\n      Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;));\n      Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;));\n      Console.WriteLine(service.HelloMethod(&quot;Bob&quot;));\n      Console.WriteLine(&quot;Finished remote object call&quot;);\n      Console.WriteLine();\n\n      //Extract the returned data from the call context\n      LogicalCallContextData returnedData = \n         (LogicalCallContextData)CallContext.GetData(&quot;test data&quot;);\n\n      Console.WriteLine(data.numOfAccesses);\n      Console.WriteLine(returnedData.numOfAccesses);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CallContext#1\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Tcp\nImports System.Runtime.Remoting.Messaging\nImports System.Security.Principal\nImports System.Security.Permissions\n\n\nPublic Class ClientClass\n   &lt;PermissionSet(SecurityAction.LinkDemand)&gt; _\n   Public Shared Sub Main()\n      \n      Dim ident As New GenericIdentity(&quot;Bob&quot;)\n      Dim prpal As New GenericPrincipal(ident, New String() {&quot;Level1&quot;})\n      Dim data As New LogicalCallContextData(prpal)\n      \n      &#39;Enter data into the CallContext\n      CallContext.SetData(&quot;test data&quot;, data)\n      \n      \n      Console.WriteLine(data.numOfAccesses)\n      \n      ChannelServices.RegisterChannel(New TcpChannel())\n      \n      RemotingConfiguration.RegisterActivatedClientType(GetType(HelloServiceClass), &quot;tcp://localhost:8082&quot;)\n      \n      Dim service As New HelloServiceClass()\n      \n      If service Is Nothing Then\n         Console.WriteLine(&quot;Could not locate server.&quot;)\n         Return\n      End If\n      \n      \n      &#39; call remote method\n      Console.WriteLine()\n      Console.WriteLine(&quot;Calling remote object&quot;)\n      Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;))\n      Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;))\n      Console.WriteLine(service.HelloMethod(&quot;Bob&quot;))\n      Console.WriteLine(&quot;Finished remote object call&quot;)\n      Console.WriteLine()\n      \n      &#39;Extract the returned data from the call context\n      Dim returnedData As LogicalCallContextData = CType(CallContext.GetData(&quot;test data&quot;), LogicalCallContextData)\n      \n      Console.WriteLine(data.numOfAccesses)\n      Console.WriteLine(returnedData.numOfAccesses)\n\n   End Sub &#39;Main\n\nEnd Class &#39;ClientClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_CallContext_SetHeaders_System_Runtime_Remoting_Messaging_Header___\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_CallContext_SetHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetHeaders(Header[])</div>        \r\n          </div>\r\n    \r\n            <p>Sets the headers that are sent along with the method call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetHeaders (System.Runtime.Remoting.Messaging.Header[] headers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>headers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.header\" data-linktype=\"relative-path\">Header</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.remoting.messaging.header\" data-linktype=\"relative-path\">Header</a> array of the headers that are to be sent along with the method call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code shows the ease with which a header is put on the logical thread.  </p>\n<pre><code class=\"lang-cpp\" name=\"CallContext_GetHeaders#3\">public ref class HelloService: public MarshalByRefObject\n{\npublic:\n   String^ HelloMethod( String^ name )\n   {\n      Console::WriteLine( &quot;Hello {0}&quot;, name );\n      return &quot;Hello {0}&quot;,name;\n   }\n\n\n   [SecurityPermissionAttribute(SecurityAction::Demand, Flags=SecurityPermissionFlag::Infrastructure)]\n   String^ HeaderMethod( String^ name, array&lt;Header^&gt;^arrHeader )\n   {\n      Console::WriteLine( &quot;HeaderMethod {0}&quot;, name );\n      \n      //Header Set with the header array passed\n      CallContext::SetHeaders( arrHeader );\n      return &quot;HeaderMethod {0}&quot;,name;\n   }\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"CallContext_GetHeaders#3\">   public class HelloService : MarshalByRefObject\n   {\n      public string HelloMethod(string name)\n      {\n         Console.WriteLine(&quot;Hello &quot; + name);\n         return &quot;Hello &quot; + name;\n      }\n\n      [PermissionSet(SecurityAction.LinkDemand)]\n      public string HeaderMethod(string name,Header[] arrHeader)\n      {\n         Console.WriteLine(&quot;HeaderMethod &quot; + name);\n         //Header Set with the header array passed\n         CallContext.SetHeaders(arrHeader);\n         return &quot;HeaderMethod &quot; + name;\n      }\n\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"CallContext_GetHeaders#3\">   Public Class HelloService\n      Inherits MarshalByRefObject\n\n      Public Function HelloMethod(name As String) As String\n         Console.WriteLine((&quot;Hello &quot; + name))\n         Return &quot;Hello &quot; + name\n      End Function &#39;HelloMethod\n\n      &lt;PermissionSet(SecurityAction.LinkDemand)&gt; _\n      Public Function HeaderMethod(name As String, arrHeader() As Header) As String\n         Console.WriteLine(&quot;HeaderMethod &quot; + name)\n         &#39;Header Set with the header array passed\n         CallContext.SetHeaders(arrHeader)\n         Return &quot;HeaderMethod &quot; + name\n      End Function &#39;HeaderMethod\n   End Class &#39;HelloService\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.CallContext.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.CallContext.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.GetData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.GetHeaders\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.HostContext\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.LogicalGetData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.LogicalSetData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.SetData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.CallContext.SetHeaders\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9d3de0e4-97b6-188f-a634-d223591abc55\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a set of properties that are carried with the execution code path. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Messaging/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Messaging.CallContext\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.CallContext.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.CallContext.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Messaging.CallContext","System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot","System.Runtime.Remoting.Messaging.CallContext.GetData","System.Runtime.Remoting.Messaging.CallContext.GetHeaders","System.Runtime.Remoting.Messaging.CallContext.HostContext","System.Runtime.Remoting.Messaging.CallContext.LogicalGetData","System.Runtime.Remoting.Messaging.CallContext.LogicalSetData","System.Runtime.Remoting.Messaging.CallContext.SetData","System.Runtime.Remoting.Messaging.CallContext.SetHeaders"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Messaging.CallContext","System::Runtime::Remoting::Messaging::CallContext","System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot","System::Runtime::Remoting::Messaging::CallContext::FreeNamedDataSlot","System.Runtime.Remoting.Messaging.CallContext.GetData","System::Runtime::Remoting::Messaging::CallContext::GetData","System.Runtime.Remoting.Messaging.CallContext.GetHeaders","System::Runtime::Remoting::Messaging::CallContext::GetHeaders","System.Runtime.Remoting.Messaging.CallContext.HostContext","System::Runtime::Remoting::Messaging::CallContext::HostContext","System.Runtime.Remoting.Messaging.CallContext.LogicalGetData","System::Runtime::Remoting::Messaging::CallContext::LogicalGetData","System.Runtime.Remoting.Messaging.CallContext.LogicalSetData","System::Runtime::Remoting::Messaging::CallContext::LogicalSetData","System.Runtime.Remoting.Messaging.CallContext.SetData","System::Runtime::Remoting::Messaging::CallContext::SetData","System.Runtime.Remoting.Messaging.CallContext.SetHeaders","System::Runtime::Remoting::Messaging::CallContext::SetHeaders"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9d3de0e4-97b6-188f-a634-d223591abc55","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Messaging/CallContext.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CallContext class | Microsoft Docs","_op_ogTitle":"CallContext class","description":"Provides a set of properties that are carried with the execution code path. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Messaging/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Messaging/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Messaging.CallContext","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.callcontext","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.callcontext","fileRelativePath":"System.Runtime.Remoting.Messaging.CallContext.html"},"themesRelativePathToOutputRoot":"_themes/"}