{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DataSet</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an in-memory cache of data.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultProperty(&quot;DataSetName&quot;)]\n[System.ComponentModel.Designer(&quot;Microsoft.VSDesigner.Data.VS.DataSetDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItem(&quot;Microsoft.VSDesigner.Data.VS.DataSetToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Xml.Serialization.XmlRoot(&quot;DataSet&quot;)]\n[System.Xml.Serialization.XmlSchemaProvider(&quot;GetDataSetSchema&quot;)]\npublic class DataSet : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent\" data-linktype=\"relative-path\">System.ComponentModel.MarshalByValueComponent</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">DataSet</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent#System_ComponentModel_MarshalByValueComponent_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The DataSet, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture. The DataSet consists of a collection of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects that you can relate to each other with <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects. You can also enforce data integrity in the DataSet by using the <a class=\"xref\" href=\"system.data.uniqueconstraint\" data-linktype=\"relative-path\">UniqueConstraint</a> and <a class=\"xref\" href=\"system.data.foreignkeyconstraint\" data-linktype=\"relative-path\">ForeignKeyConstraint</a> objects. For further details about working with DataSet objects, see <a href=\"../Topic/DataSets,%20DataTables,%20and%20DataViews.md\" data-linktype=\"relative-path\">DataSets, DataTables, and DataViews</a>.  </p>\n<p> Whereas <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects contain the data, the <a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a> allows you to navigate though the table hierarchy. The tables are contained in a <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a> accessed through the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Tables_\" data-linktype=\"relative-path\">Tables</a> property. When accessing <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects, note that they are conditionally case sensitive. For example, if one <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is named &quot;mydatatable&quot; and another is named &quot;Mydatatable&quot;, a string used to search for one of the tables is regarded as case sensitive. However, if &quot;mydatatable&quot; exists and &quot;Mydatatable&quot; does not, the search string is regarded as case insensitive. For more information about working with <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects, see <a href=\"../Topic/Creating%20a%20DataTable.md\" data-linktype=\"relative-path\">Creating a DataTable</a>.  </p>\n<p> A DataSet can read and write data and schema as XML documents. The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled. You can save the schema as an XML schema with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method, and both schema and data can be saved using the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method. To read an XML document that includes both schema and data, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method.  </p>\n<p> In a typical multiple-tier implementation, the steps for creating and refreshing a DataSet, and in turn, updating the original data are to:  </p>\n<ol>\n<li><p>Build and fill each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> in a DataSet with data from a data source using a <a class=\"xref\" href=\"system.data.common.dataadapter\" data-linktype=\"relative-path\">DataAdapter</a>.  </p>\n</li>\n<li><p>Change the data in individual <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects by adding, updating, or deleting <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects.  </p>\n</li>\n<li><p>Invoke the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method to create a second DataSet that features only the changes to the data.  </p>\n</li>\n<li><p>Call the <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Update_\" data-linktype=\"relative-path\">Update</a> method of the <a class=\"xref\" href=\"system.data.common.dataadapter\" data-linktype=\"relative-path\">DataAdapter</a>, passing the second DataSet as an argument.  </p>\n</li>\n<li><p>Invoke the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method to merge the changes from the second DataSet into the first.  </p>\n</li>\n<li><p>Invoke the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> on the DataSet. Alternatively, invoke <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_RejectChanges_\" data-linktype=\"relative-path\">RejectChanges</a> to cancel the changes.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The DataSet and <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects inherit from <a class=\"xref\" href=\"system.componentmodel.marshalbyvaluecomponent\" data-linktype=\"relative-path\">MarshalByValueComponent</a>, and support the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for remoting. These are the only ADO.NET objects that can be remoted.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Classes inherited from DataSet are not finalized by the garbage collector, because the finalizer has been suppressed in DataSet. The derived class can call the <a class=\"xref\" href=\"system.gc#System_GC_ReRegisterForFinalize_\" data-linktype=\"relative-path\">ReRegisterForFinalize</a> method in its constructor to allow the class to be finalized by the garbage collector.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSet()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataSet ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This implementation of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> constructor takes no parameters, and creates a default name, &quot;NewDataSet,&quot; for the new instance.  </p>\n<p> A name for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is required to ensure that the XML representation of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> always has a name for the document element, which is the highest-level element in a schema definition.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSet(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class with the given name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DataSet (string dataSetName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSetName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A name for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is required to ensure that the XML representation of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> always has a name for the document element, which is the highest level element in a schema definition.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSet(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class that has the given serialization information and context.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DataSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The data needed to serialize or deserialize an object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source and destination of a given serialized stream.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSet(SerializationInfo,StreamingContext,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected DataSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context, bool ConstructSchema);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ConstructSchema</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The boolean value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_CaseSensitive\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CaseSensitive</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether string comparisons within <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects are case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool CaseSensitive { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if string comparisons are case-sensitive; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The CaseSensitive property affects how sorting, searching, and filtering operations are performed on each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object contained in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> when using the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Select_\" data-linktype=\"relative-path\">Select</a> method.  </p>\n<p> By default, setting the CaseSensitive property for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> also sets the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_CaseSensitive_\" data-linktype=\"relative-path\">CaseSensitive</a> property of each associated <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to the same value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_DataSetName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataSetName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string DataSetName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_DefaultViewManager\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultViewManager</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a custom view of the data contained in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to allow filtering, searching, and navigating using a custom <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataViewManager DefaultViewManager { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataviewmanager\" data-linktype=\"relative-path\">DataViewManager</a> returned by the DefaultViewManager property allows you to create custom settings for each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> When you obtain a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, the sort order, filtering, and <a class=\"xref\" href=\"system.data.dataviewrowstate\" data-linktype=\"relative-path\">DataViewRowState</a> are configured according to the settings in the DefaultViewManager property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_EnforceConstraints\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EnforceConstraints</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool EnforceConstraints { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if rules are enforced; otherwise <code>false</code>. The default is <code>true</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>One or more constraints cannot be enforced.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Constraints are set at the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> level (<a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Constraints_\" data-linktype=\"relative-path\">Constraints</a> property). For more information about creating constraints, see <a href=\"../Topic/DataTable%20Constraints.md\" data-linktype=\"relative-path\">DataTable Constraints</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ExtendedProperties\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendedProperties</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of customized user information associated with the <code>DataSet</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.PropertyCollection ExtendedProperties { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.propertycollection\" data-linktype=\"relative-path\">PropertyCollection</a> with all custom user information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ExtendedProperties property enables you to store custom information with the <code>DataSet</code>. For example, you might store a time when the data should be refreshed.  </p>\n<p> Extended properties must be of type <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if you want them persisted when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is written as XML.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_HasErrors\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasErrors</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether there are errors in any of the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects within this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasErrors { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if any table contains an error;otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> in a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> also has a <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_HasErrors_\" data-linktype=\"relative-path\">HasErrors</a> property. Use the <code>HasErrors</code> property of the <code>DataSet</code> first, to determine if any table has errors, before checking individual <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects. If a <code>DataTable</code> has errors, the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_GetErrors_\" data-linktype=\"relative-path\">GetErrors</a> method returns an array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects containing the errors.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_IsInitialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInitialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsInitialized { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to indicate the component has completed initialization; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Returns the status of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> while it’s being constructed, for instance by Visual Studio. The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method sets it to <code>false</code> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method sets it to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Locale\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Locale</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the locale information used to compare strings within the table.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Globalization.CultureInfo Locale { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> that contains data about the user&#39;s machine locale. The default is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Locale property specifies the locale for which sorting applies.  </p>\n<p> By default, setting the Locale for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> also sets the Locale for each <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> object in that <code>DataSet</code> to the same value.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In columns that contain expressions, the <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> is used. The <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> is ignored.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Namespace\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Namespace</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the namespace of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Namespace { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The namespace of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The namespace already has data.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Namespace property is used when reading and writing an XML document into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a>, or <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods.  </p>\n<p> The namespace of an XML document is used to scope XML attributes and elements when read into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For example, if a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains a schema that was read from a document with the namespace &quot;myCompany,&quot; and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Prefix\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Prefix</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an XML prefix that aliases the namespace of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Prefix { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The XML prefix for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> namespace.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Prefix property is used throughout an XML document to identify elements which belong to the namespace of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object (as set by the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Relations\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Relations</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataRelationCollection Relations { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datarelationcollection\" data-linktype=\"relative-path\">DataRelationCollection</a> that contains a collection of <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects. An empty collection is returned if no <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_RemotingFormat\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemotingFormat</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.data.serializationformat\" data-linktype=\"relative-path\">SerializationFormat</a> for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> used during remoting.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.SerializationFormat RemotingFormat { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.serializationformat\" data-linktype=\"relative-path\">SerializationFormat</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.serializationformat\" data-linktype=\"relative-path\">SerializationFormat</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_SchemaSerializationMode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SchemaSerializationMode</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Data.SchemaSerializationMode SchemaSerializationMode { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Gets or sets a <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> serializes its schema and instance data by default in Web services and remoting scenarios. Setting the SchemaSerializationMode property of a typed <code>DataSet</code> to <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> causes schema information to be excluded from the serialization payload.  </p>\n<p> <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> is supported only for a typed <code>DataSet</code>. For an un-typed <code>DataSet</code> this property can only be set to <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a>.  </p>\n<p> <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> should only be used in cases where the schema information of the underlying typed <code>DataTables</code>, <code>DataRelations</code> and <code>Constraints</code> has not been modified. If modifications have occurred, complete schema information should be serialized with <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a>.  </p>\n<p> <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> is supported in version 2.0 of the .NET Framework or later.  </p>\n<p> When <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> is set, only the top level runtime properties present on the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> are serialized. In addition, they are serialized only if they happen to be different from the default values. None of the <code>Tables</code>, <code>Relations</code> or <code>Constraints</code> are serialized. The serialized runtime properties include <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_DataSetName_\" data-linktype=\"relative-path\">DataSetName</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Namespace_\" data-linktype=\"relative-path\">Namespace</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Prefix_\" data-linktype=\"relative-path\">Prefix</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Locale_\" data-linktype=\"relative-path\">Locale</a>, <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a>, and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_CaseSensitive_\" data-linktype=\"relative-path\">CaseSensitive</a>. These properties are serialized to make sure that overall runtime data integrity is preserved.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Site\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Site</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override System.ComponentModel.ISite Site { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.componentmodel.isite\" data-linktype=\"relative-path\">ISite</a> for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Sites bind a <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a> to a <a class=\"xref\" href=\"system.componentmodel.container\" data-linktype=\"relative-path\">Container</a> and enable communication between them, as well as provide a way for the container to manage its components.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Tables\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Tables</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of tables contained in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTableCollection Tables { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a> contained by this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. An empty collection is returned if no <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects exist.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To add tables to the collection, use <a class=\"xref\" href=\"system.data.datatablecollection#System_Data_DataTableCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a>. To remove tables, use the <a class=\"xref\" href=\"system.data.datatablecollection#System_Data_DataTableCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_AcceptChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AcceptChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Commits all the changes made to this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> since it was loaded or since the last time AcceptChanges was called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AcceptChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Both the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> and <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> classes have AcceptChanges methods. Calling <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> at the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> level causes the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> method for each <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> to be called. Similarly, invoking AcceptChanges on the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> causes <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_AcceptChanges_\" data-linktype=\"relative-path\">AcceptChanges</a> to be called on each table within the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. In this manner, you have multiple levels at which the method can be invoked. Calling the AcceptChanges of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.  </p>\n<p> When you call <code>AcceptChanges</code> on the <code>DataSet</code>, any <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects still in edit-mode end their edits successfully. The <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_RowState_\" data-linktype=\"relative-path\">RowState</a> property of each <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> also changes; <code>Added</code> and <code>Modified</code> rows become <code>Unchanged</code>, and <code>Deleted</code> rows are removed.  </p>\n<p> If the <code>DataSet</code> contains <a class=\"xref\" href=\"system.data.foreignkeyconstraint\" data-linktype=\"relative-path\">ForeignKeyConstraint</a> objects, invoking the <code>AcceptChanges</code> method also causes the <a class=\"xref\" href=\"system.data.foreignkeyconstraint#System_Data_ForeignKeyConstraint_AcceptRejectRule_\" data-linktype=\"relative-path\">AcceptRejectRule</a> to be enforced.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>AcceptChanges</code> and <code>RejectChanges</code> only apply to <code>DataRow</code> related changes (that is, Add, Remove, Delete, and Modify). They are not applicable to schema or structural changes.  </p>\n<p> Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter. In that situation, call <a class=\"xref\" href=\"system.data.common.dataadapter#System_Data_Common_DataAdapter_Update_\" data-linktype=\"relative-path\">Update</a> instead. See <a href=\"http://msdn.microsoft.com/library/33y2221y.aspx\" data-linktype=\"external\">Updating Data Sources with DataAdapters</a> for more information.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_BeginInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the initialization of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that is used on a form or used by another component. The initialization occurs at run time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component. The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method ends the initialization. Using the BeginInit and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EndInit_\" data-linktype=\"relative-path\">EndInit</a> methods prevents the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clear()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clears the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> of any data by removing all rows in all tables.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is bound to an <a class=\"xref\" href=\"system.xml.xmldatadocument\" data-linktype=\"relative-path\">XmlDataDocument</a>, calling Clear or <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Clear_\" data-linktype=\"relative-path\">Clear</a> raises the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>. To avoid this situation, traverse each table, removing each row one at a time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Clone\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clone()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies the structure of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, including all <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> schemas, relations, and constraints. Does not copy any data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Data.DataSet Clone ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the same schema as the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, but none of the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> If these classes have been subclassed, the clone will also be of the same subclasses.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Copy\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Copy()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Copies both the structure and data for this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataSet Copy ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the same structure (table schemas, relations, and constraints) and data as this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n <div class=\"alert NOTE\"><br> If these classes have been subclassed, the copy will also be of the same subclasses.<br>\n</div>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_CreateDataReader\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateDataReader()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> with one result set per <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, in the same sequence as the tables appear in the <span class=\"xref\">stem.Data.DataSet.Tables*</span> collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTableReader CreateDataReader ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> containing one or more result sets, corresponding to the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances contained within the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In order to ensure the order of the result sets within the returned <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a>, if a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> within the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is empty, it is represented by an empty result set within the returned <code>DataTableReader</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_CreateDataReader_System_Data_DataTable___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateDataReader(DataTable[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> with one result set per <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataTableReader CreateDataReader (System.Data.DataTable[] dataTables);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataTables</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of DataTables providing the order of the result sets to be returned in the <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a> containing one or more result sets, corresponding to the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances contained within the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The returned result sets are in the order specified by the <code>dataTables</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In order to ensure that the order of the result sets within the returned <a class=\"xref\" href=\"system.data.datatablereader\" data-linktype=\"relative-path\">DataTableReader</a>, if a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> within the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is empty, it is represented by an empty result set within the returned <code>DataTableReader</code>. Because this overloaded version allows you to supply a list of <code>DataTable</code> instances as parameters, you can specify the order in which the result sets appear within the returned <code>DataTableReader</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_DetermineSchemaSerializationMode_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DetermineSchemaSerializationMode(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines the <span class=\"xref\">stem.Data.DataSet.SchemaSerializationMode*</span> for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Data.SchemaSerializationMode DetermineSchemaSerializationMode (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> instance that is passed during deserialization of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> enumeration indicating whether schema information has been omitted from the payload.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be called when deserializing a typed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to determine its <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_SchemaSerializationMode_\" data-linktype=\"relative-path\">SchemaSerializationMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_DetermineSchemaSerializationMode_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DetermineSchemaSerializationMode(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines the <span class=\"xref\">stem.Data.DataSet.SchemaSerializationMode*</span> for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Data.SchemaSerializationMode DetermineSchemaSerializationMode (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that a <code>DataSet</code>’s protected constructor <span class=\"xref\">stem.Data.DataSet.#ctor*</span> is invoked with during deserialization in remoting scenarios.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that a <code>DataSet</code>’s protected constructor <span class=\"xref\">stem.Data.DataSet.#ctor*</span> is invoked with during deserialization in remoting scenarios.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.schemaserializationmode\" data-linktype=\"relative-path\">SchemaSerializationMode</a> enumeration indicating whether schema information has been omitted from the payload.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be called when deserializing a typed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to determine its <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_SchemaSerializationMode_\" data-linktype=\"relative-path\">SchemaSerializationMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_EndInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ends the initialization of a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that is used on a form or used by another component. The initialization occurs at run time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void EndInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component. The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method starts the initialization. Using the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and EndInit methods prevents the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a copy of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that contains all changes made to it since it was loaded or since <span class=\"xref\">stem.Data.DataSet.AcceptChanges*</span> was last called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataSet GetChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A copy of the changes from this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that can have actions performed on it and later be merged back in using <span class=\"xref\">stem.Data.DataSet.Merge*</span>. If no changed rows are found, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that contains a copy of all rows in the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that have pending changes. Relationship constraints can cause additional unchanged rows to be added to the new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows. The method returns <code>null</code> if there are no rows in the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that have pending changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetChanges_System_Data_DataRowState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetChanges(DataRowState)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a copy of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> containing all changes made to it since it was last loaded, or since <span class=\"xref\">stem.Data.DataSet.AcceptChanges*</span> was called, filtered by <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.DataSet GetChanges (System.Data.DataRowState rowStates);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rowStates</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A filtered copy of the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that can have actions performed on it, and subsequently be merged back in using <span class=\"xref\">stem.Data.DataSet.Merge*</span>. If no rows of the desired <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> are found, the method returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is used to produce a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object that contains only the changes introduced into the original. Use the <code>rowStates</code> argument to specify the type of changes the new object should include.  </p>\n<p> This returned copy is designed to be merged back in to this original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. Relationship constraints may cause parent rows marked <code>Unchanged</code> to be included. If no rows of the desired <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> are found, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method returns <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetDataSetSchema_System_Xml_Schema_XmlSchemaSet_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDataSetSchema(XmlSchemaSet)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a copy of <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> for the DataSet.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Xml.Schema.XmlSchemaComplexType GetDataSetSchema (System.Xml.Schema.XmlSchemaSet schemaSet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>schemaSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified schema set.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemacomplextype\" data-linktype=\"relative-path\">XmlSchemaComplexType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A copy of <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Populates a serialization information object with the data needed to serialize the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that holds the serialized data associated with the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>info</code> parameter is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetSchemaSerializable\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSchemaSerializable()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a serializable <span class=\"xref\">stem.Xml.Schema.XMLSchema</span> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Xml.Schema.XmlSchema GetSchemaSerializable ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Xml.Schema.XMLSchema</span> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetSerializationData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetSerializationData(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Deserializes the table data from the binary or XML stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void GetSerializationData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The streaming context.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetXml\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXml()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the XML representation of the data stored in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetXml ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that is a representation of the data stored in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling this method is identical to calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> with <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> set to <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>.  </p>\n<p> GetXml returns XML as a string, and therefore requires more overhead than <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> to write XML to a file.  </p>\n<p> If you build a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using schema inference and serialize it using XML or Web services, the column ordering may change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_GetXmlSchema\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetXmlSchema()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the XML Schema for the XML representation of the data stored in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string GetXmlSchema ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>String that is the XML Schema for the XML representation of the data stored in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Calling this method is identical to calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a>, except that only the primary schema is written.  </p>\n<p> GetXmlSchema returns XML as a string, and therefore requires more overhead than <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> to write XML to a file.  </p>\n<p> If you build a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using schema inference and serialize it using XML or Web services, the column ordering may change.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_HasChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> has changes, including new, deleted, or modified rows.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> has changes; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_HasChanges_System_Data_DataRowState_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HasChanges(DataRowState)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> has changes, including new, deleted, or modified rows, filtered by <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool HasChanges (System.Data.DataRowState rowStates);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rowStates</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> has changes; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Examine the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_HasChanges_\" data-linktype=\"relative-path\">HasChanges</a> property of the <code>DataSet</code> before invoking the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_InferXmlSchema_System_IO_Stream_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InferXmlSchema(Stream,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the XML schema from the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void InferXmlSchema (System.IO.Stream stream, string[] nsArray);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>Stream</code> from which to read the schema.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nsArray</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_InferXmlSchema_System_IO_TextReader_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InferXmlSchema(TextReader,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the XML schema from the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void InferXmlSchema (System.IO.TextReader reader, string[] nsArray);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>TextReader</code> from which to read the schema.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nsArray</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_InferXmlSchema_System_String_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InferXmlSchema(String,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the XML schema from the specified file to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void InferXmlSchema (string fileName, string[] nsArray);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file (including the path) from which to read the schema.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nsArray</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_InferXmlSchema_System_Xml_XmlReader_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InferXmlSchema(XmlReader,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Applies the XML schema from the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void InferXmlSchema (System.Xml.XmlReader reader, string[] nsArray);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XMLReader</code> from which to read the schema.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>nsArray</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_InitializeDerivedDataSet\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InitializeDerivedDataSet()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Deserialize all of the tables data of the DataSet from the binary or XML stream.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void InitializeDerivedDataSet ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_IsBinarySerialized_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsBinarySerialized(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Inspects the format of the serialized representation of the <code>DataSet</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected bool IsBinarySerialized (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the specified <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> represents a <code>DataSet</code> serialized in its binary format, <code>false</code> otherwise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Load_System_Data_IDataReader_System_Data_LoadOption_System_Data_DataTable___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader,LoadOption,DataTable[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, using an array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances to supply the schema and namespace information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.DataTable[] tables);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides one or more result sets.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration that indicates how rows already in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances within the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> will be combined with incoming rows that share the same primary key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tables</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances, from which the Load method retrieves name and namespace information. Each of these tables must be a member of the <a class=\"xref\" href=\"system.data.datatablecollection\" data-linktype=\"relative-path\">DataTableCollection</a> contained by this <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method provides a technique for filling a single <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with data, retrieved from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance. This method provides the same functionality, but allows you to load multiple result sets from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> into multiple tables within a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The load operation will fail with an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> if any of the source data columns in the incoming <code>reader</code> are computed columns.  </p>\n</div>\n<p> The <code>loadOption</code> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration. See the documentation for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a><a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method for more information on using this parameter.  </p>\n<p> The <code>tables</code> parameter allows you to specify an array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances, indicating the order of the tables corresponding to each result set loaded from the reader. The Loadmethod fills each supplied <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instance with data from a single result set from the source data reader. After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.  </p>\n<p> The name resolution scheme for this method is the same as that followed by the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method of the <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Load_System_Data_IDataReader_System_Data_LoadOption_System_String___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader,LoadOption,String[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, using an array of strings to supply the names for the tables within the <code>DataSet</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, string[] tables);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides one or more result sets.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration that indicates how rows already in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances within the <code>DataSet</code> will be combined with incoming rows that share the same primary key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tables</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of strings, from which the <code>Load</code> method retrieves table name information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method provides a technique for filling a single <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with data, retrieved from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance. This method provides the same functionality, but allows you to load multiple result sets from an <code>IDataReader</code> into multiple tables within a <code>DataSet</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The load operation will fail with an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> if any of the source data columns in the incoming <code>reader</code> are computed columns.  </p>\n</div>\n<p> The <code>loadOption</code> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration. See the documentation for the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method for more information on using this parameter.  </p>\n<p> The <code>tables</code> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader. The <code>Load</code> method attempts to find a table within the <code>DataSet</code> matching the name found in the array of table names, in order. If a matching table is found, that table is loaded with the content of the current result set. If no matching table is found, a table is created using the name supplied in the array of table names, and the new table&#39;s schema is inferred from the result set. After each result set, the <code>Load</code> method moves on to the next result set within the reader, until there are no more result sets.  </p>\n<p> The default namespace associated with <code>DataSet</code>, if any, is associated with each newly created <code>DataTable</code>. The name resolution scheme for this method is the same as that followed by the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method of the <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Load_System_Data_IDataReader_System_Data_LoadOption_System_Data_FillErrorEventHandler_System_Data_DataTable___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Load(IDataReader,LoadOption,FillErrorEventHandler,DataTable[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Fills a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with values from a data source using the supplied <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a>, using an array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances to supply the schema and namespace information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler, System.Data.DataTable[] tables);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> that provides one or more result sets.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>loadOption</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration that indicates how rows already in the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances within the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> will be combined with incoming rows that share the same primary key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>errorHandler</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a> delegate to call when an error occurs while loading data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>tables</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances, from which the Load method retrieves name and namespace information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method provides a technique for filling a single <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> with data, retrieved from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> instance. This method provides the same functionality, but allows you to load multiple result sets from an <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> into multiple tables within a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The load operation will fail with an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> if any of the source data columns in the incoming <code>reader</code> are computed columns.  </p>\n</div>\n<p> The <code>loadOption</code> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <a class=\"xref\" href=\"system.data.loadoption\" data-linktype=\"relative-path\">LoadOption</a> enumeration. See the documentation for the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a><a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_Load_\" data-linktype=\"relative-path\">Load</a> method for more information on using this parameter.  </p>\n<p> The <code>errorHandler</code> parameter is a <a class=\"xref\" href=\"system.data.fillerroreventhandler\" data-linktype=\"relative-path\">FillErrorEventHandler</a> delegate that refers to a procedure that is called when an error occurs while loading data. The <a class=\"xref\" href=\"system.data.fillerroreventargs\" data-linktype=\"relative-path\">FillErrorEventArgs</a> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> being filled. Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like. The <a class=\"xref\" href=\"system.data.fillerroreventargs\" data-linktype=\"relative-path\">FillErrorEventArgs</a> parameter supplies a <a class=\"xref\" href=\"system.data.fillerroreventargs#System_Data_FillErrorEventArgs_Continue_\" data-linktype=\"relative-path\">Continue</a> property: set this property to <code>true</code> to indicate that you have handled the error and wish to continue processing; set the property to <code>false</code> to indicate that you wish to halt processing. Be aware that setting the property to <code>false</code> causes the code that triggered the problem to throw an exception.  </p>\n<p> The <code>tables</code> parameter allows you to specify an array of <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instances, indicating the order of the tables corresponding to each result set loaded from the reader. The Loadmethod fills each supplied <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> instance with data from a single result set from the source data reader. After each result set, the Loadmethod moves on to the next result set within the reader, until there are no more result sets.  </p>\n<p> The name resolution scheme for this method is the same as that followed by the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method of the <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataRow___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataRow[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges an array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects into the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataRow[] rows);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rows</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The array of <code>DataRow</code> objects to be merged into the <code>DataSet</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of a merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataSet_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataSet)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges a specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and its schema into the current <code>DataSet</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataSet dataSet);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>DataSet</code> whose data and schema will be merged.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>One or more constraints cannot be enabled.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>dataSet</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Merge method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The Merge method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the Merge method.  </p>\n<p> When the Merge method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataTable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataTable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges a specified <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its schema into the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataTable table);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> whose data and schema will be merged.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>table</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataSet_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataSet,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges a specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and its schema into the current <code>DataSet</code>, preserving or discarding any changes in this <code>DataSet</code> according to the given argument.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataSet dataSet, bool preserveChanges);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>DataSet</code> whose data and schema will be merged.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to preserve changes in the current <code>DataSet</code>; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataRow___System_Boolean_System_Data_MissingSchemaAction_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataRow[],Boolean,MissingSchemaAction)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges an array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects into the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, preserving or discarding changes in the <code>DataSet</code> and handling an incompatible schema according to the given arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataRow[] rows, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rows</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The array of <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects to be merged into the <code>DataSet</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to preserve changes in the <code>DataSet</code>; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>missingSchemaAction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> To facilitate explanation of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method, we use &quot;target&quot; to signify the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, and &quot;source&quot; to name the second (parameter) <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The target <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is so named because it is the object upon which an action (the merge) occurs. The second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is called a &quot;source&quot; because the information it contains does not change, but instead is merged into the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataSet_System_Boolean_System_Data_MissingSchemaAction_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataSet,Boolean,MissingSchemaAction)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges a specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and its schema with the current <code>DataSet</code>, preserving or discarding changes in the current <code>DataSet</code> and handling an incompatible schema according to the given arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataSet dataSet, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dataSet</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>DataSet</code> whose data and schema will be merged.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to preserve changes in the current <code>DataSet</code>; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>missingSchemaAction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>dataSet</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> To facilitate explanation of the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method, we use &quot;target&quot; to signify the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, and &quot;source&quot; to name the second (parameter) <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The target <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is so named because it is the object upon which an action (the merge) occurs. The second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is called a &quot;source&quot; because the information it contains does not change, but instead is merged into the current <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Merge_System_Data_DataTable_System_Boolean_System_Data_MissingSchemaAction_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Merge(DataTable,Boolean,MissingSchemaAction)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Merges a specified <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and its schema into the current <code>DataSet</code>, preserving or discarding changes in the <code>DataSet</code> and handling an incompatible schema according to the given arguments.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>DataTable</code> whose data and schema will be merged.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>preserveChanges</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>missingSchemaAction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.missingschemaaction\" data-linktype=\"relative-path\">MissingSchemaAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to preserve changes in the <code>DataSet</code>; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>dataSet</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is used to merge two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects that have largely similar schemas. A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This allows the client application to have a refreshed <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the latest data from the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component. In this scenario, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_GetChanges_\" data-linktype=\"relative-path\">GetChanges</a> method is first invoked. That method returns a second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> optimized for validating and merging. This second <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> object contains only the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects that were changed, resulting in a subset of the original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. This subset is generally smaller, and thus more efficiently passed back to a middle-tier component. The middle-tier component then updates the original data source with the changes through stored procedures. The middle tier can then send back either a new <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source. (For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can be merged back into the client application&#39;s original <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_Merge_\" data-linktype=\"relative-path\">Merge</a> method is called, the schemas of the two <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> objects are compared because it is possible that the schemas may have been changed. For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process. If the source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains schema elements (added <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> objects) that are missing in the target, the schema elements can be added to the target by setting the <code>missingSchemaAction</code> argument to <code>MissingSchemaAction.Add</code>. In that case, the merged <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains the added schema and data.  </p>\n<p> After merging schemas, the data is merged.  </p>\n<p> When merging a new source <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into the target, any source rows with a <a class=\"xref\" href=\"system.data.datarowstate\" data-linktype=\"relative-path\">DataRowState</a> value of <code>Unchanged</code>, <code>Modified</code>, or <code>Deleted</code> are matched to target rows with the same primary key values. Source rows with a <code>DataRowState</code> value of <code>Added</code> are matched to new target rows with the same primary key values as the new source rows.  </p>\n<p> During a merge, constraints are disabled. If any constraints cannot be enabled at the end of merge, a <a class=\"xref\" href=\"system.data.constraintexception\" data-linktype=\"relative-path\">ConstraintException</a> is generated and the merged data is retained while the constraints are disabled. In this case, the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property is set to <code>false</code>, and all rows that are invalid are marked in error. The errors must be resolved before attempting to reset the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_EnforceConstraints_\" data-linktype=\"relative-path\">EnforceConstraints</a> property to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_OnPropertyChanging_System_ComponentModel_PropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPropertyChanging(PropertyChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the OnPropertyChanging event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>pcevent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Raising an event invokes the event handler through a delegate. For an overview, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_OnRemoveRelation_System_Data_DataRelation_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRemoveRelation(DataRelation)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> object is removed from a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRemoveRelation (System.Data.DataRelation relation);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>relation</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datarelation\" data-linktype=\"relative-path\">DataRelation</a> being removed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method should be overridden by subclasses to restrict tables being removed</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_OnRemoveTable_System_Data_DataTable_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRemoveTable(DataTable)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> is removed from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnRemoveTable (System.Data.DataTable table);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>table</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> being removed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method can be overridden by subclasses to restrict tables from being removed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_RaisePropertyChanging_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RaisePropertyChanging(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sends a notification that the specified <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> property is about to change.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RaisePropertyChanging (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the property that is about to change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that derives from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema, as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_IO_TextReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(TextReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>TextReader</code> from which to read the schema and data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><p> Classes that inherit from the <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> class include the <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> and <a class=\"xref\" href=\"system.io.stringreader\" data-linktype=\"relative-path\">StringReader</a> classes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The filename (including the path) from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes a <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ReadXml method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes a <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling ReadXml to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><p> <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">System.Xml.XmlTextReader</a> inherits from <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with ReadXml by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_IO_Stream_System_Data_XmlReadMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(Stream,XmlReadMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.Stream stream, System.Data.XmlReadMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> The same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you use ReadXml and you set <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> to <code>Diffgram</code>, the content of the target <code>DataSet</code> and the original <code>DataSet</code> may differ because of how the diffgram is generated and processed. For more information on diffgrams, see <a href=\"../Topic/DiffGrams.md\" data-linktype=\"relative-path\">DiffGrams</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_IO_TextReader_System_Data_XmlReadMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(TextReader,XmlReadMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> and <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader, System.Data.XmlReadMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_String_System_Data_XmlReadMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(String,XmlReadMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified file and <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (string fileName, System.Data.XmlReadMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The filename (including the path) from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes a <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXml_System_Xml_XmlReader_System_Data_XmlReadMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXml(XmlReader,XmlReadMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads XML schema and data into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader, System.Data.XmlReadMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlreadmode\" data-linktype=\"relative-path\">XmlReadMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <code>XmlReadMode</code> used to read the data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method provides a way to read either data only, or both data and schema into a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> from an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method reads only the schema. To read both data and schema, use one of the <code>ReadXML</code> overloads that includes the <code>mode</code> parameter, and set its value to <code>ReadSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> methods, respectively. To write XML data, or both schema and data from the <code>DataSet</code>, use the <code>WriteXml</code> method. To write just the schema, use the <code>WriteXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.  </p>\n</div>\n<p> If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data. If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.  </p>\n<p> If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document. If the schema cannot be extended through inference in order to expose all data, an exception is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>DataSet</code> does not associate an XML element with its corresponding <code>DataColumn</code> or <code>DataTable</code> when legal XML characters like (&quot;_&quot;) are escaped in the serialized XML. The <code>DataSet</code> itself only escapes illegal XML characters in XML element names and hence can only consume the same. When legal characters in XML element name are escaped, the element is ignored while processing.  </p>\n</div>\n<p> If the XML Schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> includes a <code>targetNamespace</code>, data may not be read, and you may encounter exceptions when calling <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> to load the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with XML that contains elements with no qualifying namespace. To read unqualified elements, set <code>elementFormDefault</code> equal to &quot;qualified&quot; in your XML Schema as the following example demonstrates.  </p>\n<pre><code>&lt;xsd:schema id=&quot;MyDataSet&quot;   \n   elementFormDefault=&quot;qualified&quot;   \n   targetNamespace=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns=&quot;http://www.tempuri.org/MyDataSet.xsd&quot;   \n   xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;   \n   xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;  \n&lt;/xsd:schema&gt;  \n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> by specifying <code>XmlReadMode.ReadSchema</code>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXmlSchema_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the XML schema from the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method to create the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> Classes that derive from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class include <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a>, <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>, <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>, and <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXmlSchema_System_IO_TextReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(TextReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the XML schema from the specified <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.IO.TextReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method to create the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> Classes that inherit from the <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> class include the <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> and <a class=\"xref\" href=\"system.io.stringreader\" data-linktype=\"relative-path\">StringReader</a> classes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXmlSchema_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the XML schema from the specified file into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file name (including the path) from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method to create the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a>. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXmlSchema_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSchema(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reads the XML schema from the specified <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ReadXmlSchema (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> from which to read.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ReadXmlSchema method to create the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. The schema includes table, relation, and constraint definitions.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Data corruption can occur if the msdata:DataType and the xs:type types do not match. No exception will be thrown.  </p>\n</div>\n<p> The ReadXmlSchema method is generally invoked before invoking the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> method which is used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">System.Xml.XmlReader</a> class is abstract. A class that inherits from the <code>XmlReader</code> is the <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">System.Xml.XmlTextReader</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the schema for your <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> with ReadXmlSchema. This exception does not occur if you are using .NET Framework version 1.0.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ReadXmlSerializable_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReadXmlSerializable(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ignores attributes and returns an empty DataSet.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The specified XML reader.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_RejectChanges\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RejectChanges()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Rolls back all the changes made to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> since it was created, or since the last time <span class=\"xref\">stem.Data.DataSet.AcceptChanges*</span> was called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void RejectChanges ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Invoke the RejectChanges to call the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RejectChanges_\" data-linktype=\"relative-path\">RejectChanges</a> method on all <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> objects contained by the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.  </p>\n<p> <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects contained by the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> can each be set into edit mode by invoking the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_BeginEdit_\" data-linktype=\"relative-path\">BeginEdit</a> method. After invoking the <a class=\"xref\" href=\"system.data.datarow#System_Data_DataRow_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a> method, changes can be rejected by calling the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RejectChanges_\" data-linktype=\"relative-path\">RejectChanges</a> on the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> to which the <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> objects belong.  </p>\n<p> When the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_RejectChanges_\" data-linktype=\"relative-path\">RejectChanges</a> method is called, any rows still in edit-mode cancel their edits. New rows are removed. Modified and deleted rows return back to their original state (<code>DataRowState.Unchanged</code>).  </p>\n<p> AcceptChanges and RejectChanges only apply to <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> related changes (that is, <code>Add</code>, <code>Remove</code>, <code>Delete</code>, and <code>Modify</code>). They are not applicable to schema or structural changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Reset\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reset()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Clears all tables and removes all relations, foreign constraints, and tables from the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. Subclasses should override Reset to restore a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to its original state.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void Reset ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ShouldSerializeRelations\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShouldSerializeRelations()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether <span class=\"xref\">stem.Data.DataSet.Relations*</span> property should be persisted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ShouldSerializeRelations ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the property value has been changed from its default; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You typically use this method if you are either creating a designer for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, or creating your own control incorporating the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_ShouldSerializeTables\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShouldSerializeTables()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value indicating whether <span class=\"xref\">stem.Data.DataSet.Tables*</span> property should be persisted.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual bool ShouldSerializeTables ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the property value has been changed from its default; otherwise <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You typically use this method only if you are either creating a designer for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, or creating your own control incorporating the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used to write to a file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>mode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>mode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the specified file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file name (including the path) to which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>mode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, use one of the overloads that includes the <code>mode</code> parameter, and set its value to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_IO_Stream_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(Stream,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used to write to a file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, set the <code>mode</code> parameter to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_IO_TextWriter_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(TextWriter,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object used to write the document.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, set the <code>mode</code> parameter to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_String_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(String,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to the specified file using the specified <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (string fileName, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file name (including the path) to which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, set the <code>mode</code> parameter to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXml_System_Xml_XmlWriter_System_Data_XmlWriteMode_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXml(XmlWriter,XmlWriteMode)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the current data, and optionally the schema, for the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a>. To write the schema, set the value for the <code>mode</code> parameter to <code>WriteSchema</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>mode</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.data.xmlwritemode\" data-linktype=\"relative-path\">XmlWriteMode</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>WriteXml</code> method provides a way to write either data only, or both data and schema from a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> into an XML document, whereas the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method writes only the schema. To write both data and schema, set the <code>mode</code> parameter to <code>WriteSchema</code>.  </p>\n<p> Note that the same is true for the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXml_\" data-linktype=\"relative-path\">ReadXml</a> and <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_ReadXmlSchema_\" data-linktype=\"relative-path\">ReadXmlSchema</a> methods, respectively. To read XML data, or both schema and data into the <code>DataSet</code>, use the <code>ReadXml</code> method. To read just the schema, use the <code>ReadXmlSchema</code> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> will be thrown if a column type in the <code>DataRow</code> being read from or written to implements <a class=\"xref\" href=\"system.dynamic.idynamicmetaobjectprovider\" data-linktype=\"relative-path\">IDynamicMetaObjectProvider</a> and does not implement <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_IO_Stream_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(Stream)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.Stream stream);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object used to write to a file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the WriteXmlSchema method to write the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the WriteXmlSchema method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Classes that derive from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class include <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a>, <a class=\"xref\" href=\"system.io.filestream\" data-linktype=\"relative-path\">FileStream</a>, <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>, and <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_IO_TextWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(TextWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.TextWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object with which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> Classes the derive from the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a> class include the <a class=\"xref\" href=\"system.web.httpwriter\" data-linktype=\"relative-path\">System.Web.HttpWriter</a>, <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">System.CodeDom.Compiler.IndentedTextWriter</a>, <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">System.Web.UI.HtmlTextWriter</a>, <a class=\"xref\" href=\"system.io.streamwriter\" data-linktype=\"relative-path\">System.IO.StreamWriter</a>, and <a class=\"xref\" href=\"system.io.stringwriter\" data-linktype=\"relative-path\">System.IO.StringWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to a file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (string fileName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The file name (including the path) to which to write.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.security.permissions.fileiopermission\" data-linktype=\"relative-path\">FileIOPermission</a> is not set to <a class=\"xref\" href=\"system.security.permissions.fileiopermissionaccess\" data-linktype=\"relative-path\">FileIOPermissionAccess</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method to write the schema for a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> to an XML document. The schema includes table, relation, and constraint definitions. To write a schema to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXmlSchema_\" data-linktype=\"relative-path\">WriteXmlSchema</a> method.  </p>\n<p> The XML schema is written using the XSD standard.  </p>\n<p> To write the data to an XML document, use the <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_WriteXml_\" data-linktype=\"relative-path\">WriteXml</a> method.  </p>\n<p> One class that inherits from the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">System.Xml.XmlWriter</a> class is the <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">System.Xml.XmlTextWriter</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_IO_Stream_System_Converter_System_Type_System_String__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(Stream,Converter&lt;Type,String&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to the specified <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.Stream stream, Converter&lt;Type,string&gt; multipleTargetConverter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>stream</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>multipleTargetConverter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate used to convert <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_IO_TextWriter_System_Converter_System_Type_System_String__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(TextWriter,Converter&lt;Type,String&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.IO.TextWriter writer, Converter&lt;Type,string&gt; multipleTargetConverter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>multipleTargetConverter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate used to convert <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_String_System_Converter_System_Type_System_String__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(String,Converter&lt;Type,String&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to a file.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (string fileName, Converter&lt;Type,string&gt; multipleTargetConverter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the file to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>multipleTargetConverter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate used to convert <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_WriteXmlSchema_System_Xml_XmlWriter_System_Converter_System_Type_System_String__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteXmlSchema(XmlWriter,Converter&lt;Type,String&gt;)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> structure as an XML schema to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteXmlSchema (System.Xml.XmlWriter writer, Converter&lt;Type,string&gt; multipleTargetConverter);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object to write to.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>multipleTargetConverter</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A delegate used to convert <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_Initialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs after the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> is initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Initialized;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information, see <a class=\"xref\" href=\"system.data.dataset#System_Data_DataSet_IsInitialized_\" data-linktype=\"relative-path\">IsInitialized</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_MergeFailed\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MergeFailed</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when a target and source <a class=\"xref\" href=\"system.data.datarow\" data-linktype=\"relative-path\">DataRow</a> have the same primary key value, and <span class=\"xref\">stem.Data.DataSet.EnforceConstraints*</span> is set to true.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Data.MergeFailedEventHandler MergeFailed;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_System_ComponentModel_IListSource_ContainsListCollection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IListSource.ContainsListCollection</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.ContainsListCollection*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool System.ComponentModel.IListSource.ContainsListCollection { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.ContainsListCollection*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_System_ComponentModel_IListSource_GetList\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IListSource.GetList()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.GetList*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Collections.IList IListSource.GetList ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.IListSource.GetList*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_System_Xml_Serialization_IXmlSerializable_GetSchema\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.GetSchema()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.GetSchema*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.GetSchema*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_System_Xml_Serialization_IXmlSerializable_ReadXml_System_Xml_XmlReader_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.ReadXml(XmlReader)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.ReadXml*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>reader</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Data_DataSet_System_Xml_Serialization_IXmlSerializable_WriteXml_System_Xml_XmlWriter_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IXmlSerializable.WriteXml(XmlWriter)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see <span class=\"xref\">stem.Xml.Serialization.IXmlSerializable.WriteXml*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>writer</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> instance is cast to an <a class=\"xref\" href=\"system.xml.serialization.ixmlserializable\" data-linktype=\"relative-path\">IXmlSerializable</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataSet.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataSet.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.AcceptChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.CaseSensitive\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Clear\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Clone\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Copy\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.CreateDataReader\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.DataSetName\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.DefaultViewManager\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.DetermineSchemaSerializationMode\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.EnforceConstraints\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ExtendedProperties\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetDataSetSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetSchemaSerializable\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetSerializationData\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.GetXmlSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.HasChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.HasErrors\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.InferXmlSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.add_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.remove_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.InitializeDerivedDataSet\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IsBinarySerialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IsInitialized\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Load\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Locale\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Merge\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.MergeFailed\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.add_MergeFailed\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.remove_MergeFailed\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.OnPropertyChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.OnRemoveRelation\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.OnRemoveTable\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Prefix\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.RaisePropertyChanging\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ReadXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ReadXmlSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ReadXmlSerializable\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.RejectChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Relations\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.RemotingFormat\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Reset\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.SchemaSerializationMode\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ShouldSerializeRelations\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.ShouldSerializeTables\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Site\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IListSource.ContainsListCollection\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IListSource.GetList\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IXmlSerializable.GetSchema\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IXmlSerializable.ReadXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.IXmlSerializable.WriteXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.Tables\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.WriteXml\">\r\n<meta name=\"APIName\" content=\"System.Data.DataSet.WriteXmlSchema\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"76cdb2e7-887a-9c16-ca93-40234169d56e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an in-memory cache of data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.DataSet\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.DataSet.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.DataSet.yml","open_to_public_contributors":true,"api_name":["System.Data.DataSet","System.Data.DataSet..ctor","System.Data.DataSet.AcceptChanges","System.Data.DataSet.BeginInit","System.Data.DataSet.CaseSensitive","System.Data.DataSet.Clear","System.Data.DataSet.Clone","System.Data.DataSet.Copy","System.Data.DataSet.CreateDataReader","System.Data.DataSet.DataSetName","System.Data.DataSet.DefaultViewManager","System.Data.DataSet.DetermineSchemaSerializationMode","System.Data.DataSet.EndInit","System.Data.DataSet.EnforceConstraints","System.Data.DataSet.ExtendedProperties","System.Data.DataSet.GetChanges","System.Data.DataSet.GetDataSetSchema","System.Data.DataSet.GetObjectData","System.Data.DataSet.GetSchemaSerializable","System.Data.DataSet.GetSerializationData","System.Data.DataSet.GetXml","System.Data.DataSet.GetXmlSchema","System.Data.DataSet.HasChanges","System.Data.DataSet.HasErrors","System.Data.DataSet.InferXmlSchema","System.Data.DataSet.Initialized","System.Data.DataSet.add_Initialized","System.Data.DataSet.remove_Initialized","System.Data.DataSet.InitializeDerivedDataSet","System.Data.DataSet.IsBinarySerialized","System.Data.DataSet.IsInitialized","System.Data.DataSet.Load","System.Data.DataSet.Locale","System.Data.DataSet.Merge","System.Data.DataSet.MergeFailed","System.Data.DataSet.add_MergeFailed","System.Data.DataSet.remove_MergeFailed","System.Data.DataSet.Namespace","System.Data.DataSet.OnPropertyChanging","System.Data.DataSet.OnRemoveRelation","System.Data.DataSet.OnRemoveTable","System.Data.DataSet.Prefix","System.Data.DataSet.RaisePropertyChanging","System.Data.DataSet.ReadXml","System.Data.DataSet.ReadXmlSchema","System.Data.DataSet.ReadXmlSerializable","System.Data.DataSet.RejectChanges","System.Data.DataSet.Relations","System.Data.DataSet.RemotingFormat","System.Data.DataSet.Reset","System.Data.DataSet.SchemaSerializationMode","System.Data.DataSet.ShouldSerializeRelations","System.Data.DataSet.ShouldSerializeTables","System.Data.DataSet.Site","System.Data.DataSet.IListSource.ContainsListCollection","System.Data.DataSet.IListSource.GetList","System.Data.DataSet.IXmlSerializable.GetSchema","System.Data.DataSet.IXmlSerializable.ReadXml","System.Data.DataSet.IXmlSerializable.WriteXml","System.Data.DataSet.Tables","System.Data.DataSet.WriteXml","System.Data.DataSet.WriteXmlSchema"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.DataSet","System::Data::DataSet","System.Data.DataSet.#ctor","System::Data::DataSet::#ctor","System.Data.DataSet.AcceptChanges","System::Data::DataSet::AcceptChanges","System.Data.DataSet.BeginInit","System::Data::DataSet::BeginInit","System.Data.DataSet.CaseSensitive","System::Data::DataSet::CaseSensitive","System.Data.DataSet.Clear","System::Data::DataSet::Clear","System.Data.DataSet.Clone","System::Data::DataSet::Clone","System.Data.DataSet.Copy","System::Data::DataSet::Copy","System.Data.DataSet.CreateDataReader","System::Data::DataSet::CreateDataReader","System.Data.DataSet.DataSetName","System::Data::DataSet::DataSetName","System.Data.DataSet.DefaultViewManager","System::Data::DataSet::DefaultViewManager","System.Data.DataSet.DetermineSchemaSerializationMode","System::Data::DataSet::DetermineSchemaSerializationMode","System.Data.DataSet.EndInit","System::Data::DataSet::EndInit","System.Data.DataSet.EnforceConstraints","System::Data::DataSet::EnforceConstraints","System.Data.DataSet.ExtendedProperties","System::Data::DataSet::ExtendedProperties","System.Data.DataSet.GetChanges","System::Data::DataSet::GetChanges","System.Data.DataSet.GetDataSetSchema","System::Data::DataSet::GetDataSetSchema","System.Data.DataSet.GetObjectData","System::Data::DataSet::GetObjectData","System.Data.DataSet.GetSchemaSerializable","System::Data::DataSet::GetSchemaSerializable","System.Data.DataSet.GetSerializationData","System::Data::DataSet::GetSerializationData","System.Data.DataSet.GetXml","System::Data::DataSet::GetXml","System.Data.DataSet.GetXmlSchema","System::Data::DataSet::GetXmlSchema","System.Data.DataSet.HasChanges","System::Data::DataSet::HasChanges","System.Data.DataSet.HasErrors","System::Data::DataSet::HasErrors","System.Data.DataSet.InferXmlSchema","System::Data::DataSet::InferXmlSchema","System.Data.DataSet.Initialized","System::Data::DataSet::Initialized","System.Data.DataSet.InitializeDerivedDataSet","System::Data::DataSet::InitializeDerivedDataSet","System.Data.DataSet.IsBinarySerialized","System::Data::DataSet::IsBinarySerialized","System.Data.DataSet.IsInitialized","System::Data::DataSet::IsInitialized","System.Data.DataSet.Load","System::Data::DataSet::Load","System.Data.DataSet.Locale","System::Data::DataSet::Locale","System.Data.DataSet.Merge","System::Data::DataSet::Merge","System.Data.DataSet.MergeFailed","System::Data::DataSet::MergeFailed","System.Data.DataSet.Namespace","System::Data::DataSet::Namespace","System.Data.DataSet.OnPropertyChanging","System::Data::DataSet::OnPropertyChanging","System.Data.DataSet.OnRemoveRelation","System::Data::DataSet::OnRemoveRelation","System.Data.DataSet.OnRemoveTable","System::Data::DataSet::OnRemoveTable","System.Data.DataSet.Prefix","System::Data::DataSet::Prefix","System.Data.DataSet.RaisePropertyChanging","System::Data::DataSet::RaisePropertyChanging","System.Data.DataSet.ReadXml","System::Data::DataSet::ReadXml","System.Data.DataSet.ReadXmlSchema","System::Data::DataSet::ReadXmlSchema","System.Data.DataSet.ReadXmlSerializable","System::Data::DataSet::ReadXmlSerializable","System.Data.DataSet.RejectChanges","System::Data::DataSet::RejectChanges","System.Data.DataSet.Relations","System::Data::DataSet::Relations","System.Data.DataSet.RemotingFormat","System::Data::DataSet::RemotingFormat","System.Data.DataSet.Reset","System::Data::DataSet::Reset","System.Data.DataSet.SchemaSerializationMode","System::Data::DataSet::SchemaSerializationMode","System.Data.DataSet.ShouldSerializeRelations","System::Data::DataSet::ShouldSerializeRelations","System.Data.DataSet.ShouldSerializeTables","System::Data::DataSet::ShouldSerializeTables","System.Data.DataSet.Site","System::Data::DataSet::Site","System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection","System::Data::DataSet::System#ComponentModel#IListSource#ContainsListCollection","System.Data.DataSet.System#ComponentModel#IListSource#GetList","System::Data::DataSet::System#ComponentModel#IListSource#GetList","System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema","System::Data::DataSet::System#Xml#Serialization#IXmlSerializable#GetSchema","System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml","System::Data::DataSet::System#Xml#Serialization#IXmlSerializable#ReadXml","System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml","System::Data::DataSet::System#Xml#Serialization#IXmlSerializable#WriteXml","System.Data.DataSet.Tables","System::Data::DataSet::Tables","System.Data.DataSet.WriteXml","System::Data::DataSet::WriteXml","System.Data.DataSet.WriteXmlSchema","System::Data::DataSet::WriteXmlSchema"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"76cdb2e7-887a-9c16-ca93-40234169d56e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/DataSet.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataSet class | Microsoft Docs","_op_ogTitle":"DataSet class","description":"Represents an in-memory cache of data.\n","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.DataSet","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.dataset","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.dataset","fileRelativePath":"System.Data.DataSet.html"},"themesRelativePathToOutputRoot":"_themes/"}