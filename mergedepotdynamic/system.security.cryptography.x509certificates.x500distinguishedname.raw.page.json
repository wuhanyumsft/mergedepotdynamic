{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName\">\r\n      <span class=\"lang-csharp\">X500DistinguishedName</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the distinguished name of an X509 certificate. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class X500DistinguishedName : System.Security.Cryptography.AsnEncodedData</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">System.Security.Cryptography.AsnEncodedData</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">X500DistinguishedName</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_CopyFrom_System_Security_Cryptography_AsnEncodedData_\" data-linktype=\"relative-path\">CopyFrom(AsnEncodedData)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_Oid\" data-linktype=\"relative-path\">Oid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata#System_Security_Cryptography_AsnEncodedData_RawData\" data-linktype=\"relative-path\">RawData</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is like an extension to the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2#System_Security_Cryptography_X509Certificates_X509Certificate2_SubjectName_\" data-linktype=\"relative-path\">SubjectName</a> or <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2#System_Security_Cryptography_X509Certificates_X509Certificate2_IssuerName_\" data-linktype=\"relative-path\">IssuerName</a> property, which is the name of the person or entity that the certificate is being issued to. X.500 is an international standard for distributed directory services. The distinguished name uses the following format:  </p>\n<p> [X500:/C=CountryCode/O=Organization/OU=OrganizationUnit/CN=CommonName]  </p>\n<p> The following field length limits apply:  </p>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Length Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CountryCode</td>\n<td>2 characters</td>\n</tr>\n<tr>\n<td>Organization</td>\n<td>Up to 64 characters</td>\n</tr>\n<tr>\n<td>OrganizationUnit</td>\n<td>Up to 32 characters</td>\n</tr>\n<tr>\n<td>CommonName</td>\n<td>Up to 64 characters</td>\n</tr>\n</tbody>\n</table>\n<p> The following guidelines apply:  </p>\n<ul>\n<li><p>Field values can be uppercase or lowercase.  </p>\n</li>\n<li><p>Delimiters are slash marks (/) and must appear before the first value and between subsequent values.  </p>\n</li>\n<li><p>Delimiters can be followed by a space.  </p>\n<p>The following is an example of a correctly formatted name: [X500:/ C=US/ O=Microsoft/ OU=WGA/ CN=TedSt]</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Byte___\" data-linktype=\"self-bookmark\">X500DistinguishedName(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using information from the specified byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Security_Cryptography_AsnEncodedData_\" data-linktype=\"self-bookmark\">X500DistinguishedName(AsnEncodedData)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Security_Cryptography_X509Certificates_X500DistinguishedName_\" data-linktype=\"self-bookmark\">X500DistinguishedName(X500DistinguishedName)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_String_\" data-linktype=\"self-bookmark\">X500DistinguishedName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using information from the specified string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_String_System_Security_Cryptography_X509Certificates_X500DistinguishedNameFlags_\" data-linktype=\"self-bookmark\">X500DistinguishedName(String,X500DistinguishedNameFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified string and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishednameflags\" data-linktype=\"relative-path\">X500DistinguishedNameFlags</a> flag.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the comma-delimited distinguished name from an X500 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName_Decode_System_Security_Cryptography_X509Certificates_X500DistinguishedNameFlags_\" data-linktype=\"self-bookmark\">Decode(X500DistinguishedNameFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes a distinguished name using the characteristics specified by the <code>flag</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X500DistinguishedName_Format_System_Boolean_\" data-linktype=\"self-bookmark\">Format(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a formatted version of an X500 distinguished name for printing or for output to a text window or to a console.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X500DistinguishedName(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using information from the specified byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X500DistinguishedName (byte[] encodedDistinguishedName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodedDistinguishedName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains distinguished name information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class inherits from the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Security_Cryptography_AsnEncodedData_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X500DistinguishedName(AsnEncodedData)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X500DistinguishedName (System.Security.Cryptography.AsnEncodedData encodedDistinguishedName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodedDistinguishedName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">System.Security.Cryptography.AsnEncodedData</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object that represents the distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class inherits from the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_Security_Cryptography_X509Certificates_X500DistinguishedName_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X500DistinguishedName(X500DistinguishedName)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X500DistinguishedName (System.Security.Cryptography.X509Certificates.X500DistinguishedName distinguishedName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>distinguishedName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a copy of the specified <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> object. The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class inherits from the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X500DistinguishedName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using information from the specified string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X500DistinguishedName (string distinguishedName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>distinguishedName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class inherits from the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_System_String_System_Security_Cryptography_X509Certificates_X500DistinguishedNameFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X500DistinguishedName(String,X500DistinguishedNameFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class using the specified string and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishednameflags\" data-linktype=\"relative-path\">X500DistinguishedNameFlags</a> flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X500DistinguishedName (string distinguishedName, System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags flag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>distinguishedName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the distinguished name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishednameflags\" data-linktype=\"relative-path\">X500DistinguishedNameFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the characteristics of the distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class inherits from the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Name\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the comma-delimited distinguished name from an X500 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The comma-delimited distinguished name of the X509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The distinguished name uses the following format:  </p>\n<p> [X500:/C=CountryCode/O=Organization/OU=OrganizationUnit/CN=CommonName]</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Decode_System_Security_Cryptography_X509Certificates_X500DistinguishedNameFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Decode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Decode(X500DistinguishedNameFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes a distinguished name using the characteristics specified by the <code>flag</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Decode (System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags flag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishednameflags\" data-linktype=\"relative-path\">X500DistinguishedNameFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the characteristics of the distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The decoded distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate has an invalid name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method decodes the ASN encoded distinguished name into a string value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Format_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X500DistinguishedName_Format_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Format(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a formatted version of an X500 distinguished name for printing or for output to a text window or to a console.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Format (bool multiLine);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>multiLine</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the return string should contain carriage returns; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A formatted string that represents the X500 distinguished name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to print Abstract Syntax Notation number One (ASN.1)-encoded data or output the information to a text box. Use the <code>multiLine</code> parameter to control the layout of the output.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x500distinguishedname\" data-linktype=\"relative-path\">X500DistinguishedName</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">#using &lt;System.dll&gt;\n#using &lt;system.security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         X500DistinguishedName ^ dname = gcnew X500DistinguishedName( x509-&gt;SubjectName );\n         Console::WriteLine( &quot;X500DistinguishedName: {0}{1}&quot;, dname-&gt;Name, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass X500Sample\n{\n\tstatic void Main()\n\t{\n\t\ttry\n\t\t{\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\t\t\tConsole.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine);\n\t\t\tforeach (X509Certificate2 x509 in scollection)\n\t\t\t{\n\t\t\t\tX500DistinguishedName dname = new X500DistinguishedName(x509.SubjectName);\n\t\t\t\tConsole.WriteLine(&quot;X500DistinguishedName: {0}{1}&quot;, dname.Name, Environment.NewLine);\n\t\t\t\tx509.Reset();\n\t\t\t}\n\t\t\tstore.Close();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X500DistinguishedName#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass X500Sample\n   Shared msg As String\n   Shared Sub Main()\n\t\n      Try\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n\t msg = &quot;Number of certificates: &quot; &amp; scollection.Count &amp; Environment.NewLine\n\t MsgBox(msg)\n         Dim x509 As X509Certificate2\n         For Each x509 In  scollection\n            Dim dname As New X500DistinguishedName(x509.SubjectName)\n\t    msg = &quot;X500DistinguishedName: &quot; &amp; dname.Name &amp; Environment.NewLine\n\t MsgBox(msg)\n            x509.Reset()\n         Next x509\n         store.Close()\n\t Catch e As Exception\n            msg = &quot;Error: Information could not be written out for this certificate.&quot;\n            MsgBox(msg)\n      End Try\n   End Sub &#39;Main \nEnd Class &#39;X500Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X500DistinguishedName.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X500DistinguishedName.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2dab73f2-120a-c92c-cd5d-1b0a8e04a6ec\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.X509Certificates\\X500DistinguishedName.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the distinguished name of an X509 certificate. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.X509Certificates/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X500DistinguishedName\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X500DistinguishedName.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X500DistinguishedName.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.X509Certificates.X500DistinguishedName","System.Security.Cryptography.X509Certificates.X500DistinguishedName..ctor","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X500DistinguishedName","System::Security::Cryptography::X509Certificates::X500DistinguishedName","System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor","System::Security::Cryptography::X509Certificates::X500DistinguishedName::#ctor","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode","System::Security::Cryptography::X509Certificates::X500DistinguishedName::Decode","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format","System::Security::Cryptography::X509Certificates::X500DistinguishedName::Format","System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name","System::Security::Cryptography::X509Certificates::X500DistinguishedName::Name"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2dab73f2-120a-c92c-cd5d-1b0a8e04a6ec","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.X509Certificates\\X500DistinguishedName.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.X509Certificates/X500DistinguishedName.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X500DistinguishedName class | Microsoft Docs","_op_ogTitle":"X500DistinguishedName class","description":"Represents the distinguished name of an X509 certificate. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X500DistinguishedName","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x500distinguishedname","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x500distinguishedname","fileRelativePath":"System.Security.Cryptography.X509Certificates.X500DistinguishedName.html"},"themesRelativePathToOutputRoot":"_themes/"}