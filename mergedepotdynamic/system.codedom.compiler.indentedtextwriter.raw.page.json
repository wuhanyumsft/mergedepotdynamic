{"content":"    \r\n    <h1 id=\"System_CodeDom_Compiler_IndentedTextWriter\">\r\n      <span class=\"lang-csharp\">IndentedTextWriter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a text writer that can indent new lines by a tab string token.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class IndentedTextWriter : System.IO.TextWriter</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">IndentedTextWriter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_CoreNewLine\" data-linktype=\"relative-path\">CoreNewLine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_FormatProvider\" data-linktype=\"relative-path\">FormatProvider</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Synchronized_System_IO_TextWriter_\" data-linktype=\"relative-path\">Synchronized(TextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_Decimal_\" data-linktype=\"relative-path\">Write(Decimal)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">Write(String,Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt32_\" data-linktype=\"relative-path\">Write(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_Write_System_UInt64_\" data-linktype=\"relative-path\">Write(UInt64)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char_\" data-linktype=\"relative-path\">WriteAsync(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char___\" data-linktype=\"relative-path\">WriteAsync(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Char[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteAsync_System_String_\" data-linktype=\"relative-path\">WriteAsync(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_Decimal_\" data-linktype=\"relative-path\">WriteLine(Decimal)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_String_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">WriteLine(String,Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLine_System_UInt64_\" data-linktype=\"relative-path\">WriteLine(UInt64)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync\" data-linktype=\"relative-path\">WriteLineAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char_\" data-linktype=\"relative-path\">WriteLineAsync(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char___\" data-linktype=\"relative-path\">WriteLineAsync(Char[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteLineAsync(Char[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.textwriter#System_IO_TextWriter_WriteLineAsync_System_String_\" data-linktype=\"relative-path\">WriteLineAsync(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>IndentedTextWriter extends a <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> by providing methods that insert a tab string and track the current indentation level. Text formatted with multiple indentation levels is useful for generated code, so this class is used by CodeDOM code generator implementations.  </p>\n<p> The tab string is the string that each indentation consists of. Typically the tab string contains white space.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This class contains a link demand and an inheritance demand at the class level that applies to all members. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown when either the immediate caller or the derived class does not have full-trust permission. For details about security demands, see <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> and <a href=\"http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9\" data-linktype=\"external\">Inheritance Demands</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter__ctor_System_IO_TextWriter_\" data-linktype=\"self-bookmark\">IndentedTextWriter(TextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a> class using the specified text writer and default tab string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter__ctor_System_IO_TextWriter_System_String_\" data-linktype=\"self-bookmark\">IndentedTextWriter(TextWriter,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a> class using the specified text writer and tab string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_DefaultTabString\" data-linktype=\"self-bookmark\">DefaultTabString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the default tab string. This field is constant.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Encoding\" data-linktype=\"self-bookmark\">Encoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the encoding for the text writer to use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Indent\" data-linktype=\"self-bookmark\">Indent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of spaces to indent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_InnerWriter\" data-linktype=\"self-bookmark\">InnerWriter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_NewLine\" data-linktype=\"self-bookmark\">NewLine</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the new line character to use.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the document being written to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Flushes the stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_OutputTabs\" data-linktype=\"self-bookmark\">OutputTabs()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Outputs the tab string once for each level of indentation according to the <span class=\"xref\">stem.CodeDom.Compiler.IndentedTextWriter.Indent*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Boolean_\" data-linktype=\"self-bookmark\">Write(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Boolean value to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char_\" data-linktype=\"self-bookmark\">Write(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a character to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char___\" data-linktype=\"self-bookmark\">Write(Char[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a character array to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Double_\" data-linktype=\"self-bookmark\">Write(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Double to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Int32_\" data-linktype=\"self-bookmark\">Write(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an integer to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Int64_\" data-linktype=\"self-bookmark\">Write(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an 8-byte integer to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Object_\" data-linktype=\"self-bookmark\">Write(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an object to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Single_\" data-linktype=\"self-bookmark\">Write(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Single to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object_\" data-linktype=\"self-bookmark\">Write(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object___\" data-linktype=\"self-bookmark\">Write(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a subarray of characters to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Write(String,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine\" data-linktype=\"self-bookmark\">WriteLine()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a line terminator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Boolean_\" data-linktype=\"self-bookmark\">WriteLine(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Boolean, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char_\" data-linktype=\"self-bookmark\">WriteLine(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a character, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char___\" data-linktype=\"self-bookmark\">WriteLine(Char[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a character array, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Double_\" data-linktype=\"self-bookmark\">WriteLine(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Double, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Int32_\" data-linktype=\"self-bookmark\">WriteLine(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an integer, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Int64_\" data-linktype=\"self-bookmark\">WriteLine(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an 8-byte integer, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of an object, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Single_\" data-linktype=\"self-bookmark\">WriteLine(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a Single, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_UInt32_\" data-linktype=\"self-bookmark\">WriteLine(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the text representation of a UInt32, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object___\" data-linktype=\"self-bookmark\">WriteLine(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteLine(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a subarray of characters, followed by a line terminator, to the text stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object_System_Object_\" data-linktype=\"self-bookmark\">WriteLine(String,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_IndentedTextWriter_WriteLineNoTabs_System_String_\" data-linktype=\"self-bookmark\">WriteLineNoTabs(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified string to a line without tabs.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter__ctor_System_IO_TextWriter_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndentedTextWriter(TextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a> class using the specified text writer and default tab string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IndentedTextWriter (System.IO.TextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to use for output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter__ctor_System_IO_TextWriter_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndentedTextWriter(TextWriter,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a> class using the specified text writer and tab string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IndentedTextWriter (System.IO.TextWriter writer, string tabString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to use for output.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tabString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The tab string to use for indentation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating an <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a> using a specified tab string.  </p>\n<pre><code class=\"lang-cs\" name=\"IndentedTextWriterExample#3\">            // Creates a TextWriter to use as the base output writer.\n            System.IO.StringWriter baseTextWriter = new System.IO.StringWriter();            \n\n            // Create an IndentedTextWriter and set the tab string to use \n            // as the indentation string for each indentation level.\n            System.CodeDom.Compiler.IndentedTextWriter indentWriter = new IndentedTextWriter(baseTextWriter, &quot;    &quot;);           \n</code></pre><pre><code class=\"lang-cpp\" name=\"IndentedTextWriterExample#3\">      // Creates a TextWriter to use as the base output writer.\n      System::IO::StringWriter^ baseTextWriter = gcnew System::IO::StringWriter;\n      \n      // Create an IndentedTextWriter and set the tab string to use \n      // as the indentation string for each indentation level.\n      System::CodeDom::Compiler::IndentedTextWriter^ indentWriter = gcnew IndentedTextWriter( baseTextWriter,&quot;    &quot; );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"IndentedTextWriterExample#3\">        &#39; Create a TextWriter to use as the base output writer.\n        Dim baseTextWriter As New System.IO.StringWriter\n      \n        &#39; Create an IndentedTextWriter and set the tab string to use \n        &#39; as the indentation string for each indentation level.\n        Dim indentWriter = New IndentedTextWriter(baseTextWriter, &quot;    &quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_DefaultTabString\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultTabString</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the default tab string. This field is constant.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string DefaultTabString;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default tab string consists of a single white space. (&quot; &quot;)</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Encoding\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Encoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets the encoding for the text writer to use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Text.Encoding Encoding { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that indicates the encoding for the text writer to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Indent\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Indent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Indent</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of spaces to indent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Indent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of spaces to indent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the indentation level of an <a class=\"xref\" href=\"system.codedom.compiler.indentedtextwriter\" data-linktype=\"relative-path\">IndentedTextWriter</a>. The indentation level is the number of tab strings to prefix each line with.  </p>\n<pre><code class=\"lang-cs\" name=\"IndentedTextWriterExample#3\">            // Creates a TextWriter to use as the base output writer.\n            System.IO.StringWriter baseTextWriter = new System.IO.StringWriter();            \n\n            // Create an IndentedTextWriter and set the tab string to use \n            // as the indentation string for each indentation level.\n            System.CodeDom.Compiler.IndentedTextWriter indentWriter = new IndentedTextWriter(baseTextWriter, &quot;    &quot;);           \n</code></pre><pre><code class=\"lang-cpp\" name=\"IndentedTextWriterExample#3\">      // Creates a TextWriter to use as the base output writer.\n      System::IO::StringWriter^ baseTextWriter = gcnew System::IO::StringWriter;\n      \n      // Create an IndentedTextWriter and set the tab string to use \n      // as the indentation string for each indentation level.\n      System::CodeDom::Compiler::IndentedTextWriter^ indentWriter = gcnew IndentedTextWriter( baseTextWriter,&quot;    &quot; );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"IndentedTextWriterExample#3\">        &#39; Create a TextWriter to use as the base output writer.\n        Dim baseTextWriter As New System.IO.StringWriter\n      \n        &#39; Create an IndentedTextWriter and set the tab string to use \n        &#39; as the indentation string for each indentation level.\n        Dim indentWriter = New IndentedTextWriter(baseTextWriter, &quot;    &quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_InnerWriter\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_InnerWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerWriter</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.TextWriter InnerWriter { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">System.IO.TextWriter</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_NewLine\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_NewLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewLine</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the new line character to use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string NewLine { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The new line character to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Close\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the document being written to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Flush\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Flushes the stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This clears the stream of any data.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_OutputTabs\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_OutputTabs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutputTabs()</div>        \r\n          </div>\r\n    \r\n            <p>Outputs the tab string once for each level of indentation according to the <span class=\"xref\">stem.CodeDom.Compiler.IndentedTextWriter.Indent*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OutputTabs ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Boolean_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Boolean value to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Boolean value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a character to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char___\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes a character array to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Double_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Double to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>double</code> to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Int32_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an integer to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The integer to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Int64_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an 8-byte integer to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 8-byte integer to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an object to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Single_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Single to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>single</code> to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object arg0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write into the formatted string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object[] arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument array to output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a subarray of characters to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write data from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Starting index in the buffer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_System_String_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string format, object arg0, object arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to write into the formatted string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to write into the formatted string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine()</div>        \r\n          </div>\r\n    \r\n            <p>Writes a line terminator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Boolean_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Boolean, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Boolean to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a character, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char___\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes a character array, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Double_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Double, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>double</code> to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Int32_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an integer, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The integer to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Int64_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an 8-byte integer, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The 8-byte integer to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of an object, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Single_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a Single, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>single</code> to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_UInt32_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the text representation of a UInt32, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (uint value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A UInt32 to output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object arg0);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write into the formatted string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object[] arg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument array to output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a subarray of characters, followed by a line terminator, to the text stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write data from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Starting index in the buffer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_System_String_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes out a formatted string, followed by a line terminator, using the same semantics as specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string format, object arg0, object arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The formatting string to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg0</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to write into the formatted string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to write into the formatted string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLineNoTabs_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_IndentedTextWriter_WriteLineNoTabs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLineNoTabs(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified string to a line without tabs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteLineNoTabs (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates writing a line without tab string indentations.  </p>\n<pre><code class=\"lang-cs\" name=\"IndentedTextWriterExample#6\">                // Outputs a string using the WriteLineNoTabs method.\n                indentWriter.WriteLineNoTabs(&quot;This is a test phrase written with the IndentTextWriter.WriteLineNoTabs method.&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"IndentedTextWriterExample#6\">      // Outputs a string using the WriteLineNoTabs method.\n            indentWriter-&gt;WriteLineNoTabs( &quot;This is a test phrase written with the IndentTextWriter.WriteLineNoTabs method.&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"IndentedTextWriterExample#6\">            &#39; Output a string using the WriteLineNoTabs method.\n            indentWriter.WriteLineNoTabs(&quot;This is a test phrase written with the IndentTextWriter.WriteLineNoTabs method.&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.Compiler.IndentedTextWriter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.Compiler.IndentedTextWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.Close\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.Encoding\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.Flush\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.Indent\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.InnerWriter\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.NewLine\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.OutputTabs\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.Write\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.WriteLine\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5c85712c-579a-44cf-d059-7849562b0418\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a text writer that can indent new lines by a tab string token.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom.Compiler/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.Compiler.IndentedTextWriter\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.Compiler.IndentedTextWriter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.Compiler.IndentedTextWriter.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.Compiler.IndentedTextWriter","System.CodeDom.Compiler.IndentedTextWriter..ctor","System.CodeDom.Compiler.IndentedTextWriter.Close","System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString","System.CodeDom.Compiler.IndentedTextWriter.Encoding","System.CodeDom.Compiler.IndentedTextWriter.Flush","System.CodeDom.Compiler.IndentedTextWriter.Indent","System.CodeDom.Compiler.IndentedTextWriter.InnerWriter","System.CodeDom.Compiler.IndentedTextWriter.NewLine","System.CodeDom.Compiler.IndentedTextWriter.OutputTabs","System.CodeDom.Compiler.IndentedTextWriter.Write","System.CodeDom.Compiler.IndentedTextWriter.WriteLine","System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.Compiler.IndentedTextWriter","System::CodeDom::Compiler::IndentedTextWriter","System.CodeDom.Compiler.IndentedTextWriter.#ctor","System::CodeDom::Compiler::IndentedTextWriter::#ctor","System.CodeDom.Compiler.IndentedTextWriter.Close","System::CodeDom::Compiler::IndentedTextWriter::Close","System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString","System::CodeDom::Compiler::IndentedTextWriter::DefaultTabString","System.CodeDom.Compiler.IndentedTextWriter.Encoding","System::CodeDom::Compiler::IndentedTextWriter::Encoding","System.CodeDom.Compiler.IndentedTextWriter.Flush","System::CodeDom::Compiler::IndentedTextWriter::Flush","System.CodeDom.Compiler.IndentedTextWriter.Indent","System::CodeDom::Compiler::IndentedTextWriter::Indent","System.CodeDom.Compiler.IndentedTextWriter.InnerWriter","System::CodeDom::Compiler::IndentedTextWriter::InnerWriter","System.CodeDom.Compiler.IndentedTextWriter.NewLine","System::CodeDom::Compiler::IndentedTextWriter::NewLine","System.CodeDom.Compiler.IndentedTextWriter.OutputTabs","System::CodeDom::Compiler::IndentedTextWriter::OutputTabs","System.CodeDom.Compiler.IndentedTextWriter.Write","System::CodeDom::Compiler::IndentedTextWriter::Write","System.CodeDom.Compiler.IndentedTextWriter.WriteLine","System::CodeDom::Compiler::IndentedTextWriter::WriteLine","System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs","System::CodeDom::Compiler::IndentedTextWriter::WriteLineNoTabs"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5c85712c-579a-44cf-d059-7849562b0418","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom.Compiler/IndentedTextWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IndentedTextWriter class | Microsoft Docs","_op_ogTitle":"IndentedTextWriter class","description":"Provides a text writer that can indent new lines by a tab string token.\n","toc_asset_id":"_splitted/System.CodeDom.Compiler/toc.json","toc_rel":"_splitted/System.CodeDom.Compiler/toc.json","source_url":"","ms.assetid":"System.CodeDom.Compiler.IndentedTextWriter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.compiler.indentedtextwriter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.compiler.indentedtextwriter","fileRelativePath":"System.CodeDom.Compiler.IndentedTextWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}